/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:44:22 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.DesignatorPdu;
import edu.nps.moves.dis7.EntityID;
import edu.nps.moves.dis7.Vector3Double;
import edu.nps.moves.dis7.Vector3Float;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DesignatorPdu_ESTest extends DesignatorPdu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.padding1 = 1265;
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertEquals((short)24, designatorPdu1.getPduType());
      assertFalse(boolean0);
      assertFalse(designatorPdu1.equals((Object)designatorPdu0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setPadding1(24);
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu0);
      assertEquals(24, designatorPdu0.getPadding1());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      designatorPdu1.setDeadReckoningAlgorithm((byte)4);
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertEquals((byte)4, designatorPdu1.getDeadReckoningAlgorithm());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setDesignatorWavelength(603.4138F);
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertEquals(603.4138F, designatorPdu0.getDesignatorWavelength(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setDesignatorPower((-1.0F));
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertEquals((-1.0F), designatorPdu0.getDesignatorPower(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.designatorCode = (-3454);
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu1.equalsImpl(designatorPdu0);
      assertFalse(boolean0);
      assertFalse(designatorPdu0.equals((Object)designatorPdu1));
      assertEquals((short)24, designatorPdu1.getPduType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setCodeName(750);
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu1.equalsImpl(designatorPdu0);
      assertEquals(750, designatorPdu0.getCodeName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.codeName = 83;
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu0);
      assertEquals((short)24, designatorPdu0.getPduType());
      assertEquals(88, designatorPdu0.getMarshalledSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setPadding2((byte)1);
      designatorPdu0.marshal();
      assertEquals((byte)1, designatorPdu0.getPadding2());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      designatorPdu0.designatorWavelength = (float) 255;
      designatorPdu0.marshal(byteBuffer0);
      assertEquals(88, designatorPdu0.getMarshalledSize());
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setPadding1(38);
      designatorPdu0.marshal();
      assertEquals(38, designatorPdu0.getPadding1());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setCodeName(1606);
      designatorPdu0.marshal();
      assertEquals(1606, designatorPdu0.getCodeName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.deadReckoningAlgorithm = (byte)6;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      designatorPdu0.marshal(dataOutputStream0);
      assertEquals("\u0007\u0000\u0018\u0006\u0000\u0000\u0000\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.designatorWavelength = (-1.0F);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      designatorPdu0.marshal(dataOutputStream0);
      assertEquals("\u0007\u0000\u0018\u0006\u0000\u0000\u0000\u0000\u0000X\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\uFFFD\uFFFD\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      assertEquals(88, designatorPdu0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setPadding1((-3906));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      designatorPdu0.marshal(dataOutputStream0);
      assertEquals((-3906), designatorPdu0.getPadding1());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setCodeName(750);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      designatorPdu0.marshal(dataOutputStream0);
      assertEquals(750, designatorPdu0.getCodeName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Vector3Double vector3Double0 = new Vector3Double();
      designatorPdu0.setDesignatorSpotLocation(vector3Double0);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      Vector3Float vector3Float0 = designatorPdu1.getDesignatorSpotWrtDesignated();
      designatorPdu0.setDesignatorSpotWrtDesignated(vector3Float0);
      assertEquals((short)24, designatorPdu1.getPduType());
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      byte[] byteArray0 = designatorPdu0.marshal();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      designatorPdu0.unmarshal(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals(88, designatorPdu0.getLength());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setPadding2((byte)21);
      byte byte0 = designatorPdu0.getPadding2();
      assertEquals((byte)21, byte0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.padding2 = (byte) (-26);
      byte byte0 = designatorPdu0.getPadding2();
      assertEquals((byte) (-26), byte0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.padding1 = 24;
      int int0 = designatorPdu0.getPadding1();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setPadding1((-77));
      int int0 = designatorPdu0.getPadding1();
      assertEquals((-77), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setEntityLinearAcceleration((Vector3Float) null);
      Vector3Float vector3Float0 = designatorPdu0.getEntityLinearAcceleration();
      assertNull(vector3Float0);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Vector3Float vector3Float0 = designatorPdu0.getEntityLinearAcceleration();
      vector3Float0.z = 5000.326F;
      designatorPdu0.getEntityLinearAcceleration();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Vector3Float vector3Float0 = designatorPdu0.designatorSpotWrtDesignated;
      designatorPdu0.entityLinearAcceleration = vector3Float0;
      vector3Float0.setY(378.42F);
      designatorPdu0.getEntityLinearAcceleration();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setDesignatorWavelength(603.4138F);
      float float0 = designatorPdu0.getDesignatorWavelength();
      assertEquals(603.4138F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.designatorWavelength = (-1.0F);
      float float0 = designatorPdu0.getDesignatorWavelength();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Vector3Float vector3Float0 = designatorPdu0.designatorSpotWrtDesignated;
      vector3Float0.setY(378.42F);
      Vector3Float vector3Float1 = designatorPdu0.getDesignatorSpotWrtDesignated();
      assertEquals((short)24, designatorPdu0.getPduType());
      assertEquals(378.42F, vector3Float1.getY(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Vector3Double vector3Double0 = designatorPdu0.getDesignatorSpotLocation();
      vector3Double0.setY((-358.471832483919));
      designatorPdu0.getDesignatorSpotLocation();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Vector3Double vector3Double0 = new Vector3Double();
      vector3Double0.x = (-1251.5731869);
      designatorPdu0.designatorSpotLocation = vector3Double0;
      designatorPdu0.getDesignatorSpotLocation();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.designatorCode = 8;
      int int0 = designatorPdu0.getDesignatorCode();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.designatorCode = (int) (short) (-1980);
      int int0 = designatorPdu0.getDesignatorCode();
      assertEquals((-1980), int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setDesignatingEntityID((EntityID) null);
      EntityID entityID0 = designatorPdu0.getDesignatingEntityID();
      assertNull(entityID0);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      EntityID entityID0 = designatorPdu0.designatingEntityID;
      entityID0.siteID = 594;
      EntityID entityID1 = designatorPdu0.getDesignatingEntityID();
      assertEquals(594, entityID1.getSiteID());
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      EntityID entityID0 = designatorPdu0.getDesignatedEntityID();
      entityID0.setSiteID((-2251));
      designatorPdu0.setDesignatingEntityID(entityID0);
      EntityID entityID1 = designatorPdu0.getDesignatingEntityID();
      assertEquals((-2251), entityID1.getSiteID());
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      EntityID entityID0 = designatorPdu0.getDesignatingEntityID();
      entityID0.setEntityID(280);
      designatorPdu0.getDesignatingEntityID();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      EntityID entityID0 = new EntityID();
      entityID0.entityID = (-4640);
      designatorPdu0.setDesignatingEntityID(entityID0);
      EntityID entityID1 = designatorPdu0.getDesignatingEntityID();
      assertEquals((-4640), entityID1.getEntityID());
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      EntityID entityID0 = designatorPdu0.getDesignatedEntityID();
      entityID0.setSiteID((-2251));
      designatorPdu0.getDesignatedEntityID();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      EntityID entityID0 = designatorPdu0.getDesignatedEntityID();
      entityID0.setEntityID((short) (-1));
      designatorPdu0.getDesignatedEntityID();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      EntityID entityID0 = new EntityID();
      entityID0.applicationID = 24;
      designatorPdu0.setDesignatedEntityID(entityID0);
      EntityID entityID1 = designatorPdu0.getDesignatedEntityID();
      assertEquals(24, entityID1.getApplicationID());
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setDeadReckoningAlgorithm((byte)21);
      byte byte0 = designatorPdu0.getDeadReckoningAlgorithm();
      assertEquals((byte)21, byte0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setDeadReckoningAlgorithm((byte) (-107));
      byte byte0 = designatorPdu0.getDeadReckoningAlgorithm();
      assertEquals((byte) (-107), byte0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setCodeName(750);
      int int0 = designatorPdu0.getCodeName();
      assertEquals(750, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setCodeName((-2457));
      int int0 = designatorPdu0.getCodeName();
      assertEquals((-2457), int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("edu.nps.moves.dis7.EntityID");
      // Undeclared exception!
      try { 
        designatorPdu0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      // Undeclared exception!
      try { 
        designatorPdu0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("edu.nps.moves.dis7.EntityID");
      // Undeclared exception!
      try { 
        designatorPdu0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      // Undeclared exception!
      try { 
        designatorPdu0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.designatingEntityID = null;
      // Undeclared exception!
      try { 
        designatorPdu0.equalsImpl(designatorPdu0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.DesignatorPdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.padding2 = (byte)96;
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      designatorPdu0.equalsImpl(designatorPdu1);
      assertEquals((short)24, designatorPdu1.getPduType());
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.padding1 = (-127);
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertEquals((short)24, designatorPdu1.getPduType());
      assertFalse(boolean0);
      assertFalse(designatorPdu1.equals((Object)designatorPdu0));
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      assertEquals((short)24, designatorPdu0.getPduType());
      
      designatorPdu0.pduType = (short)63;
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      designatorPdu0.equalsImpl(designatorPdu1);
      assertEquals((short)24, designatorPdu1.getPduType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      designatorPdu1.setPadding1((byte) (-1));
      boolean boolean0 = designatorPdu1.equals(designatorPdu0);
      assertEquals((-1), designatorPdu1.getPadding1());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      assertTrue(designatorPdu1.equals((Object)designatorPdu0));
      
      designatorPdu1.deadReckoningAlgorithm = (byte) (-52);
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertFalse(designatorPdu1.equals((Object)designatorPdu0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Vector3Double vector3Double0 = designatorPdu0.getDesignatorSpotLocation();
      vector3Double0.setY((short)4);
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertFalse(boolean0);
      assertEquals((short)24, designatorPdu1.getPduType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.designatorPower = 1.0F;
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertEquals((short)24, designatorPdu1.getPduType());
      assertFalse(boolean0);
      assertFalse(designatorPdu1.equals((Object)designatorPdu0));
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      assertTrue(designatorPdu1.equals((Object)designatorPdu0));
      
      designatorPdu1.designatorCode = 2;
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertFalse(designatorPdu1.equals((Object)designatorPdu0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      assertTrue(designatorPdu1.equals((Object)designatorPdu0));
      
      designatorPdu1.codeName = (-1974);
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertFalse(designatorPdu1.equals((Object)designatorPdu0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      EntityID entityID0 = designatorPdu0.getDesignatedEntityID();
      entityID0.setSiteID((-2251));
      designatorPdu0.setDesignatingEntityID(entityID0);
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertEquals((short)24, designatorPdu1.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Object object0 = new Object();
      boolean boolean0 = designatorPdu0.equalsImpl(object0);
      assertEquals((short)24, designatorPdu0.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu1.equals(designatorPdu0);
      assertEquals(88, designatorPdu1.getMarshalledSize());
      assertEquals((short)24, designatorPdu1.getPduType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      boolean boolean0 = designatorPdu0.equals((Object) null);
      assertEquals((short)24, designatorPdu0.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      boolean boolean0 = designatorPdu0.equals(designatorPdu0);
      assertTrue(boolean0);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      EntityID entityID0 = new EntityID();
      boolean boolean0 = designatorPdu0.equals(entityID0);
      assertFalse(boolean0);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      assertEquals((short)24, designatorPdu0.getPduType());
      
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      designatorPdu0.unmarshal(byteBuffer0);
      assertEquals(0, designatorPdu0.getPadding1());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.marshal((DataOutputStream) null);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setDesignatorCode((-2236));
      assertEquals((-2236), designatorPdu0.getDesignatorCode());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      designatorPdu0.unmarshal(dataInputStream0);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      int int0 = designatorPdu0.getMarshalledSize();
      assertEquals(88, int0);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.getPadding2();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      float float0 = designatorPdu0.getDesignatorWavelength();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      float float0 = designatorPdu0.getDesignatorPower();
      assertEquals((short)24, designatorPdu0.getPduType());
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      EntityID entityID0 = designatorPdu0.getDesignatingEntityID();
      entityID0.setSiteID((short)4);
      designatorPdu0.designatedEntityID = entityID0;
      designatorPdu0.getDesignatedEntityID();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setDesignatedEntityID((EntityID) null);
      EntityID entityID0 = designatorPdu0.getDesignatedEntityID();
      assertNull(entityID0);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setDesignatorPower((-1.0F));
      float float0 = designatorPdu0.getDesignatorPower();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      int int0 = designatorPdu0.getPadding1();
      assertEquals((short)24, designatorPdu0.getPduType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      Vector3Float vector3Float0 = designatorPdu0.getEntityLinearAcceleration();
      vector3Float0.x = (-1.0F);
      designatorPdu0.getEntityLinearAcceleration();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.getDeadReckoningAlgorithm();
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      int int0 = designatorPdu0.getDesignatorCode();
      assertEquals(0, int0);
      assertEquals((short)24, designatorPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      designatorPdu0.setDesignatorWavelength((-1612.0F));
      DesignatorPdu designatorPdu1 = new DesignatorPdu();
      boolean boolean0 = designatorPdu0.equalsImpl(designatorPdu1);
      assertEquals((-1612.0F), designatorPdu0.getDesignatorWavelength(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      DesignatorPdu designatorPdu0 = new DesignatorPdu();
      int int0 = designatorPdu0.getCodeName();
      assertEquals((short)24, designatorPdu0.getPduType());
      assertEquals(0, int0);
  }
}
