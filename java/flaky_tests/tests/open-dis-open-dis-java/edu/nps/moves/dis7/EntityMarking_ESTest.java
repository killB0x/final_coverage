/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:53:14 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.EntityMarking;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EntityMarking_ESTest extends EntityMarking_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      entityMarking0.setCharactersString("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000");
      assertEquals((short)0, entityMarking0.getCharacterSet());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)1);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      entityMarking0.unmarshal(dataInputStream0);
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      entityMarking0.marshal(dataOutputStream0);
      assertEquals((short)0, entityMarking0.getCharacterSet());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      byte[] byteArray0 = new byte[24];
      byteArray0[0] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0, (byte)1);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      entityMarking0.unmarshal(dataInputStream0);
      short short0 = entityMarking0.getCharacterSet();
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      entityMarking0.characterSet = (short) (-28);
      short short0 = entityMarking0.getCharacterSet();
      assertEquals((short) (-28), short0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(11);
      // Undeclared exception!
      try { 
        entityMarking0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      // Undeclared exception!
      try { 
        entityMarking0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EntityMarking", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      // Undeclared exception!
      try { 
        entityMarking0.setCharactersString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EntityMarking", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      // Undeclared exception!
      try { 
        entityMarking0.setCharacters((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EntityMarking", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(5);
      // Undeclared exception!
      try { 
        entityMarking0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      // Undeclared exception!
      try { 
        entityMarking0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EntityMarking", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      entityMarking0.characterSet = (short)423;
      EntityMarking entityMarking1 = new EntityMarking();
      boolean boolean0 = entityMarking0.equalsImpl(entityMarking1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      byte[] byteArray0 = new byte[2];
      entityMarking0.setCharacters(byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      boolean boolean0 = entityMarking0.equalsImpl(entityMarking0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      entityMarking0.characterSet = (short) (-1);
      EntityMarking entityMarking1 = new EntityMarking();
      boolean boolean0 = entityMarking0.equals(entityMarking1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      Object object0 = new Object();
      boolean boolean0 = entityMarking0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      Object object0 = new Object();
      boolean boolean0 = entityMarking0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      boolean boolean0 = entityMarking0.equals(entityMarking0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      boolean boolean0 = entityMarking0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1937);
      entityMarking0.unmarshal(byteBuffer0);
      assertEquals(12, byteBuffer0.position());
      assertEquals((short)0, entityMarking0.getCharacterSet());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(345);
      entityMarking0.marshal(byteBuffer0);
      assertEquals(12, byteBuffer0.position());
      assertEquals("java.nio.HeapByteBuffer[pos=12 lim=345 cap=345]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("P,]UL,>9y[");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      entityMarking0.marshal(dataOutputStream0);
      assertEquals(12, entityMarking0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      byte[] byteArray0 = new byte[24];
      entityMarking0.setCharacters(byteArray0);
      assertEquals(12, entityMarking0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      byte[] byteArray0 = entityMarking0.getCharacters();
      assertEquals(11, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      short short0 = entityMarking0.getCharacterSet();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      int int0 = entityMarking0.getMarshalledSize();
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      String string0 = entityMarking0.getCharactersString();
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EntityMarking entityMarking0 = new EntityMarking();
      entityMarking0.setCharacterSet((short)8);
      assertEquals((short)8, entityMarking0.getCharacterSet());
  }
}
