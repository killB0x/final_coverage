/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:29:45 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.EntityType;
import edu.nps.moves.dis7.FourByteChunk;
import edu.nps.moves.dis7.SilentEntitySystem;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SilentEntitySystem_ESTest extends SilentEntitySystem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.numberOfEntities = (-415);
      silentEntitySystem0.equalsImpl(silentEntitySystem0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.numberOfAppearanceRecords = 2;
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        silentEntitySystem0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.setNumberOfEntities((byte) (-1));
      silentEntitySystem0.marshal((DataOutputStream) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.setNumberOfEntities(9953);
      silentEntitySystem0.getMarshalledSize();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.setNumberOfEntities(2);
      silentEntitySystem0.getNumberOfEntities();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.numberOfEntities = (-2942);
      silentEntitySystem0.getNumberOfEntities();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.entityType = null;
      silentEntitySystem0.getEntityType();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      EntityType entityType0 = new EntityType();
      entityType0.setExtra((short) (-617));
      silentEntitySystem0.setEntityType(entityType0);
      silentEntitySystem0.getEntityType();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      EntityType entityType0 = new EntityType();
      entityType0.category = (short)255;
      silentEntitySystem0.setEntityType(entityType0);
      silentEntitySystem0.getEntityType();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.appearanceRecordList = null;
      silentEntitySystem0.getAppearanceRecordList();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      LinkedList<FourByteChunk> linkedList0 = new LinkedList<FourByteChunk>();
      silentEntitySystem0.appearanceRecordList = (List<FourByteChunk>) linkedList0;
      FourByteChunk fourByteChunk0 = new FourByteChunk();
      linkedList0.add(fourByteChunk0);
      silentEntitySystem0.getAppearanceRecordList();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      // Undeclared exception!
      try { 
        silentEntitySystem0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SilentEntitySystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      // Undeclared exception!
      try { 
        silentEntitySystem0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SilentEntitySystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.appearanceRecordList = null;
      // Undeclared exception!
      try { 
        silentEntitySystem0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SilentEntitySystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      SilentEntitySystem silentEntitySystem1 = new SilentEntitySystem();
      silentEntitySystem1.numberOfAppearanceRecords = 168;
      silentEntitySystem1.equalsImpl(silentEntitySystem0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.setNumberOfEntities(1591);
      SilentEntitySystem silentEntitySystem1 = new SilentEntitySystem();
      silentEntitySystem1.equals(silentEntitySystem0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      Object object0 = new Object();
      silentEntitySystem0.equalsImpl(object0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      SilentEntitySystem silentEntitySystem1 = new SilentEntitySystem();
      silentEntitySystem1.equals(silentEntitySystem0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      Object object0 = new Object();
      silentEntitySystem0.equals(object0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.equals(silentEntitySystem0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.equals((Object) null);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("edu.nps.moves.dis7.FourByteChunk");
      // Undeclared exception!
      try { 
        silentEntitySystem0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(9966);
      silentEntitySystem0.unmarshal(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(9963);
      silentEntitySystem0.marshal(byteBuffer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.unmarshal(dataInputStream0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      DataOutputStream dataOutputStream0 = new DataOutputStream(bufferedOutputStream0);
      silentEntitySystem0.marshal(dataOutputStream0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-31);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      silentEntitySystem0.unmarshal(dataInputStream0);
      // Undeclared exception!
      silentEntitySystem0.getMarshalledSize();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.setNumberOfAppearanceRecords((-1058));
      boolean boolean0 = silentEntitySystem0.equalsImpl(silentEntitySystem0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      List<FourByteChunk> list0 = silentEntitySystem0.getAppearanceRecordList();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      int int0 = silentEntitySystem0.getNumberOfAppearanceRecords();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      silentEntitySystem0.setAppearanceRecordList((List<FourByteChunk>) null);
      assertEquals(0, silentEntitySystem0.getNumberOfEntities());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      EntityType entityType0 = silentEntitySystem0.getEntityType();
      entityType0.extra = (short)1;
      EntityType entityType1 = silentEntitySystem0.getEntityType();
      assertEquals(0, entityType1.getCountry());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SilentEntitySystem silentEntitySystem0 = new SilentEntitySystem();
      int int0 = silentEntitySystem0.getNumberOfEntities();
      assertEquals(0, int0);
  }
}
