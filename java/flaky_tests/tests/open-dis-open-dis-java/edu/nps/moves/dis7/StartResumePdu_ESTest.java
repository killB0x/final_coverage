/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:00:23 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.ClockTime;
import edu.nps.moves.dis7.EntityID;
import edu.nps.moves.dis7.StartResumePdu;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.PipedInputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StartResumePdu_ESTest extends StartResumePdu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.setRequestID(2269L);
      StartResumePdu startResumePdu1 = new StartResumePdu();
      boolean boolean0 = startResumePdu1.equalsImpl(startResumePdu0);
      assertEquals(2269L, startResumePdu0.getRequestID());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.setRequestID((-4873L));
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(44);
      startResumePdu0.marshal(byteBuffer0);
      assertEquals((-4873L), startResumePdu0.getRequestID());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.requestID = (long) (short)0;
      startResumePdu0.requestID = (-181L);
      startResumePdu0.marshal((DataOutputStream) null);
      assertEquals((short)13, startResumePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(44);
      startResumePdu0.unmarshal(byteBuffer0);
      assertEquals(0L, startResumePdu0.getTimestamp());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.setRequestID((byte)108);
      long long0 = startResumePdu0.getRequestID();
      assertEquals(108L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.requestID = (long) (short)0;
      startResumePdu0.requestID = (-181L);
      long long0 = startResumePdu0.getRequestID();
      assertEquals((-181L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.setRealWorldTime((ClockTime) null);
      ClockTime clockTime0 = startResumePdu0.getRealWorldTime();
      assertEquals((short)13, startResumePdu0.getPduType());
      assertNull(clockTime0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      int int0 = startResumePdu0.getMarshalledSize();
      assertEquals(44, int0);
      assertEquals((short)13, startResumePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(4);
      // Undeclared exception!
      try { 
        startResumePdu0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      // Undeclared exception!
      try { 
        startResumePdu0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      // Undeclared exception!
      try { 
        startResumePdu0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.setOriginatingEntityID((EntityID) null);
      // Undeclared exception!
      try { 
        startResumePdu0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SimulationManagementFamilyPdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.setReceivingEntityID((EntityID) null);
      // Undeclared exception!
      try { 
        startResumePdu0.equalsImpl(startResumePdu0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SimulationManagementFamilyPdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      boolean boolean0 = startResumePdu0.equalsImpl(startResumePdu0);
      assertEquals((short)13, startResumePdu0.getPduType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.protocolFamily = (short)3141;
      StartResumePdu startResumePdu1 = new StartResumePdu();
      boolean boolean0 = startResumePdu1.equalsImpl(startResumePdu0);
      assertEquals((short)13, startResumePdu1.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.requestID = 1818L;
      StartResumePdu startResumePdu1 = new StartResumePdu();
      boolean boolean0 = startResumePdu0.equalsImpl(startResumePdu1);
      assertFalse(startResumePdu1.equals((Object)startResumePdu0));
      assertFalse(boolean0);
      assertEquals((short)13, startResumePdu1.getPduType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      StartResumePdu startResumePdu1 = new StartResumePdu();
      assertTrue(startResumePdu1.equals((Object)startResumePdu0));
      
      startResumePdu1.setRealWorldTime((ClockTime) null);
      boolean boolean0 = startResumePdu0.equals(startResumePdu1);
      assertFalse(boolean0);
      assertEquals((short)13, startResumePdu1.getPduType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      PipedInputStream pipedInputStream0 = new PipedInputStream(4);
      boolean boolean0 = startResumePdu0.equalsImpl(pipedInputStream0);
      assertFalse(boolean0);
      assertEquals((short)13, startResumePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      ClockTime clockTime0 = new ClockTime();
      boolean boolean0 = startResumePdu0.equals(clockTime0);
      assertFalse(boolean0);
      assertEquals((short)13, startResumePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      StartResumePdu startResumePdu1 = new StartResumePdu();
      boolean boolean0 = startResumePdu0.equals(startResumePdu1);
      assertEquals((short)13, startResumePdu1.getPduType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      boolean boolean0 = startResumePdu0.equals(startResumePdu0);
      assertTrue(boolean0);
      assertEquals((short)13, startResumePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      boolean boolean0 = startResumePdu0.equals((Object) null);
      assertEquals((short)13, startResumePdu0.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.getSimulationTime();
      assertEquals((short)13, startResumePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      ClockTime clockTime0 = new ClockTime();
      startResumePdu0.setSimulationTime(clockTime0);
      assertEquals((short)13, startResumePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.unmarshal((DataInputStream) null);
      assertEquals((short)13, startResumePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      ClockTime clockTime0 = startResumePdu0.getRealWorldTime();
      clockTime0.hour = (-1714L);
      startResumePdu0.getRealWorldTime();
      assertEquals((short)13, startResumePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      startResumePdu0.getRequestID();
      assertEquals((short)13, startResumePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StartResumePdu startResumePdu0 = new StartResumePdu();
      // Undeclared exception!
      try { 
        startResumePdu0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }
}
