/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 14:16:58 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.Attribute;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Attribute_ESTest extends Attribute_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      Attribute attribute1 = new Attribute();
      assertTrue(attribute1.equals((Object)attribute0));
      
      attribute1.recordSpecificFields = 1104L;
      boolean boolean0 = attribute0.equals(attribute1);
      assertFalse(attribute1.equals((Object)attribute0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      Attribute attribute1 = new Attribute();
      attribute0.setRecordLength(1409);
      boolean boolean0 = attribute0.equalsImpl(attribute1);
      assertEquals(1409, attribute0.getRecordLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.setRecordType((-2391L));
      Attribute attribute1 = new Attribute();
      boolean boolean0 = attribute0.equalsImpl(attribute1);
      assertEquals((-2391L), attribute0.getRecordType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.setRecordType((-2391L));
      boolean boolean0 = attribute0.equalsImpl(attribute0);
      assertEquals((-2391L), attribute0.getRecordType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.setRecordSpecificFields((-2391L));
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(370);
      attribute0.marshal(byteBuffer0);
      assertEquals((-2391L), attribute0.getRecordSpecificFields());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.recordSpecificFields = 954L;
      MockFile mockFile0 = new MockFile("c>oo;7cXq`aU5QrR)");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      attribute0.marshal(dataOutputStream0);
      assertEquals(954L, attribute0.getRecordSpecificFields());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.setRecordType((-2391L));
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      attribute0.marshal(dataOutputStream0);
      assertEquals((-2391L), attribute0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.setRecordLength((byte)118);
      int int0 = attribute0.getMarshalledSize();
      assertEquals(118, attribute0.getRecordLength());
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      Charset charset0 = Charset.defaultCharset();
      CharBuffer charBuffer0 = CharBuffer.allocate(769);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      attribute0.unmarshal(byteBuffer0);
      assertEquals(0, attribute0.getRecordLength());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      byte[] byteArray0 = new byte[14];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      attribute0.unmarshal(dataInputStream0);
      assertEquals(0L, attribute0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.recordType = 954L;
      long long0 = attribute0.getRecordType();
      assertEquals(954L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.recordType = (-5534L);
      long long0 = attribute0.getRecordType();
      assertEquals((-5534L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.setRecordSpecificFields(162);
      long long0 = attribute0.getRecordSpecificFields();
      assertEquals(162L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.recordSpecificFields = 0L;
      attribute0.recordSpecificFields = (-2795L);
      long long0 = attribute0.getRecordSpecificFields();
      assertEquals((-2795L), long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.setRecordLength(2146585870);
      int int0 = attribute0.getRecordLength();
      assertEquals(2146585870, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.setRecordLength((-2861));
      int int0 = attribute0.getRecordLength();
      assertEquals((-2861), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        attribute0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      // Undeclared exception!
      try { 
        attribute0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      Attribute attribute1 = new Attribute();
      attribute1.setRecordSpecificFields((-2391L));
      boolean boolean0 = attribute0.equalsImpl(attribute1);
      assertEquals((-2391L), attribute1.getRecordSpecificFields());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.recordLength = (-2145480397);
      Attribute attribute1 = new Attribute();
      boolean boolean0 = attribute0.equalsImpl(attribute1);
      assertFalse(boolean0);
      assertFalse(attribute1.equals((Object)attribute0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      Attribute attribute1 = new Attribute();
      attribute1.setRecordType(1034L);
      boolean boolean0 = attribute1.equalsImpl(attribute0);
      assertEquals(1034L, attribute1.getRecordType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      Object object0 = new Object();
      boolean boolean0 = attribute0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      Attribute attribute1 = new Attribute();
      boolean boolean0 = attribute0.equals(attribute1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      Object object0 = new Object();
      boolean boolean0 = attribute0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      boolean boolean0 = attribute0.equals(attribute0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      boolean boolean0 = attribute0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      long long0 = attribute0.getRecordSpecificFields();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      int int0 = attribute0.getRecordLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      // Undeclared exception!
      try { 
        attribute0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      attribute0.unmarshal((DataInputStream) null);
      assertEquals(0L, attribute0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      // Undeclared exception!
      try { 
        attribute0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Attribute attribute0 = new Attribute();
      long long0 = attribute0.getRecordType();
      assertEquals(0L, long0);
  }
}
