/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 15:29:34 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.DataFilterRecord;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.PipedOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DataFilterRecord_ESTest extends DataFilterRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_thermalContrast((-1609));
      dataFilterRecord0.setBitFlags_padding((-512));
      assertEquals(1, dataFilterRecord0.getBitFlags_scalarDetectionCoefficient());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_paintScheme((-1609));
      dataFilterRecord0.setBitFlags_paintScheme(10);
      assertEquals(223, dataFilterRecord0.getBitFlags_padding());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_fusing(1495);
      dataFilterRecord0.setBitFlags_scalarDetectionCoefficient((-703));
      assertEquals(1, dataFilterRecord0.getBitFlags_paintScheme());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_thermalContrast((-1609));
      dataFilterRecord0.setBitFlags_fusing((-1609));
      assertEquals(1, dataFilterRecord0.getBitFlags_scalarDetectionCoefficient());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_paintScheme((-1609));
      dataFilterRecord0.setBitFlags_tripDetonationWire(176);
      assertEquals(219, dataFilterRecord0.getBitFlags_padding());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_padding(2847);
      dataFilterRecord0.setBitFlags_mineEmplacementTime(477);
      assertEquals(1, dataFilterRecord0.getBitFlags_scalarDetectionCoefficient());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_thermalContrast((-1609));
      dataFilterRecord0.setBitFlags_reflectance(142);
      assertEquals(1, dataFilterRecord0.getBitFlags_fusing());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_mineEmplacementTime(844);
      dataFilterRecord0.setBitFlags_thermalContrast(844);
      assertEquals(1, dataFilterRecord0.getBitFlags_scalarDetectionCoefficient());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_thermalContrast((-1609));
      dataFilterRecord0.setBitFlags_mineOrientation((-1170));
      assertEquals(1, dataFilterRecord0.getBitFlags_fusing());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_mineEmplacementTime((-1102));
      dataFilterRecord0.setBitFlags_snowBurialDepthOffset((-2775));
      assertEquals(1, dataFilterRecord0.getBitFlags_paintScheme());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_thermalContrast((-1609));
      int int0 = dataFilterRecord0.getBitFlags_snowBurialDepthOffset();
      assertEquals(1, dataFilterRecord0.getBitFlags_thermalContrast());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_thermalContrast((-1609));
      dataFilterRecord0.setBitFlags_waterBurialDepthOffset((-545));
      assertEquals(1, dataFilterRecord0.getBitFlags_waterBurialDepthOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_snowBurialDepthOffset(1);
      dataFilterRecord0.setBitFlags_groundBurialDepthOffset(1814);
      assertEquals(1, dataFilterRecord0.getBitFlags_paintScheme());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(4);
      dataFilterRecord0.unmarshal(byteBuffer0);
      assertEquals(0, dataFilterRecord0.getBitFlags_groundBurialDepthOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      dataFilterRecord0.unmarshal(dataInputStream0);
      assertEquals(0, dataFilterRecord0.getBitFlags_mineEmplacementTime());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1819);
      dataFilterRecord0.marshal(byteBuffer0);
      assertEquals(0, dataFilterRecord0.getBitFlags_tripDetonationWire());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.bitFlags = (-766L);
      int int0 = dataFilterRecord0.getBitFlags_waterBurialDepthOffset();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_tripDetonationWire((-3179));
      int int0 = dataFilterRecord0.getBitFlags_tripDetonationWire();
      assertEquals((-406912L), dataFilterRecord0.getBitFlags());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_reflectance((-1386));
      int int0 = dataFilterRecord0.getBitFlags_scalarDetectionCoefficient();
      assertEquals(1, dataFilterRecord0.getBitFlags_tripDetonationWire());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_thermalContrast((-1609));
      int int0 = dataFilterRecord0.getBitFlags_reflectance();
      assertEquals(499, dataFilterRecord0.getBitFlags_padding());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_reflectance((-1386));
      int int0 = dataFilterRecord0.getBitFlags_padding();
      assertEquals(1, dataFilterRecord0.getBitFlags_scalarDetectionCoefficient());
      assertEquals(490, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_groundBurialDepthOffset(11);
      int int0 = dataFilterRecord0.getBitFlags_mineOrientation();
      assertEquals(1, dataFilterRecord0.getBitFlags_groundBurialDepthOffset());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_thermalContrast((-1609));
      int int0 = dataFilterRecord0.getBitFlags_mineEmplacementTime();
      assertEquals((-25744L), dataFilterRecord0.getBitFlags());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_thermalContrast((-1609));
      int int0 = dataFilterRecord0.getBitFlags_fusing();
      assertEquals((-25744L), dataFilterRecord0.getBitFlags());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_fusing(601);
      long long0 = dataFilterRecord0.getBitFlags();
      assertEquals(75, dataFilterRecord0.getBitFlags_padding());
      assertEquals(153856L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.bitFlags = (-766L);
      long long0 = dataFilterRecord0.getBitFlags();
      assertEquals((-766L), long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      // Undeclared exception!
      try { 
        dataFilterRecord0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.DataFilterRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      // Undeclared exception!
      try { 
        dataFilterRecord0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_thermalContrast((-1609));
      DataFilterRecord dataFilterRecord1 = new DataFilterRecord();
      boolean boolean0 = dataFilterRecord0.equalsImpl(dataFilterRecord1);
      assertEquals(1, dataFilterRecord0.getBitFlags_fusing());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      boolean boolean0 = dataFilterRecord0.equalsImpl(dataFilterRecord0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      DataFilterRecord dataFilterRecord1 = new DataFilterRecord();
      dataFilterRecord1.setBitFlags_mineEmplacementTime((-1373));
      boolean boolean0 = dataFilterRecord0.equals(dataFilterRecord1);
      assertEquals(1, dataFilterRecord1.getBitFlags_tripDetonationWire());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      Object object0 = new Object();
      boolean boolean0 = dataFilterRecord0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      DataFilterRecord dataFilterRecord1 = new DataFilterRecord();
      boolean boolean0 = dataFilterRecord0.equals(dataFilterRecord1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      boolean boolean0 = dataFilterRecord0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      boolean boolean0 = dataFilterRecord0.equals(dataFilterRecord0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      Object object0 = new Object();
      boolean boolean0 = dataFilterRecord0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_scalarDetectionCoefficient();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_mineEmplacementTime();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      dataFilterRecord0.marshal(dataOutputStream0);
      assertEquals(0, dataFilterRecord0.getBitFlags_fusing());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_tripDetonationWire();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_paintScheme();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_snowBurialDepthOffset(1);
      int int0 = dataFilterRecord0.getBitFlags_snowBurialDepthOffset();
      assertEquals(4L, dataFilterRecord0.getBitFlags());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      long long0 = dataFilterRecord0.getBitFlags();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_fusing();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_waterBurialDepthOffset();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      // Undeclared exception!
      try { 
        dataFilterRecord0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.DataFilterRecord", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      dataFilterRecord0.unmarshal(dataInputStream0);
      assertEquals(0, dataFilterRecord0.getBitFlags_mineOrientation());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_mineOrientation((-613));
      int int0 = dataFilterRecord0.getBitFlags_thermalContrast();
      assertEquals(1, dataFilterRecord0.getBitFlags_tripDetonationWire());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_mineOrientation();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_padding();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_thermalContrast();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_tripDetonationWire((-3172));
      int int0 = dataFilterRecord0.getBitFlags_paintScheme();
      assertEquals(1, dataFilterRecord0.getBitFlags_scalarDetectionCoefficient());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      // Undeclared exception!
      try { 
        dataFilterRecord0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_reflectance();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags((-2648L));
      assertEquals(1, dataFilterRecord0.getBitFlags_tripDetonationWire());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      dataFilterRecord0.setBitFlags_groundBurialDepthOffset(11);
      int int0 = dataFilterRecord0.getBitFlags_groundBurialDepthOffset();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getMarshalledSize();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DataFilterRecord dataFilterRecord0 = new DataFilterRecord();
      int int0 = dataFilterRecord0.getBitFlags_groundBurialDepthOffset();
      assertEquals(0, int0);
  }
}
