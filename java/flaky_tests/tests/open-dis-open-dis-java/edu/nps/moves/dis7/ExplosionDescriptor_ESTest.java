/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:34:50 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.EntityType;
import edu.nps.moves.dis7.ExplosionDescriptor;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.PipedInputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ExplosionDescriptor_ESTest extends ExplosionDescriptor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      ExplosionDescriptor explosionDescriptor1 = new ExplosionDescriptor();
      explosionDescriptor1.setExplosiveForce((-142.09F));
      boolean boolean0 = explosionDescriptor0.equalsImpl(explosionDescriptor1);
      assertEquals((-142.09F), explosionDescriptor1.getExplosiveForce(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      assertEquals(0, explosionDescriptor0.getPadding());
      
      explosionDescriptor0.padding = 2132475725;
      ExplosionDescriptor explosionDescriptor1 = new ExplosionDescriptor();
      boolean boolean0 = explosionDescriptor0.equalsImpl(explosionDescriptor1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      ExplosionDescriptor explosionDescriptor1 = new ExplosionDescriptor();
      explosionDescriptor1.setExplosiveMaterial(1);
      boolean boolean0 = explosionDescriptor0.equalsImpl(explosionDescriptor1);
      assertEquals(1, explosionDescriptor1.getExplosiveMaterial());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      assertEquals(0, explosionDescriptor0.getPadding());
      
      explosionDescriptor0.padding = 2132475725;
      boolean boolean0 = explosionDescriptor0.equalsImpl(explosionDescriptor0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      Charset charset0 = Charset.defaultCharset();
      explosionDescriptor0.explosiveMaterial = 816;
      CharBuffer charBuffer0 = CharBuffer.allocate(3884);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      explosionDescriptor0.marshal(byteBuffer0);
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.setExplosiveMaterial(2);
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        explosionDescriptor0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      File file0 = MockFile.createTempFile("EtxzC", "EtxzC");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      explosionDescriptor0.setExplosiveMaterial(3354);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      explosionDescriptor0.marshal(dataOutputStream0);
      assertEquals(3354, explosionDescriptor0.getExplosiveMaterial());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.explosiveMaterial = (-1449);
      int int0 = explosionDescriptor0.getMarshalledSize();
      assertEquals(0, explosionDescriptor0.getPadding());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      assertEquals(0, explosionDescriptor0.getPadding());
      
      explosionDescriptor0.setPadding(1);
      int int0 = explosionDescriptor0.getMarshalledSize();
      assertEquals(1, explosionDescriptor0.getPadding());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1833);
      explosionDescriptor0.unmarshal(byteBuffer0);
      assertEquals(0, explosionDescriptor0.getExplosiveMaterial());
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      byte[] byteArray0 = new byte[18];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      explosionDescriptor0.unmarshal(dataInputStream0);
      assertEquals(16, explosionDescriptor0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      assertEquals(0, explosionDescriptor0.getPadding());
      
      explosionDescriptor0.setPadding(1);
      int int0 = explosionDescriptor0.getPadding();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.setPadding((-2613));
      int int0 = explosionDescriptor0.getPadding();
      assertEquals((-2613), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.setExplosiveMaterial(1);
      int int0 = explosionDescriptor0.getExplosiveMaterial();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.setExplosiveMaterial((-1));
      int int0 = explosionDescriptor0.getExplosiveMaterial();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.explosiveForce = 1.0F;
      float float0 = explosionDescriptor0.getExplosiveForce();
      assertEquals(1.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.setExplosiveForce((-1.0F));
      float float0 = explosionDescriptor0.getExplosiveForce();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.explodingObject = null;
      explosionDescriptor0.getExplodingObject();
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.explodingObject.setSubcategory((short) (-637));
      explosionDescriptor0.getExplodingObject();
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      EntityType entityType0 = new EntityType();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("edu.nps.moves.dis7.EntityType");
      entityType0.unmarshal(byteBuffer0);
      explosionDescriptor0.setExplodingObject(entityType0);
      EntityType entityType1 = explosionDescriptor0.getExplodingObject();
      assertEquals(0, explosionDescriptor0.getPadding());
      assertEquals((short)101, entityType1.getEntityKind());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        explosionDescriptor0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      ExplosionDescriptor explosionDescriptor1 = new ExplosionDescriptor();
      explosionDescriptor1.setPadding(1254);
      boolean boolean0 = explosionDescriptor0.equalsImpl(explosionDescriptor1);
      assertEquals(1254, explosionDescriptor1.getPadding());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      EntityType entityType0 = explosionDescriptor0.explodingObject;
      entityType0.setCountry(1);
      ExplosionDescriptor explosionDescriptor1 = new ExplosionDescriptor();
      boolean boolean0 = explosionDescriptor0.equalsImpl(explosionDescriptor1);
      assertEquals(0, explosionDescriptor1.getPadding());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      Object object0 = new Object();
      boolean boolean0 = explosionDescriptor0.equalsImpl(object0);
      assertEquals(0, explosionDescriptor0.getPadding());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      EntityType entityType0 = explosionDescriptor0.explodingObject;
      boolean boolean0 = explosionDescriptor0.equals(entityType0);
      assertFalse(boolean0);
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      boolean boolean0 = explosionDescriptor0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      boolean boolean0 = explosionDescriptor0.equals(explosionDescriptor0);
      assertTrue(boolean0);
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      ExplosionDescriptor explosionDescriptor1 = new ExplosionDescriptor();
      boolean boolean0 = explosionDescriptor1.equals(explosionDescriptor0);
      assertEquals(0, explosionDescriptor1.getPadding());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      int int0 = explosionDescriptor0.getExplosiveMaterial();
      assertEquals(0, int0);
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      // Undeclared exception!
      try { 
        explosionDescriptor0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EntityType", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.setExplosiveForce((-1.0F));
      ExplosionDescriptor explosionDescriptor1 = new ExplosionDescriptor();
      boolean boolean0 = explosionDescriptor0.equalsImpl(explosionDescriptor1);
      assertEquals((-1.0F), explosionDescriptor0.getExplosiveForce(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      int int0 = explosionDescriptor0.getPadding();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.marshal((DataOutputStream) null);
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.setExplosiveMaterial(65535);
      ExplosionDescriptor explosionDescriptor1 = new ExplosionDescriptor();
      boolean boolean0 = explosionDescriptor0.equalsImpl(explosionDescriptor1);
      assertEquals(65535, explosionDescriptor0.getExplosiveMaterial());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      // Undeclared exception!
      try { 
        explosionDescriptor0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EntityType", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      explosionDescriptor0.getExplodingObject();
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      explosionDescriptor0.unmarshal(dataInputStream0);
      assertEquals(0, explosionDescriptor0.getPadding());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ExplosionDescriptor explosionDescriptor0 = new ExplosionDescriptor();
      float float0 = explosionDescriptor0.getExplosiveForce();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals(0, explosionDescriptor0.getPadding());
  }
}
