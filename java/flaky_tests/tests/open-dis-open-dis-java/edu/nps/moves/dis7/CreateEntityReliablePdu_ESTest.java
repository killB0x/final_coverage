/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:35:09 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.CreateEntityReliablePdu;
import edu.nps.moves.dis7.EntityID;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CreateEntityReliablePdu_ESTest extends CreateEntityReliablePdu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.requestID = 591L;
      boolean boolean0 = createEntityReliablePdu0.equalsImpl(createEntityReliablePdu0);
      assertTrue(boolean0);
      assertEquals(32, createEntityReliablePdu0.getMarshalledSize());
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setPad2((short)639);
      CreateEntityReliablePdu createEntityReliablePdu1 = new CreateEntityReliablePdu();
      boolean boolean0 = createEntityReliablePdu0.equalsImpl(createEntityReliablePdu1);
      assertEquals((short)639, createEntityReliablePdu0.getPad2());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.pad1 = 32;
      CreateEntityReliablePdu createEntityReliablePdu1 = new CreateEntityReliablePdu();
      boolean boolean0 = createEntityReliablePdu1.equalsImpl(createEntityReliablePdu0);
      assertFalse(boolean0);
      assertEquals((short)51, createEntityReliablePdu1.getPduType());
      assertFalse(createEntityReliablePdu0.equals((Object)createEntityReliablePdu1));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      CreateEntityReliablePdu createEntityReliablePdu1 = new CreateEntityReliablePdu();
      assertTrue(createEntityReliablePdu1.equals((Object)createEntityReliablePdu0));
      
      createEntityReliablePdu1.exerciseID = (short)1387;
      boolean boolean0 = createEntityReliablePdu1.equalsImpl(createEntityReliablePdu0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setPadding((short)639);
      boolean boolean0 = createEntityReliablePdu0.equalsImpl(createEntityReliablePdu0);
      assertTrue(boolean0);
      assertEquals(32, createEntityReliablePdu0.getMarshalledSize());
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setTimestamp(1507L);
      byte[] byteArray0 = createEntityReliablePdu0.marshal();
      assertEquals(32, byteArray0.length);
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setPad2((short) (-1406));
      createEntityReliablePdu0.marshal();
      assertEquals((short) (-1406), createEntityReliablePdu0.getPad2());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.requiredReliabilityService = (short)1;
      createEntityReliablePdu0.marshal();
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
      assertEquals(32, createEntityReliablePdu0.getLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setRequestID((-878L));
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("FnOt/p2r? K,S@6_OJ", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      createEntityReliablePdu0.marshal(dataOutputStream0);
      assertEquals((-878L), createEntityReliablePdu0.getRequestID());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.pad2 = (short) (-5945);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(1);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      createEntityReliablePdu0.marshal(dataOutputStream0);
      assertEquals("\u0007\u00003\n\u0000\u0000\u0000\u0000\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\uFFFD\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      assertEquals(32, createEntityReliablePdu0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.exerciseID = (short)436;
      createEntityReliablePdu0.marshal((DataOutputStream) null);
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.pduStatus = (short) (-1);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("FnOt/p2r? K,S@6_OJ", false);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      createEntityReliablePdu0.marshal(dataOutputStream0);
      assertEquals(32, createEntityReliablePdu0.getMarshalledSize());
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setPadding((short)639);
      createEntityReliablePdu0.marshal((DataOutputStream) null);
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(3388);
      createEntityReliablePdu0.marshal(byteBuffer0);
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
      assertEquals(32, createEntityReliablePdu0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
      
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2686);
      createEntityReliablePdu0.unmarshal(byteBuffer0);
      assertEquals((short)0, createEntityReliablePdu0.getRequiredReliabilityService());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      assertEquals((short)0, createEntityReliablePdu0.getRequiredReliabilityService());
      
      createEntityReliablePdu0.requiredReliabilityService = (short)7;
      short short0 = createEntityReliablePdu0.getRequiredReliabilityService();
      assertEquals((short)7, short0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setRequiredReliabilityService((short) (-708));
      short short0 = createEntityReliablePdu0.getRequiredReliabilityService();
      assertEquals((short) (-708), short0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setRequestID(1L);
      long long0 = createEntityReliablePdu0.getRequestID();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setRequestID((-410L));
      long long0 = createEntityReliablePdu0.getRequestID();
      assertEquals((-410L), long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setPad2((short)639);
      short short0 = createEntityReliablePdu0.getPad2();
      assertEquals((short)639, short0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.pad2 = (short) (-1285);
      short short0 = createEntityReliablePdu0.getPad2();
      assertEquals((short) (-1285), short0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setPad1(436);
      int int0 = createEntityReliablePdu0.getPad1();
      assertEquals(436, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setPad1((-1285));
      int int0 = createEntityReliablePdu0.getPad1();
      assertEquals((-1285), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      int int0 = createEntityReliablePdu0.getMarshalledSize();
      assertEquals(32, int0);
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1);
      // Undeclared exception!
      try { 
        createEntityReliablePdu0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        createEntityReliablePdu0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      // Undeclared exception!
      try { 
        createEntityReliablePdu0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setReceivingEntityID((EntityID) null);
      // Undeclared exception!
      try { 
        createEntityReliablePdu0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SimulationManagementWithReliabilityFamilyPdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setReceivingEntityID((EntityID) null);
      // Undeclared exception!
      try { 
        createEntityReliablePdu0.equalsImpl(createEntityReliablePdu0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SimulationManagementWithReliabilityFamilyPdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      CreateEntityReliablePdu createEntityReliablePdu1 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setOriginatingEntityID((EntityID) null);
      // Undeclared exception!
      try { 
        createEntityReliablePdu0.equals(createEntityReliablePdu1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SimulationManagementWithReliabilityFamilyPdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      CreateEntityReliablePdu createEntityReliablePdu1 = new CreateEntityReliablePdu();
      assertTrue(createEntityReliablePdu1.equals((Object)createEntityReliablePdu0));
      
      createEntityReliablePdu0.setPduStatus((short)4);
      boolean boolean0 = createEntityReliablePdu0.equalsImpl(createEntityReliablePdu1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      CreateEntityReliablePdu createEntityReliablePdu1 = new CreateEntityReliablePdu();
      assertTrue(createEntityReliablePdu1.equals((Object)createEntityReliablePdu0));
      
      createEntityReliablePdu1.requestID = 1002L;
      boolean boolean0 = createEntityReliablePdu0.equalsImpl(createEntityReliablePdu1);
      assertFalse(createEntityReliablePdu1.equals((Object)createEntityReliablePdu0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      CreateEntityReliablePdu createEntityReliablePdu1 = new CreateEntityReliablePdu();
      assertTrue(createEntityReliablePdu1.equals((Object)createEntityReliablePdu0));
      
      createEntityReliablePdu1.pad2 = (short)7;
      boolean boolean0 = createEntityReliablePdu0.equalsImpl(createEntityReliablePdu1);
      assertFalse(createEntityReliablePdu1.equals((Object)createEntityReliablePdu0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.pad1 = 32;
      CreateEntityReliablePdu createEntityReliablePdu1 = new CreateEntityReliablePdu();
      boolean boolean0 = createEntityReliablePdu0.equalsImpl(createEntityReliablePdu1);
      assertEquals((short)51, createEntityReliablePdu1.getPduType());
      assertFalse(boolean0);
      assertFalse(createEntityReliablePdu1.equals((Object)createEntityReliablePdu0));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.requiredReliabilityService = (short) (-1061);
      CreateEntityReliablePdu createEntityReliablePdu1 = new CreateEntityReliablePdu();
      boolean boolean0 = createEntityReliablePdu0.equalsImpl(createEntityReliablePdu1);
      assertFalse(createEntityReliablePdu1.equals((Object)createEntityReliablePdu0));
      assertEquals((short)51, createEntityReliablePdu1.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      boolean boolean0 = createEntityReliablePdu0.equalsImpl((Object) null);
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      Object object0 = new Object();
      boolean boolean0 = createEntityReliablePdu0.equals(object0);
      assertFalse(boolean0);
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      boolean boolean0 = createEntityReliablePdu0.equals((Object) null);
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      boolean boolean0 = createEntityReliablePdu0.equals(createEntityReliablePdu0);
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      // Undeclared exception!
      try { 
        createEntityReliablePdu0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      short short0 = createEntityReliablePdu0.getPad2();
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.setRequiredReliabilityService((short)4);
      CreateEntityReliablePdu createEntityReliablePdu1 = new CreateEntityReliablePdu();
      boolean boolean0 = createEntityReliablePdu0.equals(createEntityReliablePdu1);
      assertEquals((short)4, createEntityReliablePdu0.getRequiredReliabilityService());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.unmarshal((DataInputStream) null);
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      createEntityReliablePdu0.getRequestID();
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      short short0 = createEntityReliablePdu0.getRequiredReliabilityService();
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CreateEntityReliablePdu createEntityReliablePdu0 = new CreateEntityReliablePdu();
      int int0 = createEntityReliablePdu0.getPad1();
      assertEquals((short)51, createEntityReliablePdu0.getPduType());
      assertEquals(0, int0);
  }
}
