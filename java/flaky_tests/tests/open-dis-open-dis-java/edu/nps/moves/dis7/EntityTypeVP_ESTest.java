/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:21:08 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.EntityType;
import edu.nps.moves.dis7.EntityTypeVP;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EntityTypeVP_ESTest extends EntityTypeVP_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals(0L, entityTypeVP0.getPadding1());
      
      entityTypeVP0.padding1 = (-3094L);
      EntityTypeVP entityTypeVP1 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP0.equalsImpl(entityTypeVP1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      entityTypeVP0.setPadding(2684);
      EntityTypeVP entityTypeVP1 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP0.equalsImpl(entityTypeVP1);
      assertEquals(2684, entityTypeVP0.getPadding());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      
      entityTypeVP0.changeIndicator = (short)1365;
      EntityTypeVP entityTypeVP1 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP0.equals(entityTypeVP1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals((short)3, entityTypeVP0.getRecordType());
      
      EntityTypeVP entityTypeVP1 = new EntityTypeVP();
      entityTypeVP0.recordType = (short) (-2298);
      boolean boolean0 = entityTypeVP1.equalsImpl(entityTypeVP0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals(0, entityTypeVP0.getPadding());
      
      entityTypeVP0.padding = 4163;
      int int0 = entityTypeVP0.getMarshalledSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals((short)3, entityTypeVP0.getRecordType());
      
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 3, (byte)112);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      entityTypeVP0.unmarshal(dataInputStream0);
      assertEquals(0L, entityTypeVP0.getPadding1());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("edu.nps.moves.dis7.EntityType");
      entityTypeVP0.marshal(byteBuffer0);
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertEquals(0, entityTypeVP0.getPadding());
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      MockFile mockFile0 = new MockFile((String) null, "AT*@i'\")%qQI");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      entityTypeVP0.marshal(dataOutputStream0);
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      assertEquals(0, entityTypeVP0.getPadding());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals((short)3, entityTypeVP0.getRecordType());
      
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2451);
      entityTypeVP0.unmarshal(byteBuffer0);
      short short0 = entityTypeVP0.getRecordType();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals((short)3, entityTypeVP0.getRecordType());
      
      entityTypeVP0.recordType = (short) (-1);
      short short0 = entityTypeVP0.getRecordType();
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals(0L, entityTypeVP0.getPadding1());
      
      entityTypeVP0.padding1 = 1L;
      long long0 = entityTypeVP0.getPadding1();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      entityTypeVP0.padding1 = (-1924L);
      long long0 = entityTypeVP0.getPadding1();
      assertEquals((-1924L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      entityTypeVP0.setPadding(255);
      int int0 = entityTypeVP0.getPadding();
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      entityTypeVP0.setPadding((-201));
      int int0 = entityTypeVP0.getPadding();
      assertEquals((-201), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      EntityType entityType0 = new EntityType();
      entityType0.setSubcategory((short) (-1404));
      entityTypeVP0.setEntityType(entityType0);
      EntityType entityType1 = entityTypeVP0.getEntityType();
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      assertEquals(0, entityTypeVP0.getPadding());
      assertEquals((short) (-1404), entityType1.getSubcategory());
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertEquals(0L, entityTypeVP0.getPadding1());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      EntityType entityType0 = new EntityType();
      entityType0.category = (short)1312;
      entityTypeVP0.setEntityType(entityType0);
      EntityType entityType1 = entityTypeVP0.getEntityType();
      assertEquals((short)1312, entityType1.getCategory());
      assertEquals(0, entityTypeVP0.getPadding());
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertEquals(0L, entityTypeVP0.getPadding1());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      entityTypeVP0.setChangeIndicator((short)719);
      short short0 = entityTypeVP0.getChangeIndicator();
      assertEquals((short)719, short0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      entityTypeVP0.changeIndicator = (short) (-1375);
      short short0 = entityTypeVP0.getChangeIndicator();
      assertEquals((short) (-1375), short0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP0.equalsImpl(entityTypeVP0);
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertTrue(boolean0);
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals(0, entityTypeVP0.getPadding());
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      // Undeclared exception!
      try { 
        entityTypeVP0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        entityTypeVP0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals(0L, entityTypeVP0.getPadding1());
      
      entityTypeVP0.padding1 = (-3094L);
      EntityTypeVP entityTypeVP1 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP1.equalsImpl(entityTypeVP0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      EntityTypeVP entityTypeVP1 = new EntityTypeVP();
      entityTypeVP1.setPadding(2233);
      boolean boolean0 = entityTypeVP0.equalsImpl(entityTypeVP1);
      assertEquals(2233, entityTypeVP1.getPadding());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      EntityType entityType0 = new EntityType();
      entityType0.setCategory((short)255);
      entityTypeVP0.setEntityType(entityType0);
      EntityTypeVP entityTypeVP1 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP0.equalsImpl(entityTypeVP1);
      assertEquals((short)0, entityTypeVP1.getChangeIndicator());
      assertEquals((short)3, entityTypeVP1.getRecordType());
      assertFalse(boolean0);
      assertEquals(0L, entityTypeVP1.getPadding1());
      assertEquals(0, entityTypeVP1.getPadding());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      
      entityTypeVP0.changeIndicator = (short) (-1925);
      EntityTypeVP entityTypeVP1 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP0.equalsImpl(entityTypeVP1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      EntityTypeVP entityTypeVP1 = new EntityTypeVP();
      assertEquals((short)3, entityTypeVP1.getRecordType());
      
      entityTypeVP1.recordType = (short)2;
      boolean boolean0 = entityTypeVP1.equalsImpl(entityTypeVP0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP0.equalsImpl((Object) null);
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      assertEquals(0, entityTypeVP0.getPadding());
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertFalse(boolean0);
      assertEquals((short)3, entityTypeVP0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      EntityTypeVP entityTypeVP1 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP0.equals(entityTypeVP1);
      assertEquals((short)3, entityTypeVP1.getRecordType());
      assertEquals(0L, entityTypeVP1.getPadding1());
      assertEquals((short)0, entityTypeVP1.getChangeIndicator());
      assertTrue(boolean0);
      assertEquals(0, entityTypeVP1.getPadding());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP0.equals((Object) null);
      assertEquals(0, entityTypeVP0.getPadding());
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertFalse(boolean0);
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      boolean boolean0 = entityTypeVP0.equals(entityTypeVP0);
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertTrue(boolean0);
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      assertEquals(0, entityTypeVP0.getPadding());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      Object object0 = new Object();
      boolean boolean0 = entityTypeVP0.equals(object0);
      assertEquals(0, entityTypeVP0.getPadding());
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      assertFalse(boolean0);
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals((short)3, entityTypeVP0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      EntityType entityType0 = entityTypeVP0.getEntityType();
      entityType0.setExtra((short)3632);
      entityTypeVP0.getEntityType();
      assertEquals(0, entityTypeVP0.getPadding());
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals((short)3, entityTypeVP0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      // Undeclared exception!
      try { 
        entityTypeVP0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EntityTypeVP", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      assertEquals((short)3, entityTypeVP0.getRecordType());
      
      entityTypeVP0.setRecordType((short)2);
      assertEquals((short)2, entityTypeVP0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      long long0 = entityTypeVP0.getPadding1();
      assertEquals(0, entityTypeVP0.getPadding());
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertEquals(0L, long0);
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      entityTypeVP0.marshal((DataOutputStream) null);
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals(0, entityTypeVP0.getPadding());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      short short0 = entityTypeVP0.getChangeIndicator();
      assertEquals((short)0, short0);
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals(0, entityTypeVP0.getPadding());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      entityTypeVP0.setPadding1(284L);
      assertEquals(284L, entityTypeVP0.getPadding1());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      int int0 = entityTypeVP0.getPadding();
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals((short)3, entityTypeVP0.getRecordType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      // Undeclared exception!
      try { 
        entityTypeVP0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EntityTypeVP", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EntityTypeVP entityTypeVP0 = new EntityTypeVP();
      short short0 = entityTypeVP0.getRecordType();
      assertEquals((short)0, entityTypeVP0.getChangeIndicator());
      assertEquals(0L, entityTypeVP0.getPadding1());
      assertEquals((short)3, short0);
      assertEquals(0, entityTypeVP0.getPadding());
  }
}
