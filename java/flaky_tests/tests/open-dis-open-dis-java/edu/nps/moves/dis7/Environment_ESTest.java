/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:52:56 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.Environment;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Environment_ESTest extends Environment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Environment environment0 = new Environment();
      Environment environment1 = new Environment();
      assertEquals((short)0, environment1.getPadding());
      
      environment1.padding = (short) (-734);
      boolean boolean0 = environment0.equalsImpl(environment1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Environment environment0 = new Environment();
      Environment environment1 = new Environment();
      environment1.setIndex((short)1171);
      boolean boolean0 = environment0.equalsImpl(environment1);
      assertEquals((short)1171, environment1.getIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Environment environment0 = new Environment();
      Environment environment1 = new Environment();
      assertTrue(environment1.equals((Object)environment0));
      
      environment1.length = (-607);
      boolean boolean0 = environment1.equalsImpl(environment0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Environment environment0 = new Environment();
      Environment environment1 = new Environment();
      assertTrue(environment1.equals((Object)environment0));
      
      environment1.environmentType = (long) (short)1171;
      boolean boolean0 = environment0.equalsImpl(environment1);
      assertFalse(environment1.equals((Object)environment0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Environment environment0 = new Environment();
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte) (-96);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      environment0.unmarshal(dataInputStream0);
      // Undeclared exception!
      try { 
        environment0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Environment environment0 = new Environment();
      MockFile mockFile0 = new MockFile("2ww*NDU(1`D/-K\"|Q", "2ww*NDU(1`D/-K\"|Q");
      environment0.padding = (short) (-1);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      environment0.marshal(dataOutputStream0);
      assertEquals((short) (-1), environment0.getPadding());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.length = 2312;
      int int0 = environment0.getMarshalledSize();
      assertEquals(8, int0);
      assertEquals((short)0, environment0.getPadding());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Environment environment0 = new Environment();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      environment0.unmarshal(dataInputStream0);
      assertEquals(0, environment0.getLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Environment environment0 = new Environment();
      byte[] byteArray0 = new byte[8];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      environment0.marshal(byteBuffer0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setPadding((short)1171);
      short short0 = environment0.getPadding();
      assertEquals((short)1171, short0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.padding = (short) (-607);
      short short0 = environment0.getPadding();
      assertEquals((short) (-607), short0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.length = 2556;
      int int0 = environment0.getLength();
      assertEquals(2556, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setLength((-2068));
      int int0 = environment0.getLength();
      assertEquals((-2068), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setIndex((short)1709);
      short short0 = environment0.getIndex();
      assertEquals((short)1709, short0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.index = (short) (-765);
      short short0 = environment0.getIndex();
      assertEquals((short) (-765), short0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Environment environment0 = new Environment();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("w=xt#4>pC");
      environment0.unmarshal(byteBuffer0);
      long long0 = environment0.getEnvironmentType();
      assertEquals(2000517236L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.environmentType = (long) (-520);
      long long0 = environment0.getEnvironmentType();
      assertEquals((-520L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Environment environment0 = new Environment();
      boolean boolean0 = environment0.equalsImpl(environment0);
      assertEquals((short)0, environment0.getPadding());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Environment environment0 = new Environment();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        environment0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Environment environment0 = new Environment();
      // Undeclared exception!
      try { 
        environment0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.length = 2312;
      Environment environment1 = new Environment();
      boolean boolean0 = environment0.equalsImpl(environment1);
      assertFalse(boolean0);
      assertEquals((short)0, environment1.getPadding());
      assertFalse(environment1.equals((Object)environment0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Environment environment0 = new Environment();
      Environment environment1 = new Environment();
      assertEquals((short)0, environment1.getPadding());
      
      environment1.padding = (short) (-876);
      boolean boolean0 = environment1.equals(environment0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Environment environment0 = new Environment();
      Environment environment1 = new Environment();
      environment1.setIndex((short)3248);
      boolean boolean0 = environment1.equalsImpl(environment0);
      assertEquals((short)3248, environment1.getIndex());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.environmentType = (long) 2312;
      Environment environment1 = new Environment();
      boolean boolean0 = environment0.equalsImpl(environment1);
      assertEquals((short)0, environment1.getPadding());
      assertFalse(environment1.equals((Object)environment0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Environment environment0 = new Environment();
      Object object0 = new Object();
      boolean boolean0 = environment0.equalsImpl(object0);
      assertEquals((short)0, environment0.getPadding());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Environment environment0 = new Environment();
      Object object0 = new Object();
      boolean boolean0 = environment0.equals(object0);
      assertFalse(boolean0);
      assertEquals((short)0, environment0.getPadding());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Environment environment0 = new Environment();
      boolean boolean0 = environment0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals((short)0, environment0.getPadding());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Environment environment0 = new Environment();
      boolean boolean0 = environment0.equals(environment0);
      assertTrue(boolean0);
      assertEquals((short)0, environment0.getPadding());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Environment environment0 = new Environment();
      short short0 = environment0.getPadding();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.getIndex();
      assertEquals((short)0, environment0.getPadding());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.setEnvironmentType(1171L);
      assertEquals(1171L, environment0.getEnvironmentType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.marshal((DataOutputStream) null);
      assertEquals((short)0, environment0.getPadding());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Environment environment0 = new Environment();
      // Undeclared exception!
      try { 
        environment0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.Environment", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Environment environment0 = new Environment();
      int int0 = environment0.getLength();
      assertEquals(0, int0);
      assertEquals((short)0, environment0.getPadding());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Environment environment0 = new Environment();
      environment0.getEnvironmentType();
      assertEquals((short)0, environment0.getPadding());
  }
}
