/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:09:08 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.BeamAntennaPattern;
import edu.nps.moves.dis7.DirectedEnergyAreaAimpoint;
import edu.nps.moves.dis7.DirectedEnergyTargetEnergyDeposition;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DirectedEnergyAreaAimpoint_ESTest extends DirectedEnergyAreaAimpoint_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      
      directedEnergyAreaAimpoint0.beamAntennaPatternRecordCount = (-2146947044);
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      assertEquals(0, directedEnergyAreaAimpoint1.getBeamAntennaPatternRecordCount());
      
      directedEnergyAreaAimpoint1.beamAntennaPatternRecordCount = (-2146545881);
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      
      directedEnergyAreaAimpoint0.padding = 1;
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.recordLength = 3;
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertEquals(0, directedEnergyAreaAimpoint1.getPadding());
      assertEquals(0, directedEnergyAreaAimpoint1.getBeamAntennaPatternRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint1.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertFalse(boolean0);
      assertEquals(4001L, directedEnergyAreaAimpoint1.getRecordType());
      assertFalse(directedEnergyAreaAimpoint1.equals((Object)directedEnergyAreaAimpoint0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      assertEquals(4001L, directedEnergyAreaAimpoint1.getRecordType());
      
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      directedEnergyAreaAimpoint1.unmarshal(byteBuffer0);
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setDirectedEnergyTargetEnergyDepositionRecordCount(1609);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1609);
      directedEnergyAreaAimpoint0.marshal(byteBuffer0);
      assertEquals(1609, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setBeamAntennaPatternRecordCount((-1));
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(621);
      directedEnergyAreaAimpoint0.marshal(byteBuffer0);
      assertEquals((-1), directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      
      directedEnergyAreaAimpoint0.padding = (-1070);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2661);
      directedEnergyAreaAimpoint0.marshal(byteBuffer0);
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setPadding(1667);
      MockPrintStream mockPrintStream0 = new MockPrintStream("edu.nps.moves.dis7.EulerAngles");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      directedEnergyAreaAimpoint0.marshal(dataOutputStream0);
      assertEquals(1667, directedEnergyAreaAimpoint0.getPadding());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setBeamAntennaPatternRecordCount((-683));
      MockPrintStream mockPrintStream0 = new MockPrintStream("edu.nps.moves.dis7.EulerAngles");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      directedEnergyAreaAimpoint0.marshal(dataOutputStream0);
      assertEquals((-683), directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setRecordLength(2);
      MockPrintStream mockPrintStream0 = new MockPrintStream("edu.nps.moves.dis7.EulerAngles");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      directedEnergyAreaAimpoint0.marshal(dataOutputStream0);
      assertEquals(2, directedEnergyAreaAimpoint0.getRecordLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setDirectedEnergyTargetEnergyDepositionRecordCount((-1));
      int int0 = directedEnergyAreaAimpoint0.getMarshalledSize();
      assertEquals((-1), directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setBeamAntennaPatternRecordCount(3);
      int int0 = directedEnergyAreaAimpoint0.getMarshalledSize();
      assertEquals(3, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      
      directedEnergyAreaAimpoint0.padding = 1;
      int int0 = directedEnergyAreaAimpoint0.getMarshalledSize();
      assertEquals(64, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      directedEnergyAreaAimpoint0.unmarshal(dataInputStream0);
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      
      directedEnergyAreaAimpoint0.setRecordType(0L);
      long long0 = directedEnergyAreaAimpoint0.getRecordType();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      
      directedEnergyAreaAimpoint0.recordType = (-1L);
      long long0 = directedEnergyAreaAimpoint0.getRecordType();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setRecordLength(4);
      int int0 = directedEnergyAreaAimpoint0.getRecordLength();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setRecordLength((-1));
      int int0 = directedEnergyAreaAimpoint0.getRecordLength();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setPadding(2);
      int int0 = directedEnergyAreaAimpoint0.getPadding();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.padding = (-1070);
      int int0 = directedEnergyAreaAimpoint0.getPadding();
      assertEquals((-1070), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      DirectedEnergyTargetEnergyDeposition directedEnergyTargetEnergyDeposition0 = directedEnergyAreaAimpoint0.directedEnergyTargetEnergyDepositionRecordList;
      directedEnergyTargetEnergyDeposition0.padding = (-1259);
      directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordList();
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setDirectedEnergyTargetEnergyDepositionRecordCount(1609);
      int int0 = directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount();
      assertEquals(1609, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setDirectedEnergyTargetEnergyDepositionRecordCount((-3957));
      int int0 = directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount();
      assertEquals((-3957), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.beamAntennaPatternRecordCount = 585;
      int int0 = directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount();
      assertEquals(585, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setBeamAntennaPatternRecordCount((-683));
      int int0 = directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount();
      assertEquals((-683), int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      BeamAntennaPattern beamAntennaPattern0 = directedEnergyAreaAimpoint0.beamAntennaParameterList;
      beamAntennaPattern0.padding2 = 64;
      directedEnergyAreaAimpoint0.getBeamAntennaParameterList();
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      BeamAntennaPattern beamAntennaPattern0 = directedEnergyAreaAimpoint0.beamAntennaParameterList;
      beamAntennaPattern0.setEz(3L);
      directedEnergyAreaAimpoint0.getBeamAntennaParameterList();
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint0);
      assertTrue(boolean0);
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      // Undeclared exception!
      try { 
        directedEnergyAreaAimpoint0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.DirectedEnergyAreaAimpoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2);
      // Undeclared exception!
      try { 
        directedEnergyAreaAimpoint0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setBeamAntennaParameterList((BeamAntennaPattern) null);
      // Undeclared exception!
      try { 
        directedEnergyAreaAimpoint0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.DirectedEnergyAreaAimpoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setPadding((-1558));
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertEquals((-1558), directedEnergyAreaAimpoint0.getPadding());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.recordLength = (-464);
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertFalse(boolean0);
      assertEquals(0, directedEnergyAreaAimpoint1.getPadding());
      assertFalse(directedEnergyAreaAimpoint1.equals((Object)directedEnergyAreaAimpoint0));
      assertEquals(0, directedEnergyAreaAimpoint1.getBeamAntennaPatternRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint1.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertEquals(4001L, directedEnergyAreaAimpoint1.getRecordType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setRecordType(0L);
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertFalse(boolean0);
      assertEquals(0L, directedEnergyAreaAimpoint0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      BeamAntennaPattern beamAntennaPattern0 = directedEnergyAreaAimpoint0.beamAntennaParameterList;
      beamAntennaPattern0.padding2 = 64;
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertFalse(boolean0);
      assertEquals(4001L, directedEnergyAreaAimpoint1.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint1.getBeamAntennaPatternRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint1.getPadding());
      assertEquals(0, directedEnergyAreaAimpoint1.getDirectedEnergyTargetEnergyDepositionRecordCount());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      assertEquals(0, directedEnergyAreaAimpoint1.getDirectedEnergyTargetEnergyDepositionRecordCount());
      
      directedEnergyAreaAimpoint1.directedEnergyTargetEnergyDepositionRecordCount = 3;
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setPadding((-1558));
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equals(directedEnergyAreaAimpoint1);
      assertEquals((-1558), directedEnergyAreaAimpoint0.getPadding());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl((Object) null);
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      Object object0 = new Object();
      boolean boolean0 = directedEnergyAreaAimpoint0.equals(object0);
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertFalse(boolean0);
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equals((Object) null);
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equals(directedEnergyAreaAimpoint0);
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.marshal((DataOutputStream) null);
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      int int0 = directedEnergyAreaAimpoint0.getPadding();
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(0, int0);
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      long long0 = directedEnergyAreaAimpoint0.getRecordType();
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(4001L, long0);
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      // Undeclared exception!
      try { 
        directedEnergyAreaAimpoint0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      int int0 = directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount();
      assertEquals(0, int0);
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setDirectedEnergyTargetEnergyDepositionRecordList((DirectedEnergyTargetEnergyDeposition) null);
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      int int0 = directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount();
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(0, int0);
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      int int0 = directedEnergyAreaAimpoint0.getRecordLength();
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertEquals(0, int0);
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setRecordLength(55);
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint0);
      assertEquals(55, directedEnergyAreaAimpoint0.getRecordLength());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setPadding(2146233657);
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint0);
      assertEquals(2146233657, directedEnergyAreaAimpoint0.getPadding());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      // Undeclared exception!
      try { 
        directedEnergyAreaAimpoint0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.DirectedEnergyAreaAimpoint", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      DirectedEnergyTargetEnergyDeposition directedEnergyTargetEnergyDeposition0 = directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordList();
      directedEnergyTargetEnergyDeposition0.peakIrradiance = (-1.0F);
      directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordList();
      assertEquals(4001L, directedEnergyAreaAimpoint0.getRecordType());
      assertEquals(0, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getBeamAntennaPatternRecordCount());
      assertEquals(0, directedEnergyAreaAimpoint0.getPadding());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint0 = new DirectedEnergyAreaAimpoint();
      directedEnergyAreaAimpoint0.setDirectedEnergyTargetEnergyDepositionRecordCount(621);
      DirectedEnergyAreaAimpoint directedEnergyAreaAimpoint1 = new DirectedEnergyAreaAimpoint();
      boolean boolean0 = directedEnergyAreaAimpoint0.equalsImpl(directedEnergyAreaAimpoint1);
      assertEquals(621, directedEnergyAreaAimpoint0.getDirectedEnergyTargetEnergyDepositionRecordCount());
      assertFalse(boolean0);
  }
}
