/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:48:14 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.EightByteChunk;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EightByteChunk_ESTest extends EightByteChunk_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      EightByteChunk eightByteChunk1 = new EightByteChunk();
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte)1;
      eightByteChunk0.setOtherParameters(byteArray0);
      // Undeclared exception!
      try { 
        eightByteChunk0.equalsImpl(eightByteChunk1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5 out of bounds for length 5
         //
         verifyException("edu.nps.moves.dis7.EightByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      eightByteChunk0.unmarshal((DataInputStream) null);
      assertEquals(8, eightByteChunk0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      eightByteChunk0.marshal((DataOutputStream) null);
      assertEquals(8, eightByteChunk0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      byte[] byteArray0 = new byte[0];
      eightByteChunk0.setOtherParameters(byteArray0);
      byte[] byteArray1 = eightByteChunk0.getOtherParameters();
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(5);
      // Undeclared exception!
      try { 
        eightByteChunk0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      // Undeclared exception!
      try { 
        eightByteChunk0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EightByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      // Undeclared exception!
      try { 
        eightByteChunk0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      // Undeclared exception!
      try { 
        eightByteChunk0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EightByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      eightByteChunk0.otherParameters = null;
      // Undeclared exception!
      try { 
        eightByteChunk0.equalsImpl(eightByteChunk0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EightByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      byte[] byteArray0 = new byte[1];
      eightByteChunk0.setOtherParameters(byteArray0);
      EightByteChunk eightByteChunk1 = new EightByteChunk();
      // Undeclared exception!
      try { 
        eightByteChunk0.equals(eightByteChunk1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("edu.nps.moves.dis7.EightByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      boolean boolean0 = eightByteChunk0.equalsImpl(eightByteChunk0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      EightByteChunk eightByteChunk1 = new EightByteChunk();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-104);
      eightByteChunk0.setOtherParameters(byteArray0);
      // Undeclared exception!
      try { 
        eightByteChunk0.equalsImpl(eightByteChunk1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5 out of bounds for length 5
         //
         verifyException("edu.nps.moves.dis7.EightByteChunk", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      Object object0 = new Object();
      boolean boolean0 = eightByteChunk0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      Object object0 = new Object();
      boolean boolean0 = eightByteChunk0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      boolean boolean0 = eightByteChunk0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      boolean boolean0 = eightByteChunk0.equals(eightByteChunk0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(917);
      eightByteChunk0.unmarshal(byteBuffer0);
      assertEquals(8, byteBuffer0.position());
      assertEquals(909, byteBuffer0.remaining());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(3577);
      eightByteChunk0.marshal(byteBuffer0);
      assertEquals(8, byteBuffer0.position());
      assertEquals("java.nio.HeapByteBuffer[pos=8 lim=3577 cap=3577]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      byte[] byteArray0 = eightByteChunk0.otherParameters;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      eightByteChunk0.unmarshal(dataInputStream0);
      assertEquals(8, byteArray0.length);
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      eightByteChunk0.marshal(dataOutputStream0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", byteArrayOutputStream0.toString());
      assertEquals(8, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      int int0 = eightByteChunk0.getMarshalledSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EightByteChunk eightByteChunk0 = new EightByteChunk();
      byte[] byteArray0 = eightByteChunk0.getOtherParameters();
      assertEquals(8, byteArray0.length);
  }
}
