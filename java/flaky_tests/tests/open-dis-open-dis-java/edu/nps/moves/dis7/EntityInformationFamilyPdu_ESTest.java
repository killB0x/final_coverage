/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 14:44:37 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.EntityInformationFamilyPdu;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.PipedOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EntityInformationFamilyPdu_ESTest extends EntityInformationFamilyPdu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      Charset charset0 = Charset.defaultCharset();
      CharBuffer charBuffer0 = CharBuffer.allocate(1206);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      entityInformationFamilyPdu0.marshal(byteBuffer0);
      assertEquals((short)1, entityInformationFamilyPdu0.getProtocolFamily());
      assertEquals(12, entityInformationFamilyPdu0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(12);
      entityInformationFamilyPdu0.unmarshal(byteBuffer0);
      assertEquals(12, byteBuffer0.capacity());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      int int0 = entityInformationFamilyPdu0.getMarshalledSize();
      assertEquals(12, int0);
      assertEquals((short)1, entityInformationFamilyPdu0.getProtocolFamily());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      // Undeclared exception!
      try { 
        entityInformationFamilyPdu0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        entityInformationFamilyPdu0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      // Undeclared exception!
      try { 
        entityInformationFamilyPdu0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      entityInformationFamilyPdu0.setProtocolVersion((short)255);
      EntityInformationFamilyPdu entityInformationFamilyPdu1 = new EntityInformationFamilyPdu();
      boolean boolean0 = entityInformationFamilyPdu0.equalsImpl(entityInformationFamilyPdu1);
      assertFalse(boolean0);
      assertEquals((short)1, entityInformationFamilyPdu1.getProtocolFamily());
      assertEquals(12, entityInformationFamilyPdu1.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      boolean boolean0 = entityInformationFamilyPdu0.equalsImpl(entityInformationFamilyPdu0);
      assertTrue(boolean0);
      assertEquals(12, entityInformationFamilyPdu0.getLength());
      assertEquals((short)1, entityInformationFamilyPdu0.getProtocolFamily());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      entityInformationFamilyPdu0.setProtocolVersion((short)255);
      EntityInformationFamilyPdu entityInformationFamilyPdu1 = new EntityInformationFamilyPdu();
      boolean boolean0 = entityInformationFamilyPdu0.equals(entityInformationFamilyPdu1);
      assertFalse(boolean0);
      assertEquals(12, entityInformationFamilyPdu1.getMarshalledSize());
      assertEquals((short)1, entityInformationFamilyPdu1.getProtocolFamily());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      Object object0 = new Object();
      boolean boolean0 = entityInformationFamilyPdu0.equalsImpl(object0);
      assertEquals((short)1, entityInformationFamilyPdu0.getProtocolFamily());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      Object object0 = new Object();
      boolean boolean0 = entityInformationFamilyPdu0.equals(object0);
      assertFalse(boolean0);
      assertEquals((short)1, entityInformationFamilyPdu0.getProtocolFamily());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      boolean boolean0 = entityInformationFamilyPdu0.equals((Object) null);
      assertEquals((short)1, entityInformationFamilyPdu0.getProtocolFamily());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      boolean boolean0 = entityInformationFamilyPdu0.equals(entityInformationFamilyPdu0);
      assertEquals((short)1, entityInformationFamilyPdu0.getProtocolFamily());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        entityInformationFamilyPdu0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      entityInformationFamilyPdu0.unmarshal((DataInputStream) null);
      assertEquals((short)1, entityInformationFamilyPdu0.getProtocolFamily());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EntityInformationFamilyPdu entityInformationFamilyPdu0 = new EntityInformationFamilyPdu();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      entityInformationFamilyPdu0.marshal(dataOutputStream0);
      assertEquals((short)1, entityInformationFamilyPdu0.getProtocolFamily());
  }
}
