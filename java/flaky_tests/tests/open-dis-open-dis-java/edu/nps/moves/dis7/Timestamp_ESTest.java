/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 15:33:39 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.Timestamp;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Timestamp_ESTest extends Timestamp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      Timestamp timestamp1 = new Timestamp();
      timestamp1.setTimestamp_timestampValue((-2107));
      boolean boolean0 = timestamp0.equalsImpl(timestamp1);
      assertEquals((-4214L), timestamp1.getTimestamp());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      timestamp0.setTimestamp_timestampValue((-178));
      timestamp0.setTimestamp_timestampValue((-178));
      assertEquals(2147483470, timestamp0.getTimestamp_timestampValue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      timestamp0.timestamp = (long) (-2280);
      timestamp0.setTimestamp_timestampType((-2280));
      assertEquals(2147482508, timestamp0.getTimestamp_timestampValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1535);
      timestamp0.unmarshal(byteBuffer0);
      assertEquals(0, timestamp0.getTimestamp_timestampValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      timestamp0.unmarshal(dataInputStream0);
      assertEquals(4, timestamp0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      timestamp0.marshal(byteBuffer1);
      assertNotSame(byteBuffer0, byteBuffer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      timestamp0.timestamp = (long) (-246);
      int int0 = timestamp0.getTimestamp_timestampValue();
      assertEquals(2147483525, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      timestamp0.setTimestamp_timestampType((-2441));
      int int0 = timestamp0.getTimestamp_timestampType();
      assertEquals(2147482427, timestamp0.getTimestamp_timestampValue());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      timestamp0.setTimestamp_timestampType((-2441));
      long long0 = timestamp0.getTimestamp();
      assertEquals(1, timestamp0.getTimestamp_timestampType());
      assertEquals((-2441L), long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      // Undeclared exception!
      try { 
        timestamp0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        timestamp0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      boolean boolean0 = timestamp0.equalsImpl(timestamp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-245), 0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      boolean boolean0 = timestamp0.equalsImpl(dataInputStream0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      Object object0 = new Object();
      boolean boolean0 = timestamp0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      boolean boolean0 = timestamp0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      boolean boolean0 = timestamp0.equals(timestamp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      Timestamp timestamp1 = new Timestamp();
      boolean boolean0 = timestamp1.equals(timestamp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      // Undeclared exception!
      try { 
        timestamp0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.Timestamp", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      timestamp0.setTimestamp((byte)126);
      long long0 = timestamp0.getTimestamp();
      assertEquals(126L, long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      int int0 = timestamp0.getMarshalledSize();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      // Undeclared exception!
      try { 
        timestamp0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.Timestamp", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      timestamp0.unmarshal(dataInputStream0);
      assertEquals(0, timestamp0.getTimestamp_timestampValue());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      timestamp0.setTimestamp_timestampType((-2441));
      Timestamp timestamp1 = new Timestamp();
      boolean boolean0 = timestamp0.equalsImpl(timestamp1);
      assertEquals(2147482427, timestamp0.getTimestamp_timestampValue());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      timestamp0.marshal((DataOutputStream) null);
      assertEquals(0, timestamp0.getTimestamp_timestampType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      int int0 = timestamp0.getTimestamp_timestampValue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      int int0 = timestamp0.getTimestamp_timestampType();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp();
      long long0 = timestamp0.getTimestamp();
      assertEquals(0L, long0);
  }
}
