/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 14:05:37 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.IntercomCommunicationsParameters;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileDescriptor;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IntercomCommunicationsParameters_ESTest extends IntercomCommunicationsParameters_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.recordSpecificField = (long) 1;
      IntercomCommunicationsParameters intercomCommunicationsParameters1 = new IntercomCommunicationsParameters();
      boolean boolean0 = intercomCommunicationsParameters1.equalsImpl(intercomCommunicationsParameters0);
      assertFalse(intercomCommunicationsParameters0.equals((Object)intercomCommunicationsParameters1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordLength(1);
      IntercomCommunicationsParameters intercomCommunicationsParameters1 = new IntercomCommunicationsParameters();
      boolean boolean0 = intercomCommunicationsParameters1.equalsImpl(intercomCommunicationsParameters0);
      assertEquals(1, intercomCommunicationsParameters0.getRecordLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordLength(1);
      boolean boolean0 = intercomCommunicationsParameters0.equalsImpl(intercomCommunicationsParameters0);
      assertEquals(1, intercomCommunicationsParameters0.getRecordLength());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordType((-3373));
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1794);
      intercomCommunicationsParameters0.marshal(byteBuffer0);
      assertEquals((-3373), intercomCommunicationsParameters0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      MockFile mockFile0 = new MockFile("");
      MockFile mockFile1 = new MockFile(mockFile0, "vhB_uek*jP");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile1, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      intercomCommunicationsParameters0.setRecordType((-3373));
      intercomCommunicationsParameters0.marshal(dataOutputStream0);
      assertEquals((-3373), intercomCommunicationsParameters0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.recordType = 2;
      int int0 = intercomCommunicationsParameters0.getMarshalledSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordLength(1);
      int int0 = intercomCommunicationsParameters0.getMarshalledSize();
      assertEquals(1, intercomCommunicationsParameters0.getRecordLength());
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      byte[] byteArray0 = new byte[9];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      intercomCommunicationsParameters0.unmarshal(byteBuffer0);
      assertEquals(0, intercomCommunicationsParameters0.getRecordType());
      assertEquals(0, intercomCommunicationsParameters0.getRecordLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      intercomCommunicationsParameters0.unmarshal(dataInputStream0);
      assertEquals(0, intercomCommunicationsParameters0.getRecordLength());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      intercomCommunicationsParameters0.unmarshal(dataInputStream0);
      assertEquals(0, intercomCommunicationsParameters0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordType(915);
      int int0 = intercomCommunicationsParameters0.getRecordType();
      assertEquals(915, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordType((-177));
      int int0 = intercomCommunicationsParameters0.getRecordType();
      assertEquals((-177), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordSpecificField((byte)93);
      long long0 = intercomCommunicationsParameters0.getRecordSpecificField();
      assertEquals(93L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordSpecificField((-1L));
      long long0 = intercomCommunicationsParameters0.getRecordSpecificField();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordLength(2);
      int int0 = intercomCommunicationsParameters0.getRecordLength();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.recordLength = (-2763);
      int int0 = intercomCommunicationsParameters0.getRecordLength();
      assertEquals((-2763), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      // Undeclared exception!
      try { 
        intercomCommunicationsParameters0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.IntercomCommunicationsParameters", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      // Undeclared exception!
      try { 
        intercomCommunicationsParameters0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.IntercomCommunicationsParameters", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.recordSpecificField = (long) 1;
      IntercomCommunicationsParameters intercomCommunicationsParameters1 = new IntercomCommunicationsParameters();
      boolean boolean0 = intercomCommunicationsParameters0.equalsImpl(intercomCommunicationsParameters1);
      assertFalse(intercomCommunicationsParameters1.equals((Object)intercomCommunicationsParameters0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      IntercomCommunicationsParameters intercomCommunicationsParameters1 = new IntercomCommunicationsParameters();
      assertTrue(intercomCommunicationsParameters1.equals((Object)intercomCommunicationsParameters0));
      
      intercomCommunicationsParameters1.recordType = 2210;
      boolean boolean0 = intercomCommunicationsParameters0.equalsImpl(intercomCommunicationsParameters1);
      assertFalse(intercomCommunicationsParameters1.equals((Object)intercomCommunicationsParameters0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      IntercomCommunicationsParameters intercomCommunicationsParameters1 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters1.setRecordSpecificField(2594L);
      boolean boolean0 = intercomCommunicationsParameters1.equals(intercomCommunicationsParameters0);
      assertEquals(2594L, intercomCommunicationsParameters1.getRecordSpecificField());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordLength(1);
      IntercomCommunicationsParameters intercomCommunicationsParameters1 = new IntercomCommunicationsParameters();
      boolean boolean0 = intercomCommunicationsParameters0.equalsImpl(intercomCommunicationsParameters1);
      assertEquals(1, intercomCommunicationsParameters0.getRecordLength());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      boolean boolean0 = intercomCommunicationsParameters0.equalsImpl((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      boolean boolean0 = intercomCommunicationsParameters0.equals(fileDescriptor0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      boolean boolean0 = intercomCommunicationsParameters0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      boolean boolean0 = intercomCommunicationsParameters0.equals(intercomCommunicationsParameters0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      long long0 = intercomCommunicationsParameters0.getRecordSpecificField();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      int int0 = intercomCommunicationsParameters0.getRecordType();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.setRecordType((-5238));
      IntercomCommunicationsParameters intercomCommunicationsParameters1 = new IntercomCommunicationsParameters();
      boolean boolean0 = intercomCommunicationsParameters1.equals(intercomCommunicationsParameters0);
      assertEquals((-5238), intercomCommunicationsParameters0.getRecordType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      int int0 = intercomCommunicationsParameters0.getRecordLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        intercomCommunicationsParameters0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      intercomCommunicationsParameters0.marshal((DataOutputStream) null);
      assertEquals(8, intercomCommunicationsParameters0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IntercomCommunicationsParameters intercomCommunicationsParameters0 = new IntercomCommunicationsParameters();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        intercomCommunicationsParameters0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
}
