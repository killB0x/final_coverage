/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 15:26:25 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.BeamStatus;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BeamStatus_ESTest extends BeamStatus_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      beamStatus0.setBeamState_beamState((-166));
      BeamStatus beamStatus1 = new BeamStatus();
      boolean boolean0 = beamStatus0.equalsImpl(beamStatus1);
      assertEquals((short) (-166), beamStatus0.getBeamState());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      beamStatus0.setBeamState_padding((-2));
      beamStatus0.setBeamState_padding((-2));
      assertEquals(126, beamStatus0.getBeamState_padding());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      beamStatus0.setBeamState_padding((-2));
      beamStatus0.setBeamState_beamState((-738));
      assertEquals((short) (-2), beamStatus0.getBeamState());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      beamStatus0.unmarshal(dataInputStream0);
      assertEquals(0, beamStatus0.getBeamState_padding());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      byte[] byteArray0 = new byte[1];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      beamStatus0.marshal(byteBuffer0);
      byteBuffer0.flip();
      beamStatus0.unmarshal(byteBuffer0);
      assertEquals(0, beamStatus0.getBeamState_beamState());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      beamStatus0.setBeamState((short)1173);
      short short0 = beamStatus0.getBeamState();
      assertEquals((short)1173, short0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      beamStatus0.setBeamState_padding((-648));
      short short0 = beamStatus0.getBeamState();
      assertEquals(120, beamStatus0.getBeamState_padding());
      assertEquals((short) (-1296), short0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      // Undeclared exception!
      try { 
        beamStatus0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.BeamStatus", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      byte[] byteArray0 = new byte[5];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, (int) (byte)1, 0);
      // Undeclared exception!
      try { 
        beamStatus0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      boolean boolean0 = beamStatus0.equalsImpl(beamStatus0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      beamStatus0.setBeamState_beamState(1);
      BeamStatus beamStatus1 = new BeamStatus();
      boolean boolean0 = beamStatus0.equalsImpl(beamStatus1);
      assertEquals(1, beamStatus0.getBeamState_beamState());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      Object object0 = new Object();
      boolean boolean0 = beamStatus0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      BeamStatus beamStatus1 = new BeamStatus();
      boolean boolean0 = beamStatus1.equals(beamStatus0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      boolean boolean0 = beamStatus0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      boolean boolean0 = beamStatus0.equals(beamStatus0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      Object object0 = new Object();
      boolean boolean0 = beamStatus0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      beamStatus0.setBeamState((short) (-166));
      int int0 = beamStatus0.getBeamState_padding();
      assertEquals((short) (-166), beamStatus0.getBeamState());
      assertEquals(45, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      beamStatus0.unmarshal((DataInputStream) null);
      assertEquals((short)0, beamStatus0.getBeamState());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      beamStatus0.setBeamState_beamState(1029);
      int int0 = beamStatus0.getBeamState_beamState();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      short short0 = beamStatus0.getBeamState();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      int int0 = beamStatus0.getMarshalledSize();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        beamStatus0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      // Undeclared exception!
      try { 
        beamStatus0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.BeamStatus", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      int int0 = beamStatus0.getBeamState_padding();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      int int0 = beamStatus0.getBeamState_beamState();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BeamStatus beamStatus0 = new BeamStatus();
      beamStatus0.marshal((DataOutputStream) null);
      assertEquals(0, beamStatus0.getBeamState_padding());
  }
}
