/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:19:52 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.CommunicationsNodeID;
import edu.nps.moves.dis7.IOCommunicationsNode;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IOCommunicationsNode_ESTest extends IOCommunicationsNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.padding = (short)174;
      IOCommunicationsNode iOCommunicationsNode1 = new IOCommunicationsNode();
      boolean boolean0 = iOCommunicationsNode1.equals(iOCommunicationsNode0);
      assertEquals(16, iOCommunicationsNode1.getRecordLength());
      assertFalse(boolean0);
      assertEquals(5501L, iOCommunicationsNode1.getRecordType());
      assertFalse(iOCommunicationsNode0.equals((Object)iOCommunicationsNode1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      IOCommunicationsNode iOCommunicationsNode1 = new IOCommunicationsNode();
      assertTrue(iOCommunicationsNode1.equals((Object)iOCommunicationsNode0));
      
      iOCommunicationsNode0.communcationsNodeType = (short)2241;
      boolean boolean0 = iOCommunicationsNode0.equals(iOCommunicationsNode1);
      assertFalse(iOCommunicationsNode1.equals((Object)iOCommunicationsNode0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      IOCommunicationsNode iOCommunicationsNode1 = new IOCommunicationsNode();
      assertEquals(16, iOCommunicationsNode1.getRecordLength());
      
      iOCommunicationsNode1.recordLength = (-2906);
      boolean boolean0 = iOCommunicationsNode1.equalsImpl(iOCommunicationsNode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      IOCommunicationsNode iOCommunicationsNode1 = new IOCommunicationsNode();
      iOCommunicationsNode0.setRecordType(1261L);
      boolean boolean0 = iOCommunicationsNode0.equals(iOCommunicationsNode1);
      assertEquals(1261L, iOCommunicationsNode0.getRecordType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.setCommuncationsNodeType((short)1688);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(255);
      iOCommunicationsNode0.marshal(byteBuffer0);
      assertEquals((short)1688, iOCommunicationsNode0.getCommuncationsNodeType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.padding = (short)489;
      MockFile mockFile0 = new MockFile(">@9u?o{");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      iOCommunicationsNode0.marshal(dataOutputStream0);
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      
      iOCommunicationsNode0.setRecordLength(0);
      int int0 = iOCommunicationsNode0.getMarshalledSize();
      assertEquals(0, iOCommunicationsNode0.getRecordLength());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1289);
      iOCommunicationsNode0.unmarshal(byteBuffer0);
      assertEquals((short)0, iOCommunicationsNode0.getCommuncationsNodeType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      iOCommunicationsNode0.unmarshal(dataInputStream0);
      assertEquals((short)0, iOCommunicationsNode0.getPadding());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      
      iOCommunicationsNode0.recordType = 0L;
      iOCommunicationsNode0.getRecordType();
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.setRecordType((-237L));
      long long0 = iOCommunicationsNode0.getRecordType();
      assertEquals((-237L), long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      
      iOCommunicationsNode0.setRecordLength(0);
      int int0 = iOCommunicationsNode0.getRecordLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.recordLength = (-2906);
      int int0 = iOCommunicationsNode0.getRecordLength();
      assertEquals((-2906), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.padding = (short)174;
      short short0 = iOCommunicationsNode0.getPadding();
      assertEquals((short)174, short0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.setPadding((short) (-356));
      short short0 = iOCommunicationsNode0.getPadding();
      assertEquals((short) (-356), short0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.setCommunicationsNodeID((CommunicationsNodeID) null);
      CommunicationsNodeID communicationsNodeID0 = iOCommunicationsNode0.getCommunicationsNodeID();
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      assertNull(communicationsNodeID0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.setCommuncationsNodeType((short)3008);
      short short0 = iOCommunicationsNode0.getCommuncationsNodeType();
      assertEquals((short)3008, short0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.setCommuncationsNodeType((short) (-1));
      short short0 = iOCommunicationsNode0.getCommuncationsNodeType();
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      boolean boolean0 = iOCommunicationsNode0.equalsImpl(iOCommunicationsNode0);
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      assertTrue(boolean0);
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        iOCommunicationsNode0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("19");
      // Undeclared exception!
      try { 
        iOCommunicationsNode0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.communicationsNodeID = null;
      // Undeclared exception!
      try { 
        iOCommunicationsNode0.equalsImpl(iOCommunicationsNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.IOCommunicationsNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      CommunicationsNodeID communicationsNodeID0 = new CommunicationsNodeID();
      communicationsNodeID0.setElementID(1);
      iOCommunicationsNode0.setCommunicationsNodeID(communicationsNodeID0);
      IOCommunicationsNode iOCommunicationsNode1 = new IOCommunicationsNode();
      boolean boolean0 = iOCommunicationsNode0.equals(iOCommunicationsNode1);
      assertEquals(16, iOCommunicationsNode1.getRecordLength());
      assertEquals(5501L, iOCommunicationsNode1.getRecordType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      IOCommunicationsNode iOCommunicationsNode1 = new IOCommunicationsNode();
      assertTrue(iOCommunicationsNode1.equals((Object)iOCommunicationsNode0));
      
      iOCommunicationsNode0.padding = (short)886;
      boolean boolean0 = iOCommunicationsNode0.equalsImpl(iOCommunicationsNode1);
      assertFalse(iOCommunicationsNode1.equals((Object)iOCommunicationsNode0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      IOCommunicationsNode iOCommunicationsNode1 = new IOCommunicationsNode();
      assertTrue(iOCommunicationsNode1.equals((Object)iOCommunicationsNode0));
      
      iOCommunicationsNode0.communcationsNodeType = (short)2241;
      boolean boolean0 = iOCommunicationsNode1.equalsImpl(iOCommunicationsNode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      IOCommunicationsNode iOCommunicationsNode1 = new IOCommunicationsNode();
      assertEquals(16, iOCommunicationsNode1.getRecordLength());
      
      iOCommunicationsNode1.recordLength = (-2906);
      boolean boolean0 = iOCommunicationsNode0.equalsImpl(iOCommunicationsNode1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      
      iOCommunicationsNode0.recordType = 0L;
      IOCommunicationsNode iOCommunicationsNode1 = new IOCommunicationsNode();
      boolean boolean0 = iOCommunicationsNode1.equalsImpl(iOCommunicationsNode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      boolean boolean0 = iOCommunicationsNode0.equalsImpl((Object) null);
      assertFalse(boolean0);
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      IOCommunicationsNode iOCommunicationsNode1 = new IOCommunicationsNode();
      boolean boolean0 = iOCommunicationsNode0.equals(iOCommunicationsNode1);
      assertEquals(16, iOCommunicationsNode1.getRecordLength());
      assertTrue(boolean0);
      assertEquals(5501L, iOCommunicationsNode1.getRecordType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      boolean boolean0 = iOCommunicationsNode0.equals((Object) null);
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      boolean boolean0 = iOCommunicationsNode0.equals(iOCommunicationsNode0);
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      Object object0 = new Object();
      boolean boolean0 = iOCommunicationsNode0.equals(object0);
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      assertFalse(boolean0);
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      // Undeclared exception!
      try { 
        iOCommunicationsNode0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.IOCommunicationsNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.getCommuncationsNodeType();
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.getCommunicationsNodeID();
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      long long0 = iOCommunicationsNode0.getRecordType();
      assertEquals(5501L, long0);
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      // Undeclared exception!
      try { 
        iOCommunicationsNode0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.IOCommunicationsNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.getPadding();
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.marshal((DataOutputStream) null);
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      int int0 = iOCommunicationsNode0.getMarshalledSize();
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      iOCommunicationsNode0.unmarshal((DataInputStream) null);
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      assertEquals(16, iOCommunicationsNode0.getRecordLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IOCommunicationsNode iOCommunicationsNode0 = new IOCommunicationsNode();
      int int0 = iOCommunicationsNode0.getRecordLength();
      assertEquals(5501L, iOCommunicationsNode0.getRecordType());
      assertEquals(16, int0);
  }
}
