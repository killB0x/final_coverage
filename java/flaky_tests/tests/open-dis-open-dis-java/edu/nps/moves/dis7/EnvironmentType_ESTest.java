/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:29:30 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.EnvironmentType;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.PushbackInputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.ReadOnlyBufferException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EnvironmentType_ESTest extends EnvironmentType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.extra = (short)1662;
      EnvironmentType environmentType1 = new EnvironmentType();
      boolean boolean0 = environmentType1.equalsImpl(environmentType0);
      assertFalse(environmentType0.equals((Object)environmentType1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      EnvironmentType environmentType1 = new EnvironmentType();
      environmentType1.setSpecific((short) (-12));
      boolean boolean0 = environmentType1.equals(environmentType0);
      assertEquals((short) (-12), environmentType1.getSpecific());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      EnvironmentType environmentType1 = new EnvironmentType();
      environmentType1.setSubcategory((short) (-5690));
      boolean boolean0 = environmentType1.equalsImpl(environmentType0);
      assertEquals((short) (-5690), environmentType1.getSubcategory());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.entityKind = (short) (-1);
      boolean boolean0 = environmentType0.equalsImpl(environmentType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setCategory((short)1773);
      EnvironmentType environmentType1 = new EnvironmentType();
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertEquals((short)1773, environmentType0.getCategory());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setCategory((short)2);
      boolean boolean0 = environmentType0.equalsImpl(environmentType0);
      assertEquals((short)2, environmentType0.getCategory());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      EnvironmentType environmentType1 = new EnvironmentType();
      environmentType1.setEntityClass((-2210));
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertEquals((-2210), environmentType1.getEntityClass());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      EnvironmentType environmentType1 = new EnvironmentType();
      assertTrue(environmentType1.equals((Object)environmentType0));
      
      environmentType1.domain = (short)2710;
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertFalse(environmentType1.equals((Object)environmentType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      EnvironmentType environmentType1 = new EnvironmentType();
      assertTrue(environmentType1.equals((Object)environmentType0));
      
      environmentType1.entityKind = (short) (-2210);
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertFalse(environmentType1.equals((Object)environmentType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.domain = (short)2;
      boolean boolean0 = environmentType0.equalsImpl(environmentType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setExtra((short) (-1));
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1952);
      environmentType0.marshal(byteBuffer0);
      assertEquals((short) (-1), environmentType0.getExtra());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setDomain((short)220);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1074);
      environmentType0.marshal(byteBuffer0);
      assertEquals((short)220, environmentType0.getDomain());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setSubcategory((short)1773);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((short)1773);
      environmentType0.marshal(byteBuffer0);
      assertEquals((short)1773, environmentType0.getSubcategory());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setCategory((short)1773);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((short)1773);
      environmentType0.marshal(byteBuffer0);
      assertEquals((short)1773, environmentType0.getCategory());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.extra = (short) (-1442);
      MockFile mockFile0 = new MockFile((File) null, "9WVyXe)ZhDhE~hy5NB");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      environmentType0.marshal(dataOutputStream0);
      assertEquals((short)0, environmentType0.getDomain());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setSubcategory((short)3184);
      MockPrintStream mockPrintStream0 = new MockPrintStream("\";Tr'#Svg,)");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      environmentType0.marshal(dataOutputStream0);
      assertEquals((short)3184, environmentType0.getSubcategory());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setSpecific((short)3184);
      MockPrintStream mockPrintStream0 = new MockPrintStream("\";Tr'#Svg,)");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      environmentType0.marshal(dataOutputStream0);
      assertEquals((short)3184, environmentType0.getSpecific());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setCategory((short)1773);
      MockPrintStream mockPrintStream0 = new MockPrintStream("\";Tr'#Svg,)");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      environmentType0.marshal(dataOutputStream0);
      assertEquals((short)1773, environmentType0.getCategory());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setEntityKind((short)1722);
      MockPrintStream mockPrintStream0 = new MockPrintStream("\";Tr'#Svg,)");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      environmentType0.marshal(dataOutputStream0);
      assertEquals((short)1722, environmentType0.getEntityKind());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      byte[] byteArray0 = new byte[8];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      environmentType0.unmarshal(byteBuffer0);
      assertEquals((short)0, environmentType0.getDomain());
      assertEquals(0, environmentType0.getEntityClass());
      assertEquals((short)0, environmentType0.getSpecific());
      assertEquals((short)0, environmentType0.getSubcategory());
      assertEquals((short)0, environmentType0.getCategory());
      assertEquals((short)0, environmentType0.getEntityKind());
      assertEquals((short)0, environmentType0.getExtra());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      byte[] byteArray0 = new byte[24];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      environmentType0.unmarshal(dataInputStream0);
      assertEquals(8, environmentType0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      environmentType0.unmarshal(dataInputStream0);
      assertEquals((short)0, environmentType0.getSubcategory());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setSubcategory((short) (-103));
      short short0 = environmentType0.getSubcategory();
      assertEquals((short) (-103), short0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setSpecific((short)1);
      short short0 = environmentType0.getSpecific();
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setSpecific((short) (-573));
      short short0 = environmentType0.getSpecific();
      assertEquals((short) (-573), short0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setExtra((short)473);
      short short0 = environmentType0.getExtra();
      assertEquals((short)473, short0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.extra = (short) (-965);
      short short0 = environmentType0.getExtra();
      assertEquals((short) (-965), short0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.entityKind = (short)2;
      short short0 = environmentType0.getEntityKind();
      assertEquals((short)2, short0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.entityKind = (short) (-1383);
      short short0 = environmentType0.getEntityKind();
      assertEquals((short) (-1383), short0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setEntityClass(1337);
      int int0 = environmentType0.getEntityClass();
      assertEquals(1337, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setEntityClass((-2210));
      int int0 = environmentType0.getEntityClass();
      assertEquals((-2210), int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.domain = (short)2710;
      short short0 = environmentType0.getDomain();
      assertEquals((short)2710, short0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setDomain((short) (-1215));
      short short0 = environmentType0.getDomain();
      assertEquals((short) (-1215), short0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.category = (short)261;
      short short0 = environmentType0.getCategory();
      assertEquals((short)261, short0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.category = (short) (-1);
      short short0 = environmentType0.getCategory();
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(2);
      // Undeclared exception!
      try { 
        environmentType0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1571);
      ByteBuffer byteBuffer1 = byteBuffer0.asReadOnlyBuffer();
      // Undeclared exception!
      try { 
        environmentType0.marshal(byteBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.DirectByteBufferR", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        environmentType0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      // Undeclared exception!
      try { 
        environmentType0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EnvironmentType", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.extra = (short)1470;
      EnvironmentType environmentType1 = new EnvironmentType();
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertFalse(boolean0);
      assertFalse(environmentType1.equals((Object)environmentType0));
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setSpecific((short)2);
      EnvironmentType environmentType1 = new EnvironmentType();
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertEquals((short)2, environmentType0.getSpecific());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.subcategory = (short)1405;
      EnvironmentType environmentType1 = new EnvironmentType();
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertFalse(environmentType1.equals((Object)environmentType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.category = (short) (-1374);
      EnvironmentType environmentType1 = new EnvironmentType();
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertFalse(boolean0);
      assertFalse(environmentType1.equals((Object)environmentType0));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      EnvironmentType environmentType1 = new EnvironmentType();
      environmentType1.setEntityClass(1684);
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertEquals(1684, environmentType1.getEntityClass());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      EnvironmentType environmentType1 = new EnvironmentType();
      environmentType1.setDomain((short) (-1));
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertEquals((short) (-1), environmentType1.getDomain());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      EnvironmentType environmentType1 = new EnvironmentType();
      assertTrue(environmentType1.equals((Object)environmentType0));
      
      environmentType1.entityKind = (short)1971;
      boolean boolean0 = environmentType0.equalsImpl(environmentType1);
      assertFalse(environmentType1.equals((Object)environmentType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      boolean boolean0 = environmentType0.equalsImpl((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      EnvironmentType environmentType1 = new EnvironmentType();
      boolean boolean0 = environmentType0.equals(environmentType1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      Object object0 = new Object();
      boolean boolean0 = environmentType0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      boolean boolean0 = environmentType0.equals(environmentType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      boolean boolean0 = environmentType0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setSpecific((short) (-2547));
      ByteBuffer byteBuffer0 = ByteBuffer.allocate((short)220);
      environmentType0.marshal(byteBuffer0);
      assertEquals((short) (-2547), environmentType0.getSpecific());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      short short0 = environmentType0.getDomain();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      // Undeclared exception!
      try { 
        environmentType0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EnvironmentType", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      int int0 = environmentType0.getEntityClass();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      short short0 = environmentType0.getExtra();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      short short0 = environmentType0.getEntityKind();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      int int0 = environmentType0.getMarshalledSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      short short0 = environmentType0.getSpecific();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setSubcategory((short)92);
      short short0 = environmentType0.getSubcategory();
      assertEquals((short)92, short0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      short short0 = environmentType0.getCategory();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.setEntityClass(220);
      int int0 = environmentType0.getMarshalledSize();
      assertEquals(220, environmentType0.getEntityClass());
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      short short0 = environmentType0.getSubcategory();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      EnvironmentType environmentType0 = new EnvironmentType();
      environmentType0.marshal((DataOutputStream) null);
      assertEquals((short)0, environmentType0.getDomain());
  }
}
