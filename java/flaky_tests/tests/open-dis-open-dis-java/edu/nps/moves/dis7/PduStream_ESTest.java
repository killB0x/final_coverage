/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 10:40:08 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.PduStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PduStream_ESTest extends PduStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.setStopTime((byte)98);
      PduStream pduStream1 = new PduStream();
      boolean boolean0 = pduStream1.equalsImpl(pduStream0);
      assertEquals(98L, pduStream0.getStopTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      PduStream pduStream1 = new PduStream();
      assertTrue(pduStream1.equals((Object)pduStream0));
      
      pduStream0.startTime = (long) 2715;
      boolean boolean0 = pduStream0.equalsImpl(pduStream1);
      assertFalse(pduStream1.equals((Object)pduStream0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-14);
      pduStream0.setName(byteArray0);
      PduStream pduStream1 = new PduStream();
      // Undeclared exception!
      try { 
        pduStream0.equalsImpl(pduStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)95;
      pduStream0.description = byteArray0;
      PduStream pduStream1 = new PduStream();
      // Undeclared exception!
      try { 
        pduStream0.equals(pduStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.startTime = (long) 2715;
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2715);
      pduStream0.marshal(byteBuffer0);
      assertEquals("java.nio.HeapByteBuffer[pos=784 lim=2715 cap=2715]", byteBuffer0.toString());
      assertEquals(784, byteBuffer0.position());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.setStopTime(2715);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      pduStream0.marshal(dataOutputStream0);
      assertEquals(2715L, pduStream0.getStopTime());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      byte[] byteArray0 = new byte[5];
      pduStream0.setName(byteArray0);
      pduStream0.setDescription(byteArray0);
      PduStream pduStream1 = new PduStream();
      byte[] byteArray1 = pduStream1.getDescription();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, 0, (byte)88);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      pduStream0.unmarshal(dataInputStream0);
      assertEquals(62, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.marshal((DataOutputStream) null);
      assertEquals(0L, pduStream0.getStopTime());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.setStopTime(1L);
      long long0 = pduStream0.getStopTime();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.stopTime = (-871L);
      long long0 = pduStream0.getStopTime();
      assertEquals((-871L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.setStartTime(1L);
      long long0 = pduStream0.getStartTime();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.startTime = (long) (byte) (-64);
      long long0 = pduStream0.getStartTime();
      assertEquals((-64L), long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.setName((byte[]) null);
      byte[] byteArray0 = pduStream0.getName();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      byte[] byteArray0 = new byte[0];
      pduStream0.setName(byteArray0);
      byte[] byteArray1 = pduStream0.getName();
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.setDescription((byte[]) null);
      byte[] byteArray0 = pduStream0.getDescription();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      boolean boolean0 = pduStream0.equalsImpl(pduStream0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(215);
      // Undeclared exception!
      try { 
        pduStream0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      // Undeclared exception!
      try { 
        pduStream0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(8);
      // Undeclared exception!
      try { 
        pduStream0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      // Undeclared exception!
      try { 
        pduStream0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.setName((byte[]) null);
      // Undeclared exception!
      try { 
        pduStream0.equalsImpl(pduStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      pduStream0.setDescription(byteArray0);
      PduStream pduStream1 = new PduStream();
      // Undeclared exception!
      try { 
        pduStream0.equalsImpl(pduStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 5 out of bounds for length 5
         //
         verifyException("edu.nps.moves.dis7.PduStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      PduStream pduStream1 = new PduStream();
      pduStream0.setStartTime((-1L));
      boolean boolean0 = pduStream0.equalsImpl(pduStream1);
      assertEquals((-1L), pduStream0.getStartTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)27;
      pduStream0.setName(byteArray0);
      PduStream pduStream1 = new PduStream();
      // Undeclared exception!
      try { 
        pduStream0.equalsImpl(pduStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 4
         //
         verifyException("edu.nps.moves.dis7.PduStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      Object object0 = new Object();
      boolean boolean0 = pduStream0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      Object object0 = new Object();
      boolean boolean0 = pduStream0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      boolean boolean0 = pduStream0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      boolean boolean0 = pduStream0.equals(pduStream0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2715);
      pduStream0.unmarshal(byteBuffer0);
      assertEquals(1931, byteBuffer0.remaining());
      assertEquals(784, byteBuffer0.position());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.unmarshal((DataInputStream) null);
      assertEquals(784, pduStream0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      int int0 = pduStream0.getMarshalledSize();
      assertEquals(784, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      pduStream0.setStopTime(2715);
      PduStream pduStream1 = new PduStream();
      boolean boolean0 = pduStream0.equalsImpl(pduStream1);
      assertEquals(2715L, pduStream0.getStopTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      byte[] byteArray0 = new byte[0];
      pduStream0.setName(byteArray0);
      pduStream0.setDescription(byteArray0);
      byte[] byteArray1 = pduStream0.getDescription();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, (byte)22, (byte)22);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      pduStream0.unmarshal(dataInputStream0);
      assertEquals(0, byteArray1.length);
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      long long0 = pduStream0.getStartTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      byte[] byteArray0 = pduStream0.getName();
      assertEquals(256, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      long long0 = pduStream0.getStopTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PduStream pduStream0 = new PduStream();
      byte[] byteArray0 = new byte[0];
      pduStream0.setDescription(byteArray0);
      byte[] byteArray1 = pduStream0.getDescription();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray1, (byte)22, (byte)22);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      pduStream0.unmarshal(dataInputStream0);
      assertEquals(0, byteArray1.length);
      assertSame(byteArray1, byteArray0);
  }
}
