/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:25:07 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.EntityID;
import edu.nps.moves.dis7.ReceiverPdu;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReceiverPdu_ESTest extends ReceiverPdu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      ReceiverPdu receiverPdu1 = new ReceiverPdu();
      assertTrue(receiverPdu1.equals((Object)receiverPdu0));
      
      receiverPdu0.transmitterRadioId = 1;
      boolean boolean0 = receiverPdu0.equalsImpl(receiverPdu1);
      assertFalse(receiverPdu1.equals((Object)receiverPdu0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      ReceiverPdu receiverPdu1 = new ReceiverPdu();
      receiverPdu0.setReceivedPoser((short) (-1));
      boolean boolean0 = receiverPdu1.equalsImpl(receiverPdu0);
      assertEquals((-1.0F), receiverPdu0.getReceivedPoser(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setReceiverState(385);
      ReceiverPdu receiverPdu1 = new ReceiverPdu();
      boolean boolean0 = receiverPdu0.equalsImpl(receiverPdu1);
      assertEquals(385, receiverPdu0.getReceiverState());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      ReceiverPdu receiverPdu1 = new ReceiverPdu();
      assertTrue(receiverPdu1.equals((Object)receiverPdu0));
      
      receiverPdu1.padding1 = 2141898699;
      boolean boolean0 = receiverPdu1.equalsImpl(receiverPdu0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.transmitterRadioId = 1;
      boolean boolean0 = receiverPdu0.equalsImpl(receiverPdu0);
      assertEquals((short)27, receiverPdu0.getPduType());
      assertTrue(boolean0);
      assertEquals(28, receiverPdu0.getLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setPadding1(2571);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(2571);
      receiverPdu0.marshal(byteBuffer0);
      assertEquals(2571, receiverPdu0.getPadding1());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setReceiverState(385);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((short)5592);
      receiverPdu0.marshal(byteBuffer0);
      assertEquals(385, receiverPdu0.getReceiverState());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setTransmitterRadioId(27);
      MockPrintStream mockPrintStream0 = new MockPrintStream("B!5N)'(Cu");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      receiverPdu0.marshal(dataOutputStream0);
      assertEquals(27, receiverPdu0.getTransmitterRadioId());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setReceiverState((-1318));
      File file0 = MockFile.createTempFile("edu.nps.moves.dis7.RadioCommunicationsFamilyPdu", "edu.nps.moves.dis7.RadioCommunicationsFamilyPdu");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      receiverPdu0.marshal(dataOutputStream0);
      assertEquals((-1318), receiverPdu0.getReceiverState());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      assertEquals((short)27, receiverPdu0.getPduType());
      
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(28);
      receiverPdu0.unmarshal(byteBuffer0);
      assertEquals(0, receiverPdu0.getTransmitterRadioId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      byte[] byteArray0 = new byte[18];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        receiverPdu0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.marshal((DataOutputStream) null);
      assertEquals((short)27, receiverPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setTransmitterRadioId(4623);
      int int0 = receiverPdu0.getTransmitterRadioId();
      assertEquals(4623, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.transmitterRadioId = (-563);
      int int0 = receiverPdu0.getTransmitterRadioId();
      assertEquals((-563), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setTransmitterEntityId((EntityID) null);
      EntityID entityID0 = receiverPdu0.getTransmitterEntityId();
      assertEquals((short)27, receiverPdu0.getPduType());
      assertNull(entityID0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      EntityID entityID0 = receiverPdu0.getTransmitterEntityId();
      entityID0.setSiteID(1720);
      receiverPdu0.getTransmitterEntityId();
      assertEquals((short)27, receiverPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      EntityID entityID0 = receiverPdu0.getTransmitterEntityId();
      entityID0.setApplicationID(1);
      receiverPdu0.getTransmitterEntityId();
      assertEquals((short)27, receiverPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setReceiverState((-5300));
      int int0 = receiverPdu0.getReceiverState();
      assertEquals((-5300), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.receivedPoser = 416.7F;
      float float0 = receiverPdu0.getReceivedPoser();
      assertEquals(416.7F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setReceivedPoser((short) (-1));
      float float0 = receiverPdu0.getReceivedPoser();
      assertEquals((-1.0F), float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setPadding1(2);
      int int0 = receiverPdu0.getPadding1();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.padding1 = (-59);
      int int0 = receiverPdu0.getPadding1();
      assertEquals((-59), int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      int int0 = receiverPdu0.getMarshalledSize();
      assertEquals(28, int0);
      assertEquals((short)27, receiverPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      // Undeclared exception!
      try { 
        receiverPdu0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        receiverPdu0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      // Undeclared exception!
      try { 
        receiverPdu0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setTransmitterEntityId((EntityID) null);
      // Undeclared exception!
      try { 
        receiverPdu0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.ReceiverPdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      assertEquals((short)27, receiverPdu0.getPduType());
      
      receiverPdu0.pduType = (short)289;
      ReceiverPdu receiverPdu1 = new ReceiverPdu();
      boolean boolean0 = receiverPdu0.equalsImpl(receiverPdu1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      ReceiverPdu receiverPdu1 = new ReceiverPdu();
      receiverPdu1.setTransmitterRadioId(1720);
      boolean boolean0 = receiverPdu0.equalsImpl(receiverPdu1);
      assertEquals(1720, receiverPdu1.getTransmitterRadioId());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      ReceiverPdu receiverPdu1 = new ReceiverPdu();
      assertTrue(receiverPdu1.equals((Object)receiverPdu0));
      
      receiverPdu1.padding1 = 2141898699;
      boolean boolean0 = receiverPdu0.equalsImpl(receiverPdu1);
      assertFalse(receiverPdu1.equals((Object)receiverPdu0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setReceiverState((-372));
      ReceiverPdu receiverPdu1 = new ReceiverPdu();
      boolean boolean0 = receiverPdu0.equalsImpl(receiverPdu1);
      assertEquals((-372), receiverPdu0.getReceiverState());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      boolean boolean0 = receiverPdu0.equals(bufferedInputStream0);
      assertFalse(boolean0);
      assertEquals((short)27, receiverPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      boolean boolean0 = receiverPdu0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals((short)27, receiverPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      boolean boolean0 = receiverPdu0.equals(receiverPdu0);
      assertEquals((short)27, receiverPdu0.getPduType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      ReceiverPdu receiverPdu1 = new ReceiverPdu();
      boolean boolean0 = receiverPdu1.equals(receiverPdu0);
      assertEquals((short)27, receiverPdu1.getPduType());
      assertTrue(boolean0);
      assertEquals(28, receiverPdu1.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      EntityID entityID0 = receiverPdu0.getTransmitterEntityId();
      boolean boolean0 = receiverPdu0.equalsImpl(entityID0);
      assertEquals((short)27, receiverPdu0.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setTransmitterEntityId((EntityID) null);
      // Undeclared exception!
      try { 
        receiverPdu0.equalsImpl(receiverPdu0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.ReceiverPdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      int int0 = receiverPdu0.getTransmitterRadioId();
      assertEquals((short)27, receiverPdu0.getPduType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setReceivedPoser((-383.51273F));
      ReceiverPdu receiverPdu1 = new ReceiverPdu();
      boolean boolean0 = receiverPdu0.equalsImpl(receiverPdu1);
      assertEquals((-383.51273F), receiverPdu0.getReceivedPoser(), 0.01F);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      int int0 = receiverPdu0.getReceiverState();
      assertEquals(0, int0);
      assertEquals((short)27, receiverPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(pushbackInputStream0);
      receiverPdu0.unmarshal(dataInputStream0);
      assertEquals((short)27, receiverPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      receiverPdu0.setReceiverState(767);
      int int0 = receiverPdu0.getReceiverState();
      assertEquals(767, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      float float0 = receiverPdu0.getReceivedPoser();
      assertEquals(0.0F, float0, 0.01F);
      assertEquals((short)27, receiverPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ReceiverPdu receiverPdu0 = new ReceiverPdu();
      int int0 = receiverPdu0.getPadding1();
      assertEquals((short)27, receiverPdu0.getPduType());
      assertEquals(0, int0);
  }
}
