/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 13:15:50 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.EntityID;
import edu.nps.moves.dis7.RemoveEntityPdu;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class RemoveEntityPdu_ESTest extends RemoveEntityPdu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      RemoveEntityPdu removeEntityPdu1 = new RemoveEntityPdu();
      assertTrue(removeEntityPdu1.equals((Object)removeEntityPdu0));
      
      removeEntityPdu1.timestamp = (long) 40;
      boolean boolean0 = removeEntityPdu1.equals(removeEntityPdu0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1481);
      removeEntityPdu0.setRequestID(3246L);
      removeEntityPdu0.marshal(byteBuffer0);
      assertEquals(3246L, removeEntityPdu0.getRequestID());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      removeEntityPdu0.setRequestID(1L);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      removeEntityPdu0.marshal(dataOutputStream0);
      assertEquals(1L, removeEntityPdu0.getRequestID());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = removeEntityPdu0.getOriginatingEntityID();
      removeEntityPdu0.setOriginatingID(entityID0);
      assertEquals((short)12, removeEntityPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(3744);
      removeEntityPdu0.unmarshal(byteBuffer0);
      assertTrue(byteBuffer0.hasArray());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      removeEntityPdu0.requestID = 1L;
      long long0 = removeEntityPdu0.getRequestID();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = removeEntityPdu0.receivingID;
      entityID0.setSiteID(568);
      EntityID entityID1 = removeEntityPdu0.getReceivingID();
      assertEquals((short)12, removeEntityPdu0.getPduType());
      assertEquals(568, entityID1.getSiteID());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = new EntityID();
      entityID0.entityID = 911;
      removeEntityPdu0.setReceivingID(entityID0);
      EntityID entityID1 = removeEntityPdu0.getReceivingID();
      assertEquals((short)12, removeEntityPdu0.getPduType());
      assertEquals(911, entityID1.getEntityID());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = removeEntityPdu0.originatingEntityID;
      removeEntityPdu0.setReceivingID(entityID0);
      entityID0.setEntityID((-1));
      EntityID entityID1 = removeEntityPdu0.getReceivingID();
      assertEquals((short)12, removeEntityPdu0.getPduType());
      assertEquals((-1), entityID1.getEntityID());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = removeEntityPdu0.originatingEntityID;
      removeEntityPdu0.setReceivingID(entityID0);
      entityID0.setApplicationID(3757);
      EntityID entityID1 = removeEntityPdu0.getReceivingID();
      assertEquals((short)12, removeEntityPdu0.getPduType());
      assertEquals(3757, entityID1.getApplicationID());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = removeEntityPdu0.originatingEntityID;
      removeEntityPdu0.originatingID = entityID0;
      entityID0.setEntityID((-1));
      EntityID entityID1 = removeEntityPdu0.getOriginatingID();
      assertEquals((short)12, removeEntityPdu0.getPduType());
      assertEquals((-1), entityID1.getEntityID());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = removeEntityPdu0.originatingEntityID;
      entityID0.setApplicationID(3757);
      removeEntityPdu0.originatingID = entityID0;
      EntityID entityID1 = removeEntityPdu0.getOriginatingID();
      assertEquals(3757, entityID1.getApplicationID());
      assertEquals((short)12, removeEntityPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = removeEntityPdu0.originatingID;
      entityID0.applicationID = (-611);
      EntityID entityID1 = removeEntityPdu0.getOriginatingID();
      assertEquals((short)12, removeEntityPdu0.getPduType());
      assertEquals((-611), entityID1.getApplicationID());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      int int0 = removeEntityPdu0.getMarshalledSize();
      assertEquals(40, int0);
      assertEquals((short)12, removeEntityPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(7);
      // Undeclared exception!
      try { 
        removeEntityPdu0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      // Undeclared exception!
      try { 
        removeEntityPdu0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      // Undeclared exception!
      try { 
        removeEntityPdu0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      removeEntityPdu0.originatingEntityID = null;
      // Undeclared exception!
      try { 
        removeEntityPdu0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SimulationManagementFamilyPdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      removeEntityPdu0.setProtocolVersion((short)4);
      RemoveEntityPdu removeEntityPdu1 = new RemoveEntityPdu();
      boolean boolean0 = removeEntityPdu0.equalsImpl(removeEntityPdu1);
      assertEquals(40, removeEntityPdu1.getMarshalledSize());
      assertFalse(boolean0);
      assertEquals((short)12, removeEntityPdu1.getPduType());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      boolean boolean0 = removeEntityPdu0.equalsImpl(removeEntityPdu0);
      assertEquals((short)12, removeEntityPdu0.getPduType());
      assertTrue(boolean0);
      assertEquals(40, removeEntityPdu0.getLength());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      removeEntityPdu0.setRequestID((-1865L));
      RemoveEntityPdu removeEntityPdu1 = new RemoveEntityPdu();
      boolean boolean0 = removeEntityPdu0.equalsImpl(removeEntityPdu1);
      assertEquals((-1865L), removeEntityPdu0.getRequestID());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      removeEntityPdu0.setRequestID(1L);
      RemoveEntityPdu removeEntityPdu1 = new RemoveEntityPdu();
      boolean boolean0 = removeEntityPdu0.equals(removeEntityPdu1);
      assertEquals(1L, removeEntityPdu0.getRequestID());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = removeEntityPdu0.receivingID;
      entityID0.setSiteID(568);
      RemoveEntityPdu removeEntityPdu1 = new RemoveEntityPdu();
      boolean boolean0 = removeEntityPdu0.equalsImpl(removeEntityPdu1);
      assertFalse(removeEntityPdu1.equals((Object)removeEntityPdu0));
      assertFalse(boolean0);
      assertEquals((short)12, removeEntityPdu1.getPduType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = removeEntityPdu0.originatingID;
      entityID0.setSiteID((-456));
      RemoveEntityPdu removeEntityPdu1 = new RemoveEntityPdu();
      boolean boolean0 = removeEntityPdu1.equalsImpl(removeEntityPdu0);
      assertFalse(removeEntityPdu0.equals((Object)removeEntityPdu1));
      assertEquals((short)12, removeEntityPdu1.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      boolean boolean0 = removeEntityPdu0.equalsImpl((Object) null);
      assertEquals((short)12, removeEntityPdu0.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      Object object0 = new Object();
      boolean boolean0 = removeEntityPdu0.equals(object0);
      assertFalse(boolean0);
      assertEquals((short)12, removeEntityPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      boolean boolean0 = removeEntityPdu0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals((short)12, removeEntityPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      boolean boolean0 = removeEntityPdu0.equals(removeEntityPdu0);
      assertEquals((short)12, removeEntityPdu0.getPduType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      EntityID entityID0 = removeEntityPdu0.receivingEntityID;
      removeEntityPdu0.setOriginatingID(entityID0);
      assertEquals((short)12, removeEntityPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-388), 0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      removeEntityPdu0.unmarshal(dataInputStream0);
      assertEquals((short)12, removeEntityPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      removeEntityPdu0.getRequestID();
      assertEquals((short)12, removeEntityPdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      removeEntityPdu0.setRequestID((-951L));
      long long0 = removeEntityPdu0.getRequestID();
      assertEquals((-951L), long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RemoveEntityPdu removeEntityPdu0 = new RemoveEntityPdu();
      // Undeclared exception!
      try { 
        removeEntityPdu0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }
}
