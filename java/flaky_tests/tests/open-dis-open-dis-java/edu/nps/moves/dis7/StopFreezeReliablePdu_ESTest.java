/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 11:48:26 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.ClockTime;
import edu.nps.moves.dis7.StopFreezeReliablePdu;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StopFreezeReliablePdu_ESTest extends StopFreezeReliablePdu_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setRequestID(2115L);
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      boolean boolean0 = stopFreezeReliablePdu1.equals(stopFreezeReliablePdu0);
      assertEquals(2115L, stopFreezeReliablePdu0.getRequestID());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setPad1((short)1287);
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu1);
      assertEquals((short)1287, stopFreezeReliablePdu0.getPad1());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu1.setRequiredReliablityService((short)4);
      boolean boolean0 = stopFreezeReliablePdu1.equalsImpl(stopFreezeReliablePdu0);
      assertEquals((short)4, stopFreezeReliablePdu1.getRequiredReliablityService());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setRequiredReliablityService((short)14);
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu0);
      assertEquals((short)14, stopFreezeReliablePdu0.getRequiredReliablityService());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.exerciseID = (short)6432;
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu0);
      assertTrue(boolean0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.pduStatus = (short) (-613);
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu0);
      assertTrue(boolean0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.padding = (short)4;
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu1.setFrozenBehavior((short)1);
      boolean boolean0 = stopFreezeReliablePdu0.equals(stopFreezeReliablePdu1);
      assertEquals((short)1, stopFreezeReliablePdu1.getFrozenBehavior());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setFrozenBehavior((short)54);
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu0);
      assertEquals((short)54, stopFreezeReliablePdu0.getFrozenBehavior());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setReason((short) (-1145));
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu0);
      assertEquals((short) (-1145), stopFreezeReliablePdu0.getReason());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setRequestID(67L);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((short)1287);
      stopFreezeReliablePdu0.marshal(byteBuffer0);
      assertEquals(67L, stopFreezeReliablePdu0.getRequestID());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setPad1((short)1287);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((short)1287);
      stopFreezeReliablePdu0.marshal(byteBuffer0);
      assertEquals((short)1287, stopFreezeReliablePdu0.getPad1());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setFrozenBehavior((short)10);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(255);
      stopFreezeReliablePdu0.marshal(byteBuffer0);
      assertEquals((short)10, stopFreezeReliablePdu0.getFrozenBehavior());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setExerciseID((short)289);
      byte[] byteArray0 = stopFreezeReliablePdu0.marshal();
      assertEquals(40, byteArray0.length);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.pduStatus = (short)289;
      byte[] byteArray0 = stopFreezeReliablePdu0.marshal();
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
      assertEquals(40, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setRequiredReliablityService((short)14);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1287);
      stopFreezeReliablePdu0.marshal(byteBuffer0);
      assertEquals((short)14, stopFreezeReliablePdu0.getRequiredReliablityService());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setPadding((short) (-1088));
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(285);
      stopFreezeReliablePdu0.marshal(byteBuffer0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setRequestID(67L);
      MockPrintStream mockPrintStream0 = new MockPrintStream("G\"7BlhpLGr-QT^b&Er");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      stopFreezeReliablePdu0.marshal(dataOutputStream0);
      assertEquals(67L, stopFreezeReliablePdu0.getRequestID());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setPad1((short)1287);
      MockPrintStream mockPrintStream0 = new MockPrintStream("G\"7BlhpLGr-QT^b&Er");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      stopFreezeReliablePdu0.marshal(dataOutputStream0);
      assertEquals((short)1287, stopFreezeReliablePdu0.getPad1());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.requiredReliablityService = (short) (-530);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("|z");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      stopFreezeReliablePdu0.marshal(dataOutputStream0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setFrozenBehavior((short)10);
      MockPrintStream mockPrintStream0 = new MockPrintStream("edu.nps.moves.dis7.PduSuperclass");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      stopFreezeReliablePdu0.marshal(dataOutputStream0);
      assertEquals((short)10, stopFreezeReliablePdu0.getFrozenBehavior());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setReason((short)2600);
      stopFreezeReliablePdu0.marshal((DataOutputStream) null);
      assertEquals((short)2600, stopFreezeReliablePdu0.getReason());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
      
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((short)1287);
      stopFreezeReliablePdu0.unmarshal(byteBuffer0);
      assertEquals((short)0, stopFreezeReliablePdu0.getFrozenBehavior());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("edu.nps.moves.dis7.StopFreezeReliablePdu", true);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      stopFreezeReliablePdu0.marshal(dataOutputStream0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("edu.nps.moves.dis7.StopFreezeReliablePdu");
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      stopFreezeReliablePdu0.unmarshal(dataInputStream0);
      assertEquals((short)0, stopFreezeReliablePdu0.getFrozenBehavior());
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
      assertEquals((short)0, stopFreezeReliablePdu0.getReason());
      assertEquals((short)0, stopFreezeReliablePdu0.getPad1());
      assertEquals((short)0, stopFreezeReliablePdu0.getRequiredReliablityService());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.requiredReliablityService = (short)1;
      short short0 = stopFreezeReliablePdu0.getRequiredReliablityService();
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setRequiredReliablityService((short) (-283));
      short short0 = stopFreezeReliablePdu0.getRequiredReliablityService();
      assertEquals((short) (-283), short0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setRequestID(67L);
      long long0 = stopFreezeReliablePdu0.getRequestID();
      assertEquals(67L, long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.requestID = (-2730L);
      long long0 = stopFreezeReliablePdu0.getRequestID();
      assertEquals((-2730L), long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setReason((short) (-1298));
      short short0 = stopFreezeReliablePdu0.getReason();
      assertEquals((short) (-1298), short0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setPad1((short)1287);
      short short0 = stopFreezeReliablePdu0.getPad1();
      assertEquals((short)1287, short0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.pad1 = (short) (-1);
      short short0 = stopFreezeReliablePdu0.getPad1();
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setFrozenBehavior((short)4);
      short short0 = stopFreezeReliablePdu0.getFrozenBehavior();
      assertEquals((short)4, short0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.frozenBehavior = (short) (-2819);
      short short0 = stopFreezeReliablePdu0.getFrozenBehavior();
      assertEquals((short) (-2819), short0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      // Undeclared exception!
      try { 
        stopFreezeReliablePdu0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(0);
      // Undeclared exception!
      try { 
        stopFreezeReliablePdu0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      // Undeclared exception!
      try { 
        stopFreezeReliablePdu0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.PduSuperclass", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.receivingEntityID = null;
      // Undeclared exception!
      try { 
        stopFreezeReliablePdu0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SimulationManagementWithReliabilityFamilyPdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.realWorldTime = null;
      // Undeclared exception!
      try { 
        stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.StopFreezeReliablePdu", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setRequestID(67L);
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu1);
      assertEquals(67L, stopFreezeReliablePdu0.getRequestID());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.requiredReliablityService = (short) (-1179);
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu1);
      assertFalse(stopFreezeReliablePdu1.equals((Object)stopFreezeReliablePdu0));
      assertFalse(boolean0);
      assertEquals((short)54, stopFreezeReliablePdu1.getPduType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      assertTrue(stopFreezeReliablePdu1.equals((Object)stopFreezeReliablePdu0));
      
      stopFreezeReliablePdu1.exerciseID = (short) (-475);
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setPad1((short)1357);
      boolean boolean0 = stopFreezeReliablePdu1.equalsImpl(stopFreezeReliablePdu0);
      assertEquals((short)1357, stopFreezeReliablePdu0.getPad1());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setReason((short) (-1298));
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu1);
      assertEquals((short) (-1298), stopFreezeReliablePdu0.getReason());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      assertTrue(stopFreezeReliablePdu1.equals((Object)stopFreezeReliablePdu0));
      
      stopFreezeReliablePdu1.setRealWorldTime((ClockTime) null);
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu1);
      assertEquals((short)54, stopFreezeReliablePdu1.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      Object object0 = new Object();
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(object0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      MockPrintStream mockPrintStream0 = new MockPrintStream("G\"7BlhpLGr-QT^b&Er");
      boolean boolean0 = stopFreezeReliablePdu0.equals(mockPrintStream0);
      assertFalse(boolean0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      boolean boolean0 = stopFreezeReliablePdu0.equals((Object) null);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      boolean boolean0 = stopFreezeReliablePdu0.equals(stopFreezeReliablePdu0);
      assertTrue(boolean0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.getRequestID();
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      short short0 = stopFreezeReliablePdu0.getFrozenBehavior();
      assertEquals((short)0, short0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      short short0 = stopFreezeReliablePdu0.getPad1();
      assertEquals((short)0, short0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("edu.nps.moves.dis7.StopFreezeReliablePdu", true);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("edu.nps.moves.dis7.StopFreezeReliablePdu");
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      stopFreezeReliablePdu0.unmarshal(dataInputStream0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setReason((short)255);
      short short0 = stopFreezeReliablePdu0.getReason();
      assertEquals((short)255, short0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      short short0 = stopFreezeReliablePdu0.getRequiredReliablityService();
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      short short0 = stopFreezeReliablePdu0.getReason();
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      ClockTime clockTime0 = stopFreezeReliablePdu0.getRealWorldTime();
      stopFreezeReliablePdu0.setRealWorldTime(clockTime0);
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      stopFreezeReliablePdu0.setFrozenBehavior((short)54);
      StopFreezeReliablePdu stopFreezeReliablePdu1 = new StopFreezeReliablePdu();
      boolean boolean0 = stopFreezeReliablePdu0.equalsImpl(stopFreezeReliablePdu1);
      assertEquals((short)54, stopFreezeReliablePdu0.getFrozenBehavior());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(0);
      // Undeclared exception!
      try { 
        stopFreezeReliablePdu0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      StopFreezeReliablePdu stopFreezeReliablePdu0 = new StopFreezeReliablePdu();
      int int0 = stopFreezeReliablePdu0.getMarshalledSize();
      assertEquals((short)54, stopFreezeReliablePdu0.getPduType());
      assertEquals(40, int0);
  }
}
