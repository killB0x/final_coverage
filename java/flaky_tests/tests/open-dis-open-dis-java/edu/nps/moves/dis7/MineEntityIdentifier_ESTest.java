/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 15:14:05 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.MineEntityIdentifier;
import edu.nps.moves.dis7.SimulationAddress;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MineEntityIdentifier_ESTest extends MineEntityIdentifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      MineEntityIdentifier mineEntityIdentifier1 = new MineEntityIdentifier();
      mineEntityIdentifier1.setMineEntityNumber((-1));
      boolean boolean0 = mineEntityIdentifier1.equalsImpl(mineEntityIdentifier0);
      assertEquals((-1), mineEntityIdentifier1.getMineEntityNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      mineEntityIdentifier0.setMineEntityNumber((-1));
      int int0 = mineEntityIdentifier0.getMarshalledSize();
      assertEquals((-1), mineEntityIdentifier0.getMineEntityNumber());
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      mineEntityIdentifier0.unmarshal(dataInputStream0);
      assertEquals(0, mineEntityIdentifier0.getMineEntityNumber());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(6);
      mineEntityIdentifier0.marshal(byteBuffer0);
      assertEquals("java.nio.DirectByteBuffer[pos=6 lim=6 cap=6]", byteBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      mineEntityIdentifier0.simulationAddress = null;
      SimulationAddress simulationAddress0 = mineEntityIdentifier0.getSimulationAddress();
      assertNull(simulationAddress0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("#t+rvE+");
      mineEntityIdentifier0.unmarshal(byteBuffer0);
      mineEntityIdentifier0.getSimulationAddress();
      assertEquals(30277, mineEntityIdentifier0.getMineEntityNumber());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      mineEntityIdentifier0.setMineEntityNumber(358);
      int int0 = mineEntityIdentifier0.getMineEntityNumber();
      assertEquals(358, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      mineEntityIdentifier0.setMineEntityNumber((-81));
      int int0 = mineEntityIdentifier0.getMineEntityNumber();
      assertEquals((-81), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      boolean boolean0 = mineEntityIdentifier0.equalsImpl(mineEntityIdentifier0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1);
      // Undeclared exception!
      try { 
        mineEntityIdentifier0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      // Undeclared exception!
      try { 
        mineEntityIdentifier0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SimulationAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      // Undeclared exception!
      try { 
        mineEntityIdentifier0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.SimulationAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      mineEntityIdentifier0.setSimulationAddress((SimulationAddress) null);
      // Undeclared exception!
      try { 
        mineEntityIdentifier0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.MineEntityIdentifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      byte[] byteArray0 = new byte[7];
      byteArray0[4] = (byte) (-3);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      mineEntityIdentifier0.unmarshal(byteBuffer0);
      MineEntityIdentifier mineEntityIdentifier1 = new MineEntityIdentifier();
      boolean boolean0 = mineEntityIdentifier0.equalsImpl(mineEntityIdentifier1);
      assertEquals(64768, mineEntityIdentifier0.getMineEntityNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-18);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      mineEntityIdentifier0.unmarshal(byteBuffer0);
      MineEntityIdentifier mineEntityIdentifier1 = new MineEntityIdentifier();
      boolean boolean0 = mineEntityIdentifier0.equalsImpl(mineEntityIdentifier1);
      assertFalse(boolean0);
      assertEquals(0, mineEntityIdentifier0.getMineEntityNumber());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      boolean boolean0 = mineEntityIdentifier0.equalsImpl((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      Object object0 = new Object();
      boolean boolean0 = mineEntityIdentifier0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      boolean boolean0 = mineEntityIdentifier0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      boolean boolean0 = mineEntityIdentifier0.equals(mineEntityIdentifier0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      MineEntityIdentifier mineEntityIdentifier1 = new MineEntityIdentifier();
      boolean boolean0 = mineEntityIdentifier0.equals(mineEntityIdentifier1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1);
      // Undeclared exception!
      try { 
        mineEntityIdentifier0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      mineEntityIdentifier0.unmarshal((DataInputStream) null);
      assertEquals(6, mineEntityIdentifier0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      int int0 = mineEntityIdentifier0.getMineEntityNumber();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      SimulationAddress simulationAddress0 = mineEntityIdentifier0.getSimulationAddress();
      assertEquals(0, simulationAddress0.getSite());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      mineEntityIdentifier0.marshal((DataOutputStream) null);
      assertEquals(6, mineEntityIdentifier0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MineEntityIdentifier mineEntityIdentifier0 = new MineEntityIdentifier();
      SimulationAddress simulationAddress0 = new SimulationAddress();
      mineEntityIdentifier0.setSimulationAddress(simulationAddress0);
      simulationAddress0.setSite((-1824));
      SimulationAddress simulationAddress1 = mineEntityIdentifier0.getSimulationAddress();
      assertEquals((-1824), simulationAddress1.getSite());
  }
}
