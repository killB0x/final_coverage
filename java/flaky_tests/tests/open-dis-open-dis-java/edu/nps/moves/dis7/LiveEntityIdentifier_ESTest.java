/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 15:00:35 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.LiveEntityIdentifier;
import edu.nps.moves.dis7.LiveSimulationAddress;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.PipedInputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.ReadOnlyBufferException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LiveEntityIdentifier_ESTest extends LiveEntityIdentifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      LiveEntityIdentifier liveEntityIdentifier1 = new LiveEntityIdentifier();
      assertTrue(liveEntityIdentifier1.equals((Object)liveEntityIdentifier0));
      
      liveEntityIdentifier1.entityNumber = 3009;
      boolean boolean0 = liveEntityIdentifier0.equals(liveEntityIdentifier1);
      assertFalse(liveEntityIdentifier1.equals((Object)liveEntityIdentifier0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      liveEntityIdentifier0.entityNumber = 1148;
      int int0 = liveEntityIdentifier0.getMarshalledSize();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      byte[] byteArray0 = new byte[7];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      liveEntityIdentifier0.unmarshal(byteBuffer0);
      assertEquals(0, liveEntityIdentifier0.getEntityNumber());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      PipedInputStream pipedInputStream0 = new PipedInputStream(1368);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      liveEntityIdentifier0.unmarshal(dataInputStream0);
      assertEquals(4, liveEntityIdentifier0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(1148);
      liveEntityIdentifier0.marshal(byteBuffer0);
      assertEquals(4, liveEntityIdentifier0.getMarshalledSize());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      byte[] byteArray0 = new byte[3];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        liveEntityIdentifier0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      liveEntityIdentifier0.setLiveSimulationAddress((LiveSimulationAddress) null);
      LiveSimulationAddress liveSimulationAddress0 = liveEntityIdentifier0.getLiveSimulationAddress();
      assertNull(liveSimulationAddress0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)109;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      liveEntityIdentifier0.unmarshal(dataInputStream0);
      LiveSimulationAddress liveSimulationAddress0 = liveEntityIdentifier0.getLiveSimulationAddress();
      assertEquals((short)109, liveSimulationAddress0.getLiveSiteNumber());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-32);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      liveEntityIdentifier0.unmarshal(dataInputStream0);
      LiveSimulationAddress liveSimulationAddress0 = liveEntityIdentifier0.getLiveSimulationAddress();
      assertEquals((short)0, liveSimulationAddress0.getLiveSiteNumber());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      LiveSimulationAddress liveSimulationAddress0 = liveEntityIdentifier0.getLiveSimulationAddress();
      liveSimulationAddress0.setLiveApplicationNumber((short) (-1886));
      LiveSimulationAddress liveSimulationAddress1 = liveEntityIdentifier0.getLiveSimulationAddress();
      assertEquals((short)0, liveSimulationAddress1.getLiveSiteNumber());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      liveEntityIdentifier0.setEntityNumber(4);
      int int0 = liveEntityIdentifier0.getEntityNumber();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      liveEntityIdentifier0.setEntityNumber((short) (-131));
      int int0 = liveEntityIdentifier0.getEntityNumber();
      assertEquals((-131), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      // Undeclared exception!
      try { 
        liveEntityIdentifier0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.LiveSimulationAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte)84);
      ByteBuffer byteBuffer1 = byteBuffer0.asReadOnlyBuffer();
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      // Undeclared exception!
      try { 
        liveEntityIdentifier0.marshal(byteBuffer1);
        fail("Expecting exception: ReadOnlyBufferException");
      
      } catch(ReadOnlyBufferException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.DirectByteBufferR", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      LiveEntityIdentifier liveEntityIdentifier1 = new LiveEntityIdentifier();
      liveEntityIdentifier1.liveSimulationAddress = null;
      // Undeclared exception!
      try { 
        liveEntityIdentifier1.equalsImpl(liveEntityIdentifier0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.LiveEntityIdentifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      LiveEntityIdentifier liveEntityIdentifier1 = new LiveEntityIdentifier();
      liveEntityIdentifier1.setEntityNumber(2684);
      boolean boolean0 = liveEntityIdentifier1.equalsImpl(liveEntityIdentifier0);
      assertEquals(2684, liveEntityIdentifier1.getEntityNumber());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      boolean boolean0 = liveEntityIdentifier0.equalsImpl(liveEntityIdentifier0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      LiveEntityIdentifier liveEntityIdentifier1 = new LiveEntityIdentifier();
      assertTrue(liveEntityIdentifier1.equals((Object)liveEntityIdentifier0));
      
      liveEntityIdentifier1.setLiveSimulationAddress((LiveSimulationAddress) null);
      boolean boolean0 = liveEntityIdentifier0.equalsImpl(liveEntityIdentifier1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      LiveEntityIdentifier liveEntityIdentifier1 = new LiveEntityIdentifier();
      boolean boolean0 = liveEntityIdentifier1.equals(liveEntityIdentifier0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      Object object0 = new Object();
      boolean boolean0 = liveEntityIdentifier0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      boolean boolean0 = liveEntityIdentifier0.equals(liveEntityIdentifier0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      boolean boolean0 = liveEntityIdentifier0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      byte[] byteArray0 = new byte[0];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        liveEntityIdentifier0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      liveEntityIdentifier0.setLiveSimulationAddress((LiveSimulationAddress) null);
      // Undeclared exception!
      try { 
        liveEntityIdentifier0.getMarshalledSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.LiveEntityIdentifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      liveEntityIdentifier0.marshal((DataOutputStream) null);
      assertEquals(0, liveEntityIdentifier0.getEntityNumber());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      LiveSimulationAddress liveSimulationAddress0 = liveEntityIdentifier0.getLiveSimulationAddress();
      boolean boolean0 = liveEntityIdentifier0.equalsImpl(liveSimulationAddress0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      int int0 = liveEntityIdentifier0.getEntityNumber();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LiveEntityIdentifier liveEntityIdentifier0 = new LiveEntityIdentifier();
      // Undeclared exception!
      try { 
        liveEntityIdentifier0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.LiveSimulationAddress", e);
      }
  }
}
