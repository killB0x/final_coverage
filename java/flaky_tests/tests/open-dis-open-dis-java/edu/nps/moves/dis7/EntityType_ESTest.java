/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 07 12:28:01 GMT 2022
 */

package edu.nps.moves.dis7;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.nps.moves.dis7.EntityType;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.OutputStream;
import java.nio.BufferOverflowException;
import java.nio.BufferUnderflowException;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EntityType_ESTest extends EntityType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setExtra((short)734);
      EntityType entityType1 = new EntityType();
      boolean boolean0 = entityType0.equalsImpl(entityType1);
      assertEquals((short)734, entityType0.getExtra());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setSpecific((short)1641);
      EntityType entityType1 = new EntityType();
      boolean boolean0 = entityType1.equalsImpl(entityType0);
      assertEquals((short)1641, entityType0.getSpecific());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.subcategory = (short)734;
      EntityType entityType1 = new EntityType();
      boolean boolean0 = entityType0.equalsImpl(entityType1);
      assertFalse(boolean0);
      assertFalse(entityType1.equals((Object)entityType0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setCategory((short) (-1585));
      EntityType entityType1 = new EntityType();
      boolean boolean0 = entityType0.equalsImpl(entityType1);
      assertEquals((short) (-1585), entityType0.getCategory());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      EntityType entityType1 = new EntityType();
      entityType1.setCountry(2973);
      boolean boolean0 = entityType1.equals(entityType0);
      assertEquals(2973, entityType1.getCountry());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.domain = (short) (-2178);
      EntityType entityType1 = new EntityType();
      boolean boolean0 = entityType1.equalsImpl(entityType0);
      assertFalse(entityType0.equals((Object)entityType1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      EntityType entityType1 = new EntityType();
      assertTrue(entityType1.equals((Object)entityType0));
      
      entityType0.entityKind = (short)1;
      boolean boolean0 = entityType0.equals(entityType1);
      assertFalse(entityType1.equals((Object)entityType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      EntityType entityType1 = new EntityType();
      assertTrue(entityType1.equals((Object)entityType0));
      
      entityType1.subcategory = (short) (-2050);
      boolean boolean0 = entityType1.equalsImpl(entityType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setSpecific((short) (-473));
      boolean boolean0 = entityType0.equalsImpl(entityType0);
      assertEquals((short) (-473), entityType0.getSpecific());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.category = (short)4199;
      boolean boolean0 = entityType0.equalsImpl(entityType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(180);
      entityType0.category = (short)1073;
      entityType0.marshal(byteBuffer0);
      assertEquals(0, entityType0.getCountry());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(180);
      entityType0.setExtra((short)1073);
      entityType0.marshal(byteBuffer0);
      assertEquals((short)1073, entityType0.getExtra());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(180);
      entityType0.setSubcategory((short) (-2537));
      entityType0.marshal(byteBuffer0);
      assertEquals((short) (-2537), entityType0.getSubcategory());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(180);
      entityType0.setSpecific((short) (-67));
      entityType0.marshal(byteBuffer0);
      assertEquals((short) (-67), entityType0.getSpecific());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(180);
      entityType0.setEntityKind((short)113);
      entityType0.marshal(byteBuffer0);
      assertEquals((short)113, entityType0.getEntityKind());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setCategory((short) (-1585));
      byte[] byteArray0 = new byte[3];
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        entityType0.marshal(byteBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setExtra((short)6);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      entityType0.marshal(dataOutputStream0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006", byteArrayOutputStream0.toString());
      assertEquals((short)6, entityType0.getExtra());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.subcategory = (short)4929;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(848);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      entityType0.marshal(dataOutputStream0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000A\u0000\u0000", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      MockPrintStream mockPrintStream0 = new MockPrintStream("edu.nps.moves.dis7.EntityType");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      entityType0.setDomain((short) (-325));
      entityType0.marshal(dataOutputStream0);
      assertEquals((short) (-325), entityType0.getDomain());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setEntityKind((short)113);
      DataOutputStream dataOutputStream0 = new DataOutputStream((OutputStream) null);
      entityType0.marshal(dataOutputStream0);
      assertEquals((short)113, entityType0.getEntityKind());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setSpecific((short) (-1));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream((byte)0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockPrintStream0);
      entityType0.marshal(dataOutputStream0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\uFFFD\u0000", byteArrayOutputStream0.toString());
      assertEquals((short) (-1), entityType0.getSpecific());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setCategory((short) (-1585));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(8);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      entityType0.marshal(dataOutputStream0);
      assertEquals((short) (-1585), entityType0.getCategory());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setCountry(180);
      int int0 = entityType0.getMarshalledSize();
      assertEquals(180, entityType0.getCountry());
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      entityType0.unmarshal(dataInputStream0);
      assertEquals((short)0, entityType0.getEntityKind());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      entityType0.unmarshal(dataInputStream0);
      assertEquals((short)0, entityType0.getEntityKind());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode(" Zq`>vknL\"FBEIk)");
      entityType0.unmarshal(byteBuffer0);
      short short0 = entityType0.getSubcategory();
      assertEquals(29024, entityType0.getCountry());
      assertEquals((short)118, short0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setSubcategory((short) (-2537));
      short short0 = entityType0.getSubcategory();
      assertEquals((short) (-2537), short0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setSpecific((short)1641);
      short short0 = entityType0.getSpecific();
      assertEquals((short)1641, short0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.specific = (short)732;
      entityType0.specific = (short) (-634);
      short short0 = entityType0.getSpecific();
      assertEquals((short) (-634), short0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode(" Zq`>vknL\"FBEIk)");
      entityType0.unmarshal(byteBuffer0);
      short short0 = entityType0.getExtra();
      assertEquals((short)90, entityType0.getDomain());
      assertEquals((short)110, short0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.entityKind = (short)1;
      short short0 = entityType0.getEntityKind();
      assertEquals((short)1, short0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setEntityKind((short) (-2321));
      short short0 = entityType0.getEntityKind();
      assertEquals((short) (-2321), short0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setDomain((short)130);
      short short0 = entityType0.getDomain();
      assertEquals((short)130, short0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setDomain((short) (-1));
      short short0 = entityType0.getDomain();
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode(" Zq`>vknL\"FBEIk)");
      entityType0.unmarshal(byteBuffer0);
      int int0 = entityType0.getCountry();
      assertEquals((short)107, entityType0.getSpecific());
      assertEquals(29024, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.country = (-122);
      int int0 = entityType0.getCountry();
      assertEquals((-122), int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.category = (short)1641;
      short short0 = entityType0.getCategory();
      assertEquals((short)1641, short0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setCategory((short) (-1));
      short short0 = entityType0.getCategory();
      assertEquals((short) (-1), short0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode(":E|.");
      // Undeclared exception!
      try { 
        entityType0.unmarshal(byteBuffer0);
        fail("Expecting exception: BufferUnderflowException");
      
      } catch(BufferUnderflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      EntityType entityType1 = new EntityType();
      assertTrue(entityType1.equals((Object)entityType0));
      
      entityType0.extra = (short) (-1844);
      boolean boolean0 = entityType0.equalsImpl(entityType1);
      assertFalse(entityType1.equals((Object)entityType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setSpecific((short) (-473));
      EntityType entityType1 = new EntityType();
      boolean boolean0 = entityType1.equalsImpl(entityType0);
      assertEquals((short) (-473), entityType0.getSpecific());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.subcategory = (short)2164;
      EntityType entityType1 = new EntityType();
      boolean boolean0 = entityType1.equalsImpl(entityType0);
      assertFalse(boolean0);
      assertFalse(entityType0.equals((Object)entityType1));
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      EntityType entityType1 = new EntityType();
      assertTrue(entityType1.equals((Object)entityType0));
      
      entityType1.country = (-1298);
      boolean boolean0 = entityType1.equalsImpl(entityType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setDomain((short) (-608));
      EntityType entityType1 = new EntityType();
      boolean boolean0 = entityType0.equalsImpl(entityType1);
      assertEquals((short) (-608), entityType0.getDomain());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      EntityType entityType1 = new EntityType();
      assertTrue(entityType1.equals((Object)entityType0));
      
      entityType1.entityKind = (short)1;
      boolean boolean0 = entityType0.equalsImpl(entityType1);
      assertFalse(entityType1.equals((Object)entityType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      Object object0 = new Object();
      boolean boolean0 = entityType0.equalsImpl(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      EntityType entityType1 = new EntityType();
      boolean boolean0 = entityType0.equals(entityType1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      boolean boolean0 = entityType0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      boolean boolean0 = entityType0.equals(entityType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      Object object0 = new Object();
      boolean boolean0 = entityType0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setCategory((short) (-1));
      EntityType entityType1 = new EntityType();
      boolean boolean0 = entityType1.equalsImpl(entityType0);
      assertEquals((short) (-1), entityType0.getCategory());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      short short0 = entityType0.getDomain();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      int int0 = entityType0.getCountry();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      short short0 = entityType0.getEntityKind();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      // Undeclared exception!
      try { 
        entityType0.marshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EntityType", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      short short0 = entityType0.getCategory();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      // Undeclared exception!
      try { 
        entityType0.unmarshal((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.nps.moves.dis7.EntityType", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      short short0 = entityType0.getSubcategory();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      short short0 = entityType0.getExtra();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      short short0 = entityType0.getSpecific();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      EntityType entityType0 = new EntityType();
      entityType0.setExtra((short) (-699));
      short short0 = entityType0.getExtra();
      assertEquals((short) (-699), short0);
  }
}
