/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 14:48:26 GMT 2022
 */

package edu.psu.cse.siis.coal.field.transformers;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.psu.cse.siis.coal.field.transformers.FieldTransformer;
import edu.psu.cse.siis.coal.field.transformers.NullFieldTransformer;
import edu.psu.cse.siis.coal.field.transformers.TopFieldTransformer;
import edu.psu.cse.siis.coal.field.values.FieldValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NullFieldTransformer_ESTest extends NullFieldTransformer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NullFieldTransformer nullFieldTransformer0 = NullFieldTransformer.v();
      FieldTransformer fieldTransformer0 = nullFieldTransformer0.compose((FieldTransformer) null);
      assertNull(fieldTransformer0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NullFieldTransformer nullFieldTransformer0 = NullFieldTransformer.v();
      FieldValue fieldValue0 = nullFieldTransformer0.apply((FieldValue) null);
      assertFalse(fieldValue0.hasTransformerSequence());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NullFieldTransformer nullFieldTransformer0 = NullFieldTransformer.v();
      TopFieldTransformer topFieldTransformer0 = TopFieldTransformer.v();
      FieldTransformer fieldTransformer0 = nullFieldTransformer0.compose(topFieldTransformer0);
      assertSame(fieldTransformer0, topFieldTransformer0);
  }
}
