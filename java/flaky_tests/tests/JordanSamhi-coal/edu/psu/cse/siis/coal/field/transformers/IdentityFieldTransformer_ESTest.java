/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 14:55:47 GMT 2022
 */

package edu.psu.cse.siis.coal.field.transformers;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.psu.cse.siis.coal.field.transformers.FieldTransformer;
import edu.psu.cse.siis.coal.field.transformers.IdentityFieldTransformer;
import edu.psu.cse.siis.coal.field.values.FieldValue;
import edu.psu.cse.siis.coal.field.values.TopFieldValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class IdentityFieldTransformer_ESTest extends IdentityFieldTransformer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IdentityFieldTransformer identityFieldTransformer0 = IdentityFieldTransformer.v();
      FieldTransformer fieldTransformer0 = identityFieldTransformer0.compose(identityFieldTransformer0);
      assertEquals("identity", fieldTransformer0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IdentityFieldTransformer identityFieldTransformer0 = IdentityFieldTransformer.v();
      FieldValue fieldValue0 = identityFieldTransformer0.apply((FieldValue) null);
      assertNull(fieldValue0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IdentityFieldTransformer identityFieldTransformer0 = IdentityFieldTransformer.v();
      String string0 = identityFieldTransformer0.toString();
      assertEquals("identity", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IdentityFieldTransformer identityFieldTransformer0 = IdentityFieldTransformer.v();
      FieldTransformer fieldTransformer0 = identityFieldTransformer0.compose((FieldTransformer) null);
      assertNull(fieldTransformer0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IdentityFieldTransformer identityFieldTransformer0 = IdentityFieldTransformer.v();
      TopFieldValue topFieldValue0 = TopFieldValue.v();
      FieldValue fieldValue0 = identityFieldTransformer0.apply(topFieldValue0);
      assertSame(topFieldValue0, fieldValue0);
  }
}
