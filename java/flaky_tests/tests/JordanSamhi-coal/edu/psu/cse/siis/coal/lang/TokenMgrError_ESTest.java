/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 14:37:26 GMT 2022
 */

package edu.psu.cse.siis.coal.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.psu.cse.siis.coal.lang.TokenMgrError;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenMgrError_ESTest extends TokenMgrError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("wx%RUk.-+Wv8~LO+J3");
      assertEquals("wx%RUk.-+Wv8~LO+J3", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(false, (-598), 126, 1, ".  Encountered: ", '<', 1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError("", (-2034));
      String string0 = tokenMgrError0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("\"rI#tT#;w");
      assertEquals("\\\"r\\u007fI#tT#;w", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.addEscapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.lang.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.LexicalError(false, 1111, 1111, 1111, (String) null, 'H');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.lang.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TokenMgrError tokenMgrError0 = null;
      try {
        tokenMgrError0 = new TokenMgrError(true, 13, 13, 13, (String) null, 'Z', 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.lang.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(true, 92, 92, 92, "$Y1z88Se_zp", ',');
      assertEquals("Lexical error at line 92, column 92.  Encountered: <EOF> after : \"$Y1z88Se_zp\"", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(false, (-4486), (-4486), (-4486), "@=(R`?'V]rD}ieO;", '<');
      assertEquals("Lexical error at line -4486, column -4486.  Encountered: \"<\" (60), after : \"\\u007f@=(R`?\\'V\\u007f]rD}ieO;\"", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(false, 263, 0, 0, "\n", 'i', 0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(false, 0, 1901, 0, "\"", '5', 0);
      String string0 = tokenMgrError0.getMessage();
      assertEquals("Lexical error at line 1901, column 0.  Encountered: \"5\" (53), after : \"\\\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError();
      String string0 = tokenMgrError0.getMessage();
      assertNull(string0);
  }
}
