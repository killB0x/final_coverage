/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 14:38:33 GMT 2022
 */

package edu.psu.cse.siis.coal.arguments;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.psu.cse.siis.coal.arguments.Argument;
import edu.psu.cse.siis.coal.arguments.Field;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Argument_ESTest extends Argument_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Argument argument0 = new Argument();
      Field field0 = new Field("(", (String) null);
      argument0.setField(field0);
      argument0.getType();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.setType("");
      argument0.getType();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.setReferencedFieldName("D6");
      argument0.getReferencedFieldName();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.setReferencedFieldName("");
      argument0.getReferencedFieldName();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.addProperty("", "");
      argument0.getProperty("");
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.addProperty("", ") ");
      argument0.getProperties();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Argument argument0 = new Argument();
      Field field0 = new Field((String) null, (String) null);
      argument0.setField(field0);
      argument0.getNominalFieldType();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Argument argument0 = new Argument();
      Field field0 = new Field("3Yz8;", "3Yz8;");
      argument0.setField(field0);
      argument0.getNominalFieldType();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Argument argument0 = new Argument();
      Field field0 = new Field("D6", "");
      argument0.setField(field0);
      argument0.getNominalFieldType();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Argument argument0 = new Argument();
      String[] stringArray0 = new String[1];
      argument0.setInlineValues(stringArray0);
      argument0.getInlineValues();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Argument argument0 = new Argument();
      Field field0 = new Field((String) null, (String) null);
      argument0.setField(field0);
      argument0.getFieldName();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Argument argument0 = new Argument();
      Field field0 = new Field("~LQ1ieR>", (String) null);
      argument0.setField(field0);
      argument0.getFieldName();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Argument argument0 = new Argument();
      Field field0 = new Field("", "%~zxmE7!WxdhQ,");
      argument0.setField(field0);
      argument0.getFieldName();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Argument argument0 = new Argument();
      assertEquals((short) (-1), argument0.getCount());
      
      argument0.setCount((short)0);
      short short0 = argument0.getCount();
      assertEquals((short)0, short0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.setCount((short)2601);
      short short0 = argument0.getCount();
      assertEquals((short)2601, short0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Argument argument0 = new Argument();
      int[] intArray0 = new int[6];
      argument0.setArgnum(intArray0);
      argument0.getArgnum();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Argument argument0 = new Argument();
      int[] intArray0 = new int[0];
      argument0.setArgnum(intArray0);
      argument0.getArgnum();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Argument argument0 = new Argument();
      String[] stringArray0 = new String[5];
      argument0.setActions(stringArray0);
      argument0.getActions();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Argument argument0 = new Argument();
      String[] stringArray0 = new String[0];
      argument0.setActions(stringArray0);
      argument0.getActions();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Argument argument0 = null;
      try {
        argument0 = new Argument((Argument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.arguments.Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.setType("H]!kb$");
      argument0.getType();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Argument argument0 = new Argument();
      // Undeclared exception!
      try { 
        argument0.getType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.arguments.Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.getInlineValues();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.getArgnum();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.getActions();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Argument argument0 = new Argument();
      String[] stringArray0 = new String[3];
      argument0.setInlineValues(stringArray0);
      Field field0 = new Field(")", ")");
      argument0.setField(field0);
      String string0 = argument0.toString();
      assertEquals(") )  (null,null,null)", string0);
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Argument argument0 = new Argument();
      String[] stringArray0 = new String[3];
      Field field0 = new Field(")", ")");
      argument0.setField(field0);
      argument0.setActions(stringArray0);
      String string0 = argument0.toString();
      assertEquals((short) (-1), argument0.getCount());
      assertEquals(") ) (null,null,null) ", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Argument argument0 = new Argument();
      int[] intArray0 = new int[5];
      argument0.setArgnum(intArray0);
      // Undeclared exception!
      try { 
        argument0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.arguments.Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.getProperty("(");
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.addProperty("", "z");
      String string0 = argument0.getProperty("");
      assertEquals("z", string0);
      assertNotNull(string0);
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.addProperty("", "z");
      argument0.addProperty("-\"", "-\"");
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.addProperty("(", "(");
      Argument argument1 = new Argument(argument0);
      assertEquals((short) (-1), argument1.getCount());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Argument argument0 = new Argument();
      Argument argument1 = new Argument(argument0);
      assertEquals((short) (-1), argument1.getCount());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.getReferencedFieldName();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Argument argument0 = new Argument();
      // Undeclared exception!
      try { 
        argument0.getFieldName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.arguments.Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Argument argument0 = new Argument();
      // Undeclared exception!
      try { 
        argument0.getNominalFieldType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.arguments.Argument", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Argument argument0 = new Argument();
      String[] stringArray0 = new String[0];
      argument0.setInlineValues(stringArray0);
      argument0.getInlineValues();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Argument argument0 = new Argument();
      argument0.getProperties();
      assertEquals((short) (-1), argument0.getCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Argument argument0 = new Argument();
      short short0 = argument0.getCount();
      assertEquals((short) (-1), short0);
  }
}
