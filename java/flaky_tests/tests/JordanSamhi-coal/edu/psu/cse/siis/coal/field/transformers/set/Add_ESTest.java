/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 14:41:55 GMT 2022
 */

package edu.psu.cse.siis.coal.field.transformers.set;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import edu.psu.cse.siis.coal.field.SequenceElement;
import edu.psu.cse.siis.coal.field.TransformerSequence;
import edu.psu.cse.siis.coal.field.transformers.FieldTransformer;
import edu.psu.cse.siis.coal.field.transformers.set.Add;
import edu.psu.cse.siis.coal.field.values.IntermediateFieldValue;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Add_ESTest extends Add_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Add add0 = new Add((Object) null);
      Add add1 = new Add(add0);
      FieldTransformer fieldTransformer0 = add1.compose(add0);
      assertFalse(fieldTransformer0.equals((Object)add1));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      Add add0 = new Add(object0);
      Add add1 = new Add(add0);
      Set<Object> set0 = add1.add;
      add0.add = set0;
      // Undeclared exception!
      try { 
        add1.compose(add0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object object0 = new Object();
      Add add0 = new Add(object0);
      // Undeclared exception!
      try { 
        add0.compose((FieldTransformer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("edu.psu.cse.siis.coal.field.transformers.set.SetFieldTransformer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = new Object();
      Add add0 = new Add(object0);
      LinkedList<SequenceElement> linkedList0 = new LinkedList<SequenceElement>();
      TransformerSequence transformerSequence0 = new TransformerSequence(linkedList0);
      add0.transformerSequence = transformerSequence0;
      FieldTransformer fieldTransformer0 = add0.makeNonComposedFieldTransformer();
      // Undeclared exception!
      try { 
        add0.compose(fieldTransformer0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Add add0 = new Add((Object) null);
      FieldTransformer fieldTransformer0 = add0.makeNonComposedFieldTransformer();
      // Undeclared exception!
      try { 
        fieldTransformer0.compose(add0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object object0 = new Object();
      Add add0 = new Add(object0);
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      linkedHashSet0.add(add0);
      add0.remove = (Set<Object>) linkedHashSet0;
      Add add1 = null;
      try {
        add1 = new Add(add0.remove);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IntermediateFieldValue intermediateFieldValue0 = new IntermediateFieldValue();
      Add add0 = null;
      try {
        add0 = new Add(intermediateFieldValue0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Not implemented
         //
         verifyException("edu.psu.cse.siis.coal.field.values.IntermediateFieldValue", e);
      }
  }
}
