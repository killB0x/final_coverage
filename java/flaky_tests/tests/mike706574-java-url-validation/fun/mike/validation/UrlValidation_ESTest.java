/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 28 03:59:10 GMT 2022
 */

package fun.mike.validation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fun.mike.validation.UrlValidation;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UrlValidation_ESTest extends UrlValidation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.invalid(">!W\">'.+F>.k01$Br]w", ">!W\">'.+F>.k01$Br]w");
      urlValidation0.hashCode();
      assertFalse(urlValidation0.isValid());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.invalid(">!W\">'.+F>.k01$Br]w", ">!W\">'.+F>.k01$Br]w");
      boolean boolean0 = urlValidation0.isValid();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.invalid((String) null, (String) null);
      // Undeclared exception!
      try { 
        urlValidation0.orThrow((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.invalid((String) null, (String) null);
      // Undeclared exception!
      try { 
        urlValidation0.getProblem();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.invalid("%s: %s", "");
      urlValidation0.getProblem();
      assertFalse(urlValidation0.isValid());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid((String) null);
      Optional<String> optional0 = urlValidation0.getProblem();
      assertNotNull(optional0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid((String) null);
      UrlValidation urlValidation1 = urlValidation0.orThrow("dOQLm");
      assertTrue(urlValidation1.isValid());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.invalid("[#VIKOJb#26pu", "[#VIKOJb#26pu");
      // Undeclared exception!
      try { 
        urlValidation0.orThrow("[#VIKOJb#26pu");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [#VIKOJb#26pu: [#VIKOJb#26pu
         //
         verifyException("fun.mike.validation.UrlValidation", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.invalid("", (String) null);
      urlValidation0.hashCode();
      assertFalse(urlValidation0.isValid());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid("");
      urlValidation0.hashCode();
      assertTrue(urlValidation0.isValid());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid((String) null);
      urlValidation0.hashCode();
      assertTrue(urlValidation0.isValid());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.invalid("", (String) null);
      UrlValidation urlValidation1 = UrlValidation.invalid("", ">!W\">'.+F>.k01$Br]w");
      boolean boolean0 = urlValidation0.equals(urlValidation1);
      assertTrue(urlValidation1.equals((Object)urlValidation0));
      assertFalse(urlValidation1.isValid());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid((String) null);
      UrlValidation urlValidation1 = UrlValidation.valid((String) null);
      boolean boolean0 = urlValidation1.equals(urlValidation0);
      assertTrue(boolean0);
      assertTrue(urlValidation1.isValid());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.invalid(" 73i9[DM/867q=$", " 73i9[DM/867q=$");
      UrlValidation urlValidation1 = UrlValidation.invalid(" 73i9[DM/867q=$", " 73i9[DM/867q=$");
      boolean boolean0 = urlValidation0.equals(urlValidation1);
      assertTrue(boolean0);
      assertFalse(urlValidation1.isValid());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid((String) null);
      UrlValidation urlValidation1 = UrlValidation.valid("");
      boolean boolean0 = urlValidation0.equals(urlValidation1);
      assertFalse(boolean0);
      assertFalse(urlValidation1.equals((Object)urlValidation0));
      assertTrue(urlValidation1.isValid());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid((String) null);
      UrlValidation urlValidation1 = UrlValidation.invalid("", "");
      boolean boolean0 = urlValidation0.equals(urlValidation1);
      assertTrue(urlValidation0.isValid());
      assertFalse(boolean0);
      assertFalse(urlValidation1.isValid());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid("");
      boolean boolean0 = urlValidation0.equals("");
      assertTrue(urlValidation0.isValid());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid((String) null);
      boolean boolean0 = urlValidation0.equals((Object) null);
      assertTrue(urlValidation0.isValid());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid("UrlValidation{value=' 73i9[DM/867q=$', isValid=false, problem=' 73i9[DM/867q=$'}");
      boolean boolean0 = urlValidation0.equals(urlValidation0);
      assertTrue(urlValidation0.isValid());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid("");
      String string0 = urlValidation0.toString();
      assertEquals("UrlValidation{value='', isValid=true, problem='null'}", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.valid("");
      boolean boolean0 = urlValidation0.isValid();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UrlValidation urlValidation0 = UrlValidation.invalid(" 73i9[DM/867q=$", " 73i9[DM/867q=$");
      UrlValidation urlValidation1 = UrlValidation.invalid("0'HR=h-c(", " 73i9[DM/867q=$");
      boolean boolean0 = urlValidation1.equals(urlValidation0);
      assertFalse(urlValidation1.isValid());
      assertFalse(boolean0);
  }
}
