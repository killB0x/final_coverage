/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 28 03:57:07 GMT 2022
 */

package fun.mike.validation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fun.mike.validation.InetAddressValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class InetAddressValidator_ESTest extends InetAddressValidator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = InetAddressValidator.getInstance();
      // Undeclared exception!
      try { 
        inetAddressValidator0.isValidInet6Address((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fun.mike.validation.InetAddressValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = InetAddressValidator.getInstance();
      // Undeclared exception!
      try { 
        inetAddressValidator0.isValid((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("fun.mike.validation.InetAddressValidator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = new InetAddressValidator();
      boolean boolean0 = inetAddressValidator0.isValidInet6Address("f0f6");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = InetAddressValidator.getInstance();
      boolean boolean0 = inetAddressValidator0.isValidInet6Address("RegexValidator{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = InetAddressValidator.getInstance();
      boolean boolean0 = inetAddressValidator0.isValidInet6Address("~/::&@K\u0004h>+");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = InetAddressValidator.getInstance();
      boolean boolean0 = inetAddressValidator0.isValidInet6Address("::");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = InetAddressValidator.getInstance();
      boolean boolean0 = inetAddressValidator0.isValidInet6Address(":i?yc}I1%+gR");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = InetAddressValidator.getInstance();
      boolean boolean0 = inetAddressValidator0.isValidInet6Address("y|Wj:::");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = new InetAddressValidator();
      boolean boolean0 = inetAddressValidator0.isValidInet6Address("::;");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = new InetAddressValidator();
      boolean boolean0 = inetAddressValidator0.isValidInet4Address(";");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = InetAddressValidator.getInstance();
      boolean boolean0 = inetAddressValidator0.isValid("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = new InetAddressValidator();
      boolean boolean0 = inetAddressValidator0.isValidInet6Address("-FB");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = InetAddressValidator.getInstance();
      boolean boolean0 = inetAddressValidator0.isValidInet6Address("fun.mike.validation.InetAddressValidator");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = InetAddressValidator.getInstance();
      boolean boolean0 = inetAddressValidator0.isValidInet6Address("Pw8M& fJ\"Ao$:");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InetAddressValidator inetAddressValidator0 = new InetAddressValidator();
      boolean boolean0 = inetAddressValidator0.isValid("f0f6::");
      assertTrue(boolean0);
  }
}
