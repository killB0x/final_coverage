/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 16:42:28 GMT 2022
 */

package io.joshworks.stream.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.joshworks.stream.client.ConnectionMonitor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ConnectionMonitor_ESTest extends ConnectionMonitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConnectionMonitor connectionMonitor0 = new ConnectionMonitor();
      MockThread mockThread0 = new MockThread();
      connectionMonitor0.add("9U#5l{", mockThread0);
      assertFalse(mockThread0.isInterrupted());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConnectionMonitor connectionMonitor0 = new ConnectionMonitor();
      // Undeclared exception!
      try { 
        connectionMonitor0.remove((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConnectionMonitor connectionMonitor0 = new ConnectionMonitor();
      connectionMonitor0.closeAll();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConnectionMonitor connectionMonitor0 = new ConnectionMonitor();
      connectionMonitor0.remove("bp)`^PV[a(");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ConnectionMonitor connectionMonitor0 = new ConnectionMonitor();
      // Undeclared exception!
      try { 
        connectionMonitor0.add("", (Runnable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }
}
