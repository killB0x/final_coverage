/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:26:50 GMT 2022
 */

package com.fredhopper.environment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fredhopper.environment.KeyValueEnvironment;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.Map;
import java.util.function.Supplier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KeyValueEnvironment_ESTest extends KeyValueEnvironment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, ".%d{yyyy-MM-dd}");
      hashMap0.put(".%d{yyyy-MM-dd}", "eCJ(J?oIjWx|.B");
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      String string0 = keyValueEnvironment0.getValue(".%d{yyyy-MM-dd}", supplier0);
      assertNotNull(string0);
      assertEquals("eCJ(J?oIjWx|.B", string0);
      assertEquals(".%d{yyyy-MM-dd}", keyValueEnvironment0.getApplicationName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("Cannot load environment from ", "");
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "r6");
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      String string0 = keyValueEnvironment0.getValue("Cannot load environment from ", supplier0);
      assertEquals("r6", keyValueEnvironment0.getApplicationName());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      hashMap0.put(".server.host", "E^7K\"M G");
      String string0 = keyValueEnvironment0.getServerHost();
      assertEquals("E^7K\"M G", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("environment.name", "");
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0);
      String string0 = keyValueEnvironment0.getEnvironmentName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0);
      String string0 = keyValueEnvironment0.getApplicationName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      String string0 = keyValueEnvironment0.getApplicationName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0);
      // Undeclared exception!
      try { 
        keyValueEnvironment0.getValue(" h#$)Q?VG.|kl_", (Supplier<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fredhopper.environment.KeyValueEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KeyValueEnvironment keyValueEnvironment0 = null;
      try {
        keyValueEnvironment0 = new KeyValueEnvironment((Map<String, String>) null, ">V!h!=y@_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KeyValueEnvironment keyValueEnvironment0 = null;
      try {
        keyValueEnvironment0 = new KeyValueEnvironment((Map<String, String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fredhopper.environment.KeyValueEnvironment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, (String) null);
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      String string0 = keyValueEnvironment0.getValue("", supplier0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, (String) null);
      String string0 = keyValueEnvironment0.getEnvironmentName();
      assertEquals("development", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "r6");
      keyValueEnvironment0.hashCode();
      assertEquals("r6", keyValueEnvironment0.getApplicationName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put(".logs.root", ".logs.root");
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      Path path0 = keyValueEnvironment0.getApplicationLogsRoot();
      assertEquals("", keyValueEnvironment0.getApplicationName());
      assertNotNull(path0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put(".root", "gX&d");
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      assertEquals("", keyValueEnvironment0.getApplicationName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0);
      String string0 = keyValueEnvironment0.getAccessLogFileName();
      assertEquals("null-access.log", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      String string0 = keyValueEnvironment0.getContextPath();
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "r6");
      String string0 = keyValueEnvironment0.getRotatingAccessLogFileName();
      assertEquals("r6-access.log.yyyy-MM-dd", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      String string0 = keyValueEnvironment0.getRotatingLogFilePattern();
      assertEquals(".log.%d{yyyy-MM-dd}", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      keyValueEnvironment0.getApplicationLogsRoot();
      assertEquals("", keyValueEnvironment0.getApplicationName());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      keyValueEnvironment0.getServerHost();
      assertEquals("", keyValueEnvironment0.getApplicationName());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      // Undeclared exception!
      try { 
        keyValueEnvironment0.getServerPort();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "r6");
      String string0 = keyValueEnvironment0.getApplicationName();
      assertEquals("r6", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0);
      Map<String, String> map0 = keyValueEnvironment0.asMap();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      String string0 = keyValueEnvironment0.getLogFileName();
      assertEquals(".log", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      keyValueEnvironment0.toString();
      assertEquals("", keyValueEnvironment0.getApplicationName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      KeyValueEnvironment keyValueEnvironment0 = new KeyValueEnvironment(hashMap0, "");
      keyValueEnvironment0.getApplicationRoot();
      assertEquals("", keyValueEnvironment0.getApplicationName());
  }
}
