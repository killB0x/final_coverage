/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 14 16:31:38 GMT 2022
 */

package com.fredhopper.lifecycle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.fredhopper.lifecycle.Container;
import com.fredhopper.lifecycle.LifeCycle;
import com.fredhopper.lifecycle.State;
import com.fredhopper.lifecycle.StateListener;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Stateful_ESTest extends Stateful_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LifeCycle lifeCycle0 = mock(LifeCycle.class, CALLS_REAL_METHODS);
      Container container0 = new Container(lifeCycle0, false, false);
      Collection<StateListener> collection0 = container0.getStateListeners();
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LifeCycle lifeCycle0 = mock(LifeCycle.class, CALLS_REAL_METHODS);
      doReturn((State) null).when(lifeCycle0).getState();
      Container container0 = new Container(lifeCycle0, false, false);
      container0.get();
  }
}
