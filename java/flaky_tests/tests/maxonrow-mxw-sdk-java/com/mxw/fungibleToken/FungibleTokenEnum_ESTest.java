/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 10:04:19 GMT 2022
 */

package com.mxw.fungibleToken;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.fungibleToken.FungibleTokenEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FungibleTokenEnum_ESTest extends FungibleTokenEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FungibleTokenEnum.FungibleTokenStateFlags fungibleTokenEnum_FungibleTokenStateFlags0 = FungibleTokenEnum.FungibleTokenStateFlags.BURN;
      int int0 = fungibleTokenEnum_FungibleTokenStateFlags0.getValue();
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FungibleTokenEnum.FungibleTokenStateFlags fungibleTokenEnum_FungibleTokenStateFlags0 = FungibleTokenEnum.FungibleTokenStateFlags.MINT;
      String string0 = fungibleTokenEnum_FungibleTokenStateFlags0.toString();
      assertEquals("2", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FungibleTokenEnum.FungibleTokenActions fungibleTokenEnum_FungibleTokenActions0 = FungibleTokenEnum.FungibleTokenActions.TRANSFER;
      String string0 = fungibleTokenEnum_FungibleTokenActions0.toString();
      assertEquals("transfer", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FungibleTokenEnum.FungibleTokenStatusActions fungibleTokenEnum_FungibleTokenStatusActions0 = FungibleTokenEnum.FungibleTokenStatusActions.FREEZE;
      String string0 = fungibleTokenEnum_FungibleTokenStatusActions0.toString();
      assertEquals("FREEZE", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FungibleTokenEnum fungibleTokenEnum0 = new FungibleTokenEnum();
  }
}
