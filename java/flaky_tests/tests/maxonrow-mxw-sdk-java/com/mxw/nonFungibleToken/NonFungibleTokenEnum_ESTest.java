/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 10:01:01 GMT 2022
 */

package com.mxw.nonFungibleToken;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.nonFungibleToken.NonFungibleTokenEnum;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NonFungibleTokenEnum_ESTest extends NonFungibleTokenEnum_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NonFungibleTokenEnum nonFungibleTokenEnum0 = new NonFungibleTokenEnum();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NonFungibleTokenEnum.NFTokenActions nonFungibleTokenEnum_NFTokenActions0 = NonFungibleTokenEnum.NFTokenActions.valueOf("ACCEPT_OWNERSHIP");
      String string0 = nonFungibleTokenEnum_NFTokenActions0.toString();
      assertEquals("acceptOwnership", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NonFungibleTokenEnum.NFTokenStateFlags nonFungibleTokenEnum_NFTokenStateFlags0 = NonFungibleTokenEnum.NFTokenStateFlags.FROZEN;
      String string0 = nonFungibleTokenEnum_NFTokenStateFlags0.toString();
      assertEquals("8", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NonFungibleTokenEnum.NFTokenStateFlags nonFungibleTokenEnum_NFTokenStateFlags0 = NonFungibleTokenEnum.NFTokenStateFlags.transferable;
      int int0 = nonFungibleTokenEnum_NFTokenStateFlags0.getValue();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NonFungibleTokenEnum.NonFungibleTokenStatusActions nonFungibleTokenEnum_NonFungibleTokenStatusActions0 = NonFungibleTokenEnum.NonFungibleTokenStatusActions.REJECT_TRANSFER_TOKEN_OWNERSHIP;
      String string0 = nonFungibleTokenEnum_NonFungibleTokenStatusActions0.toString();
      assertEquals("REJECT_TRANSFER_TOKEN_OWNERSHIP", string0);
  }
}
