/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 09:52:19 GMT 2022
 */

package com.mxw.protocol.response.nonFungibleToken;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.response.nonFungibleToken.NFTokenState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NFTokenState_ESTest extends NFTokenState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setTransferLimit("oOg?N'N");
      String string0 = nFTokenState0.getTransferLimit();
      assertEquals("oOg?N'N", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setTransferLimit("");
      String string0 = nFTokenState0.getTransferLimit();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setTotalSupply("d^qme8Y~]xoF!ie$");
      String string0 = nFTokenState0.getTotalSupply();
      assertEquals("d^qme8Y~]xoF!ie$", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setTotalSupply("");
      String string0 = nFTokenState0.getTotalSupply();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setSymbol("#qBNh31<mf\"AUr'nfz");
      String string0 = nFTokenState0.getSymbol();
      assertEquals("#qBNh31<mf\"AUr'nfz", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setProperties("ZMge},,B6");
      String string0 = nFTokenState0.getProperties();
      assertEquals("ZMge},,B6", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setProperties("");
      String string0 = nFTokenState0.getProperties();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setOwner("com.mxw.protocol.response.nonFungibleToken.NFTokenState");
      String string0 = nFTokenState0.getOwner();
      assertEquals("com.mxw.protocol.response.nonFungibleToken.NFTokenState", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setOwner("");
      String string0 = nFTokenState0.getOwner();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setNewOwner("l)@M>y&A(yy");
      String string0 = nFTokenState0.getNewOwner();
      assertEquals("l)@M>y&A(yy", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setNewOwner("");
      String string0 = nFTokenState0.getNewOwner();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setName("com.mxw.protocol.response.nonFungibleToken.NFTokenState");
      String string0 = nFTokenState0.getName();
      assertEquals("com.mxw.protocol.response.nonFungibleToken.NFTokenState", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setName("");
      String string0 = nFTokenState0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setMintLimit("(^e[:%xC");
      String string0 = nFTokenState0.getMintLimit();
      assertEquals("(^e[:%xC", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setMetadata("D%' >Uyi");
      String string0 = nFTokenState0.getMetadata();
      assertEquals("D%' >Uyi", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setMetadata("");
      String string0 = nFTokenState0.getMetadata();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setFlags(2441);
      int int0 = nFTokenState0.getFlags();
      assertEquals(2441, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setFlags((-493));
      int int0 = nFTokenState0.getFlags();
      assertEquals((-493), int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      String string0 = nFTokenState0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      int int0 = nFTokenState0.getFlags();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      String string0 = nFTokenState0.getTransferLimit();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      String string0 = nFTokenState0.getMetadata();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      String string0 = nFTokenState0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      String string0 = nFTokenState0.getNewOwner();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      String string0 = nFTokenState0.getProperties();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      String string0 = nFTokenState0.getOwner();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setMintLimit("");
      String string0 = nFTokenState0.getMintLimit();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      String string0 = nFTokenState0.getMintLimit();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      String string0 = nFTokenState0.getTotalSupply();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      NFTokenState nFTokenState0 = new NFTokenState();
      nFTokenState0.setSymbol("");
      String string0 = nFTokenState0.getSymbol();
      assertEquals("", string0);
  }
}
