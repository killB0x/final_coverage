/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 10:17:28 GMT 2022
 */

package com.mxw.protocol.response;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.response.TypeAttributes;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TypeAttributes_ESTest extends TypeAttributes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TypeAttributes typeAttributes0 = new TypeAttributes();
      typeAttributes0.setType("z}X)$r");
      String string0 = typeAttributes0.getType();
      assertEquals("z}X)$r", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TypeAttributes typeAttributes0 = new TypeAttributes();
      typeAttributes0.setType("");
      String string0 = typeAttributes0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TypeAttributes typeAttributes0 = new TypeAttributes();
      LinkedList<TypeAttributes.Attribute> linkedList0 = new LinkedList<TypeAttributes.Attribute>();
      typeAttributes0.setAttributes(linkedList0);
      List<TypeAttributes.Attribute> list0 = typeAttributes0.getAttributes();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TypeAttributes.Attribute typeAttributes_Attribute0 = new TypeAttributes.Attribute();
      TypeAttributes typeAttributes0 = new TypeAttributes();
      LinkedList<TypeAttributes.Attribute> linkedList0 = new LinkedList<TypeAttributes.Attribute>();
      linkedList0.add(typeAttributes_Attribute0);
      typeAttributes0.setAttributes(linkedList0);
      List<TypeAttributes.Attribute> list0 = typeAttributes0.getAttributes();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TypeAttributes.Attribute typeAttributes_Attribute0 = new TypeAttributes.Attribute();
      String string0 = typeAttributes_Attribute0.getKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TypeAttributes.Attribute typeAttributes_Attribute0 = new TypeAttributes.Attribute();
      typeAttributes_Attribute0.setKey("~_@");
      assertEquals("~_@", typeAttributes_Attribute0.getKey());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TypeAttributes.Attribute typeAttributes_Attribute0 = new TypeAttributes.Attribute();
      Object object0 = new Object();
      typeAttributes_Attribute0.setValue(object0);
      assertNull(typeAttributes_Attribute0.getKey());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TypeAttributes.Attribute typeAttributes_Attribute0 = new TypeAttributes.Attribute();
      Object object0 = typeAttributes_Attribute0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TypeAttributes typeAttributes0 = new TypeAttributes();
      String string0 = typeAttributes0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TypeAttributes typeAttributes0 = new TypeAttributes();
      List<TypeAttributes.Attribute> list0 = typeAttributes0.getAttributes();
      assertNull(list0);
  }
}
