/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 09:52:04 GMT 2022
 */

package com.mxw.protocol.response;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.response.TransactionFeeSetting;
import com.mxw.utils.Numeric;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TransactionFeeSetting_ESTest extends TransactionFeeSetting_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TransactionFeeSetting transactionFeeSetting0 = new TransactionFeeSetting();
      Numeric numeric0 = transactionFeeSetting0.getMin();
      assertNull(numeric0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TransactionFeeSetting transactionFeeSetting0 = new TransactionFeeSetting();
      transactionFeeSetting0.setMin((Numeric) null);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TransactionFeeSetting transactionFeeSetting0 = new TransactionFeeSetting();
      Numeric numeric0 = transactionFeeSetting0.getMax();
      assertNull(numeric0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TransactionFeeSetting transactionFeeSetting0 = new TransactionFeeSetting();
      transactionFeeSetting0.setPercentage((Numeric) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TransactionFeeSetting transactionFeeSetting0 = new TransactionFeeSetting();
      Numeric numeric0 = transactionFeeSetting0.getPercentage();
      assertNull(numeric0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TransactionFeeSetting transactionFeeSetting0 = new TransactionFeeSetting();
      transactionFeeSetting0.setMax((Numeric) null);
  }
}
