/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 09:58:05 GMT 2022
 */

package com.mxw.protocol.response.kyc;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.response.kyc.KycAddress;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class KycAddress_ESTest extends KycAddress_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress((String) null, (String) null, (String) null, (-1046), (-1046), (String) null);
      kycAddress0.getSeed();
      assertEquals((-1046), kycAddress0.getIdExpiry());
      assertEquals((-1046), kycAddress0.getDob());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("", "", "", 0, 0, "");
      kycAddress0.getSeed();
      assertEquals(0, kycAddress0.getIdExpiry());
      assertEquals(0, kycAddress0.getDob());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("LW", "LW", "LW", (-2429), (-2429), (String) null);
      kycAddress0.setIdType((String) null);
      kycAddress0.getIdType();
      assertEquals((-2429), kycAddress0.getDob());
      assertEquals((-2429), kycAddress0.getIdExpiry());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("", "", "", 0, 0, "");
      kycAddress0.getIdType();
      assertEquals(0, kycAddress0.getIdExpiry());
      assertEquals(0, kycAddress0.getDob());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("L;>~RYDT6&<R+_4zn\"", "L;>~RYDT6&<R+_4zn\"", "@W9*b", (-1048), 2851, "@W9*b");
      assertEquals((-1048), kycAddress0.getIdExpiry());
      
      kycAddress0.setIdExpiry(2851);
      int int0 = kycAddress0.getIdExpiry();
      assertEquals(2851, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("LW", "LW", "LW", (-2429), (-2429), (String) null);
      int int0 = kycAddress0.getIdExpiry();
      assertEquals((-2429), kycAddress0.getDob());
      assertEquals((-2429), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("com.mxw.protocol.response.kyc.KycAddress", (String) null, (String) null, 0, 0, "com.mxw.protocol.response.kyc.KycAddress");
      String string0 = kycAddress0.getId();
      assertNull(string0);
      assertEquals(0, kycAddress0.getIdExpiry());
      assertEquals(0, kycAddress0.getDob());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("", "", "", 2716, 2716, "y@U]_0iVo,A0");
      String string0 = kycAddress0.getId();
      assertEquals(2716, kycAddress0.getIdExpiry());
      assertEquals("y@U]_0iVo,A0", kycAddress0.getSeed());
      assertEquals("", kycAddress0.getCountry());
      assertEquals(2716, kycAddress0.getDob());
      assertEquals("", string0);
      assertEquals("", kycAddress0.getIdType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("Etm<[%k109y\"z", "OjP*", "OjP*", 442, (-3679), "");
      kycAddress0.setDob(2186);
      int int0 = kycAddress0.getDob();
      assertEquals(2186, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("Etm<[%k109y\"z", "OjP*", "OjP*", 442, (-3679), "");
      int int0 = kycAddress0.getDob();
      assertEquals("OjP*", kycAddress0.getIdType());
      assertEquals(442, kycAddress0.getIdExpiry());
      assertEquals("", kycAddress0.getSeed());
      assertEquals("OjP*", kycAddress0.getId());
      assertEquals((-3679), int0);
      assertEquals("Etm<[%k109y\"z", kycAddress0.getCountry());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress((String) null, (String) null, (String) null, (-1046), (-1046), (String) null);
      kycAddress0.getCountry();
      assertEquals((-1046), kycAddress0.getIdExpiry());
      assertEquals((-1046), kycAddress0.getDob());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("", "", "", 0, 0, "");
      kycAddress0.setId("");
      assertEquals(0, kycAddress0.getDob());
      assertEquals(0, kycAddress0.getIdExpiry());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("com.mxw.protocol.response.kyc.KycAddress", (String) null, (String) null, 0, 0, "com.mxw.protocol.response.kyc.KycAddress");
      kycAddress0.setCountry("");
      kycAddress0.getCountry();
      assertEquals(0, kycAddress0.getIdExpiry());
      assertEquals(0, kycAddress0.getDob());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("", ")_E0?mI", ")_E0?mI", 0, 0, "");
      assertEquals("", kycAddress0.getSeed());
      
      kycAddress0.setSeed(")_E0?mI");
      assertEquals(0, kycAddress0.getDob());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("", ")_E0?mI", ")_E0?mI", 0, 0, "");
      int int0 = kycAddress0.getDob();
      assertEquals("", kycAddress0.getCountry());
      assertEquals(0, kycAddress0.getIdExpiry());
      assertEquals(")_E0?mI", kycAddress0.getId());
      assertEquals("", kycAddress0.getSeed());
      assertEquals(0, int0);
      assertEquals(")_E0?mI", kycAddress0.getIdType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("", ")_E0?mI", ")_E0?mI", 0, 0, "");
      String string0 = kycAddress0.getId();
      assertEquals(0, kycAddress0.getDob());
      assertEquals("", kycAddress0.getCountry());
      assertEquals("", kycAddress0.getSeed());
      assertEquals(0, kycAddress0.getIdExpiry());
      assertEquals(")_E0?mI", string0);
      assertEquals(")_E0?mI", kycAddress0.getIdType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("com.mxw.protocol.response.kyc.KycAddress", (String) null, (String) null, 0, 0, "com.mxw.protocol.response.kyc.KycAddress");
      String string0 = kycAddress0.getCountry();
      assertEquals(0, kycAddress0.getIdExpiry());
      assertEquals(0, kycAddress0.getDob());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("com.mxw.protocol.response.kyc.KycAddress", (String) null, (String) null, 0, 0, "com.mxw.protocol.response.kyc.KycAddress");
      String string0 = kycAddress0.getSeed();
      assertEquals(0, kycAddress0.getIdExpiry());
      assertEquals(0, kycAddress0.getDob());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("", ")_E0?mI", ")_E0?mI", 0, 0, "");
      String string0 = kycAddress0.getIdType();
      assertEquals("", kycAddress0.getSeed());
      assertEquals(0, kycAddress0.getDob());
      assertEquals(")_E0?mI", string0);
      assertEquals("", kycAddress0.getCountry());
      assertEquals(")_E0?mI", kycAddress0.getId());
      assertEquals(0, kycAddress0.getIdExpiry());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      KycAddress kycAddress0 = new KycAddress("", "", "", 0, 0, "N+7JOw@mo8Px");
      int int0 = kycAddress0.getIdExpiry();
      assertEquals(0, int0);
      assertEquals("N+7JOw@mo8Px", kycAddress0.getSeed());
      assertEquals(0, kycAddress0.getDob());
      assertEquals("", kycAddress0.getId());
      assertEquals("", kycAddress0.getIdType());
      assertEquals("", kycAddress0.getCountry());
  }
}
