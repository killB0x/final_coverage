/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 10:13:15 GMT 2022
 */

package com.mxw.protocol.response.fungibleToken;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.response.fungibleToken.FungibleTokenState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FungibleTokenState_ESTest extends FungibleTokenState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setTotalSupply("l\u0002I&v*!Krb{");
      String string0 = fungibleTokenState0.getTotalSupply();
      assertEquals("l\u0002I&v*!Krb{", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setTotalSupply("");
      String string0 = fungibleTokenState0.getTotalSupply();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setSymbol("3G~_\"8{[@)F)2-w,");
      String string0 = fungibleTokenState0.getSymbol();
      assertEquals("3G~_\"8{[@)F)2-w,", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setSymbol("");
      String string0 = fungibleTokenState0.getSymbol();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setOwner("");
      String string0 = fungibleTokenState0.getOwner();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setNewOwner("com.mxw.protocol.response.fungibleToken.FungibleTokenState");
      String string0 = fungibleTokenState0.getNewOwner();
      assertEquals("com.mxw.protocol.response.fungibleToken.FungibleTokenState", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setNewOwner("");
      String string0 = fungibleTokenState0.getNewOwner();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setName("h>waL@|eTc1vJ$ye");
      String string0 = fungibleTokenState0.getName();
      assertEquals("h>waL@|eTc1vJ$ye", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setName("");
      String string0 = fungibleTokenState0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setMetadata("h>waL@|eTc1vJ$ye");
      String string0 = fungibleTokenState0.getMetadata();
      assertEquals("h>waL@|eTc1vJ$ye", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setMetadata("");
      String string0 = fungibleTokenState0.getMetadata();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setMaxSupply("U(NeL/s.C2=,");
      String string0 = fungibleTokenState0.getMaxSupply();
      assertEquals("U(NeL/s.C2=,", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setMaxSupply("");
      String string0 = fungibleTokenState0.getMaxSupply();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setFlags(1);
      int int0 = fungibleTokenState0.getFlags();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setFlags((-930));
      int int0 = fungibleTokenState0.getFlags();
      assertEquals((-930), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setDecimals(735);
      int int0 = fungibleTokenState0.getDecimals();
      assertEquals(735, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setDecimals((-2643));
      int int0 = fungibleTokenState0.getDecimals();
      assertEquals((-2643), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      String string0 = fungibleTokenState0.getOwner();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      String string0 = fungibleTokenState0.getMaxSupply();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      int int0 = fungibleTokenState0.getDecimals();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      String string0 = fungibleTokenState0.getMetadata();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      String string0 = fungibleTokenState0.getSymbol();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      int int0 = fungibleTokenState0.getFlags();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      String string0 = fungibleTokenState0.getNewOwner();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      fungibleTokenState0.setOwner("com.mxw.protocol.response.fungibleToken.FungibleTokenState");
      String string0 = fungibleTokenState0.getOwner();
      assertEquals("com.mxw.protocol.response.fungibleToken.FungibleTokenState", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      String string0 = fungibleTokenState0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FungibleTokenState fungibleTokenState0 = new FungibleTokenState();
      String string0 = fungibleTokenState0.getTotalSupply();
      assertNull(string0);
  }
}
