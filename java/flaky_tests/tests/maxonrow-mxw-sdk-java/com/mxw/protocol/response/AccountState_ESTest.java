/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 09:56:41 GMT 2022
 */

package com.mxw.protocol.response;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.response.AccountState;
import com.mxw.protocol.response.Coin;
import java.math.BigInteger;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccountState_ESTest extends AccountState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AccountState accountState0 = new AccountState();
      accountState0.setType("");
      String string0 = accountState0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AccountState.Value accountState_Value0 = new AccountState.Value();
      String string0 = accountState_Value0.getPublicKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AccountState.Value accountState_Value0 = new AccountState.Value();
      accountState_Value0.setAccountNumber((BigInteger) null);
      assertNull(accountState_Value0.getAddress());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AccountState.Value accountState_Value0 = new AccountState.Value();
      accountState_Value0.setPublicKey("6)'^{c&^yzz=&");
      assertEquals("6)'^{c&^yzz=&", accountState_Value0.getPublicKey());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AccountState.Value accountState_Value0 = new AccountState.Value();
      String string0 = accountState_Value0.getAddress();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AccountState.Value accountState_Value0 = new AccountState.Value();
      byte[] byteArray0 = new byte[4];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      accountState_Value0.setSequence(bigInteger0);
      assertNull(accountState_Value0.getPublicKey());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AccountState.Value accountState_Value0 = new AccountState.Value();
      BigInteger bigInteger0 = accountState_Value0.getAccountNumber();
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AccountState.Value accountState_Value0 = new AccountState.Value();
      List<Coin> list0 = accountState_Value0.getCoins();
      accountState_Value0.setCoins(list0);
      assertNull(accountState_Value0.getPublicKey());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AccountState.Value accountState_Value0 = new AccountState.Value();
      BigInteger bigInteger0 = accountState_Value0.getSequence();
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AccountState.Value accountState_Value0 = new AccountState.Value();
      accountState_Value0.setAddress("d{^x\")]w%Z#");
      assertNull(accountState_Value0.getPublicKey());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AccountState accountState0 = new AccountState();
      AccountState.Value accountState_Value0 = new AccountState.Value();
      accountState0.setValue(accountState_Value0);
      AccountState.Value accountState_Value1 = accountState0.getValue();
      assertSame(accountState_Value1, accountState_Value0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AccountState accountState0 = new AccountState();
      String string0 = accountState0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AccountState accountState0 = new AccountState();
      AccountState.Value accountState_Value0 = accountState0.getValue();
      assertNull(accountState_Value0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AccountState accountState0 = new AccountState();
      accountState0.setType("M)");
      String string0 = accountState0.getType();
      assertEquals("M)", string0);
  }
}
