/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 09:31:22 GMT 2022
 */

package com.mxw.protocol.response.nonFungibleToken;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.response.nonFungibleToken.NFTokenCreate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NFTokenCreate_ESTest extends NFTokenCreate_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NFTokenCreate.Fee nFTokenCreate_Fee0 = new NFTokenCreate.Fee();
      nFTokenCreate_Fee0.to = "Hb";
      String string0 = nFTokenCreate_Fee0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("mT;8", "mT;8", "", "", (String) null, (String) null);
      String string0 = nFTokenCreate0.getSymbol();
      assertNull(string0);
      assertEquals("", nFTokenCreate0.getName());
      assertEquals("", nFTokenCreate0.getMetadata());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("", "", "2+w'n5<Kk", "", "", "com.mxw.protocol.response.nonFungibleToken.NFTokenCreate");
      String string0 = nFTokenCreate0.getSymbol();
      assertEquals("", nFTokenCreate0.getProperties());
      assertEquals("", nFTokenCreate0.getMetadata());
      assertEquals("2+w'n5<Kk", nFTokenCreate0.getName());
      assertEquals("com.mxw.protocol.response.nonFungibleToken.NFTokenCreate", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("mT;8", "mT;8", "", "", (String) null, (String) null);
      String string0 = nFTokenCreate0.getProperties();
      assertNull(string0);
      assertEquals("", nFTokenCreate0.getName());
      assertEquals("", nFTokenCreate0.getMetadata());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("BntMv>A:tY", "BntMv>A:tY", "BntMv>A:tY", "BntMv>A:tY", "BntMv>A:tY", "com.mxw.protocol.response.nonFungibleToken.NFTokenCreate$Fee");
      String string0 = nFTokenCreate0.getProperties();
      assertEquals("com.mxw.protocol.response.nonFungibleToken.NFTokenCreate$Fee", nFTokenCreate0.getSymbol());
      assertEquals("BntMv>A:tY", nFTokenCreate0.getName());
      assertEquals("BntMv>A:tY", nFTokenCreate0.getMetadata());
      assertEquals("BntMv>A:tY", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("", "", "", "}Ofld", "com.mxw.protocol.response.nonFungibleToken.NFTokenCreate", "com.mxw.protocol.response.nonFungibleToken.NFTokenCreate");
      nFTokenCreate0.setOwner("com.mxw.protocol.response.nonFungibleToken.NFTokenCreate");
      nFTokenCreate0.getOwner();
      assertEquals("com.mxw.protocol.response.nonFungibleToken.NFTokenCreate", nFTokenCreate0.getSymbol());
      assertEquals("}Ofld", nFTokenCreate0.getMetadata());
      assertEquals("com.mxw.protocol.response.nonFungibleToken.NFTokenCreate", nFTokenCreate0.getProperties());
      assertEquals("", nFTokenCreate0.getName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("", "", "2+w'n5<Kk", "", "", "com.mxw.protocol.response.nonFungibleToken.NFTokenCreate");
      nFTokenCreate0.setOwner("");
      nFTokenCreate0.getOwner();
      assertEquals("com.mxw.protocol.response.nonFungibleToken.NFTokenCreate", nFTokenCreate0.getSymbol());
      assertEquals("2+w'n5<Kk", nFTokenCreate0.getName());
      assertEquals("", nFTokenCreate0.getMetadata());
      assertEquals("", nFTokenCreate0.getProperties());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate((String) null, (String) null, (String) null, (String) null, "UJNIC%|w.`e7W", "UJNIC%|w.`e7W");
      String string0 = nFTokenCreate0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("% iqL=JV", (String) null, "% iqL=JV", "% iqL=JV", "IlJtDpl", "");
      String string0 = nFTokenCreate0.getName();
      assertEquals("% iqL=JV", nFTokenCreate0.getMetadata());
      assertNotNull(string0);
      assertEquals("", nFTokenCreate0.getSymbol());
      assertEquals("% iqL=JV", string0);
      assertEquals("IlJtDpl", nFTokenCreate0.getProperties());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("% iqL=JV", (String) null, "% iqL=JV", "% iqL=JV", "IlJtDpl", "");
      String string0 = nFTokenCreate0.getMetadata();
      assertEquals("IlJtDpl", nFTokenCreate0.getProperties());
      assertNotNull(string0);
      assertEquals("% iqL=JV", string0);
      assertEquals("% iqL=JV", nFTokenCreate0.getName());
      assertEquals("", nFTokenCreate0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NFTokenCreate.Fee nFTokenCreate_Fee0 = new NFTokenCreate.Fee();
      nFTokenCreate_Fee0.to = "Hb";
      String string0 = nFTokenCreate_Fee0.getTo();
      assertEquals("Hb", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate((String) null, (String) null, (String) null, (String) null, "UJNIC%|w.`e7W", "UJNIC%|w.`e7W");
      NFTokenCreate.Fee nFTokenCreate_Fee0 = nFTokenCreate0.getFee();
      String string0 = nFTokenCreate_Fee0.getTo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("", "", "", "", "?:iXh(/!/9aTk$8_", "");
      nFTokenCreate0.getOwner();
      assertEquals("", nFTokenCreate0.getSymbol());
      assertEquals("", nFTokenCreate0.getName());
      assertEquals("", nFTokenCreate0.getMetadata());
      assertEquals("?:iXh(/!/9aTk$8_", nFTokenCreate0.getProperties());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("", "", "", "", "?:iXh(/!/9aTk$8_", "");
      String string0 = nFTokenCreate0.getMetadata();
      assertEquals("", nFTokenCreate0.getName());
      assertEquals("", string0);
      assertEquals("?:iXh(/!/9aTk$8_", nFTokenCreate0.getProperties());
      assertEquals("", nFTokenCreate0.getSymbol());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("", "", "", "", "?:iXh(/!/9aTk$8_", "");
      String string0 = nFTokenCreate0.getName();
      assertEquals("", nFTokenCreate0.getSymbol());
      assertEquals("", nFTokenCreate0.getMetadata());
      assertEquals("?:iXh(/!/9aTk$8_", nFTokenCreate0.getProperties());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("", "", "", "", "?:iXh(/!/9aTk$8_", "");
      String string0 = nFTokenCreate0.getSymbol();
      assertEquals("", nFTokenCreate0.getMetadata());
      assertEquals("?:iXh(/!/9aTk$8_", nFTokenCreate0.getProperties());
      assertEquals("", string0);
      assertEquals("", nFTokenCreate0.getName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      NFTokenCreate nFTokenCreate0 = new NFTokenCreate("", "RGvF0aL@jv~gI02", "", "1x\";", "", "RGvF0aL@jv~gI02");
      String string0 = nFTokenCreate0.getProperties();
      assertEquals("", string0);
      assertEquals("RGvF0aL@jv~gI02", nFTokenCreate0.getSymbol());
      assertEquals("1x\";", nFTokenCreate0.getMetadata());
      assertEquals("", nFTokenCreate0.getName());
  }
}
