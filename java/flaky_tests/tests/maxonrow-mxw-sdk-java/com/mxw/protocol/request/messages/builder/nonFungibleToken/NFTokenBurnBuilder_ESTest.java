/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 09:39:45 GMT 2022
 */

package com.mxw.protocol.request.messages.builder.nonFungibleToken;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.request.messages.builder.nonFungibleToken.NFTokenBurnBuilder;
import com.mxw.protocol.response.TransactionValue;
import com.mxw.protocol.response.nonFungibleToken.NFTokenBurn;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NFTokenBurnBuilder_ESTest extends NFTokenBurnBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NFTokenBurn nFTokenBurn0 = new NFTokenBurn("com.mxw.protocol.response.nonFungibleToken.NFTokenBurn", "com.mxw.protocol.response.nonFungibleToken.NFTokenBurn");
      NFTokenBurnBuilder nFTokenBurnBuilder0 = new NFTokenBurnBuilder(nFTokenBurn0, "com.mxw.protocol.response.nonFungibleToken.NFTokenBurn");
      TransactionValue transactionValue0 = nFTokenBurnBuilder0.build();
      assertEquals("com.mxw.protocol.response.nonFungibleToken.NFTokenBurn", transactionValue0.getMemo());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NFTokenBurn nFTokenBurn0 = new NFTokenBurn("com.mxw.protocol.response.nonFungibleToken.NFTokenBurn", "com.mxw.protocol.response.nonFungibleToken.NFTokenBurn");
      NFTokenBurnBuilder nFTokenBurnBuilder0 = new NFTokenBurnBuilder(nFTokenBurn0, (String) null);
      TransactionValue transactionValue0 = nFTokenBurnBuilder0.build();
      assertEquals("", transactionValue0.getMemo());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NFTokenBurn nFTokenBurn0 = new NFTokenBurn("com.mxw.protocol.response.nonFungibleToken.NFTokenBurn", "com.mxw.protocol.response.nonFungibleToken.NFTokenBurn");
      NFTokenBurnBuilder nFTokenBurnBuilder0 = new NFTokenBurnBuilder(nFTokenBurn0, (String) null);
      String string0 = nFTokenBurnBuilder0.getTransactionType();
      assertEquals("burnNonFungibleItem", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NFTokenBurn nFTokenBurn0 = new NFTokenBurn("", "");
      NFTokenBurnBuilder nFTokenBurnBuilder0 = new NFTokenBurnBuilder(nFTokenBurn0, "");
      String string0 = nFTokenBurnBuilder0.getRoute();
      assertEquals("nonFungible", string0);
  }
}
