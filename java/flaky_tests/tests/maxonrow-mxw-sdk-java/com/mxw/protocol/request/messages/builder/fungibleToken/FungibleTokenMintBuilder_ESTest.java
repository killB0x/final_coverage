/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 09:32:19 GMT 2022
 */

package com.mxw.protocol.request.messages.builder.fungibleToken;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.request.messages.builder.fungibleToken.FungibleTokenMintBuilder;
import com.mxw.protocol.response.TransactionValue;
import com.mxw.protocol.response.fungibleToken.FungibleTokenMint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FungibleTokenMintBuilder_ESTest extends FungibleTokenMintBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FungibleTokenMint fungibleTokenMint0 = new FungibleTokenMint("", "t9'[WF8mTpEf");
      FungibleTokenMintBuilder fungibleTokenMintBuilder0 = new FungibleTokenMintBuilder(fungibleTokenMint0, "c!z;");
      TransactionValue transactionValue0 = fungibleTokenMintBuilder0.build();
      assertEquals("c!z;", transactionValue0.getMemo());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FungibleTokenMint fungibleTokenMint0 = new FungibleTokenMint((String) null, (String) null);
      FungibleTokenMintBuilder fungibleTokenMintBuilder0 = new FungibleTokenMintBuilder(fungibleTokenMint0, (String) null);
      TransactionValue transactionValue0 = fungibleTokenMintBuilder0.build();
      assertEquals("", transactionValue0.getMemo());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FungibleTokenMint fungibleTokenMint0 = new FungibleTokenMint((String) null, (String) null);
      FungibleTokenMintBuilder fungibleTokenMintBuilder0 = new FungibleTokenMintBuilder(fungibleTokenMint0, (String) null);
      String string0 = fungibleTokenMintBuilder0.getTransactionType();
      assertEquals("mintFungibleToken", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FungibleTokenMint fungibleTokenMint0 = new FungibleTokenMint("", "");
      FungibleTokenMintBuilder fungibleTokenMintBuilder0 = new FungibleTokenMintBuilder(fungibleTokenMint0, "");
      String string0 = fungibleTokenMintBuilder0.getRoute();
      assertEquals("token", string0);
  }
}
