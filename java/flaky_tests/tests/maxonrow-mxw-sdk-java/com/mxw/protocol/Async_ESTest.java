/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 09:30:24 GMT 2022
 */

package com.mxw.protocol;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.mxw.protocol.Async;
import java.util.concurrent.Callable;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ScheduledExecutorService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Async_ESTest extends Async_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Callable<Object> callable0 = (Callable<Object>) mock(Callable.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(callable0).call();
      CompletableFuture<Object> completableFuture0 = Async.run(callable0);
      assertNotNull(completableFuture0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ScheduledExecutorService scheduledExecutorService0 = Async.defaultExecutorService();
      assertNotNull(scheduledExecutorService0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Async async0 = new Async();
  }
}
