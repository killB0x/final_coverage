/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 09:41:39 GMT 2022
 */

package com.mxw.protocol.common;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.common.Bundle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Bundle_ESTest extends Bundle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Bundle bundle0 = new Bundle();
      Object object0 = bundle0.get("", (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Bundle bundle0 = new Bundle();
      bundle0.put("com.mxw.protocol.common.Bundle", (Object) "iXFH\"2}L");
      Object object0 = bundle0.get("com.mxw.protocol.common.Bundle");
      assertEquals("iXFH\"2}L", object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Bundle bundle0 = new Bundle();
      Object object0 = bundle0.get((String) null, (Object) "");
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Bundle bundle0 = new Bundle();
      bundle0.put("D$M%Erj/L(7c=;.Mj", (Object) "D$M%Erj/L(7c=;.Mj");
      String string0 = bundle0.get("D$M%Erj/L(7c=;.Mj", "D$M%Erj/L(7c=;.Mj");
      assertEquals("D$M%Erj/L(7c=;.Mj", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Bundle bundle0 = new Bundle();
      Bundle bundle1 = bundle0.put("", (Object) null);
      boolean boolean0 = bundle1.contain("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Bundle bundle0 = new Bundle();
      Object object0 = bundle0.get((String) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Bundle bundle0 = new Bundle();
      boolean boolean0 = bundle0.contain(")MEK=$vb!Jx_");
      assertFalse(boolean0);
  }
}
