/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 04 09:34:14 GMT 2022
 */

package com.mxw.protocol.common;

import org.junit.Test;
import static org.junit.Assert.*;
import com.mxw.protocol.common.Response;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Response_ESTest extends Response_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error();
      Response.Error response_Error1 = new Response.Error(911, "v<,r.an");
      boolean boolean0 = response_Error1.equals(response_Error0);
      assertEquals(911, response_Error1.getCode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error(1, "");
      response_Error0.getMessage();
      assertEquals(1, response_Error0.getCode());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error(0, (String) null);
      response_Error0.getData();
      assertEquals(0, response_Error0.getCode());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error();
      int int0 = response_Error0.getCode();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Response<Integer> response0 = new Response<Integer>();
      response0.setHasResult(true);
      boolean boolean0 = response0.isHasResult();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Response<Object> response0 = new Response<Object>();
      response0.setRawResponse("V");
      String string0 = response0.getRawResponse();
      assertEquals("V", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Response<Object> response0 = new Response<Object>();
      response0.setRawResponse("");
      String string0 = response0.getRawResponse();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Response<Integer> response0 = new Response<Integer>();
      response0.setJsonrpc("com.mxw.protocol.common.Response$Error");
      String string0 = response0.getJsonrpc();
      assertEquals("com.mxw.protocol.common.Response$Error", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Response<Integer> response0 = new Response<Integer>();
      response0.setJsonrpc("");
      String string0 = response0.getJsonrpc();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Response<Object> response0 = new Response<Object>();
      response0.setId(293L);
      long long0 = response0.getId();
      assertEquals(293L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Response<Integer> response0 = new Response<Integer>();
      response0.setId((-1845L));
      long long0 = response0.getId();
      assertEquals((-1845L), long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Response<Object> response0 = new Response<Object>();
      Response.Error response_Error0 = new Response.Error();
      response0.setError(response_Error0);
      Response.Error response_Error1 = response0.getError();
      assertNull(response_Error1.getData());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error(1, "");
      Response<Object> response0 = new Response<Object>();
      response0.setError(response_Error0);
      Response.Error response_Error1 = response0.getError();
      assertEquals(1, response_Error1.getCode());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Response<Integer> response0 = new Response<Integer>();
      Response.Error response_Error0 = new Response.Error((-842), "com.mxw.protocol.common.Response$Error");
      response0.setError(response_Error0);
      Response.Error response_Error1 = response0.getError();
      assertEquals((-842), response_Error1.getCode());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error();
      response_Error0.setMessage("8*h7i%4%44");
      Response.Error response_Error1 = new Response.Error(0, "8*h7i%4%44");
      response_Error1.setData("8*h7i%4%44");
      boolean boolean0 = response_Error1.equals(response_Error0);
      assertTrue(boolean0);
      assertEquals(0, response_Error0.getCode());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error();
      response_Error0.setMessage("");
      Response.Error response_Error1 = new Response.Error();
      boolean boolean0 = response_Error1.equals(response_Error0);
      assertFalse(boolean0);
      assertEquals(0, response_Error1.getCode());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error();
      Response.Error response_Error1 = new Response.Error();
      boolean boolean0 = response_Error1.equals(response_Error0);
      assertTrue(boolean0);
      assertEquals(0, response_Error1.getCode());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error();
      Response.Error response_Error1 = new Response.Error((-1789569704), "8");
      boolean boolean0 = response_Error1.equals(response_Error0);
      assertFalse(boolean0);
      assertEquals((-1789569704), response_Error1.getCode());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error(4041, "hFs'b");
      boolean boolean0 = response_Error0.equals("hFs'b");
      assertEquals(4041, response_Error0.getCode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error(0, "");
      Response<Object> response0 = new Response<Object>();
      response0.setResult(response_Error0);
      Response.Error response_Error1 = (Response.Error)response0.getResult();
      boolean boolean0 = response_Error0.equals(response_Error1);
      assertTrue(boolean0);
      assertEquals(0, response_Error1.getCode());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error();
      Response<Object> response0 = new Response<Object>();
      response0.setError(response_Error0);
      boolean boolean0 = response0.hasError();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Response<Integer> response0 = new Response<Integer>();
      boolean boolean0 = response0.hasError();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Response<Object> response0 = new Response<Object>();
      Object object0 = response0.getResult();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Response<Integer> response0 = new Response<Integer>();
      String string0 = response0.getRawResponse();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Response<Object> response0 = new Response<Object>();
      boolean boolean0 = response0.isHasResult();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Response<Integer> response0 = new Response<Integer>();
      long long0 = response0.getId();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Response<Object> response0 = new Response<Object>();
      String string0 = response0.getJsonrpc();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Response<Integer> response0 = new Response<Integer>();
      Response.Error response_Error0 = response0.getError();
      assertNull(response_Error0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error(4041, "hFs'b");
      response_Error0.setData("hFs'b");
      Response.Error response_Error1 = new Response.Error(4041, "hFs'b");
      boolean boolean0 = response_Error1.equals(response_Error0);
      assertEquals(4041, response_Error1.getCode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error(0, "ahdgb");
      Response.Error response_Error1 = new Response.Error(0, "ahcsb");
      boolean boolean0 = response_Error0.equals(response_Error1);
      assertEquals(0, response_Error1.getCode());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Response.Error response_Error0 = new Response.Error();
      response_Error0.setCode(0);
      assertEquals(0, response_Error0.getCode());
  }
}
