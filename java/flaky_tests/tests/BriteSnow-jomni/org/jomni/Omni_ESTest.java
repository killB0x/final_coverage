/*
 * This file was automatically generated by EvoSuite
 * Thu Nov 10 02:14:08 GMT 2022
 */

package org.jomni;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.function.Supplier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jomni.ConverterRegistry;
import org.jomni.JomniMapper;
import org.jomni.Omni;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Omni_ESTest extends Omni_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(converterRegistry0).when(supplier0).get();
      Omni<Object> omni0 = jomniMapper0.as(supplier0);
      Object object0 = new Object();
      Supplier<Object> supplier1 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(object0).when(supplier1).get();
      Object object1 = omni0.into(supplier1);
      assertSame(object1, object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      Omni<Object> omni0 = jomniMapper0.as(supplier0);
      Object object0 = omni0.into((Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Omni<HashMap<Object, Object>> omni0 = new Omni<HashMap<Object, Object>>(hashMap0, jomniMapper0);
      Omni<HashMap<Object, Object>> omni1 = omni0.set((String) null, converterRegistry0);
      Object object0 = omni1.get((String) null);
      assertSame(converterRegistry0, object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Supplier<Omni<Object>> supplier0 = (Supplier<Omni<Object>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      Omni<Omni<Object>> omni0 = jomniMapper0.as(supplier0);
      Omni<Object> omni1 = omni0.get();
      assertNull(omni1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      Omni<Object> omni0 = jomniMapper0.as(supplier0);
      Map map0 = omni0.asMap();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<String> omni0 = new Omni<String>("{G", jomniMapper0);
      Map map0 = omni0.asMap();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<Object> omni0 = new Omni<Object>(jomniMapper0, jomniMapper0);
      Class<Object> class0 = Object.class;
      Object object0 = omni0.as(class0);
      assertSame(jomniMapper0, object0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<Object> omni0 = new Omni<Object>(converterRegistry0, jomniMapper0);
      Omni<Object> omni1 = new Omni<Object>((Object) null, jomniMapper0);
      // Undeclared exception!
      try { 
        omni0.setAll(omni1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      Omni<Object> omni0 = jomniMapper0.as(supplier0);
      hashMap0.put(converterRegistry0, omni0);
      Omni<Object> omni1 = new Omni<Object>(hashMap0, jomniMapper0);
      // Undeclared exception!
      try { 
        omni1.setAll(hashMap0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jomni.ConverterRegistry cannot be cast to class java.lang.String (org.jomni.ConverterRegistry is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @250eba23; java.lang.String is in module java.base of loader 'bootstrap')
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      // Undeclared exception!
      try { 
        omni0.put("com{plex", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<String> omni0 = jomniMapper0.omni("OJ;b!bP05`-'Cy#:-^");
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn("xaj=:").when(supplier0).get();
      // Undeclared exception!
      try { 
        omni0.into(supplier0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoSuchFieldException: TYPE
         //
         verifyException("org.jomni.ConverterRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      // Undeclared exception!
      try { 
        omni0.into((Supplier<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<String> omni0 = new Omni<String>(":SkjqJ<u>F$q\"{R&", jomniMapper0);
      // Undeclared exception!
      try { 
        omni0.into((Object) ":SkjqJ<u>F$q\"{R&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoSuchFieldException: TYPE
         //
         verifyException("org.jomni.ConverterRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      // Undeclared exception!
      try { 
        omni0.into("$VALUES");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      // Undeclared exception!
      try { 
        omni0.containsKey(">");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        omni0.as(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      Omni<Object> omni0 = null;
      try {
        omni0 = new Omni<Object>(converterRegistry0, (JomniMapper) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      // Undeclared exception!
      try { 
        omni0.keySet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      // Undeclared exception!
      try { 
        omni0.get("BZ*@1.FT)K");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<Object> omni0 = jomniMapper0.omni((Object) "");
      Class class0 = omni0.getType("t_]3$E&Prg+G]");
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      // Undeclared exception!
      try { 
        omni0.getType("not_nulls");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<String> omni0 = jomniMapper0.omni("");
      Map<String, Object> map0 = jomniMapper0.asMap(omni0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<Object> omni0 = new Omni<Object>(converterRegistry0, jomniMapper0);
      Omni<Object> omni1 = omni0.setAll((Object) null);
      assertSame(omni1, omni0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      Omni<Object> omni1 = omni0.setAll((Object) null);
      assertSame(omni0, omni1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<String> omni0 = jomniMapper0.omni("$VALUES");
      String string0 = omni0.get();
      assertEquals("$VALUES", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Omni<HashMap<Object, Object>> omni0 = jomniMapper0.omni(hashMap0);
      Omni<HashMap<Object, Object>> omni1 = omni0.set((String) null, hashMap0);
      boolean boolean0 = omni1.containsKey((String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<HashMap<Object, Object>> omni0 = new Omni<HashMap<Object, Object>>(hashMap0, jomniMapper0);
      boolean boolean0 = omni0.containsKey("org.jomni.Omni");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Omni<HashMap<Object, Object>> omni0 = jomniMapper0.omni(hashMap0);
      Set<String> set0 = omni0.keySet();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Omni<HashMap<Object, Object>> omni0 = new Omni<HashMap<Object, Object>>(hashMap0, jomniMapper0);
      Object object0 = omni0.get((String) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<Object> omni0 = new Omni<Object>(converterRegistry0, jomniMapper0);
      omni0.put("org.jomni.JomniMapper$1", jomniMapper0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<Object> omni0 = jomniMapper0.omni((Object) hashMap0);
      Class class0 = omni0.getType("");
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<Object> omni0 = jomniMapper0.omni((Object) "");
      // Undeclared exception!
      try { 
        omni0.setAll("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NoSuchFieldException: TYPE
         //
         verifyException("org.jomni.ConverterRegistry", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<Object> omni0 = new Omni<Object>(converterRegistry0, jomniMapper0);
      Map map0 = omni0.asMap();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Omni<HashMap<Object, Object>> omni0 = jomniMapper0.omni(hashMap0);
      Object object0 = omni0.get();
      Omni<Object> omni1 = new Omni<Object>(object0, jomniMapper0);
      omni1.put("_YKpMBu:a!xCp-", (Object) null);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<Object> omni0 = new Omni<Object>((Object) null, jomniMapper0);
      Class<Object> class0 = Object.class;
      Object object0 = omni0.as(class0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      Omni<String> omni0 = jomniMapper0.as(supplier0);
      String string0 = omni0.into("$HxyW8j,dn*4Bo");
      assertEquals("$HxyW8j,dn*4Bo", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ConverterRegistry converterRegistry0 = new ConverterRegistry();
      JomniMapper jomniMapper0 = new JomniMapper(converterRegistry0);
      Omni<String> omni0 = jomniMapper0.omni("OJ;b!bP05`-'Cy#:-^");
      Supplier<Object> supplier0 = (Supplier<Object>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      Object object0 = omni0.into(supplier0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      // Undeclared exception!
      try { 
        omni0.set("not_nulls", "not_nulls");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Omni<Object> omni0 = new Omni<Object>((Object) null, (JomniMapper) null);
      // Undeclared exception!
      try { 
        omni0.asMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jomni.Omni", e);
      }
  }
}
