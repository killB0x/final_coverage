/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 11:13:59 GMT 2022
 */

package org.scale7.networking.utility;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import org.scale7.networking.utility.NetworkAlgorithms;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NetworkAlgorithms_ESTest extends NetworkAlgorithms_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = NetworkAlgorithms.getExpiryMillisecondsFromNow(1392409281320L);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = NetworkAlgorithms.getBinaryBackoffDelay(1885, 0, 119046144);
      assertEquals(16384000, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = NetworkAlgorithms.getBinaryBackoffDelay(1, 780, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = NetworkAlgorithms.getBinaryBackoffDelay(16384000, 0, (-2664));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = NetworkAlgorithms.getBinaryBackoffDelay(0, (-2147483635), 848);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis((-2147483645));
      int int0 = NetworkAlgorithms.getExpiryMillisecondsFromNow((-359L));
      assertEquals(2147483286, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = NetworkAlgorithms.getExpiryMillisecondsFromNow((-359L));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      System.setCurrentTimeMillis((-2147483645));
      int int0 = NetworkAlgorithms.getExpiryMillisecondsFromNow(16L);
      assertEquals((-2147483635), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = NetworkAlgorithms.getBinaryBackoffDelay(16, 16, 16);
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = NetworkAlgorithms.getBinaryBackoffDelay(2354, (-2147483645), (-1816));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = NetworkAlgorithms.getBinaryBackoffDelay((-2147483645), (-2147483645), 2816);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = NetworkAlgorithms.getBinaryBackoffDelay(Integer.MAX_VALUE, Integer.MAX_VALUE, Integer.MAX_VALUE);
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NetworkAlgorithms networkAlgorithms0 = new NetworkAlgorithms();
  }
}
