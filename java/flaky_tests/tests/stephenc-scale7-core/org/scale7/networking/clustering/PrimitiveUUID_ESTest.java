/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 12 11:15:05 GMT 2022
 */

package org.scale7.networking.clustering;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.junit.runner.RunWith;
import org.scale7.networking.clustering.PrimitiveUUID;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PrimitiveUUID_ESTest extends PrimitiveUUID_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Random.setNextRandom((-2289));
      long long0 = PrimitiveUUID.getUuid64();
      assertEquals((-1078612106694623232L), long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Random.setNextRandom((-1004));
      int int0 = PrimitiveUUID.getUuid32();
      assertEquals((-335347712), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      long long0 = PrimitiveUUID.getUuid64();
      assertEquals(16777216L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int int0 = PrimitiveUUID.getUuid32();
      assertEquals(0, int0);
      
      long long0 = PrimitiveUUID.getUuid64();
      assertEquals(72057594071482368L, long0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PrimitiveUUID.getUuid32();
      int int0 = PrimitiveUUID.getUuid32();
      assertEquals(16777216, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PrimitiveUUID primitiveUUID0 = new PrimitiveUUID();
  }
}
