/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 02:32:19 GMT 2022
 */

package org.ictclas4j.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.ictclas4j.bean.MidResult;
import org.ictclas4j.bean.SegResult;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SegResult_ESTest extends SegResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      SegResult segResult0 = new SegResult((String) null);
      System.setCurrentTimeMillis(1L);
      long long0 = segResult0.getSpendTime();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SegResult segResult0 = new SegResult("org.ictclas4j.bean.SegResult");
      System.setCurrentTimeMillis(0L);
      long long0 = segResult0.getSpendTime();
      assertEquals((-1392409281320L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SegResult segResult0 = new SegResult((String) null);
      String string0 = segResult0.getRawContent();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SegResult segResult0 = new SegResult((String) null);
      MidResult midResult0 = new MidResult();
      segResult0.addMidResult(midResult0);
      ArrayList<MidResult> arrayList0 = segResult0.getMrList();
      assertTrue(arrayList0.contains(midResult0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SegResult segResult0 = new SegResult("'{%1!??ij=jZs;Y");
      segResult0.setFinalResult("'{%1!??ij=jZs;Y");
      String string0 = segResult0.getFinalResult();
      assertEquals("'{%1!??ij=jZs;Y", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SegResult segResult0 = new SegResult("<p>\u6700\u7EC8\u5206\u8BCD\u7ED3\u679C\uFF1A");
      segResult0.setFinalResult("");
      String string0 = segResult0.getFinalResult();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SegResult segResult0 = new SegResult("");
      ArrayList<MidResult> arrayList0 = new ArrayList<MidResult>();
      arrayList0.add((MidResult) null);
      segResult0.setMrList(arrayList0);
      // Undeclared exception!
      try { 
        segResult0.toHTML();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.bean.SegResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SegResult segResult0 = new SegResult("org.ictclas4j.bean.SegResult");
      segResult0.setFinalResult("<td width=\"90%\" bgcolor=\"#99CCFF\">\u4E8C\u53C9\u5206\u8BCD\u8DEF\u5F84</td>");
      String string0 = segResult0.toHTML();
      assertEquals("\u539F\u6587\u5185\u5BB9\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"100%\">org.ictclas4j.bean.SegResult</td></tr></table><p>\u6700\u7EC8\u5206\u8BCD\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"100%\"><font color=\"blue\" size=6><b><td width=\"90%\" bgcolor=\"#99CCFF\">\u4E8C\u53C9\u5206\u8BCD\u8DEF\u5F84</td></b></font></td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SegResult segResult0 = new SegResult("org.ictclas4j.bean.SegResult");
      MidResult midResult0 = new MidResult();
      segResult0.addMidResult(midResult0);
      String string0 = segResult0.toHTML();
      assertEquals("\u539F\u6587\u5185\u5BB9\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"100%\">org.ictclas4j.bean.SegResult</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SegResult segResult0 = new SegResult((String) null);
      String string0 = segResult0.toHTML();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SegResult segResult0 = new SegResult("");
      segResult0.addMidResult((MidResult) null);
      ArrayList<MidResult> arrayList0 = segResult0.getMrList();
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SegResult segResult0 = new SegResult("org.ictclas4j.bean.SegResult");
      MidResult midResult0 = new MidResult();
      segResult0.addMidResult(midResult0);
      segResult0.addMidResult(midResult0);
      assertNull(segResult0.getFinalResult());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SegResult segResult0 = new SegResult("org.ictclas4j.bean.SegResult");
      long long0 = segResult0.getSpendTime();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SegResult segResult0 = new SegResult("org.ictclas4j.bean.SegResult");
      String string0 = segResult0.getRawContent();
      assertEquals("org.ictclas4j.bean.SegResult", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SegResult segResult0 = new SegResult("'{%1!??ij=jZs;Y");
      String string0 = segResult0.getFinalResult();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SegResult segResult0 = new SegResult((String) null);
      segResult0.setRawContent("");
      String string0 = segResult0.getRawContent();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SegResult segResult0 = new SegResult((String) null);
      ArrayList<MidResult> arrayList0 = segResult0.getMrList();
      assertNull(arrayList0);
  }
}
