/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 02:34:03 GMT 2022
 */

package org.ictclas4j.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.ictclas4j.bean.Context;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Context_ESTest extends Context_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Context context0 = new Context();
      context0.setTotalFreq(1103);
      int int0 = context0.getTotalFreq();
      assertEquals(1103, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Context context0 = new Context();
      context0.setTotalFreq((-1574));
      int int0 = context0.getTotalFreq();
      assertEquals((-1574), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Context context0 = new Context();
      context0.setKey(2376);
      int int0 = context0.getKey();
      assertEquals(2376, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Context context0 = new Context();
      context0.setKey((-171));
      int int0 = context0.getKey();
      assertEquals((-171), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Context context0 = new Context();
      int[] intArray0 = new int[2];
      context0.setFreq(intArray0);
      int[] intArray1 = context0.getFreq();
      assertEquals(2, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Context context0 = new Context();
      int[] intArray0 = new int[0];
      context0.setFreq(intArray0);
      int[] intArray1 = context0.getFreq();
      assertArrayEquals(new int[] {}, intArray1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Context context0 = new Context();
      int[][] intArray0 = new int[0][1];
      context0.setContextArray(intArray0);
      int[][] intArray1 = context0.getContextArray();
      assertSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Context context0 = new Context();
      int[][] intArray0 = new int[2][8];
      context0.setContextArray(intArray0);
      int[][] intArray1 = context0.getContextArray();
      assertEquals(2, intArray1.length);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Context context0 = new Context();
      int int0 = context0.getKey();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Context context0 = new Context();
      int[][] intArray0 = context0.getContextArray();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Context context0 = new Context();
      int[] intArray0 = context0.getFreq();
      assertNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Context context0 = new Context();
      int int0 = context0.getTotalFreq();
      assertEquals(0, int0);
  }
}
