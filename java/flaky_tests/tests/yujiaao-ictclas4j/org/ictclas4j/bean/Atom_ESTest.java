/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 02:34:42 GMT 2022
 */

package org.ictclas4j.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.ictclas4j.bean.Atom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Atom_ESTest extends Atom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Atom atom0 = new Atom();
      atom0.setWord("");
      String string0 = atom0.getWord();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Atom atom0 = new Atom();
      atom0.setPos(3683);
      int int0 = atom0.getPos();
      assertEquals(3683, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Atom atom0 = new Atom();
      atom0.setPos((-273));
      int int0 = atom0.getPos();
      assertEquals((-273), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Atom atom0 = new Atom();
      atom0.setLen(5561);
      int int0 = atom0.getLen();
      assertEquals(5561, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Atom atom0 = new Atom();
      atom0.setWord("d ");
      String string0 = atom0.getWord();
      assertEquals("d ", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Atom atom0 = new Atom();
      // Undeclared exception!
      try { 
        atom0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/builder/ReflectionToStringBuilder
         //
         verifyException("org.ictclas4j.bean.Atom", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Atom atom0 = new Atom();
      String string0 = atom0.getWord();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Atom atom0 = new Atom();
      int int0 = atom0.getLen();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Atom atom0 = new Atom();
      int int0 = atom0.getPos();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Atom atom0 = new Atom();
      atom0.setLen((-1));
      int int0 = atom0.getLen();
      assertEquals((-1), int0);
  }
}
