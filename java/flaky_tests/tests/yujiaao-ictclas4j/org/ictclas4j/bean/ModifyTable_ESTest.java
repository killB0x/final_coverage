/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 02:36:03 GMT 2022
 */

package org.ictclas4j.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.ictclas4j.bean.ModifyTable;
import org.ictclas4j.bean.WordItem;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ModifyTable_ESTest extends ModifyTable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ModifyTable modifyTable0 = new ModifyTable();
      ArrayList<WordItem> arrayList0 = new ArrayList<WordItem>();
      modifyTable0.setWords(arrayList0);
      ArrayList<WordItem> arrayList1 = modifyTable0.getWords();
      assertTrue(arrayList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ModifyTable modifyTable0 = new ModifyTable();
      ArrayList<WordItem> arrayList0 = new ArrayList<WordItem>();
      WordItem wordItem0 = new WordItem("", 0, 0, 0);
      arrayList0.add(wordItem0);
      modifyTable0.setWords(arrayList0);
      ArrayList<WordItem> arrayList1 = modifyTable0.getWords();
      assertSame(arrayList1, arrayList0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ModifyTable modifyTable0 = new ModifyTable();
      modifyTable0.setDelete(1);
      int int0 = modifyTable0.getDelete();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ModifyTable modifyTable0 = new ModifyTable();
      modifyTable0.setDelete((-3334));
      int int0 = modifyTable0.getDelete();
      assertEquals((-3334), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ModifyTable modifyTable0 = new ModifyTable();
      modifyTable0.setCount(1);
      int int0 = modifyTable0.getCount();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ModifyTable modifyTable0 = new ModifyTable();
      ArrayList<WordItem> arrayList0 = modifyTable0.getWords();
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ModifyTable modifyTable0 = new ModifyTable();
      int int0 = modifyTable0.getDelete();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ModifyTable modifyTable0 = new ModifyTable();
      modifyTable0.setCount((-1));
      int int0 = modifyTable0.getCount();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ModifyTable modifyTable0 = new ModifyTable();
      int int0 = modifyTable0.getCount();
      assertEquals(0, int0);
  }
}
