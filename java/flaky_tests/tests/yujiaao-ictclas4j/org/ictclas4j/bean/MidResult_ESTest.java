/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 02:24:09 GMT 2022
 */

package org.ictclas4j.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.ictclas4j.bean.Atom;
import org.ictclas4j.bean.MidResult;
import org.ictclas4j.bean.SegNode;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MidResult_ESTest extends MidResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<Atom> arrayList0 = new ArrayList<Atom>();
      arrayList0.add((Atom) null);
      midResult0.setAtoms(arrayList0);
      midResult0.setSource("1hp>t!S 2y9");
      // Undeclared exception!
      try { 
        midResult0.toHTML();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.bean.MidResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.setSource("+:#");
      midResult0.addOptResult("NccIu=>b");
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">+:#</td></tr></table><p>\u7ECF\u8FC7\u4F18\u5316\u540E\u7684\u5206\u8BCD\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\" bgcolor=\"#99CCFF\">\u5E8F\u53F7</td><td width=\"90%\" bgcolor=\"#99CCFF\">\u5206\u8BCD\u7ED3\u679C</td></tr><tr><td width=\"10%\">0</td><td width=\"90%\" ><font color=\"#FF0000\"><b>NccIu=>b</b></font</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.setSource("-j8`Xk]]");
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      Integer integer0 = new Integer((-3199));
      arrayList1.add(integer0);
      arrayList0.add(arrayList1);
      midResult0.setOptBipath(arrayList0);
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">-j8`Xk]]</td></tr></table><p>\u7ECF\u8FC7\u4F18\u5316\u540E\u7684\u4E8C\u53C9\u5206\u8BCD\u8DEF\u5F84\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\" bgcolor=\"#99CCFF\">\u5E8F\u53F7</td><td width=\"90%\" bgcolor=\"#99CCFF\">\u4E8C\u53C9\u5206\u8BCD\u8DEF\u5F84</td></tr><tr><td width=\"10%\">0</td><td width=\"90%\">-3199&nbsp</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.setSource("-j8`Xk]]");
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      midResult0.setOptBipath(arrayList0);
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">-j8`Xk]]</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.setSource("");
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(15, 15, 15, 15, "<td width=\"25%\" bgcolor=\"#99CCFF\">\u957F\u5EA6(\u5B57\u8282)</td>");
      arrayList0.add(segNode0);
      midResult0.setOptBiSegGraph(arrayList0);
      String string0 = midResult0.toHTML();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.setSource("");
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      midResult0.setOptBiSegGraph(arrayList0);
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\"></td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      midResult0.setSource("+:#");
      SegNode segNode0 = new SegNode(210, 210, 210, 0.0, "\u5343\u4EDF\u96F6\u25CB");
      arrayList0.add(segNode0);
      midResult0.setOptSegGraph(arrayList0);
      // Undeclared exception!
      midResult0.toHTML();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      midResult0.setSource("+:#");
      SegNode segNode0 = new SegNode();
      segNode0.setCol(250);
      arrayList0.add(segNode0);
      midResult0.setOptSegGraph(arrayList0);
      String string0 = midResult0.toHTML();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      midResult0.setSource("+:#");
      midResult0.setOptSegGraph(arrayList0);
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">+:#</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      midResult0.setFirstResult(arrayList0);
      midResult0.setSource("OeQ|ujX&z");
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">OeQ|ujX&z</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.setSource("");
      midResult0.addFirstResult("<td width=\"25%\" bgcolor=\"#99CCFF\">\u957F\u5EA6(\u5B57\u8282)</td>");
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\"></td></tr></table><p>\u521D\u6B21\u751F\u6210\u7684\u5206\u8BCD\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\" bgcolor=\"#99CCFF\">\u5E8F\u53F7</td><td width=\"90%\" bgcolor=\"#99CCFF\">\u5206\u8BCD\u7ED3\u679C</td></tr><tr><td width=\"10%\">0</td><td width=\"90%\" ><font color=\"#FF0000\"><b><td width=\"25%\" bgcolor=\"#99CCFF\">\u957F\u5EA6(\u5B57\u8282)</td></b></font</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.setSource("ZNKEf#}d$:JoaL]`");
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      ArrayList<Integer> arrayList1 = new ArrayList<Integer>();
      midResult0.setBipath(arrayList0);
      arrayList0.add(arrayList1);
      Integer integer0 = new Integer((-1));
      arrayList1.add(integer0);
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">ZNKEf#}d$:JoaL]`</td></tr></table><p>\u521D\u6B21\u751F\u6210\u7684\u4E8C\u53C9\u5206\u8BCD\u8DEF\u5F84\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\" bgcolor=\"#99CCFF\">\u5E8F\u53F7</td><td width=\"90%\" bgcolor=\"#99CCFF\">\u4E8C\u53C9\u5206\u8BCD\u8DEF\u5F84</td></tr><tr><td width=\"10%\">0</td><td width=\"90%\">-1&nbsp</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<ArrayList<Integer>> arrayList0 = new ArrayList<ArrayList<Integer>>();
      midResult0.setSource("</b></font</td>");
      midResult0.setBipath(arrayList0);
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\"></b></font</td></td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(1426, 1426, 1426, 1426, "l}deo_N-kK]QkItzGFm");
      arrayList0.add(segNode0);
      midResult0.setBiSegGraph(arrayList0);
      midResult0.setSource("l}deo_N-kK]QkItzGFm");
      // Undeclared exception!
      midResult0.toHTML();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      midResult0.setSource("+:#");
      SegNode segNode0 = new SegNode();
      segNode0.setCol(250);
      arrayList0.add(segNode0);
      midResult0.setBiSegGraph(arrayList0);
      String string0 = midResult0.toHTML();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      midResult0.setSource("+:#");
      midResult0.setBiSegGraph(arrayList0);
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">+:#</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.setSource("<td width=\"10%\" bgcolor=\"#99CCFF\">\u5E8F\u53F7</td>");
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      midResult0.setSegGraph(arrayList0);
      SegNode segNode0 = new SegNode();
      segNode0.setCol(1692);
      arrayList0.add(segNode0);
      String string0 = midResult0.toHTML();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      midResult0.setSource("+:#");
      midResult0.setSegGraph(arrayList0);
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">+:#</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<Atom> arrayList0 = new ArrayList<Atom>();
      Atom atom0 = new Atom();
      arrayList0.add(atom0);
      midResult0.setAtoms(arrayList0);
      midResult0.setSource("\u6C34\u5E93");
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">\u6C34\u5E93</td></tr></table><p>\u8FDB\u884C\u539F\u5B50\u5206\u8BCD\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\" bgcolor=\"#99CCFF\">\u5E8F\u53F7</td><td width=\"40%\" bgcolor=\"#99CCFF\">\u539F\u5B50</td><td width=\"25%\" bgcolor=\"#99CCFF\">\u957F\u5EA6(\u5B57\u8282)</td><td width=\"25%\" bgcolor=\"#99CCFF\">pos</td></tr><tr><td width=\"10%\">0</td><td width=\"40%\">null</td><td width=\"25%\">0</td><td width=\"25%\">0</td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      String string0 = midResult0.toHTML();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.addOptResult("z,:FN~`g/Qylw>");
      midResult0.addOptResult("\u53E3\u5CB8");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.setIndex(1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      midResult0.setSource("+:#");
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(1, 1, 1, 0.0, "");
      arrayList0.add(segNode0);
      midResult0.setSegGraph(arrayList0);
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">+:#</td></tr></table><p>\u521D\u6B21\u751F\u6210\u7684\u5206\u8BCD\u56FE\u8868\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"5%\"></td><td width=\"95.0%\" bgcolor=\"#99CCFF\">1</td></tr><tr><td width=\"5%\">0</td><td width=\"95.0%\">&nbsp</td></tr><tr><td width=\"5%\">1</td><td width=\"95.0%\"><a title=\"pos=1 value=0.0\"></a></td></tr></table>", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      midResult0.setFirstResult(arrayList0);
      midResult0.addFirstResult("/");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MidResult midResult0 = new MidResult();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      midResult0.setOptResult(arrayList0);
      midResult0.setSource("\u57CE\u5E02");
      String string0 = midResult0.toHTML();
      assertEquals("<p>\u8FDB\u884C\u53E5\u5B50\u5206\u5272\u540E\u7684\u7ED3\u679C\uFF1A<table border=\"1\" width=\"100%\"><tr><td width=\"10%\">\u7B2C0\u53E5</td><td width=\"90%\">\u57CE\u5E02</td></tr></table>", string0);
  }
}
