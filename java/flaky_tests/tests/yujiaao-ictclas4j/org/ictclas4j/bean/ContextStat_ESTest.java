/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 02:26:45 GMT 2022
 */

package org.ictclas4j.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.ictclas4j.bean.ContextStat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ContextStat_ESTest extends ContextStat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      contextStat0.getPossibility(1, 0, 489);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      MockFile mockFile0 = new MockFile("", ":R9K");
      File file0 = MockFile.createTempFile("=+J$43{~\"Y ", "H2Q[OG$!$+82+", (File) mockFile0);
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      contextStat0.load((InputStream) mockFileInputStream0, false);
      contextStat0.load((InputStream) mockFileInputStream0, false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      // Undeclared exception!
      try { 
        contextStat0.load((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      // Undeclared exception!
      try { 
        contextStat0.load((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      // Undeclared exception!
      try { 
        contextStat0.load((InputStream) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.bean.ContextStat", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-486), (byte)50);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        contextStat0.load((InputStream) pushbackInputStream0, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      contextStat0.getItem(2827);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      contextStat0.load("", true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      contextStat0.load("=+J$43{~\"Y ", false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      contextStat0.getFreq((-745), 2827);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      contextStat0.load("mm}qWE&;K2-dHG~SV>");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      byte[] byteArray0 = new byte[4];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)50, (byte)50);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      // Undeclared exception!
      contextStat0.load((InputStream) pushbackInputStream0, true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-30);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      contextStat0.load((InputStream) byteArrayInputStream0, true);
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContextStat contextStat0 = new ContextStat();
      boolean boolean0 = contextStat0.load("");
      assertTrue(boolean0);
  }
}
