/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 02:17:48 GMT 2022
 */

package org.ictclas4j.segment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.ictclas4j.bean.ContextStat;
import org.ictclas4j.bean.POS;
import org.ictclas4j.bean.SegNode;
import org.ictclas4j.segment.SegGraph;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SegGraph_ESTest extends SegGraph_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode();
      SegNode segNode1 = segNode0.clone();
      segNode0.setRow((-1));
      SegNode segNode2 = segNode0.clone();
      segGraph0.insert(segNode2, true);
      segGraph0.insert(segNode1, true);
      segGraph0.getLast();
      assertEquals(0, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      ArrayList<POS> arrayList1 = new ArrayList<POS>();
      POS pOS0 = new POS();
      arrayList1.add(pOS0);
      segNode0.setAllPos(arrayList1);
      SegNode segNode1 = segNode0.clone();
      arrayList0.add(segNode1);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      ContextStat contextStat0 = new ContextStat();
      segGraph0.getBestPrev(contextStat0);
      assertEquals(0, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      ArrayList<POS> arrayList1 = new ArrayList<POS>();
      POS pOS0 = new POS();
      arrayList1.add(pOS0);
      arrayList0.add(segNode0);
      segNode0.setAllPos(arrayList1);
      arrayList0.add(segNode0);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      ContextStat contextStat0 = new ContextStat();
      segGraph0.getBestPrev(contextStat0);
      assertEquals(0, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add((SegNode) null);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      arrayList0.add(segNode0);
      int int0 = segGraph0.getMaxCol();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      int int0 = segGraph0.getMaxRow();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      segNode0.setRow(3064);
      arrayList0.add(segNode0);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      ArrayList<SegNode> arrayList1 = segGraph0.getNextElements(0);
      assertNotNull(arrayList1);
      assertFalse(arrayList1.contains(segNode0));
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.insert(segNode0, false);
      segGraph0.getNextElements(1);
      assertEquals(0, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = new SegNode(1420, 1420, (-3080), (-783.5605226955), "?Jn+,Z");
      segGraph0.insert(segNode0, true);
      SegGraph.NextElementIndex segGraph_NextElementIndex0 = segGraph0.new NextElementIndex();
      ArrayList<SegNode> arrayList1 = segGraph_NextElementIndex0.getNextElements(0);
      assertEquals(1420, segGraph0.getMaxRow());
      assertTrue(arrayList1.equals((Object)arrayList0));
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      segNode0.setCol(42);
      SegGraph.NextElementIndex segGraph_NextElementIndex0 = segGraph0.new NextElementIndex();
      ArrayList<SegNode> arrayList1 = segGraph_NextElementIndex0.getNextElements(1);
      assertFalse(arrayList1.contains(segNode0));
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1286, (-1498));
      segGraph0.insert(segNode0, true);
      SegGraph.NextElementIndex segGraph_NextElementIndex0 = segGraph0.new NextElementIndex();
      segGraph_NextElementIndex0.getNextElements(1);
      assertEquals(0, segGraph0.getMaxRow());
      assertEquals(0, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      segGraph0.delete(0, 1607);
      assertFalse(arrayList0.isEmpty());
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      SegNode segNode1 = segGraph0.delete(1899, 1899);
      assertNull(segNode1);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(1598);
      segGraph0.insert(segNode0, true);
      segGraph0.getNodes(1570, false);
      assertEquals(0, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode(656, 761, (-366), 2661.62968250981, "f8RoRD");
      segGraph0.insert(segNode0, true);
      segGraph0.getNodes(656, true);
      assertEquals(656, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(1598);
      segGraph0.insert(segNode0, true);
      SegNode segNode1 = segGraph0.getElement((-1697), 7);
      segGraph0.setElement(segNode1);
      assertEquals(0, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.setRowFirst(true);
      SegNode segNode1 = segGraph0.getElement((-11), (-11));
      segGraph0.insert(segNode0, true);
      segGraph0.setElement(segNode1);
      assertEquals(0, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(39);
      segGraph0.setRowFirst(true);
      segGraph0.insert(segNode0, true);
      segGraph0.getElement(39, (-62));
      assertTrue(segGraph0.isRowFirst());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      segGraph0.setRowFirst(true);
      boolean boolean0 = segGraph0.isRowFirst();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      ArrayList<SegNode> arrayList1 = segGraph0.getSnList();
      assertEquals(0, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SegNode segNode0 = new SegNode(16, 16, 16, 2143.129, (String) null);
      SegGraph segGraph0 = new SegGraph();
      segGraph0.insert(segNode0, false);
      segGraph0.getSnList();
      assertEquals(16, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      int int0 = segGraph0.getSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(1631);
      segGraph0.insert(segNode0, true);
      int int0 = segGraph0.getMaxRow();
      assertEquals(0, segGraph0.getMaxCol());
      assertEquals(1631, int0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode((-17), 1631, 656, 0.0, "");
      segGraph0.insert(segNode0, true);
      int int0 = segGraph0.getMaxCol();
      assertEquals(1, segGraph0.getSize());
      assertEquals(1631, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(1631);
      segGraph0.insert(segNode0, true);
      segGraph0.getLast();
      assertEquals(0, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      ArrayList<POS> arrayList1 = new ArrayList<POS>();
      segNode0.setAllPos(arrayList1);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode1 = segGraph0.getLast();
      assertEquals(0, segNode1.getCol());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode((-2105), (-2105), (-2105), (-2105), "aj<=_h4<aX{8");
      POS pOS0 = new POS((-2105), (-2105));
      segNode0.addPos(pOS0);
      segGraph0.insert(segNode0, true);
      segGraph0.getLast();
      assertEquals(1, segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode((-17), 1631, 656, 0.0, "");
      segGraph0.insert(segNode0, true);
      segGraph0.getLast();
      assertEquals(1, segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      SegNode segNode0 = new SegNode(16, 16, 16, 16, (String) null);
      SegGraph segGraph0 = new SegGraph();
      ArrayList<POS> arrayList0 = new ArrayList<POS>();
      segNode0.setAllPos(arrayList0);
      segGraph0.insert(segNode0, true);
      segGraph0.getElement(16, 16);
      assertEquals(16, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      SegNode segNode0 = new SegNode(16, 16, 16, 2143.129, (String) null);
      SegGraph segGraph0 = new SegGraph();
      segNode0.addPos((POS) null);
      segGraph0.insert(segNode0, false);
      segGraph0.getElement(16, 16);
      assertEquals(16, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = new SegNode((-1982), 1599, (-1), (-1), " Y3Ha{~2`MJcgwC$");
      segGraph0.insert(segNode0, false);
      segGraph0.getElement((-1), 1599);
      assertEquals((-1982), segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = new SegNode((-1086), (-1086), 34, 524.5104, "q");
      segGraph0.insert(segNode0, true);
      segGraph0.getElement((-1086), (-1086));
      assertEquals(1, segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode((-2105), (-2105), (-2105), (-2105), "aj<=_h4<aX{8");
      POS pOS0 = new POS((-2105), (-2105));
      segNode0.addPos(pOS0);
      segGraph0.insert(segNode0, true);
      segGraph0.delete((-2105), (-2105));
      assertEquals(0, segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = new SegNode(549, 549, 549, 0.0, "");
      arrayList0.add(segNode0);
      segGraph0.delete(549, 549);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add((SegNode) null);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      // Undeclared exception!
      try { 
        segGraph0.setElement(segNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.SegGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add((SegNode) null);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      // Undeclared exception!
      try { 
        segGraph0.insert(segNode0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.SegGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      arrayList0.add((SegNode) null);
      // Undeclared exception!
      try { 
        segGraph0.getNodes(7551, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.SegGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add((SegNode) null);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      arrayList0.add(segNode0);
      // Undeclared exception!
      try { 
        segGraph0.getNextElements(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.SegGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      arrayList0.add((SegNode) null);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      // Undeclared exception!
      try { 
        segGraph0.getMaxRow();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.SegGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      arrayList0.add((SegNode) null);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      // Undeclared exception!
      try { 
        segGraph0.getMaxCol();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.SegGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      arrayList0.add((SegNode) null);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      // Undeclared exception!
      try { 
        segGraph0.getElement((-3061), (-3061));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.SegGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      arrayList0.add((SegNode) null);
      arrayList0.add((SegNode) null);
      // Undeclared exception!
      try { 
        segGraph0.getBestPrev((ContextStat) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.SegGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      arrayList0.add((SegNode) null);
      // Undeclared exception!
      try { 
        segGraph0.delete(1899, 1899);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.SegGraph", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = segGraph0.getLast();
      assertNull(segNode0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getLast();
      assertNull(segNode0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      ArrayList<POS> arrayList1 = new ArrayList<POS>();
      POS pOS0 = new POS();
      arrayList1.add(pOS0);
      segNode0.setAllPos(arrayList1);
      arrayList1.add(pOS0);
      arrayList0.add(segNode0);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      ContextStat contextStat0 = new ContextStat();
      segGraph0.getBestPrev(contextStat0);
      assertFalse(segGraph0.isRowFirst());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode();
      SegNode segNode1 = segNode0.clone();
      segNode0.setRow((-1));
      segGraph0.insert(segNode1, true);
      ContextStat contextStat0 = new ContextStat();
      segGraph0.insert(segNode0, false);
      segGraph0.getBestPrev(contextStat0);
      assertEquals(0, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      ContextStat contextStat0 = new ContextStat();
      segGraph0.getBestPrev(contextStat0);
      assertEquals((-1), segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      ContextStat contextStat0 = new ContextStat();
      segGraph0.getBestPrev(contextStat0);
      assertEquals((-1), segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement((-1789), 0);
      segGraph0.setElement(segNode0);
      int int0 = segGraph0.getMaxCol();
      assertEquals(0, segGraph0.getSize());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      int int0 = segGraph0.getMaxCol();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      int int0 = segGraph0.getMaxRow();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      int int0 = segGraph0.getMaxRow();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.insert(segNode0, true);
      int int0 = segGraph0.getSize();
      assertEquals(0, segGraph0.getMaxRow());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      int int0 = segGraph0.getSize();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode();
      segNode0.setRow((-1));
      segGraph0.insert(segNode0, true);
      SegNode segNode1 = new SegNode();
      segGraph0.setElement(segNode1);
      segGraph0.insert(segNode0, true);
      segGraph0.getNextElements(0);
      assertEquals(0, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = segGraph0.getElement(47, 47);
      arrayList0.add(segNode0);
      ArrayList<SegNode> arrayList1 = segGraph0.getNextElements(1370);
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode((-2105), (-2105), (-2105), (-2105), "aj<=_h4<aX{8");
      segGraph0.insert(segNode0, true);
      segGraph0.getNextElements((-2105));
      assertEquals((-2105), segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      ArrayList<SegNode> arrayList1 = segGraph0.getNextElements(0);
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      ArrayList<SegNode> arrayList0 = segGraph0.getNextElements((-1809));
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = segGraph0.getElement(47, 47);
      SegNode segNode1 = segNode0.clone();
      arrayList0.add(segNode1);
      segNode0.setRow(551);
      segGraph0.setElement(segNode0);
      SegGraph.NextElementIndex segGraph_NextElementIndex0 = segGraph0.new NextElementIndex();
      assertEquals(0, segGraph0.getMaxCol());
      assertEquals(2, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      SegGraph.NextElementIndex segGraph_NextElementIndex0 = segGraph0.new NextElementIndex();
      segGraph0.insert(segNode0, false);
      segGraph_NextElementIndex0.getNextElements(0);
      assertEquals(1, segGraph0.getSize());
      assertEquals(0, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode(2327, (byte) (-66), (byte) (-66), 10000.0, "'");
      segGraph0.insert(segNode0, true);
      SegGraph.NextElementIndex segGraph_NextElementIndex0 = segGraph0.new NextElementIndex();
      segGraph_NextElementIndex0.getNextElements(0);
      assertEquals((-66), segGraph0.getMaxCol());
      assertEquals(2327, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.insert(segNode0, true);
      SegGraph.NextElementIndex segGraph_NextElementIndex0 = segGraph0.new NextElementIndex();
      segGraph_NextElementIndex0.getNextElements(63);
      assertEquals(0, segGraph0.getMaxRow());
      assertEquals(0, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      SegGraph.NextElementIndex segGraph_NextElementIndex0 = segGraph0.new NextElementIndex();
      ArrayList<SegNode> arrayList1 = segGraph_NextElementIndex0.getNextElements((-956));
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegGraph.NextElementIndex segGraph_NextElementIndex0 = segGraph0.new NextElementIndex();
      ArrayList<SegNode> arrayList1 = segGraph_NextElementIndex0.getNextElements(0);
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegGraph.NextElementIndex segGraph_NextElementIndex0 = segGraph0.new NextElementIndex();
      ArrayList<SegNode> arrayList0 = segGraph_NextElementIndex0.getNextElements(1598);
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode();
      segGraph0.insert(segNode0, false);
      segGraph0.delete((-1), 17);
      assertEquals(1, segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode();
      segGraph0.insert(segNode0, false);
      segGraph0.delete(0, (-1125));
      assertEquals(1, segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph((ArrayList<SegNode>) null);
      segGraph0.insert((SegNode) null, true);
      SegNode segNode0 = segGraph0.delete(0, 100000);
      assertNull(segNode0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.insert(segNode0, true);
      segGraph0.delete(0, 0);
      assertEquals(0, segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.delete(1597, (-9));
      assertNull(segNode0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(1631);
      segGraph0.insert(segNode0, true);
      SegNode segNode1 = segGraph0.getElement((-1), 100000);
      segGraph0.insert(segNode1, false);
      boolean boolean0 = segGraph0.insert(segNode0, false);
      assertEquals(0, segGraph0.getMaxCol());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = segGraph0.getElement(3736, 100000);
      segGraph0.insert(segNode0, true);
      SegNode segNode1 = new SegNode(3349, 3349, (-1), 0.0, "");
      arrayList0.add(segNode1);
      boolean boolean0 = segGraph0.insert(segNode1, false);
      assertTrue(arrayList0.contains(segNode0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode();
      segGraph0.insert(segNode0, false);
      SegNode segNode1 = new SegNode(0, (-558), 0, 0, "Y");
      boolean boolean0 = segGraph0.insert(segNode1, false);
      assertEquals(0, segGraph0.getMaxCol());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.insert(segNode0, true);
      SegNode segNode1 = segGraph0.getElement(9, 0);
      segNode1.setCol(100000);
      boolean boolean0 = segGraph0.insert(segNode1, false);
      assertEquals(2, segGraph0.getSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = segGraph0.getElement(47, 47);
      SegNode segNode1 = segNode0.clone();
      arrayList0.add(segNode1);
      segNode0.setRow(551);
      segGraph0.setElement(segNode0);
      boolean boolean0 = segGraph0.insert(segNode1, false);
      assertTrue(arrayList0.contains(segNode0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(11);
      segGraph0.insert(segNode0, true);
      SegNode segNode1 = segGraph0.getElement(9, 0);
      SegNode segNode2 = new SegNode();
      segNode1.setCol(100000);
      segGraph0.insert(segNode2, false);
      boolean boolean0 = segGraph0.insert(segNode1, true);
      assertEquals(3, segGraph0.getSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode();
      SegNode segNode1 = segNode0.clone();
      segNode0.setRow((-1));
      segGraph0.insert(segNode0, true);
      segGraph0.insert(segNode1, false);
      boolean boolean0 = segGraph0.insert(segNode1, true);
      assertEquals(0, segGraph0.getMaxRow());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode();
      segGraph0.insert(segNode0, false);
      segNode0.setCol(3349);
      SegNode segNode1 = segGraph0.getElement(7, 0);
      boolean boolean0 = segGraph0.insert(segNode1, true);
      assertEquals(0, segGraph0.getMaxRow());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      segNode0.setCol((-4021));
      SegNode segNode1 = segGraph0.getElement((-1), 488);
      boolean boolean0 = segGraph0.insert(segNode1, true);
      assertEquals(2, segGraph0.getSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(1598);
      segGraph0.insert(segNode0, true);
      SegNode segNode1 = new SegNode();
      boolean boolean0 = segGraph0.insert(segNode1, true);
      assertEquals(0, segGraph0.getMaxCol());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(1598);
      SegNode segNode1 = new SegNode();
      segGraph0.insert(segNode1, true);
      segGraph0.insert(segNode0, true);
      boolean boolean0 = segGraph0.insert(segNode1, true);
      assertEquals(0, segGraph0.getMaxCol());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.insert(segNode0, true);
      segGraph0.getNodes(0, false);
      assertEquals(1, segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.insert(segNode0, false);
      segGraph0.getNodes(0, true);
      assertEquals(0, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = new SegNode();
      segGraph0.insert(segNode0, true);
      segGraph0.getNodes(7, true);
      assertEquals(0, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.insert(segNode0, true);
      segGraph0.getNodes(2301, false);
      assertEquals(0, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      segGraph0.insert((SegNode) null, false);
      segGraph0.getNodes((-1), true);
      assertEquals(0, segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.insert(segNode0, true);
      segGraph0.getNodes((-11), true);
      assertEquals(1, segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      ArrayList<SegNode> arrayList0 = segGraph0.getNodes((-40), true);
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      segNode0.setCol(42);
      SegNode segNode1 = segGraph0.getElement((-1), (-3277));
      segGraph0.setElement(segNode1);
      assertEquals(42, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = segGraph0.getElement(47, 47);
      SegNode segNode1 = segNode0.clone();
      arrayList0.add(segNode1);
      segNode0.setCol(47);
      segGraph0.setElement(segNode0);
      boolean boolean0 = segGraph0.insert(segNode1, false);
      assertEquals(2, segGraph0.getSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = segGraph0.getElement(47, 47);
      arrayList0.add(segNode0);
      segGraph0.setElement(segNode0);
      assertEquals(0, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(1598);
      segGraph0.setRowFirst(true);
      SegNode segNode1 = segGraph0.getElement((-11), (-11));
      segGraph0.insert(segNode1, true);
      segGraph0.setElement(segNode0);
      assertEquals(0, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      segGraph0.setElement((SegNode) null);
      assertEquals((-1), segGraph0.getSize());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode0 = new SegNode((-1), 294, 538, 294, "[R~^I?8C~");
      segGraph0.insert(segNode0, false);
      segGraph0.getElement(1139, (-1));
      assertEquals(294, segGraph0.getMaxCol());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      SegNode segNode0 = new SegNode();
      SegGraph segGraph0 = new SegGraph();
      segGraph0.setRowFirst(true);
      segGraph0.insert(segNode0, false);
      segGraph0.getElement(0, 0);
      assertEquals(0, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segNode0.setRow(1631);
      segGraph0.setRowFirst(true);
      segGraph0.insert(segNode0, false);
      SegNode segNode1 = segGraph0.getElement(1631, 12);
      segGraph0.setElement(segNode1);
      assertEquals(1631, segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph((ArrayList<SegNode>) null);
      SegNode segNode0 = segGraph0.getElement(1432, 1432);
      segNode0.setRow(1432);
      segGraph0.setRowFirst(true);
      segGraph0.insert(segNode0, true);
      segGraph0.getElement(1432, (-1));
      assertTrue(segGraph0.isRowFirst());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.setRowFirst(true);
      segGraph0.insert(segNode0, true);
      segGraph0.getElement((-1), 100000);
      assertTrue(segGraph0.isRowFirst());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.setRowFirst(true);
      segGraph0.insert(segNode0, false);
      segGraph0.getElement(1631, 12);
      assertTrue(segGraph0.isRowFirst());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      SegNode segNode0 = segGraph0.getElement(1631, 1631);
      segGraph0.setRowFirst(true);
      segGraph0.insert(segNode0, true);
      segGraph0.getElement((-11), (-11));
      assertTrue(segGraph0.isRowFirst());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      boolean boolean0 = segGraph0.isRowFirst();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegGraph segGraph0 = new SegGraph(arrayList0);
      segGraph0.setSnList(arrayList0);
      assertEquals((-1), segGraph0.getMaxRow());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      SegGraph segGraph0 = new SegGraph();
      ArrayList<SegNode> arrayList0 = segGraph0.getSnList();
      assertNull(arrayList0);
  }
}
