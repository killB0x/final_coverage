/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 02:19:57 GMT 2022
 */

package org.ictclas4j.segment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.ictclas4j.bean.Dictionary;
import org.ictclas4j.bean.SegNode;
import org.ictclas4j.segment.AdjustSeg;
import org.ictclas4j.segment.PosTagger;
import org.ictclas4j.segment.SegGraph;
import org.ictclas4j.utility.Utility;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AdjustSeg_ESTest extends AdjustSeg_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      arrayList0.add(segNode0);
      // Undeclared exception!
      try { 
        AdjustSeg.firstAdjust(arrayList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.AdjustSeg", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(2464, 2464, 28280, 28284, "mRG9IN2;$![mt");
      arrayList0.add(segNode0);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode1 = segGraph0.getElement(28284, 538);
      arrayList0.add(segNode1);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "01", dictionary0);
      // Undeclared exception!
      try { 
        AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(2464, 2464, 28280, 28284, "mRG9IN2;$![mt");
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PLACE;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, (String) null, dictionary0);
      // Undeclared exception!
      try { 
        AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(2464, 2464, 28280, 28284, "mRG9IN2;$![mt");
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PLACE;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, (String) null, dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertEquals(1, arrayList1.size());
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(2037, 2649, 28160, (-927.866624720669), "");
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "01", dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertFalse(arrayList1.isEmpty());
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(2509, (-2084246467), 30208, 0.9, "lr&uv}=,I=s");
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "02", dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertNotNull(arrayList1);
      assertEquals(1, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(100, 1260, 28275, 1507.65846013, "KMC");
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "nv", dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertNotNull(arrayList1);
      assertEquals(2, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-1120), (-1120), 28275, 1507.65846013, "01");
      SegNode segNode1 = new SegNode(1808, 27904, (-925), (-1203.8070979), "an");
      arrayList0.add(segNode0);
      arrayList0.add(segNode1);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PERSON;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, (InputStream) null, (InputStream) null, dictionary0);
      // Undeclared exception!
      try { 
        AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.segment.AdjustSeg", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(28215, 28215, 30318, 30318, "01");
      arrayList0.add(segNode0);
      SegNode segNode1 = new SegNode((-2941), (-2744), 24832, 1779.0, "chuo");
      arrayList0.add(segNode1);
      arrayList0.add(segNode1);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "\u5F20", dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertNotNull(arrayList1);
      assertEquals(3, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-2084246457), (-2084246457), 27904, 27904, "01");
      arrayList0.add(segNode0);
      SegGraph segGraph0 = new SegGraph(arrayList0);
      SegNode segNode1 = segGraph0.getElement((-2084246457), (-20304));
      arrayList0.add(segNode1);
      arrayList0.add(segNode1);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "01", dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertNotNull(arrayList1);
      assertEquals(3, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-15652), (-15652), 29952, 0.090367, "%2I<$e=PNzoDJ\"MlzE]");
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary("02");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "\u70B9", dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertFalse(arrayList1.isEmpty());
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-15652), (-15652), 29979, 0.090367, "%2I<$e=PNzoDJ\"MlzE]");
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary("%2I<$e=PNzoDJ\"MlzE]");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, (String) null, dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertNotNull(arrayList1);
      assertEquals(1, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-2084246461), (-2084246461), (-2084246461), (-2084246461), "01");
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "01", dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertNotNull(arrayList1);
      assertEquals(2, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(28160, (-1073741822), 28160, 0.0, "01");
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary("01");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "01", dictionary0);
      // Undeclared exception!
      try { 
        AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-5588), 27895, 30208, (-5588), "01");
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary("yue");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "yue", dictionary0);
      // Undeclared exception!
      try { 
        AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-2084246461), (-2084246461), (-2084246461), (-2084246461), "01");
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "\u6708\u65E5\u65F6\u5206\u79D2", dictionary0);
      arrayList0.add(segNode0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      arrayList1.add(segNode0);
      posTagger0.posTag(arrayList1);
      ArrayList<SegNode> arrayList2 = AdjustSeg.finaAdjust(arrayList1, posTagger0, posTagger0);
      assertEquals(4, arrayList1.size());
      assertEquals(2, arrayList2.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(1260, 1260, 27904, 27904, "fan");
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PLACE;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "/2_(5|6#f%", (Dictionary) null);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertNotNull(arrayList1);
      assertEquals(3, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-2084246461), (-2084246461), (-2084246461), (-2084246461), "01");
      arrayList0.add(segNode0);
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "\u6708\u65E5\u65F6\u5206\u79D2", dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      assertNotNull(arrayList1);
      
      arrayList1.add(segNode0);
      posTagger0.posTag(arrayList1);
      ArrayList<SegNode> arrayList2 = AdjustSeg.finaAdjust(arrayList1, posTagger0, posTagger0);
      assertEquals(3, arrayList1.size());
      assertEquals(2, arrayList2.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-1683), (-1683), (-1683), (-1683), "\u5E74");
      arrayList0.add(segNode0);
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      Dictionary dictionary0 = new Dictionary("T:Z,%w+<$i");
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, (InputStream) null, (InputStream) null, dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, (PosTagger) null);
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      arrayList0.add((SegNode) null);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, (PosTagger) null, (PosTagger) null);
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "\u6708\u65E5\u65F6\u5206\u79D2", dictionary0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.finaAdjust(arrayList0, posTagger0, posTagger0);
      assertNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PLACE;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "/2_(5|6#f%", (Dictionary) null);
      ArrayList<SegNode> arrayList0 = AdjustSeg.finaAdjust((ArrayList<SegNode>) null, posTagger0, posTagger0);
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(1260, 1260, 1260, 1260, "/");
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      assertEquals(2, arrayList1.size());
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-2084246467), (-2084246467), (-2084246467), (-2084246467), "01");
      arrayList0.add(segNode0);
      SegNode segNode1 = new SegNode((-2084246467), (-2084246467), 225, (-2084246467), "i-SexT4v =T");
      segNode1.setSrcWord("-NAvB*LzOQR^bSTfbE");
      arrayList0.add(segNode1);
      arrayList0.add(segNode0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      assertNotNull(arrayList1);
      assertEquals(3, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(478, 478, 478, 0.009735, "7J,,");
      arrayList0.add(segNode0);
      SegNode segNode1 = new SegNode((-2084246461), 650, (-1683), (-2520.99), "\u5E74");
      arrayList0.add(segNode1);
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      assertNotNull(arrayList1);
      assertEquals(1, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-1683), (-1683), (-1683), (-1683), "\u5E74");
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      assertEquals(2, arrayList1.size());
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode();
      segNode0.setWord("\u6708\u4EFD");
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      assertEquals(2, arrayList1.size());
      assertNotNull(arrayList1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-2084246461), (-2084246461), (-2084246461), (-2084246461), "01");
      arrayList0.add(segNode0);
      SegNode segNode1 = new SegNode((-2084246461), (-2129), (-2084246461), (-2129), "\u79D2");
      arrayList0.add(segNode1);
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      assertNotNull(arrayList1);
      assertEquals(1, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode(2310, (-2084246467), (-8), (-1040.61133669669), "\u70B9");
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      arrayList0.add(segNode0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      assertNotNull(arrayList1);
      assertEquals(2, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      SegNode segNode0 = new SegNode((-2084246467), (-2084246467), (-2084246467), (-2084246467), "01");
      arrayList0.add(segNode0);
      SegNode segNode1 = new SegNode((-2084246467), (-2084246467), 225, (-2084246467), "i-SexT4v =T");
      arrayList0.add(segNode1);
      arrayList0.add(segNode0);
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      assertNotNull(arrayList1);
      assertEquals(3, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = new ArrayList<SegNode>();
      ArrayList<SegNode> arrayList1 = AdjustSeg.firstAdjust(arrayList0);
      assertEquals(0, arrayList1.size());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArrayList<SegNode> arrayList0 = AdjustSeg.firstAdjust((ArrayList<SegNode>) null);
      assertNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AdjustSeg adjustSeg0 = new AdjustSeg();
  }
}
