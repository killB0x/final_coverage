/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 26 02:09:28 GMT 2022
 */

package org.ictclas4j.utility;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import java.io.SyncFailedException;
import java.util.Enumeration;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.ictclas4j.bean.Dictionary;
import org.ictclas4j.segment.PosTagger;
import org.ictclas4j.utility.Utility;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Utility_ESTest extends Utility_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Utility.charType("\uFF10\uFF11\uFF12@\uFF136\uFF15\uFF16\uFF17 \uFF19");
      Utility.gbGenerate("uu");
      Utility.CC_ID("uu");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)118;
      byteArray0[1] = (byte)77;
      byteArray0[2] = (byte)123;
      byteArray0[3] = (byte)40;
      byteArray0[4] = (byte) (-35);
      Utility.isAllIndex(byteArray0);
      Utility.isYearTime("c");
      int[] intArray0 = new int[5];
      intArray0[0] = (int) (byte)123;
      intArray0[1] = (int) (byte)77;
      intArray0[2] = (int) (byte)123;
      intArray0[3] = (-11019);
      intArray0[4] = (int) (byte)123;
      Utility.removeInvalid(intArray0);
      Utility.CC_CHAR2(123);
      Utility.TAG_TYPE.values();
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)40;
      byteArray1[1] = (byte)45;
      Utility.strcat(byteArray1, byteArray0, (-1638));
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = "\u7164\u77FF";
      Utility.isDBCCase("\u7164\u77FF");
      Utility.isAllNum("\u7164\u77FF");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-57);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "\u7164\u77FF");
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)4;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[3] = (byte) (-80);
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte) (-35);
      byteArray0[6] = (byte)24;
      Utility.strcpy(byteArray0, byteArray0);
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        Utility.CC_Find(byteArray0, byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Utility.getGB(43);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Utility.TAG_TYPE.values();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte) (-51);
      byteArray0[3] = (byte)28;
      Utility.isAllIndex(byteArray0);
      Utility.isAllLetter("kuan");
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Utility.getCharCount("fCjP>Ys[3'+&KdoPvW", "?V13jZ2T8B)_07:B");
      Utility.isAllNum("?V13jZ2T8B)_07:B");
      Utility.isAllSingleByte("@");
      Utility utility0 = new Utility();
      Utility.isYearTime("2t");
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.CC_Find(byteArray0, (byte[]) null);
      Utility.isDelimiter("\u6C34\u5E93");
      Utility.isAllChineseNum("\u6C34\u5E93");
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-10);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte) (-18);
      byteArray0[5] = (byte) (-62);
      byteArray0[6] = (byte)39;
      Utility.strstr(byteArray0, byteArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Utility.strcat(byteArray0, byteArray0, (-1898));
      Utility.CC_Generate("\u5730\u533A");
      Utility.getGB(248);
      Utility.strcat(byteArray0, byteArray0, (-2820));
      Utility.charType("\u8349");
      Utility.getForeignCharCount("\u5730\u533A");
      Utility utility0 = new Utility();
      utility0.GetForeignType("\u5C71\u4E18");
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Utility.isSBCCase("lQ$W2,4lTZs#rR)tE^w");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Utility.isSingle("@du0;[/Zi");
      Utility utility0 = new Utility();
      Utility.isAllChinese("\u672A##\u4EBA");
      Utility.getForeignCharCount("\u672A##\u6570");
      Utility.isAllNum("/");
      Utility.isAllLetter("c");
      Utility.CC_ID("\u59CB##\u59CB");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-2);
      byteArray0[1] = (byte)94;
      byteArray0[2] = (byte)94;
      Utility.isAllDelimiter(byteArray0);
      Utility.getGB(193);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)89;
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "`*^@tw*XxT=%U&", (Dictionary) null);
      // Undeclared exception!
      try { 
        Utility.chineseNameSplit("\u9AD8\u539F", posTagger0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)29;
      byteArray0[2] = (byte)89;
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "`*^@tw*XxT=%U&", (Dictionary) null);
      // Undeclared exception!
      try { 
        Utility.chineseNameSplit("\u9AD8\u539F", posTagger0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Utility.isInAggregate("13VEgfk$wL@k", "13VEgfk$wL@k");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Veq{Y:~Ipb@.ctx");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "={RU");
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "Veq{Y:~Ipb@", dictionary0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Utility.isYearTime("\u96F6\u25CB\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396");
      Utility.CC_CHAR1(175);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)53;
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte)7;
      byteArray0[3] = (byte)65;
      byteArray0[4] = (byte)67;
      byteArray0[5] = (byte) (-15);
      byteArray0[6] = (byte) (-79);
      byteArray0[7] = (byte) (-8);
      byteArray0[8] = (byte)23;
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Utility.getGB(57);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte)19;
      int int0 = Utility.CC_NUM;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-39);
      byteArray1[1] = (byte)19;
      byte[] byteArray2 = new byte[20];
      byteArray2[0] = (byte)70;
      byteArray2[1] = (byte) (-39);
      byteArray2[2] = (byte)19;
      byteArray2[3] = (byte) (-39);
      byteArray2[4] = (byte)19;
      byteArray2[5] = (byte)19;
      byteArray2[6] = (byte) (-39);
      byteArray2[7] = (byte) (-39);
      byteArray2[8] = (byte) (-39);
      Utility.CC_Find(byteArray1, byteArray2);
      Utility.strstr(byteArray2, byteArray0);
      Utility.CC_CHAR2((byte)19);
      Utility utility0 = new Utility();
      utility0.GetForeignType("\u3002");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Utility.charType("\u96A7\u9053");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-39);
      byteArray0[1] = (byte) (-39);
      byteArray0[2] = (byte)122;
      byteArray0[3] = (byte)87;
      byteArray0[4] = (byte)122;
      byteArray0[5] = (byte)122;
      byteArray0[6] = (byte)122;
      Utility.isAllNonChinese(byteArray0);
      Utility.isAllChinese("h");
      Utility.isAllNum("-oK8w:G;z:ue5");
      Utility.isUnknownWord("''zLCXS_r&/I_");
      Utility.TAG_TYPE.values();
      Utility.isAllNum("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-121);
      Utility.isAllChinese("g");
      Utility utility0 = new Utility();
      utility0.GetForeignType("e|-r%m}B");
      Utility.isAllSingleByte("\u3001\uFF0C\uFF08\uFF09\u201C\u201D\u2018\u2019");
      Utility.getCharCount("GBK", "\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.isAllIndex(byteArray0);
      Utility.isAllChineseNum("\uFF0E");
      Utility.strncmp(byteArray0, 650, byteArray0, 2);
      Utility.isInAggregate("\u672A##\u5730", "\uFF0E");
      Utility.isAllLetter("\n\r \u3000");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      String string0 = "lQ$W2,4lTZs#rR)tE^w";
      Utility.isSBCCase("lQ$W2,4lTZs#rR)tE^w");
      byte byte0 = (byte)94;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Utility.isSingle("lQ$W2,4lTZs#rR)tE^w");
      Utility utility0 = new Utility();
      Utility.isAllChinese("\n\r \u3000");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "`*^@tw*XxT=%U&", (Dictionary) null);
      // Undeclared exception!
      try { 
        Utility.chineseNameSplit("\u81EA\u6CBB\u5DDE", posTagger0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)89;
      byteArray0[1] = (byte)125;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-86);
      byteArray1[1] = (byte) (-86);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Utility.strstr(byteArray0, byteArray1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Utility.getCharCount("?V13jZ2T8B)_07:B", "?V13jZ2T8B)_07:B");
      Utility.isSingle("?V13jZ2T8B)_07:B");
      Utility.isAllSingleByte("?V13jZ2T8B)_07:B");
      Utility utility0 = new Utility();
      Dictionary dictionary0 = new Dictionary();
      Utility.getForeignCharCount("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
      Utility.isInAggregate("\u672A##\u4EBA", "@");
      utility0.GetForeignType("?V13jZ2T8B)_07:B");
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)66;
      // Undeclared exception!
      try { 
        Utility.isAllIndex(byteArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Utility.isYearTime("CZ%wqdog*ER");
      int int0 = Utility.TT_RUSSIAN;
      Utility.isAllChineseNum("CZ%wqdog*ER");
      Utility.isSingle("Q");
      Utility utility0 = new Utility();
      Utility.isAllChinese("e|-r%m}B");
      Utility utility1 = new Utility();
      utility0.GetForeignType("ajfVXiJG)sV|ycl");
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      // Undeclared exception!
      try { 
        Utility.readBytes(dataInputStream0, 5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)30;
      Utility.strcpy(byteArray0, byteArray0);
      Utility.isAllNum("%");
      Utility.isAllLetter("07gb");
      Utility.CC_ID("07gb");
      Utility.isAllDelimiter(byteArray0);
      Utility.CC_Generate("9-siE8agQ9H(`-V");
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Utility utility0 = new Utility();
      utility0.GetForeignType((String) null);
      Utility.isAllSingleByte((String) null);
      int int0 = Utility.CT_SENTENCE_END;
      Utility.isAllIndex(byteArray0);
      Utility.isAllChineseNum(",()\"'");
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-56);
      byteArray1[1] = (byte)91;
      Utility.strncmp(byteArray1, (byte)91, byteArray1, 1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Utility.getGB(1858);
      Utility.isSBCCase("lQ$W2,4lTZs#rR)tE^w");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte) (-16);
      byteArray0[2] = (byte) (-87);
      byteArray0[3] = (byte) (-91);
      byteArray0[4] = (byte) (-7);
      byteArray0[5] = (byte) (-69);
      byteArray0[6] = (byte) (-107);
      byteArray0[7] = (byte) (-42);
      int int0 = Utility.CT_NUM;
      Utility.CC_Find(byteArray0, byteArray0);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)13;
      byteArray1[1] = (byte) (-7);
      byteArray0[3] = (byte) (-16);
      byteArray1[3] = (byte) (-91);
      byteArray1[4] = (byte) (-7);
      Utility.isAllChinese("lQ$W2,4lTZs#rR)tE^w");
      Utility.getCCPrefix(byteArray1);
      Utility.getGB(1858);
      Utility.getCCPrefix(byteArray0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Utility.isYearTime("CZ%wqdog*ER");
      int int0 = Utility.TT_RUSSIAN;
      Utility.isSingle("Q");
      Utility utility0 = new Utility();
      Utility.isAllChinese("e|-r%m}B");
      Utility utility1 = new Utility();
      utility0.GetForeignType("ajfVXiJG)sV|ycl");
      Utility.isAllSingleByte("\u3001\uFF0C\uFF08\uFF09\u201C\u201D\u2018\u2019");
      Utility.getCharCount("\u672A##\u6570", "j9jn{jt's-)`j6r?lx}");
      Utility.isAllIndex(byteArray0);
      Utility.isAllChineseNum("\u672A##\u4E32");
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)51;
      byteArray1[1] = (byte)107;
      byteArray1[2] = (byte)51;
      byteArray1[3] = (byte)107;
      byteArray1[4] = (byte)14;
      Utility.strncmp(byteArray0, 0, byteArray1, 1);
      Utility.isInAggregate("\n\r \u3000", "\n\r \u3000");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Utility.isSBCCase("");
      Utility.isAllForeign("WC2z22ert");
      Utility utility0 = new Utility();
      Utility.getForeignCharCount(",()\"'");
      Utility.isAllNum("");
      Utility.isAllNum((String) null);
      Utility.isAllLetter(",()\"'");
      Utility.CC_ID("TqbH8,ZN`1i5EdEY");
      Utility.isAllChineseNum("|CsRAa=/dU9E7_qB9e");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte) (-84);
      Utility.strncmp(byteArray0, 1, byteArray0, 0);
      Utility.CC_CHAR2(10);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)89;
      byteArray0[1] = (byte)125;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-86);
      byteArray1[1] = (byte) (-86);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Utility.strstr(byteArray0, byteArray1);
      Utility.isAllNonChinese(byteArray1);
      Utility.getCharCount("fCjP>Ys[3'+&KdoPvW", "?V13jZ2T8B)_07:B");
      Utility.isSingle("?V13jZ2T8B)_07:B");
      Utility.isAllSingleByte("@");
      Utility utility0 = new Utility();
      Utility.isYearTime("0t");
      Dictionary dictionary0 = new Dictionary();
      Utility.isInAggregate("\u672A##\u4EBA", "@");
      utility0.GetForeignType("?V13jZ2T8B)_07:B");
      byte[] byteArray2 = new byte[1];
      Utility.strcpy(byteArray2, byteArray2);
      byteArray2[0] = (byte)66;
      // Undeclared exception!
      try { 
        Utility.isAllIndex(byteArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Utility.getCharCount("fCjP>Ys[3'+&KdoPvW", "?V13jZ2T8B)_07:B");
      Utility.isSingle("?V13jZ2T8B)_07:B");
      Utility.isAllSingleByte("@");
      Utility utility0 = new Utility();
      Utility.isYearTime("0t");
      Utility.isSingle((String) null);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Utility.getUnsigned((byte) (-80));
      Utility.getGB((byte) (-80));
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-80);
      byteArray0[1] = (byte) (-80);
      byteArray0[2] = (byte) (-80);
      byteArray0[3] = (byte) (-80);
      byteArray0[4] = (byte) (-80);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      Utility.getUnsigned((byte) (-70));
      Utility.strcpy(byteArray0, byteArray0, (-2158));
      Utility.isDBCCase((String) null);
      Utility.charType((String) null);
      Utility.isYearTime((String) null);
      Utility.getGB((-2134));
      Utility.strncmp(byteArray0, (byte) (-75), byteArray0, (-1522));
      Utility.isUnknownWord((String) null);
      Utility.isAllLetter("\u00B1+\u2014-\uFF0B");
      Utility.isAllSingleByte("\u96EA\u5CF0");
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      Utility utility0 = new Utility();
      Utility.isAllLetter("\n\r \u3000");
      utility0.GetForeignType("\u00B1+\u2014-\uFF0B");
      Utility.CC_ID(",()\"'");
      Utility.CC_ID((String) null);
      Utility.getCharCount("t?gy;DVY", "\u672A##\u4EBA");
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Utility.isAllLetter("g[QHD:YzR F");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-72);
      byteArray0[1] = (byte) (-30);
      byteArray0[2] = (byte) (-72);
      Utility.strcat(byteArray0, byteArray0, 1763);
      Utility.isAllNum("g[QHD:YzR F");
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.isAllDelimiter(byteArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.getGB(89);
      Utility.CC_Find(byteArray0, byteArray0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)43;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-85);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-8);
      Utility.strcat(byteArray0, byteArray0, (byte)43);
      Utility.charType("ctEbf<'Wrn~.W8");
      Utility.isAllChinese("85HZ");
      Utility.isAllIndex(byteArray0);
      Utility.isAllChineseNum("85HZ");
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-8);
      byteArray1[1] = (byte)94;
      byteArray1[2] = (byte)94;
      byteArray1[3] = (byte)43;
      byteArray1[4] = (byte)3;
      byteArray1[5] = (byte)94;
      byteArray1[6] = (byte) (-85);
      Utility.isAllNonChinese(byteArray1);
      Utility.isAllChinese("85HZ");
      Utility.strcpy(byteArray1, byteArray1, (int) (byte) (-1));
      Utility.strncpy(byteArray1, byteArray1, (-1743));
      Utility.TAG_TYPE.values();
      Utility.TAG_TYPE.values();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte) (-55);
      Utility.isAllDelimiter(byteArray0);
      Utility.strcat(byteArray0, byteArray0, (byte) (-55));
      Utility.CC_CHAR1((-1));
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (byte)4;
      intArray0[2] = (int) (byte) (-55);
      Utility.binarySearch((-1), intArray0);
      Utility.isYearTime("\u767E\u5343\u4E07\u4EBF\u4F70\u4EDF\uFF05\u2030");
      int int0 = Utility.CC_NUM;
      Utility.CC_CHAR2(6768);
      Utility.isUnknownWord("\u767E\u5343\u4E07\u4EBF\u4F70\u4EDF\uFF05\u2030");
      Utility.isSBCCase("U[rhib'4JG@\u0005n$$gz");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Utility.getGB(984);
      Utility.isSBCCase("\u548C");
      byte byte0 = (byte)94;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[0];
      Utility.isAllDelimiter(byteArray0);
      Utility.getForeignCharCount("\u672A##");
      Utility.isSingle("jiao");
      Utility utility0 = new Utility();
      Utility.isAllChinese("\u575D\u90A6\u5821\u676F\u57CE\u6C60\u6751\u5355\u5C9B\u9053\u5824\u5E97\u6D1E\u6E21\u961F\u6CD5\u5CF0\u5E9C\u5188\u6E2F\u9601\u5BAB\u6C9F\u56FD\u6D77\u53F7\u6CB3\u6E56\u73AF\u96C6\u6C5F\u5956\u7901\u89D2\u8857\u4E95\u90E1\u5751\u53E3\u77FF\u91CC\u5CAD\u697C\u8DEF\u95E8\u76DF\u5E99\u5F04\u724C\u6D3E\u5761\u94FA\u65D7\u6865\u533A\u6E20\u6CC9\u4EBA\u5C71\u7701\u5E02\u6C34\u5BFA\u5854\u53F0\u6EE9\u575B\u5802\u5385\u4EAD\u5C6F\u6E7E\u6587\u5C4B\u6EAA\u5CE1\u53BF\u7EBF\u4E61\u5DF7\u578B\u6D0B\u7A91\u8425\u5C7F\u8BED\u56ED\u82D1\u9662\u95F8\u5BE8\u7AD9\u9547\u5DDE\u5E84\u65CF\u9642\u5EB5\u753A");
      utility0.GetForeignType("\u81EA\u6CBB\u533A");
      Utility.isAllSingleByte("\u00B7\u2014\u963F\u57C3\u827E\u7231\u5B89\u6602\u6556\u5965\u6FB3\u7B06\u82AD\u5DF4\u767D\u62DC\u73ED\u90A6\u4FDD\u5821\u9C8D\u5317\u8D1D\u672C\u6BD4\u6BD5\u5F7C\u522B\u6CE2\u73BB\u535A\u52C3\u4F2F\u6CCA\u535C\u5E03\u624D\u91C7\u4ED3\u67E5\u5DEE\u67F4\u5F7B\u5DDD\u8328\u6148\u6B21\u8FBE\u5927\u6234\u4EE3\u4E39\u65E6\u4F46\u5F53\u9053\u5FB7\u5F97\u7684\u767B\u8FEA\u72C4\u8482\u5E1D\u4E01\u4E1C\u675C\u6566\u591A\u989D\u4FC4\u5384\u9102\u6069\u5C14\u4F10\u6CD5\u8303\u83F2\u82AC\u8D39\u4F5B\u592B\u798F\u5F17\u752B\u5676\u76D6\u5E72\u5188\u54E5\u6208\u9769\u845B\u683C\u5404\u6839\u53E4\u74DC\u54C8\u6D77\u7F55\u7FF0\u6C57\u6C49\u8C6A\u5408\u6CB3\u8D6B\u4EA8\u4FAF\u547C\u80E1\u534E\u970D\u57FA\u5409\u53CA\u52A0\u8D3E\u575A\u7B80\u6770\u91D1\u4EAC\u4E45\u5C45\u541B\u5580\u5361\u51EF\u574E\u5EB7\u8003\u67EF\u79D1\u53EF\u514B\u80AF\u5E93\u594E\u62C9\u5587\u83B1\u6765\u5170\u90CE\u6717\u52B3\u52D2\u96F7\u7D2F\u695E\u9ECE\u7406\u674E\u91CC\u8389\u4E3D\u5386\u5229\u7ACB\u529B\u8FDE\u5EC9\u826F\u5217\u70C8\u6797\u9686\u5362\u864F\u9C81\u8DEF\u4F26\u4ED1\u7F57\u6D1B\u739B\u9A6C\u4E70\u9EA6\u8FC8\u66FC\u8305\u8302\u6885\u95E8\u8499\u76DF\u7C73\u871C\u5BC6\u654F\u660E\u6469\u83AB\u58A8\u9ED8\u59C6\u6728\u7A46\u90A3\u5A1C\u7EB3\u4E43\u5948\u5357\u5185\u5C3C\u5E74\u6D85\u5B81\u7EBD\u52AA\u8BFA\u6B27\u5E15\u6F58\u7554\u5E9E\u57F9\u4F69\u5F6D\u76AE\u5E73\u6CFC\u666E\u5176\u5951\u6070\u5F3A\u4E54\u5207\u94A6\u6C81\u6CC9\u8BA9\u70ED\u8363\u8089\u5112\u745E\u82E5\u8428\u585E\u8D5B\u6851\u745F\u68EE\u838E\u6C99\u5C71\u5584\u7ECD\u820D\u5723\u65BD\u8BD7\u77F3\u4EC0\u53F2\u58EB\u5B88\u65AF\u53F8\u4E1D\u82CF\u7D20\u7D22\u5854\u6CF0\u5766\u6C64\u5510\u9676\u7279\u63D0\u6C40\u56FE\u571F\u5410\u6258\u9640\u74E6\u4E07\u738B\u65FA\u5A01\u97E6\u7EF4\u9B4F\u6E29\u6587\u7FC1\u6C83\u4E4C\u543E\u6B66\u4F0D\u897F\u9521\u5E0C\u559C\u590F\u76F8\u9999\u6B47\u8C22\u8F9B\u65B0\u7259\u96C5\u4E9A\u5F66\u5C27\u53F6\u4F9D\u4F0A\u8863\u5B9C\u4E49\u56E0\u97F3\u82F1\u96CD\u5C24\u4E8E\u7EA6\u5BB0\u6CFD\u589E\u8A79\u73CD\u6CBB\u4E2D\u4EF2\u6731\u8BF8\u5353\u5B5C\u7956\u4F50\u4F3D\u5A05\u5C15\u8153\u6ED5\u6D4E\u5609\u6D25\u8D56\u83B2\u7433\u5F8B\u7565\u6155\u59AE\u8042\u88F4\u6D66\u5947\u9F50\u7434\u8339\u73CA\u536B\u6B23\u900A\u672D\u54F2\u667A\u5179\u8299\u6C76\u8FE6\u73C0\u742A\u68B5\u6590\u80E5\u9EDB");
      Utility.isAllIndex(byteArray0);
      Utility.isAllNum("\u3001\uFF0C\uFF08\uFF09\u201C\u201D\u2018\u2019");
      Utility.isDBCCase("xuan");
      // Undeclared exception!
      try { 
        Utility.strcpy(byteArray0, byteArray0, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      int int0 = Utility.WORD_MAXLENGTH;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte) (-85);
      byteArray0[2] = (byte)55;
      byteArray0[3] = (byte) (-88);
      byteArray0[4] = (byte)6;
      byteArray0[5] = (byte)25;
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.getCCPrefix(byteArray0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Utility.isAllLetter((String) null);
      byte[] byteArray0 = new byte[0];
      Utility.strstr(byteArray0, byteArray0);
      String string0 = "\uFF10\uFF11\uFF12\uFF13\uFF14\uFF15\uFF16\uFF17\uFF18\uFF19";
      Utility.isYearTime("\uFF10\uFF11\uFF12\uFF13\uFF14\uFF15\uFF16\uFF17\uFF18\uFF19");
      byte byte0 = (byte) (-60);
      Utility.getUnsigned((byte) (-60));
      Utility.getGB((byte) (-60));
      // Undeclared exception!
      try { 
        Utility.getCharCount((String) null, "0'on");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)30;
      Utility.strcpy(byteArray0, byteArray0);
      Utility.CC_Find(byteArray0, byteArray0);
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        Utility.strstr(byteArray0, byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-85);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)43;
      byteArray0[3] = (byte) (-8);
      byteArray0[4] = (byte) (-1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Utility.strcat(byteArray0, byteArray0, (byte)43);
      Utility.charType("85HZ");
      Utility.isAllChinese("85HZ");
      Utility.isAllIndex(byteArray0);
      Utility.isAllChineseNum("85HZ");
      Utility.isAllNonChinese(byteArray0);
      Utility.isAllChinese("85HZ");
      Utility.strcpy(byteArray0, byteArray0, (int) (byte) (-85));
      String string0 = "qbM|4\"p8<de]-|jCM";
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PLACE;
      Dictionary dictionary0 = new Dictionary();
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "@t8l8558Z({IAA;f2", dictionary0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)125;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-86);
      byteArray1[1] = (byte) (-86);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Utility.strstr(byteArray0, byteArray1);
      Utility.isAllNonChinese(byteArray1);
      Utility.getCharCount("fCjP>Ys[3'+&KdoPvW", "?V13jZ2T8B)_07:B");
      Utility.isSingle("?V13jZ2T8B)_07:B");
      Utility.isAllSingleByte("@");
      Utility utility0 = new Utility();
      Dictionary dictionary0 = new Dictionary();
      Utility.isInAggregate("\u672A##\u4EBA", "@");
      Utility.isUnknownWord("\u672A##\u6570");
      utility0.GetForeignType("?V13jZ2T8B)_07:B");
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)66;
      // Undeclared exception!
      try { 
        Utility.isAllIndex(byteArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Utility.isYearTime(",R3j$");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)66;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte)66;
      byteArray0[4] = (byte)66;
      byteArray0[5] = (byte)66;
      byteArray0[6] = (byte)66;
      // Undeclared exception!
      try { 
        Utility.isAllIndex(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 7 out of bounds for length 7
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Utility.charType("\u96A7\u9053");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)122;
      // Undeclared exception!
      try { 
        Utility.isAllIndex(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)57;
      Utility.strcpy(byteArray0, byteArray0);
      Utility.strcat(byteArray0, byteArray0, (byte)57);
      Utility.isDelimiter("eed=1{:QKeE&29");
      Utility.isAllSingleByte("ming");
      Utility.charType("eed=1{:QKeE&29");
      Utility.isInAggregate("", "ming");
      Utility.isAllIndex(byteArray0);
      Utility.isAllSingleByte((String) null);
      Utility.CC_Generate("eed=1{:QKeE&29");
      Utility.strchr(byteArray0, (byte)57);
      byte[] byteArray1 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray1[0] = (byte)57;
      byteArray1[1] = (byte)57;
      byteArray1[1] = (byte)57;
      Utility.strcat(byteArray0, byteArray1, 1);
      Utility.isYearTime("H}]b&");
      Utility.CC_CHAR2(25);
      int[] intArray0 = new int[9];
      intArray0[0] = (-1);
      intArray0[1] = (int) (byte)57;
      intArray0[2] = 0;
      Utility.isYearTime((String) null);
      Utility.getGB(39);
      Utility.isUnknownWord((String) null);
      Utility.isAllDelimiter(byteArray0);
      Utility.isSBCCase((String) null);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      int[] intArray0 = new int[0];
      Utility.removeInvalid(intArray0);
      Utility.removeInvalid(intArray0);
      Utility.isSBCCase((String) null);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-86);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)125;
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Utility utility0 = new Utility();
      Utility.getForeignCharCount("\u51E0\u6570\u7B2C\u4E0A\u6210");
      Utility.isAllNum("\u672A##\u4E32");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Utility.getGB(6768);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
      Utility.getGB(2079997);
      Utility.isUnknownWord("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.isAllDelimiter(byteArray0);
      // Undeclared exception!
      try { 
        Utility.CC_ID("@");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Utility.binarySearch(70, (int[]) null);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-121);
      Utility.isAllNum("%");
      Utility.isSingle("%");
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Utility.CC_ID("lQ$W2,4lTZs#rR)tE^w");
      Utility.getGB(1858);
      Utility.isSBCCase("lQ$W2,4lTZs#rR)tE^w");
      Utility.isDelimiter("/");
      Utility utility0 = new Utility();
      Utility.isAllChineseNum((String) null);
      Utility.CC_CHAR2((-6472));
      Utility.isUnknownWord("lQ$W2,4lTZs#rR)tE^w");
      Utility.charType((String) null);
      Utility.isAllNum(".icyo+|!JC}?JZ8!?");
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte)0;
      byteArray0[0] = (byte) (-9);
      byteArray0[2] = (byte)0;
      Utility.strstr(byteArray0, byteArray0);
      Utility.isAllNonChinese(byteArray0);
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (byte) (-9);
      intArray0[1] = 0;
      Utility.binarySearch((byte)0, intArray0);
      int[] intArray1 = Utility.removeInvalid(intArray0);
      Utility.CC_CHAR1(19);
      Utility.isDelimiter("wei");
      Utility.binarySearch((byte)0, intArray1);
      Utility.strcpy(byteArray0, byteArray0, 1);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Utility.isSBCCase("2p ");
      byte[] byteArray0 = new byte[6];
      Utility.isYearTime("2p ");
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      Utility utility0 = new Utility();
      Utility.isYearTime("=sTW2%Dm([qeu~");
      Utility.getCharCount("\u5B89\u5965\u516B\u767D\u767E\u90A6\u4FDD\u5317\u500D\u672C\u6BD4\u6EE8\u535A\u6B65\u90E8\u5F69\u83DC\u4ED3\u660C\u957F\u671D\u6C60\u8D64\u5DDD\u8239\u6DF3\u6B21\u6751\u5927\u4EE3\u5C9B\u7A3B\u9053\u5FB7\u5730\u5178\u6E21\u5C14\u7E41\u996D\u98CE\u798F\u5188\u9AD8\u5DE5\u5BAB\u53E4\u8C37\u5173\u5E7F\u6842\u8D35\u597D\u6D69\u548C\u5408\u6CB3\u9ED1\u6A2A\u6052\u5B8F\u540E\u6237\u8352\u7ED8\u5409\u7EAA\u4F73\u52A0\u89C1\u5065\u6C5F\u4ECB\u91D1\u4ECA\u8FDB\u4E95\u9759\u656C\u9756\u4E45\u9152\u83CA\u4FCA\u5EB7\u53EF\u514B\u53E3\u68A8\u7406\u91CC\u793C\u6817\u4E3D\u5229\u7ACB\u51C9\u826F\u6797\u73B2\u94C3\u67F3\u9686\u9E7F\u9EBB\u739B\u7F8E\u840C\u5F25\u654F\u6728\u7EB3\u5357\u7537\u5185\u9E1F\u5B81\u670B\u7247\u5E73\u5D0E\u9F50\u5343\u524D\u6D45\u6865\u7434\u9752\u6E05\u5E86\u79CB\u4E18\u66F2\u6CC9\u4EC1\u5FCD\u65E5\u8363\u82E5\u4E09\u68EE\u7EB1\u6749\u5C71\u5584\u4E0A\u4F38\u795E\u5723\u77F3\u5B9E\u77E2\u4E16\u5E02\u5BA4\u6C34\u987A\u53F8\u677E\u6CF0\u6843\u85E4\u5929\u7530\u571F\u4E07\u671B\u5C3E\u672A\u6587\u6B66\u4E94\u821E\u897F\u7EC6\u590F\u5BAA\u76F8\u5C0F\u5B5D\u65B0\u661F\u884C\u96C4\u79C0\u96C5\u4E9A\u5CA9\u6768\u6D0B\u9633\u9065\u91CE\u4E5F\u53F6\u4E00\u4F0A\u8863\u9038\u4E49\u76CA\u6A31\u6C38\u7531\u6709\u4F51\u5B87\u7FBD\u90C1\u6E0A\u5143\u57A3\u539F\u8FDC\u6708\u60A6\u65E9\u9020\u5219\u6CFD\u589E\u624E\u5B85\u7AE0\u662D\u6CBC\u771F\u653F\u679D\u77E5\u4E4B\u690D\u667A\u6CBB\u4E2D\u5FE0\u4EF2\u7AF9\u52A9\u690E\u5B50\u4F50\u962A\u5742\u5800\u837B\u83C5\u85B0\u6D5C\u6FD1\u9E20\u7B71", "tcttFfgc`");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Utility.getGB(6768);
      Utility.isUnknownWord("\u5B89\u5965\u516B\u767D\u767E\u90A6\u4FDD\u5317\u500D\u672C\u6BD4\u6EE8\u535A\u6B65\u90E8\u5F69\u83DC\u4ED3\u660C\u957F\u671D\u6C60\u8D64\u5DDD\u8239\u6DF3\u6B21\u6751\u5927\u4EE3\u5C9B\u7A3B\u9053\u5FB7\u5730\u5178\u6E21\u5C14\u7E41\u996D\u98CE\u798F\u5188\u9AD8\u5DE5\u5BAB\u53E4\u8C37\u5173\u5E7F\u6842\u8D35\u597D\u6D69\u548C\u5408\u6CB3\u9ED1\u6A2A\u6052\u5B8F\u540E\u6237\u8352\u7ED8\u5409\u7EAA\u4F73\u52A0\u89C1\u5065\u6C5F\u4ECB\u91D1\u4ECA\u8FDB\u4E95\u9759\u656C\u9756\u4E45\u9152\u83CA\u4FCA\u5EB7\u53EF\u514B\u53E3\u68A8\u7406\u91CC\u793C\u6817\u4E3D\u5229\u7ACB\u51C9\u826F\u6797\u73B2\u94C3\u67F3\u9686\u9E7F\u9EBB\u739B\u7F8E\u840C\u5F25\u654F\u6728\u7EB3\u5357\u7537\u5185\u9E1F\u5B81\u670B\u7247\u5E73\u5D0E\u9F50\u5343\u524D\u6D45\u6865\u7434\u9752\u6E05\u5E86\u79CB\u4E18\u66F2\u6CC9\u4EC1\u5FCD\u65E5\u8363\u82E5\u4E09\u68EE\u7EB1\u6749\u5C71\u5584\u4E0A\u4F38\u795E\u5723\u77F3\u5B9E\u77E2\u4E16\u5E02\u5BA4\u6C34\u987A\u53F8\u677E\u6CF0\u6843\u85E4\u5929\u7530\u571F\u4E07\u671B\u5C3E\u672A\u6587\u6B66\u4E94\u821E\u897F\u7EC6\u590F\u5BAA\u76F8\u5C0F\u5B5D\u65B0\u661F\u884C\u96C4\u79C0\u96C5\u4E9A\u5CA9\u6768\u6D0B\u9633\u9065\u91CE\u4E5F\u53F6\u4E00\u4F0A\u8863\u9038\u4E49\u76CA\u6A31\u6C38\u7531\u6709\u4F51\u5B87\u7FBD\u90C1\u6E0A\u5143\u57A3\u539F\u8FDC\u6708\u60A6\u65E9\u9020\u5219\u6CFD\u589E\u624E\u5B85\u7AE0\u662D\u6CBC\u771F\u653F\u679D\u77E5\u4E4B\u690D\u667A\u6CBB\u4E2D\u5FE0\u4EF2\u7AF9\u52A9\u690E\u5B50\u4F50\u962A\u5742\u5800\u837B\u83C5\u85B0\u6D5C\u6FD1\u9E20\u7B71");
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Utility.isDelimiter("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
      Utility.isAllChineseNum("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Utility utility0 = new Utility();
      Utility.getForeignCharCount("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
      Utility.isAllNum((String) null);
      Utility.isForeign((String) null);
      // Undeclared exception!
      try { 
        Utility.CC_ID("@");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Utility.isAllLetter("g[QHD:YzR F");
      Utility.isAllForeign("g[QHD:YzR F");
      Utility utility0 = new Utility();
      Utility.getForeignCharCount("\u963F");
      Utility.isSBCCase("6");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)43;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)43;
      byteArray1[1] = (byte) (-1);
      Utility.strncpy(byteArray0, byteArray1, 776);
      Utility.isAllDelimiter(byteArray1);
      Utility.getForeignCharCount("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.isSingle("UKE]`9x5HM*q<");
      utility0.GetForeignType((String) null);
      Utility.isAllIndex(byteArray0);
      Utility.charType("\u5B89\u5965\u516B\u767D\u767E\u90A6\u4FDD\u5317\u500D\u672C\u6BD4\u6EE8\u535A\u6B65\u90E8\u5F69\u83DC\u4ED3\u660C\u957F\u671D\u6C60\u8D64\u5DDD\u8239\u6DF3\u6B21\u6751\u5927\u4EE3\u5C9B\u7A3B\u9053\u5FB7\u5730\u5178\u6E21\u5C14\u7E41\u996D\u98CE\u798F\u5188\u9AD8\u5DE5\u5BAB\u53E4\u8C37\u5173\u5E7F\u6842\u8D35\u597D\u6D69\u548C\u5408\u6CB3\u9ED1\u6A2A\u6052\u5B8F\u540E\u6237\u8352\u7ED8\u5409\u7EAA\u4F73\u52A0\u89C1\u5065\u6C5F\u4ECB\u91D1\u4ECA\u8FDB\u4E95\u9759\u656C\u9756\u4E45\u9152\u83CA\u4FCA\u5EB7\u53EF\u514B\u53E3\u68A8\u7406\u91CC\u793C\u6817\u4E3D\u5229\u7ACB\u51C9\u826F\u6797\u73B2\u94C3\u67F3\u9686\u9E7F\u9EBB\u739B\u7F8E\u840C\u5F25\u654F\u6728\u7EB3\u5357\u7537\u5185\u9E1F\u5B81\u670B\u7247\u5E73\u5D0E\u9F50\u5343\u524D\u6D45\u6865\u7434\u9752\u6E05\u5E86\u79CB\u4E18\u66F2\u6CC9\u4EC1\u5FCD\u65E5\u8363\u82E5\u4E09\u68EE\u7EB1\u6749\u5C71\u5584\u4E0A\u4F38\u795E\u5723\u77F3\u5B9E\u77E2\u4E16\u5E02\u5BA4\u6C34\u987A\u53F8\u677E\u6CF0\u6843\u85E4\u5929\u7530\u571F\u4E07\u671B\u5C3E\u672A\u6587\u6B66\u4E94\u821E\u897F\u7EC6\u590F\u5BAA\u76F8\u5C0F\u5B5D\u65B0\u661F\u884C\u96C4\u79C0\u96C5\u4E9A\u5CA9\u6768\u6D0B\u9633\u9065\u91CE\u4E5F\u53F6\u4E00\u4F0A\u8863\u9038\u4E49\u76CA\u6A31\u6C38\u7531\u6709\u4F51\u5B87\u7FBD\u90C1\u6E0A\u5143\u57A3\u539F\u8FDC\u6708\u60A6\u65E9\u9020\u5219\u6CFD\u589E\u624E\u5B85\u7AE0\u662D\u6CBC\u771F\u653F\u679D\u77E5\u4E4B\u690D\u667A\u6CBB\u4E2D\u5FE0\u4EF2\u7AF9\u52A9\u690E\u5B50\u4F50\u962A\u5742\u5800\u837B\u83C5\u85B0\u6D5C\u6FD1\u9E20\u7B71");
      Utility.strcpy(byteArray0, byteArray1, 0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Utility.isYearTime(".gYH<aF> yo$SL]");
      int[] intArray0 = new int[8];
      intArray0[0] = (-60);
      intArray0[1] = (-60);
      intArray0[2] = (-60);
      intArray0[3] = (-60);
      intArray0[4] = (-60);
      intArray0[5] = (-60);
      intArray0[6] = (-60);
      intArray0[7] = (-60);
      Utility.binarySearch((-60), intArray0);
      String string0 = "\u59CB";
      Utility.charType("\u59CB");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)100;
      Utility.isAllIndex(byteArray0);
      Utility.TAG_TYPE.values();
      Utility utility0 = new Utility();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      try { 
        dataInputStream0.readUnsignedByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)116;
      Utility.isAllIndex(byteArray0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Utility.strncmp((byte[]) null, 460, (byte[]) null, (-4127));
      Utility.isAllLetter("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      int[] intArray0 = new int[0];
      Utility.binarySearch(239, intArray0);
      Utility.removeInvalid(intArray0);
      Utility.CC_CHAR1((byte)7);
      Utility.CC_CHAR2((byte)7);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)7;
      byteArray1[1] = (byte)7;
      byteArray1[2] = (byte)7;
      byteArray1[3] = (byte)7;
      byteArray1[4] = (byte)7;
      byteArray1[5] = (byte) (-15);
      byteArray1[6] = (byte)7;
      byteArray1[7] = (byte)7;
      Utility.strstr(byteArray0, byteArray1);
      Utility.strncpy(byteArray1, byteArray0, (byte)7);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Utility.getGB(43);
      byte[] byteArray0 = new byte[7];
      Utility.getForeignCharCount("Q");
      Utility utility0 = new Utility();
      Utility.chineseNameSplit("\u575D\u90A6\u5821\u676F\u57CE\u6C60\u6751\u5355\u5C9B\u9053\u5824\u5E97\u6D1E\u6E21\u961F\u6CD5\u5CF0\u5E9C\u5188\u6E2F\u9601\u5BAB\u6C9F\u56FD\u6D77\u53F7\u6CB3\u6E56\u73AF\u96C6\u6C5F\u5956\u7901\u89D2\u8857\u4E95\u90E1\u5751\u53E3\u77FF\u91CC\u5CAD\u697C\u8DEF\u95E8\u76DF\u5E99\u5F04\u724C\u6D3E\u5761\u94FA\u65D7\u6865\u533A\u6E20\u6CC9\u4EBA\u5C71\u7701\u5E02\u6C34\u5BFA\u5854\u53F0\u6EE9\u575B\u5802\u5385\u4EAD\u5C6F\u6E7E\u6587\u5C4B\u6EAA\u5CE1\u53BF\u7EBF\u4E61\u5DF7\u578B\u6D0B\u7A91\u8425\u5C7F\u8BED\u56ED\u82D1\u9662\u95F8\u5BE8\u7AD9\u9547\u5DDE\u5E84\u65CF\u9642\u5EB5\u753A", (PosTagger) null);
      Utility.strstr((byte[]) null, byteArray0);
      Utility.strcat(byteArray0, (byte[]) null, 9);
      Utility.isAllIndex(byteArray0);
      Utility utility1 = new Utility();
      Utility.strncpy((byte[]) null, byteArray0, (-13076));
      Utility.TAG_TYPE.values();
      Utility.isUnknownWord("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Utility.isSBCCase("2p ");
          byte[] byteArray0 = new byte[6];
          Utility.getCCPrefix(byteArray0);
          byte[] byteArray1 = new byte[0];
          Utility.strchr(byteArray1, (byte) (-118));
          Utility.gbGenerate("2p ");
          Utility.strcpy(byteArray0, byteArray0);
          Utility.isAllLetter("8Pg-K$Y_i*");
          Utility.chineseNameSplit("!", (PosTagger) null);
          Utility.strncmp((byte[]) null, (-18447), byteArray1, (-3697));
          Utility.chineseNameSplit(":pu[vB(_7OJTsyoBn", (PosTagger) null);
          Utility.strstr((byte[]) null, (byte[]) null);
          Utility.strcat(byteArray1, (byte[]) null, (-16403));
          Utility.isAllIndex(byteArray1);
          Utility.TAG_TYPE.values();
          Utility.isUnknownWord((String) null);
          Utility utility0 = new Utility();
          Utility.isYearTime("@");
          Utility.isDBCCase("\u672A##\u4E32");
          Utility.getGB(1925);
          Utility.isUnknownWord("\u3001\uFF0C\uFF08\uFF09\u201C\u201D\u2018\u2019");
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)37;
      Utility.TAG_TYPE.values();
      int int0 = Utility.CC_NUM;
      Utility.isUnknownWord((String) null);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Utility.isSBCCase("2p ");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte)47;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)47;
      Utility.getCCPrefix(byteArray0);
      Utility.strchr(byteArray0, (byte)12);
      Utility.isAllChineseNum("2p ");
      int int0 = Utility.WT_CHINESE;
      Utility.isAllLetter("\uFF0E");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      Dictionary dictionary0 = new Dictionary("qun");
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, (String) null, dictionary0);
      Utility.chineseNameSplit((String) null, posTagger0);
      int int1 = Utility.MAX_SENTENCE_LEN;
      Utility utility0 = new Utility();
      Dictionary dictionary1 = new Dictionary();
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Utility.isInAggregate("13VEgfk$wL@k", "13VEgfk$wL@k");
      Dictionary dictionary0 = new Dictionary("13VEgfk$wL@k");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "Veq{Y:~Ipb@", dictionary0);
      Utility.chineseNameSplit((String) null, posTagger0);
      Utility.CC_CHAR2((-16470));
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      Utility.strstr(byteArray0, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Utility.getCharCount("?V13jZ2T8B)_07:B", "?V13jZ2T8B)_07:B");
      Utility.isSingle("?V13jZ2T8B)_07:B");
      Utility.isAllSingleByte("?V13jZ2T8B)_07:B");
      Utility utility0 = new Utility();
      Dictionary dictionary0 = new Dictionary();
      Utility.isAllNum(".W=Uw");
      Utility.isInAggregate("(=PuZ", "\u672A##\u6570");
      Utility.isYearTime("\n\r \u3000");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Utility.isYearTime(".gYH<aF> yo$SL]");
      int[] intArray0 = new int[8];
      intArray0[0] = (-60);
      intArray0[1] = (-60);
      intArray0[2] = (-60);
      intArray0[3] = (-60);
      intArray0[4] = (-60);
      intArray0[5] = (-60);
      intArray0[6] = (-60);
      intArray0[7] = (-60);
      Utility.binarySearch((-60), intArray0);
      Utility.charType("\u59CB");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-86);
      byteArray0[3] = (byte)23;
      byteArray0[4] = (byte) (-47);
      byteArray0[5] = (byte)33;
      byteArray0[6] = (byte) (-2);
      byteArray0[7] = (byte) (-32);
      byteArray0[8] = (byte) (-72);
      Utility.strncpy(byteArray0, byteArray0, (-60));
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Utility.isSBCCase("2p ");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-70);
      Utility utility0 = new Utility();
      Utility.strstr(byteArray0, byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)0;
      Utility.strcat(byteArray0, byteArray1, (-20295));
      Utility.isAllIndex(byteArray1);
      Utility.TAG_TYPE.values();
      Utility utility1 = new Utility();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      Utility.isAllChinese((String) null);
      Utility.readBytes(dataInputStream0, 1);
      Utility.isYearTime("\u672A##\u4E32");
      Utility.getGB(28);
      Utility.isUnknownWord("o-A($JpBJuh<R");
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Utility utility0 = new Utility();
      Utility.isYearTime("\n\r \u3000");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Utility.getGB(6);
      Utility.isUnknownWord("\u672A##\u4EBA");
      Utility.isAllChinese((String) null);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Utility.isSBCCase("lQ$W2,4lTZs#rR)tE^w");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Utility.isSingle("@du0;[/Zi");
      Utility utility0 = new Utility();
      Utility.isAllChinese("z6>fIo~h[I5*r\"&");
      int int0 = Utility.CT_CHINESE;
      Utility.isAllSingleByte("[6yv64UNqG ");
      Utility.getCharCount("", "[6yv64UNqG ");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte)94;
      byteArray0[2] = (byte)94;
      byteArray0[3] = (byte)94;
      byteArray0[4] = (byte)94;
      byteArray0[5] = (byte)94;
      Utility.isAllIndex(byteArray0);
      Utility.isAllChineseNum(",()\"'");
      // Undeclared exception!
      try { 
        Utility.strncmp(byteArray0, (-11038), byteArray0, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -11038 out of bounds for length 6
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Utility.isSBCCase("2p ");
      Utility.isYearTime("2p ");
      Utility utility0 = new Utility();
      Utility.getForeignCharCount("yQO;ZB@nfDg$");
      Utility.isAllNum("43q2j2*Pe");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      Utility.getGB((-18237));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)91;
      byteArray0[2] = (byte) (-9);
      byteArray0[3] = (byte)105;
      byteArray0[4] = (byte) (-37);
      byteArray0[5] = (byte) (-80);
      byteArray0[6] = (byte) (-53);
      byteArray0[7] = (byte) (-24);
      // Undeclared exception!
      try { 
        Utility.strncmp(byteArray0, (-255), byteArray0, 4);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -255 out of bounds for length 8
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Utility.charType("K\"K2MyV");
      Utility.TAG_TYPE.values();
      Utility.isForeign("0");
      Utility.CC_CHAR2(5);
      Utility.isYearTime("0");
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-86);
      byteArray0[0] = (byte) (-86);
      byte byte1 = (byte)11;
      byteArray0[1] = (byte)11;
      byte byte2 = (byte)89;
      byteArray0[2] = (byte)89;
      byte byte3 = (byte)125;
      byteArray0[3] = (byte)125;
      Utility.isDelimiter((String) null);
      Utility utility0 = new Utility();
      Utility.isAllChineseNum("DBcul{&CF+@");
      int int0 = (-3852);
      Utility.CC_CHAR1((-3852));
      int int1 = Utility.CT_SINGLE;
      Utility.isAllNum("DBcul{&CF+@");
      int int2 = Utility.CT_LETTER;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)89;
      byteArray1[1] = (byte)89;
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, byteArray0, byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 2
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      int int0 = Utility.CT_SENTENCE_BEGIN;
      Utility.isDelimiter((String) null);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.isAllDelimiter(byteArray0);
      int[] intArray0 = new int[3];
      intArray0[0] = 161;
      intArray0[1] = 161;
      intArray0[2] = 161;
      Utility.binarySearch(161, intArray0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-55);
      Utility.isAllDelimiter(byteArray0);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-55);
      byteArray1[1] = (byte)4;
      byteArray1[2] = (byte)4;
      byteArray1[3] = (byte) (-55);
      Utility.strcat(byteArray1, byteArray1, 32);
      Utility.strstr(byteArray0, byteArray0);
      Utility.CC_CHAR1((-1930));
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (byte) (-55);
      intArray0[1] = (int) (byte)4;
      intArray0[2] = (int) (byte) (-55);
      Utility.binarySearch((byte) (-55), intArray0);
      Utility.removeInvalid(intArray0);
      Utility.CC_CHAR1(633);
      Utility.CC_CHAR2((byte) (-55));
      Utility.isInAggregate("{z5", "{z5");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Utility.strcat(byteArray0, byteArray0, (byte) (-121));
      Utility.isAllNum("G^Dx>:@L8");
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-14);
      byteArray1[1] = (byte)37;
      byteArray1[2] = (byte) (-121);
      byteArray1[3] = (byte)52;
      byteArray1[4] = (byte)114;
      byteArray1[5] = (byte) (-121);
      byteArray1[6] = (byte)37;
      byte[] byteArray2 = new byte[2];
      byteArray2[0] = (byte) (-14);
      byteArray2[1] = (byte) (-14);
      Utility.CC_Find(byteArray1, byteArray2);
      Utility.isAllDelimiter(byteArray2);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Utility.isDelimiter("");
      Utility.isAllChineseNum("");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)9;
      Utility.strcpy(byteArray1, byteArray1);
      Utility.CC_Find(byteArray0, byteArray1);
      Utility.getCCPrefix(byteArray0);
      Utility.getForeignCharCount("*lN+fE");
      Utility utility0 = new Utility();
      Utility.isAllChineseNum("");
      Utility.isAllLetter("+t/iJ4mc:");
      Utility.strncmp(byteArray1, (-16202), byteArray1, 10);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte) (-65);
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte) (-28);
      byteArray0[4] = (byte)0;
      Utility.strchr(byteArray0, (byte)0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Utility.strncpy(byteArray0, (byte[]) null, 1649);
      Utility.getForeignCharCount("");
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        Utility.getCCPrefix((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Utility.strstr((byte[]) null, (byte[]) null);
      Utility.isAllLetter("");
      Utility.strcat((byte[]) null, (byte[]) null, (-1));
      Utility.isAllForeign("WC2z22ert");
      Utility.getCharCount("", "\u76D0\u573A");
      int[] intArray0 = new int[9];
      intArray0[0] = 0;
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = 1186;
      intArray0[4] = 0;
      intArray0[5] = 239;
      intArray0[6] = (-18478);
      intArray0[7] = (-1);
      intArray0[8] = 239;
      Utility.binarySearch(0, intArray0);
      Utility.removeInvalid(intArray0);
      Utility.CC_CHAR1(18);
      Utility.CC_CHAR2(49);
      Utility.isInAggregate((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Utility.isAllLetter("<T0~M?Bc_k");
      Utility.isInAggregate((String) null, "");
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte) (-7);
      byteArray0[4] = (byte) (-72);
      Utility.getCCPrefix(byteArray0);
      Utility.isSBCCase("SfPtrc`un77}Jt^I");
      Utility.strncpy(byteArray0, byteArray0, (byte)7);
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-93);
      byteArray1[1] = (byte)30;
      Utility.isDBCCase("\u6E14\u573A");
      Utility.getGB(19);
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray1);
      Utility.strstr(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte)0;
      Utility.strstr(byteArray0, byteArray0);
      Utility.strcat(byteArray0, byteArray0, (byte)0);
      Utility.strstr(byteArray0, byteArray0);
      Utility.CC_CHAR1(48);
      int[] intArray0 = new int[0];
      Utility.binarySearch(374, intArray0);
      Utility.removeInvalid(intArray0);
      Utility.CC_CHAR1(176);
      Utility.CC_CHAR2(126);
      Utility.isInAggregate("\u5E7F\u573A", "\u5E7F\u573A");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte)37;
      Utility.strcat(byteArray0, byteArray0, 3);
      Utility.isAllNum("6\"MtYhKr");
      Utility.isAllDelimiter(byteArray0);
      Utility.getForeignCharCount("6\"MtYhKr");
      Utility.isSingle((String) null);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Utility.isDelimiter("");
      Utility.isSingle((String) null);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte) (-93);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-93);
      byteArray1[1] = (byte) (-93);
      byteArray1[2] = (byte) (-93);
      byteArray1[3] = (byte) (-93);
      byteArray1[4] = (byte) (-93);
      Utility.CC_Find(byteArray1, byteArray0);
      Utility.isDelimiter("4UKD1Ci$j.U>");
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.charType("\uFF0D");
      Utility.isAllIndex(byteArray0);
      Utility.isDelimiter("\uFF0D");
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)47;
      Utility.getCCPrefix(byteArray0);
      Utility.strcat(byteArray0, byteArray0, (byte)51);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-77);
      byteArray1[1] = (byte)47;
      Utility.CC_Find(byteArray0, byteArray1);
      Utility.isAllDelimiter(byteArray1);
      Utility.getCCPrefix(byteArray1);
      Utility.getGB((-78));
      Utility.CC_Find(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte)0;
      Utility.strstr(byteArray0, byteArray0);
      Utility.isAllNonChinese(byteArray0);
      Utility.getCharCount("1S&=M9'l`7/m", "?V13jZ2T8B)_07:B");
      Utility.isSingle("EGTe3iYMI&X@8)^lOn");
      Utility.isAllSingleByte("?V13jZ2T8B)_07:B");
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-3);
      byteArray1[2] = (byte) (-3);
      byteArray1[3] = (byte)0;
      Utility.strcat(byteArray0, byteArray1, 2);
      Utility.isAllNum("EGTe3iYMI&X@8)^lOn");
      Utility.CC_Find(byteArray1, byteArray0);
      Utility.isAllDelimiter(byteArray1);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Utility.charType("K\"K2MyV");
      Utility.TAG_TYPE.values();
      Utility.isForeign("0");
      String string0 = ",";
      // Undeclared exception!
      try { 
        Utility.getCharCount((String) null, "K\"K2MyV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Utility.getGB(43);
      Utility.chineseNameSplit("\u75A4", (PosTagger) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-16);
      Utility.getCCPrefix(byteArray0);
      Utility.strchr(byteArray0, (byte) (-16));
      Utility.isAllChineseNum("\u75A4");
      Utility.strcpy(byteArray0, byteArray0);
      Utility.isAllLetter("'");
      Utility.chineseNameSplit("wK", (PosTagger) null);
      byte[] byteArray1 = null;
      Utility.strstr((byte[]) null, byteArray0);
      Utility.strcat((byte[]) null, (byte[]) null, 7);
      // Undeclared exception!
      try { 
        Utility.isAllIndex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte)37;
      Utility.strcat(byteArray0, byteArray0, 3);
      String string0 = null;
      Utility.isAllNum((String) null);
      Utility.isDBCCase((String) null);
      Utility.getGB((-11067));
      Utility.CC_ID("6\"MtYhKr");
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("org.ictclas4j.utility.GFCommon", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int[] intArray0 = new int[0];
      Utility.removeInvalid(intArray0);
      Utility.isAllNum((String) null);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)34;
      Utility utility0 = new Utility();
      Utility.isYearTime("\n\r \u3000");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Utility.isUnknownWord("\u672A##\u4EBA");
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Utility.CC_Generate("org.ictclas4j.bean.SegNode");
      Utility.isForeign("org.ictclas4j.bean.SegNode");
      Utility.isAllForeign("org.ictclas4j.bean.SegNode");
      Utility.isForeign("org.ictclas4j.bean.SegNode");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte) (-7);
      byteArray0[4] = (byte) (-72);
      Utility.getCCPrefix(byteArray0);
      Utility.isForeign((String) null);
      Utility.isSBCCase("SfPtrc`un77}Jt^I");
      Utility.strncpy(byteArray0, byteArray0, (byte)5);
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-93);
      Utility.TAG_TYPE.values();
      Utility.isAllIndex(byteArray0);
      Utility utility0 = new Utility();
      Utility.isYearTime("a");
      byte[] byteArray2 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray2);
      Utility.getGB((-1295));
      Utility.isUnknownWord("\u672A##\u5730");
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Utility.isYearTime("\u96F6\u25CB\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396");
      // Undeclared exception!
      try { 
        Utility.gbGenerate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Utility utility0 = new Utility();
      Utility.CC_Generate("\u59CB##\u59CB");
      Utility.isSBCCase("\uFF0D");
      Utility.isDBCCase("wOU");
      Utility.gbGenerate("N>=$f{B.&B");
      utility0.GetForeignType("\u96F6");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-29);
      Utility.isAllChinese("wOU");
      byteArray0[1] = (byte) (-101);
      byteArray0[2] = (byte) (-110);
      byteArray0[3] = (byte) (-53);
      byteArray0[4] = (byte)91;
      byteArray0[5] = (byte)21;
      Utility.isAllDelimiter(byteArray0);
      Utility.strncmp(byteArray0, 200, byteArray0, (-80));
      Utility.TAG_TYPE.values();
      Utility.charType("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
      Utility.strncmp(byteArray0, 2, byteArray0, 290);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-122);
      Utility.isAllIndex(byteArray0);
      Utility.strncmp(byteArray0, (byte) (-122), byteArray0, (-10274));
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Utility.TAG_TYPE.values();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Lqzg");
      Utility.isAllChinese("\uFF10\uFF15\uFF16\uFF17\uFF18\uFF19");
      byte[] byteArray0 = new byte[8];
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.strcpy(byteArray0, byteArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.isAllForeign("\u516C\u56ED");
      Utility utility0 = new Utility();
      utility0.GetForeignType("\u672A##\u65F6");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      try { 
        dataInputStream0.read(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Utility utility0 = new Utility();
      Utility.isSBCCase("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.getGB(20);
      int int0 = Utility.CT_OTHER;
      Utility utility1 = new Utility();
      Utility utility2 = new Utility();
      utility2.GetForeignType("\u5730\u533A");
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte)0;
      Utility.strstr(byteArray0, byteArray0);
      Utility.isAllNonChinese(byteArray0);
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      Utility.readBytes(dataInputStream0, (-2828));
      Utility.isAllNum("1S&=M9'l`7/m");
      Utility.isSingle("\u2236\u00B7\uFF0E\uFF0F");
      Utility.isForeign("*VVK+m}O?'c~g3");
      Utility.CC_Generate("PqpT?.Ay$");
      Utility.isAllNum("\u2236\u00B7\uFF0E\uFF0F");
      Utility.isDBCCase("r");
      Utility.getGB(106);
      // Undeclared exception!
      try { 
        Utility.PostfixSplit((byte[]) null, byteArray0, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Utility.isSBCCase("2p ");
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte1 = (byte) (-70);
      Utility.isAllNonChinese(byteArray0);
      Utility.getCharCount("1S&=M9'l`7/m", (String) null);
      Utility.isSingle("3,] maQG");
      Utility.isAllSingleByte("?V13jZ2T8B)_07:B");
      Utility utility0 = new Utility();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PLACE;
      Dictionary dictionary0 = new Dictionary();
      String string0 = "ys&77(]oD090w\"$DQ";
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "ys&77(]oD090w\"$DQ", dictionary0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Utility.CC_Generate("org.ictclas4j.bean.SegNode");
      Utility.isForeign("org.ictclas4j.bean.SegNode");
      Utility.isAllForeign("org.ictclas4j.bean.SegNode");
      Utility.isForeign("org.ictclas4j.bean.SegNode");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte) (-7);
      byteArray0[4] = (byte) (-72);
      Utility.getCCPrefix(byteArray0);
      Utility.isForeign((String) null);
      Utility.isSBCCase("SfPtrc`un77}Jt^I");
      Utility.strncpy(byteArray0, byteArray0, (byte)5);
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-93);
      byteArray1[1] = (byte)30;
      byteArray1[2] = (byte) (-7);
      byteArray1[3] = (byte) (-7);
      byteArray1[4] = (byte)5;
      byteArray1[5] = (byte)30;
      byteArray1[6] = (byte) (-93);
      byteArray1[7] = (byte) (-93);
      Utility.strstr(byteArray1, byteArray1);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Utility.isAllForeign("org.ictclas4j.bean.SegNode");
      Utility.isForeign("org.ictclas4j.bean.SegNode");
      Utility.isAllSingleByte("");
      Utility.CC_CHAR1((-19289));
      Utility.isSBCCase("kong");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-85);
      byteArray0[1] = (byte) (-49);
      byteArray0[2] = (byte) (-44);
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte) (-93);
      byteArray0[5] = (byte)9;
      byteArray0[6] = (byte)2;
      byteArray0[7] = (byte)65;
      Utility.isAllDelimiter(byteArray0);
      Utility.getForeignCharCount("ci");
      Utility.isDelimiter("wOU");
      Utility.isAllChinese("org.ictclas4j.segment.SegGraph");
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Utility.isSBCCase("lQ$W2,4lTZs#rR)tE^w");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Utility.isSingle("lQ$W2,4lTZs#rR)tE^w");
      Utility utility0 = new Utility();
      Utility.isAllChinese("\n\r \u3000");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "`*^@tw*XxT=%U&", (Dictionary) null);
      // Undeclared exception!
      try { 
        Utility.chineseNameSplit("\u81EA\u6CBB\u5DDE", posTagger0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Utility.getGB(43);
      Utility.chineseNameSplit("\u75A4", (PosTagger) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)47;
      Utility.getCCPrefix(byteArray0);
      Utility.strchr(byteArray0, (byte)51);
      Utility.isAllChineseNum("\u75A4");
      Utility.strcpy(byteArray0, byteArray0);
      Utility.isAllLetter("");
      Utility.chineseNameSplit("", (PosTagger) null);
      Utility.strstr(byteArray0, (byte[]) null);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)51;
      Utility utility0 = new Utility();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PLACE;
      Dictionary dictionary0 = new Dictionary();
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, (String) null, dictionary0);
      Utility.chineseNameSplit("\u672A##\u5730", posTagger0);
      Utility.strcpy(byteArray1, byteArray1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Utility.charType("\u81EA\u6CBB\u533A");
      Utility.isSingle("\u81EA\u6CBB\u533A");
      Utility.CC_CHAR1(7);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-93);
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte) (-7);
      byteArray0[4] = (byte) (-72);
      Utility.getCCPrefix(byteArray0);
      Utility.isSBCCase("SfPtrc`un77}Jt^I");
      Utility.strncpy(byteArray0, byteArray0, (byte)7);
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-93);
      byteArray1[1] = (byte)30;
      Utility.isAllDelimiter(byteArray1);
      Utility.getForeignCharCount("SfPtrc`un77}Jt^I");
      Utility.isSingle("'kov");
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Utility.strncmp((byte[]) null, 460, (byte[]) null, (-4127));
      Utility.isAllLetter("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.CC_Find((byte[]) null, (byte[]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)0;
      Utility.strncmp((byte[]) null, 984, byteArray0, (byte)7);
      Utility utility0 = new Utility();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.mark(2000);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      Utility.readBytes(dataInputStream0, 0);
      Utility.isAllNum("\u672A##\u5730");
      Utility.isSingle("*VVK+m}O?'c~g3");
      Utility.isAllLetter("0%a2rhp:FWI~7AWHT8%");
      Utility.CC_ID("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      int int0 = Utility.CT_DELIMITER;
      Utility.strncmp(byteArray0, 6768, (byte[]) null, 6);
      Utility.gbGenerate("\u672A##\u65F6");
      Utility.strncmp((byte[]) null, 1207, (byte[]) null, (-19227));
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Utility.isAllIndex(byteArray0);
      Utility.isDelimiter("%");
      Utility.strncmp(byteArray0, 3326, (byte[]) null, 3326);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Utility.getGB(43);
      Utility.chineseNameSplit("\u75A4", (PosTagger) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-16);
      int int0 = Utility.TT_RUSSIAN;
      Utility.strchr(byteArray0, (byte)51);
      Utility.isAllChineseNum("\u75A4");
      Utility.strcpy(byteArray0, byteArray0);
      String string0 = "";
      Utility.isYearTime("\u75A4");
      Utility.chineseNameSplit("", (PosTagger) null);
      byte[] byteArray1 = null;
      Utility.strstr(byteArray0, (byte[]) null);
      byte[] byteArray2 = new byte[20];
      byteArray2[0] = (byte)51;
      Utility.strcat((byte[]) null, byteArray2, (byte)51);
      Utility.TAG_TYPE.values();
      // Undeclared exception!
      try { 
        Utility.isAllIndex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Utility.isYearTime("t");
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Utility.isAllForeign("WC2z22ert");
      Utility utility0 = new Utility();
      Utility.isDelimiter("QC#tI");
      Utility.isAllChineseNum(")");
      Utility.isDBCCase("\u672A##\u65F6");
      Utility.isAllSingleByte((String) null);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-38);
      Utility.strcat(byteArray0, byteArray0, (byte) (-38));
      Utility.CC_CHAR1((-1));
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        Utility.strcpy(byteArray1, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Utility.isYearTime((String) null);
      int[] intArray0 = new int[0];
      Utility.removeInvalid(intArray0);
      Utility.charType((String) null);
      Utility.isYearTime("qg`t&l'Km+s~6");
      Utility.isAllLetter("qie");
      Utility.isUnknownWord("q[");
      Utility.charType("?{+(qw+'6uei");
      Utility.isAllChineseNum("qg`t&l'Km+s~6");
      Utility.TAG_TYPE.values();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-127);
      byteArray0[3] = (byte) (-3);
      byteArray0[4] = (byte) (-32);
      byteArray0[5] = (byte) (-48);
      byteArray0[6] = (byte) (-95);
      byteArray0[7] = (byte)102;
      byteArray0[8] = (byte)27;
      Utility.strstr(byteArray0, byteArray0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      Utility.strstr(byteArray0, byteArray0);
      byte[] byteArray1 = new byte[5];
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)0;
      byteArray1[4] = (byte)0;
      Utility.isAllNonChinese(byteArray1);
      Utility.getCharCount("q", "1S&=M9'l`7/m");
      Utility.isSingle(";");
      Utility.isAllSingleByte("1S&=M9'l`7/m");
      Utility utility0 = new Utility();
      Dictionary dictionary0 = new Dictionary("\u963F");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_TRANS_PERSON;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "a0AGJ~$PFhT,x", dictionary0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Utility utility0 = new Utility();
      Utility.isSBCCase("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.isSingle("aX");
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.strcpy(byteArray0, byteArray0);
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.getForeignCharCount("*lN=fE");
      Utility utility0 = new Utility();
      Utility.CC_CHAR1(10);
      Utility.CC_CHAR2(6768);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      byte[] byteArray1 = Utility.readBytes(dataInputStream0, 6);
      Utility.isAllNum("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
      Utility.isSingle("\u672A##\u4E32");
      Utility.isForeign("/GOB");
      Utility.isUnknownWord("Oe%qgIUV]");
      int int0 = Utility.MAX_UNKNOWN_PER_SENTENCE;
      Utility.isAllSingleByte(".587Np\"?OpiT2^ukA");
      Utility.CC_CHAR1(200);
      Utility.isSBCCase("\u672A##\u65F6");
      Utility.isAllDelimiter(byteArray1);
      Utility.getForeignCharCount("");
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Utility.isAllChineseNum("ajd:[");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-55);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[1] = (byte)4;
      Utility.isAllDelimiter(byteArray0);
      Utility.isYearTime("ajd:[");
      Utility.isAllChineseNum("ajd:[");
      Utility.isAllLetter("ajd:[");
      Utility.isAllForeign("ajd:[");
      Utility.strcat(byteArray0, byteArray0, (byte)4);
      Utility.isAllForeign("ajd:[");
      Utility.CC_Generate("");
      Utility.isAllNum("");
      Utility.isDBCCase("\u96F6\u25CB\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396");
      Utility.getGB((byte)4);
      Utility.CC_ID("xiu");
      Utility.getUnsigned((byte) (-3));
      Utility.CC_CHAR2((-1));
      Utility.strncmp(byteArray0, (byte) (-3), byteArray0, 218);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Utility.isAllLetter("R");
      Utility.isInAggregate("<._1 K", "<._1 K");
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      // Undeclared exception!
      try { 
        Utility.strcat(byteArray0, byteArray0, 14);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 11 out of bounds for length 11
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utility.isAllNonChinese((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utility.CT_LETTER;
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.getForeignCharCount("*lN+fE");
      Utility utility0 = new Utility();
      Utility.CC_CHAR1(10);
      Utility.CC_CHAR2(6768);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Utility.readBytes(dataInputStream0, 6);
      Utility.isAllNum("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
      Utility.isSingle("\u672A##\u4E32");
      Dictionary dictionary0 = new Dictionary("\u00B7\u2014\u963F\u57C3\u827E\u7231\u5B89\u6602\u6556\u5965\u6FB3\u7B06\u82AD\u5DF4\u767D\u62DC\u73ED\u90A6\u4FDD\u5821\u9C8D\u5317\u8D1D\u672C\u6BD4\u6BD5\u5F7C\u522B\u6CE2\u73BB\u535A\u52C3\u4F2F\u6CCA\u535C\u5E03\u624D\u91C7\u4ED3\u67E5\u5DEE\u67F4\u5F7B\u5DDD\u8328\u6148\u6B21\u8FBE\u5927\u6234\u4EE3\u4E39\u65E6\u4F46\u5F53\u9053\u5FB7\u5F97\u7684\u767B\u8FEA\u72C4\u8482\u5E1D\u4E01\u4E1C\u675C\u6566\u591A\u989D\u4FC4\u5384\u9102\u6069\u5C14\u4F10\u6CD5\u8303\u83F2\u82AC\u8D39\u4F5B\u592B\u798F\u5F17\u752B\u5676\u76D6\u5E72\u5188\u54E5\u6208\u9769\u845B\u683C\u5404\u6839\u53E4\u74DC\u54C8\u6D77\u7F55\u7FF0\u6C57\u6C49\u8C6A\u5408\u6CB3\u8D6B\u4EA8\u4FAF\u547C\u80E1\u534E\u970D\u57FA\u5409\u53CA\u52A0\u8D3E\u575A\u7B80\u6770\u91D1\u4EAC\u4E45\u5C45\u541B\u5580\u5361\u51EF\u574E\u5EB7\u8003\u67EF\u79D1\u53EF\u514B\u80AF\u5E93\u594E\u62C9\u5587\u83B1\u6765\u5170\u90CE\u6717\u52B3\u52D2\u96F7\u7D2F\u695E\u9ECE\u7406\u674E\u91CC\u8389\u4E3D\u5386\u5229\u7ACB\u529B\u8FDE\u5EC9\u826F\u5217\u70C8\u6797\u9686\u5362\u864F\u9C81\u8DEF\u4F26\u4ED1\u7F57\u6D1B\u739B\u9A6C\u4E70\u9EA6\u8FC8\u66FC\u8305\u8302\u6885\u95E8\u8499\u76DF\u7C73\u871C\u5BC6\u654F\u660E\u6469\u83AB\u58A8\u9ED8\u59C6\u6728\u7A46\u90A3\u5A1C\u7EB3\u4E43\u5948\u5357\u5185\u5C3C\u5E74\u6D85\u5B81\u7EBD\u52AA\u8BFA\u6B27\u5E15\u6F58\u7554\u5E9E\u57F9\u4F69\u5F6D\u76AE\u5E73\u6CFC\u666E\u5176\u5951\u6070\u5F3A\u4E54\u5207\u94A6\u6C81\u6CC9\u8BA9\u70ED\u8363\u8089\u5112\u745E\u82E5\u8428\u585E\u8D5B\u6851\u745F\u68EE\u838E\u6C99\u5C71\u5584\u7ECD\u820D\u5723\u65BD\u8BD7\u77F3\u4EC0\u53F2\u58EB\u5B88\u65AF\u53F8\u4E1D\u82CF\u7D20\u7D22\u5854\u6CF0\u5766\u6C64\u5510\u9676\u7279\u63D0\u6C40\u56FE\u571F\u5410\u6258\u9640\u74E6\u4E07\u738B\u65FA\u5A01\u97E6\u7EF4\u9B4F\u6E29\u6587\u7FC1\u6C83\u4E4C\u543E\u6B66\u4F0D\u897F\u9521\u5E0C\u559C\u590F\u76F8\u9999\u6B47\u8C22\u8F9B\u65B0\u7259\u96C5\u4E9A\u5F66\u5C27\u53F6\u4F9D\u4F0A\u8863\u5B9C\u4E49\u56E0\u97F3\u82F1\u96CD\u5C24\u4E8E\u7EA6\u5BB0\u6CFD\u589E\u8A79\u73CD\u6CBB\u4E2D\u4EF2\u6731\u8BF8\u5353\u5B5C\u7956\u4F50\u4F3D\u5A05\u5C15\u8153\u6ED5\u6D4E\u5609\u6D25\u8D56\u83B2\u7433\u5F8B\u7565\u6155\u59AE\u8042\u88F4\u6D66\u5947\u9F50\u7434\u8339\u73CA\u536B\u6B23\u900A\u672D\u54F2\u667A\u5179\u8299\u6C76\u8FE6\u73C0\u742A\u68B5\u6590\u80E5\u9EDB");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PLACE;
      byteArrayInputStream0.reset();
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "\u00B7\u2014\u963F\u57C3\u827E\u7231\u5B89\u6602\u6556\u5965\u6FB3\u7B06\u82AD\u5DF4\u767D\u62DC\u73ED\u90A6\u4FDD\u5821\u9C8D\u5317\u8D1D\u672C\u6BD4\u6BD5\u5F7C\u522B\u6CE2\u73BB\u535A\u52C3\u4F2F\u6CCA\u535C\u5E03\u624D\u91C7\u4ED3\u67E5\u5DEE\u67F4\u5F7B\u5DDD\u8328\u6148\u6B21\u8FBE\u5927\u6234\u4EE3\u4E39\u65E6\u4F46\u5F53\u9053\u5FB7\u5F97\u7684\u767B\u8FEA\u72C4\u8482\u5E1D\u4E01\u4E1C\u675C\u6566\u591A\u989D\u4FC4\u5384\u9102\u6069\u5C14\u4F10\u6CD5\u8303\u83F2\u82AC\u8D39\u4F5B\u592B\u798F\u5F17\u752B\u5676\u76D6\u5E72\u5188\u54E5\u6208\u9769\u845B\u683C\u5404\u6839\u53E4\u74DC\u54C8\u6D77\u7F55\u7FF0\u6C57\u6C49\u8C6A\u5408\u6CB3\u8D6B\u4EA8\u4FAF\u547C\u80E1\u534E\u970D\u57FA\u5409\u53CA\u52A0\u8D3E\u575A\u7B80\u6770\u91D1\u4EAC\u4E45\u5C45\u541B\u5580\u5361\u51EF\u574E\u5EB7\u8003\u67EF\u79D1\u53EF\u514B\u80AF\u5E93\u594E\u62C9\u5587\u83B1\u6765\u5170\u90CE\u6717\u52B3\u52D2\u96F7\u7D2F\u695E\u9ECE\u7406\u674E\u91CC\u8389\u4E3D\u5386\u5229\u7ACB\u529B\u8FDE\u5EC9\u826F\u5217\u70C8\u6797\u9686\u5362\u864F\u9C81\u8DEF\u4F26\u4ED1\u7F57\u6D1B\u739B\u9A6C\u4E70\u9EA6\u8FC8\u66FC\u8305\u8302\u6885\u95E8\u8499\u76DF\u7C73\u871C\u5BC6\u654F\u660E\u6469\u83AB\u58A8\u9ED8\u59C6\u6728\u7A46\u90A3\u5A1C\u7EB3\u4E43\u5948\u5357\u5185\u5C3C\u5E74\u6D85\u5B81\u7EBD\u52AA\u8BFA\u6B27\u5E15\u6F58\u7554\u5E9E\u57F9\u4F69\u5F6D\u76AE\u5E73\u6CFC\u666E\u5176\u5951\u6070\u5F3A\u4E54\u5207\u94A6\u6C81\u6CC9\u8BA9\u70ED\u8363\u8089\u5112\u745E\u82E5\u8428\u585E\u8D5B\u6851\u745F\u68EE\u838E\u6C99\u5C71\u5584\u7ECD\u820D\u5723\u65BD\u8BD7\u77F3\u4EC0\u53F2\u58EB\u5B88\u65AF\u53F8\u4E1D\u82CF\u7D20\u7D22\u5854\u6CF0\u5766\u6C64\u5510\u9676\u7279\u63D0\u6C40\u56FE\u571F\u5410\u6258\u9640\u74E6\u4E07\u738B\u65FA\u5A01\u97E6\u7EF4\u9B4F\u6E29\u6587\u7FC1\u6C83\u4E4C\u543E\u6B66\u4F0D\u897F\u9521\u5E0C\u559C\u590F\u76F8\u9999\u6B47\u8C22\u8F9B\u65B0\u7259\u96C5\u4E9A\u5F66\u5C27\u53F6\u4F9D\u4F0A\u8863\u5B9C\u4E49\u56E0\u97F3\u82F1\u96CD\u5C24\u4E8E\u7EA6\u5BB0\u6CFD\u589E\u8A79\u73CD\u6CBB\u4E2D\u4EF2\u6731\u8BF8\u5353\u5B5C\u7956\u4F50\u4F3D\u5A05\u5C15\u8153\u6ED5\u6D4E\u5609\u6D25\u8D56\u83B2\u7433\u5F8B\u7565\u6155\u59AE\u8042\u88F4\u6D66\u5947\u9F50\u7434\u8339\u73CA\u536B\u6B23\u900A\u672D\u54F2\u667A\u5179\u8299\u6C76\u8FE6\u73C0\u742A\u68B5\u6590\u80E5\u9EDB", dictionary0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Utility.TAG_TYPE.values();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Lqzg");
      Utility.isAllChinese("\uFF10\uFF15\uFF16\uFF17\uFF18\uFF19");
      byte[] byteArray0 = new byte[8];
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.strcpy(byteArray0, byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-120);
      Utility.getCCPrefix(byteArray1);
      Utility.isAllForeign("\u516C\u56ED");
      Utility utility0 = new Utility();
      utility0.GetForeignType("zw");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      Utility.readBytes(dataInputStream0, (-14914));
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Utility utility0 = new Utility();
      Utility.isDBCCase("\u672B##\u672B");
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-63);
      byteArray0[1] = (byte)112;
      Utility.getCCPrefix(byteArray0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = Utility.CT_OTHER;
      byte[] byteArray0 = new byte[0];
      Utility.strncpy(byteArray0, byteArray0, 17);
      Utility.strstr(byteArray0, byteArray0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = Utility.WT_OTHER;
      Utility.getForeignCharCount("*lN+fE");
      Utility utility0 = new Utility();
      Utility.isAllChinese("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
      Utility.strncpy(byteArray0, byteArray0, 0);
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Utility.TAG_TYPE.values();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Lqzg");
      Utility.isAllChinese("\uFF10\uFF15\uFF16\uFF17\uFF18\uFF19");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-120);
      byteArray0[1] = (byte) (-118);
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte) (-25);
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte)111;
      byteArray0[6] = (byte) (-3);
      byteArray0[7] = (byte)27;
      Utility.CC_Find(byteArray0, byteArray0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Utility.TAG_TYPE.values();
      Utility.CC_CHAR2((byte)94);
      Utility.isAllChinese("\u96F6");
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte) (-93);
      Utility utility0 = new Utility();
      Utility.strstr(byteArray0, byteArray0);
      Utility.strcat(byteArray0, byteArray0, (-1107));
      Utility.isAllIndex(byteArray0);
      Utility.TAG_TYPE.values();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 10, 1);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Utility.isAllChinese("\u672A##\u5730");
      Utility.readBytes(dataInputStream0, (-1166));
      Utility.isYearTime(",clHn8:");
      Utility.getGB((byte)30);
      Utility.isUnknownWord("\n\r \u3000");
      // Undeclared exception!
      try { 
        Utility.isAllDelimiter((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-22);
      Utility.strncpy(byteArray0, byteArray0, (-1825));
      Utility.strchr(byteArray0, (byte) (-22));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "nuo");
      Utility.chineseNameSplit("nuo", (PosTagger) null);
      Utility.isSBCCase("nuo");
      Utility.chineseNameSplit("qg`t&l'Km+s~6", (PosTagger) null);
      Utility.isAllIndex(byteArray0);
      Utility.strstr(byteArray0, byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-22);
      byteArray1[1] = (byte) (-22);
      byteArray1[2] = (byte) (-22);
      byteArray1[3] = (byte) (-22);
      byteArray1[4] = (byte) (-22);
      byteArray1[5] = (byte) (-22);
      byteArray1[6] = (byte) (-22);
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte) (-22);
      byteArray2[1] = (byte) (-22);
      byteArray2[2] = (byte) (-22);
      byteArray2[3] = (byte) (-22);
      byteArray2[4] = (byte) (-22);
      Utility.strncpy(byteArray1, byteArray2, (byte) (-22));
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte byte0 = (byte)102;
      Utility.getUnsigned((byte)102);
      String string0 = null;
      Utility.charType((String) null);
      // Undeclared exception!
      try { 
        Utility.CC_Generate((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)16;
      byteArray0[2] = (byte)0;
      Utility.strstr(byteArray0, byteArray0);
      Utility.isAllNonChinese(byteArray0);
      Utility.getCharCount("1S&=M9'l`7/m", "?V13jZ2T8B)_07:B");
      Utility.strstr(byteArray0, byteArray0);
      Utility.charType("J");
      int[] intArray0 = new int[2];
      intArray0[0] = 5;
      intArray0[1] = (int) (byte)0;
      Utility.removeInvalid(intArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.removeInvalid(intArray0);
      Utility.isAllForeign("\u53E3");
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Utility.isAllLetter("i");
      Utility.charType("i");
      Utility.isSingle("i");
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Utility.strncmp((byte[]) null, 460, (byte[]) null, (-4127));
      Utility.isAllLetter("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.CC_Find((byte[]) null, (byte[]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      Utility.strncmp((byte[]) null, 984, byteArray0, (byte)0);
      Utility utility0 = new Utility();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      Utility.readBytes(dataInputStream0, 0);
      Utility.isAllNum("\u672A##\u5730");
      Utility.isSingle("*VVK+m}O?'c~g3");
      Utility.isForeign("\u65B0\u6751");
      Utility.isAllForeign("");
      Utility.CC_Generate("O<J`");
      Utility.isAllNum("\u96F6\u25CB\u4E00\u4E8C\u4E24\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u5341\u5EFF\u767E\u5343\u4E07\u4EBF\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396\u62FE\u4F70\u4EDF\u2236\u00B7\uFF0E\uFF0F\u70B9");
      Utility.isDBCCase("f*|Rl!8w\"(LE=Qvn");
      Utility.getGB((-4127));
      Utility.getUnsigned((byte) (-89));
      Utility.strcpy((byte[]) null, (byte[]) null, 20);
      Utility.strncpy((byte[]) null, (byte[]) null, 8);
      Utility.strcpy((byte[]) null, (byte[]) null, 6);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Utility.isYearTime("2#c3]s#X|LD%$77");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      Utility.isAllLetter("cuo");
      Utility.strcpy((byte[]) null, (byte[]) null, (int) (byte) (-16));
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Utility.isYearTime("2t");
      Utility.isDBCCase("2t");
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Dictionary dictionary0 = new Dictionary();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, " 0a.`}", dictionary0);
      Utility.chineseNameSplit(".", posTagger0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Utility.isAllNonChinese(byteArray0);
      Utility.getCharCount("-", "1S&=M9'l`7/m");
      Utility.isSingle("a0AGJ~$PFhT,x");
      Utility.isAllSingleByte("a0AGJ~$PFhT,x");
      Utility utility0 = new Utility();
      Dictionary dictionary0 = new Dictionary("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "oZ5'oTAd+$}]OVBUum", dictionary0);
      Utility.chineseNameSplit("-", posTagger0);
      byte[] byteArray1 = new byte[0];
      byte[] byteArray2 = new byte[0];
      Utility.strcpy(byteArray1, byteArray2);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Utility.isAllForeign("WC2z22ert");
      Utility utility0 = new Utility();
      Utility.getForeignCharCount(",()\"'");
      byte[] byteArray0 = new byte[0];
      Utility.strncpy(byteArray0, byteArray0, 650);
      Utility.strstr(byteArray0, byteArray0);
      Utility.charType("\uFF0D");
      int[] intArray0 = new int[0];
      Utility.removeInvalid(intArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-48);
      Utility.getCCPrefix(byteArray1);
      Utility.removeInvalid(intArray0);
      Utility.isAllForeign("\u672A##\u4E32");
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Utility.removeInvalid((int[]) null);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-93);
      Utility.strstr((byte[]) null, (byte[]) null);
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, (byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte)0;
      Utility.strcpy(byteArray0, byteArray0, (-15659));
      Utility.getCCPrefix(byteArray0);
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte) (-3);
      Utility.binarySearch((-41), intArray0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      Utility.isAllForeign("h'Lz");
      // Undeclared exception!
      try { 
        Utility.isAllDelimiter((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Utility.isSBCCase("qx^L2W&MK");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-19);
      Utility.TAG_TYPE.values();
      Utility.CC_ID((String) null);
      Utility.isAllChinese("qx^L2W&MK");
      Utility.isUnknownWord("");
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Utility.isYearTime("0fINfYC>0)'0f~");
      Utility.gbGenerate("0fINfYC>0)'0f~");
      Utility.CC_ID((String) null);
      int int0 = Utility.CT_INDEX;
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.strstr(byteArray0, byteArray0);
      Utility.getForeignCharCount("\u5343\u4EDF");
      byte[] byteArray1 = null;
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, byteArray0, (byte[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utility.strcpy((byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Utility.charType("");
      // Undeclared exception!
      try { 
        Utility.isYearTime("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Utility.isAllNum("9s!C}t3=EG)G[Ze");
      Dictionary dictionary0 = new Dictionary("9s!C}t3=EG)G[Ze");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "Yl-?Dc%9:[`A@&=!>", dictionary0);
      Utility.chineseNameSplit("Yl-?Dc%9:[`A@&=!>", posTagger0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      Utility.isInAggregate("E-", (String) null);
      Utility.isForeign((String) null);
      Utility.getForeignCharCount("K~lE/k8^E'$~B<");
      Utility.isAllNum("E-");
      Utility utility0 = new Utility();
      Utility.isAllChineseNum((String) null);
      utility0.GetForeignType((String) null);
      Utility.isUnknownWord(",()\"'");
      String string0 = ",";
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_TRANS_PERSON;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)14;
      byteArray0[4] = (byte)101;
      byteArray0[5] = (byte) (-96);
      byteArray0[6] = (byte)74;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)14, 0);
      Dictionary dictionary0 = new Dictionary();
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, byteArrayInputStream0, byteArrayInputStream0, dictionary0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      Utility.isDelimiter("uu");
      Utility.isForeign((String) null);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String string0 = "\u53E3\u5CB8";
      Utility.CC_ID("\u53E3\u5CB8");
      Utility.isYearTime("2#c3]s#X|LD%$77");
      String string1 = "z";
      // Undeclared exception!
      try { 
        Utility.TAG_TYPE.valueOf("z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.ictclas4j.utility.Utility.TAG_TYPE.z
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      Utility.isSBCCase("2p ");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte) (-16);
      byteArray0[4] = (byte) (-114);
      byteArray0[5] = (byte) (-26);
      // Undeclared exception!
      try { 
        Utility.strcpy(byteArray0, byteArray0, 18);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 6 out of bounds for length 6
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)0;
      Utility.strcpy(byteArray0, byteArray0);
      Utility.strchr(byteArray0, (byte)0);
      String string0 = " Sdu8+4)J[1u:qm";
      Utility.chineseNameSplit(" Sdu8+4)J[1u:qm", (PosTagger) null);
      Utility.TAG_TYPE.values();
      Utility.isAllLetter("\u672B##\u672B");
      Utility.CC_Generate("\u672B##\u672B");
      Utility.getForeignCharCount("\u00D7\u00D7");
      Utility.getUnsigned((byte) (-6));
      String string1 = "{KPUedvkKP[";
      Utility.isSBCCase("{KPUedvkKP[");
      Utility.isForeign("\u7267\u573A");
      Utility.getGB(43);
      // Undeclared exception!
      Utility.CC_Generate(" Sdu8+4)J[1u:qm");
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Utility.isSBCCase(".gYH<aF> yo$SL]");
      Utility utility0 = new Utility();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte) (-22);
      byteArray0[2] = (byte)17;
      Utility.strstr(byteArray0, byteArray0);
      Utility.strcat(byteArray0, byteArray0, 10);
      Utility.isAllIndex(byteArray0);
      Utility.TAG_TYPE.values();
      Utility.isAllNum(",()\"'");
      Utility.isSingle("");
      Utility.isForeign("cy");
      Utility.CC_Generate(",");
      Utility.isAllNum("1HzkPMBP*B=f5a*vk*L");
      Utility.isDBCCase("@");
      Utility.getGB(650);
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("org.ictclas4j.utility.GFCommon", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      Utility.isUnknownWord("uu");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte) (-113);
      Utility.isAllIndex(byteArray0);
      Utility.CC_CHAR2(0);
      Utility.isDelimiter("\u5B89\u5965\u516B\u767D\u767E\u90A6\u4FDD\u5317\u500D\u672C\u6BD4\u6EE8\u535A\u6B65\u90E8\u5F69\u83DC\u4ED3\u660C\u957F\u671D\u6C60\u8D64\u5DDD\u8239\u6DF3\u6B21\u6751\u5927\u4EE3\u5C9B\u7A3B\u9053\u5FB7\u5730\u5178\u6E21\u5C14\u7E41\u996D\u98CE\u798F\u5188\u9AD8\u5DE5\u5BAB\u53E4\u8C37\u5173\u5E7F\u6842\u8D35\u597D\u6D69\u548C\u5408\u6CB3\u9ED1\u6A2A\u6052\u5B8F\u540E\u6237\u8352\u7ED8\u5409\u7EAA\u4F73\u52A0\u89C1\u5065\u6C5F\u4ECB\u91D1\u4ECA\u8FDB\u4E95\u9759\u656C\u9756\u4E45\u9152\u83CA\u4FCA\u5EB7\u53EF\u514B\u53E3\u68A8\u7406\u91CC\u793C\u6817\u4E3D\u5229\u7ACB\u51C9\u826F\u6797\u73B2\u94C3\u67F3\u9686\u9E7F\u9EBB\u739B\u7F8E\u840C\u5F25\u654F\u6728\u7EB3\u5357\u7537\u5185\u9E1F\u5B81\u670B\u7247\u5E73\u5D0E\u9F50\u5343\u524D\u6D45\u6865\u7434\u9752\u6E05\u5E86\u79CB\u4E18\u66F2\u6CC9\u4EC1\u5FCD\u65E5\u8363\u82E5\u4E09\u68EE\u7EB1\u6749\u5C71\u5584\u4E0A\u4F38\u795E\u5723\u77F3\u5B9E\u77E2\u4E16\u5E02\u5BA4\u6C34\u987A\u53F8\u677E\u6CF0\u6843\u85E4\u5929\u7530\u571F\u4E07\u671B\u5C3E\u672A\u6587\u6B66\u4E94\u821E\u897F\u7EC6\u590F\u5BAA\u76F8\u5C0F\u5B5D\u65B0\u661F\u884C\u96C4\u79C0\u96C5\u4E9A\u5CA9\u6768\u6D0B\u9633\u9065\u91CE\u4E5F\u53F6\u4E00\u4F0A\u8863\u9038\u4E49\u76CA\u6A31\u6C38\u7531\u6709\u4F51\u5B87\u7FBD\u90C1\u6E0A\u5143\u57A3\u539F\u8FDC\u6708\u60A6\u65E9\u9020\u5219\u6CFD\u589E\u624E\u5B85\u7AE0\u662D\u6CBC\u771F\u653F\u679D\u77E5\u4E4B\u690D\u667A\u6CBB\u4E2D\u5FE0\u4EF2\u7AF9\u52A9\u690E\u5B50\u4F50\u962A\u5742\u5800\u837B\u83C5\u85B0\u6D5C\u6FD1\u9E20\u7B71");
      Utility.isDelimiter("\u5B89\u5965\u516B\u767D\u767E\u90A6\u4FDD\u5317\u500D\u672C\u6BD4\u6EE8\u535A\u6B65\u90E8\u5F69\u83DC\u4ED3\u660C\u957F\u671D\u6C60\u8D64\u5DDD\u8239\u6DF3\u6B21\u6751\u5927\u4EE3\u5C9B\u7A3B\u9053\u5FB7\u5730\u5178\u6E21\u5C14\u7E41\u996D\u98CE\u798F\u5188\u9AD8\u5DE5\u5BAB\u53E4\u8C37\u5173\u5E7F\u6842\u8D35\u597D\u6D69\u548C\u5408\u6CB3\u9ED1\u6A2A\u6052\u5B8F\u540E\u6237\u8352\u7ED8\u5409\u7EAA\u4F73\u52A0\u89C1\u5065\u6C5F\u4ECB\u91D1\u4ECA\u8FDB\u4E95\u9759\u656C\u9756\u4E45\u9152\u83CA\u4FCA\u5EB7\u53EF\u514B\u53E3\u68A8\u7406\u91CC\u793C\u6817\u4E3D\u5229\u7ACB\u51C9\u826F\u6797\u73B2\u94C3\u67F3\u9686\u9E7F\u9EBB\u739B\u7F8E\u840C\u5F25\u654F\u6728\u7EB3\u5357\u7537\u5185\u9E1F\u5B81\u670B\u7247\u5E73\u5D0E\u9F50\u5343\u524D\u6D45\u6865\u7434\u9752\u6E05\u5E86\u79CB\u4E18\u66F2\u6CC9\u4EC1\u5FCD\u65E5\u8363\u82E5\u4E09\u68EE\u7EB1\u6749\u5C71\u5584\u4E0A\u4F38\u795E\u5723\u77F3\u5B9E\u77E2\u4E16\u5E02\u5BA4\u6C34\u987A\u53F8\u677E\u6CF0\u6843\u85E4\u5929\u7530\u571F\u4E07\u671B\u5C3E\u672A\u6587\u6B66\u4E94\u821E\u897F\u7EC6\u590F\u5BAA\u76F8\u5C0F\u5B5D\u65B0\u661F\u884C\u96C4\u79C0\u96C5\u4E9A\u5CA9\u6768\u6D0B\u9633\u9065\u91CE\u4E5F\u53F6\u4E00\u4F0A\u8863\u9038\u4E49\u76CA\u6A31\u6C38\u7531\u6709\u4F51\u5B87\u7FBD\u90C1\u6E0A\u5143\u57A3\u539F\u8FDC\u6708\u60A6\u65E9\u9020\u5219\u6CFD\u589E\u624E\u5B85\u7AE0\u662D\u6CBC\u771F\u653F\u679D\u77E5\u4E4B\u690D\u667A\u6CBB\u4E2D\u5FE0\u4EF2\u7AF9\u52A9\u690E\u5B50\u4F50\u962A\u5742\u5800\u837B\u83C5\u85B0\u6D5C\u6FD1\u9E20\u7B71");
      Utility.isAllNonChinese(byteArray0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte)0;
      Utility.strstr(byteArray0, byteArray0);
      Utility.isAllNonChinese(byteArray0);
      Utility.getCharCount("1S&=M9'l`7/m", "?V13jZ2T8B)_07:B");
      Utility.isSingle("a0AGJ~$PFhT,x");
      Utility.isAllSingleByte("?V13jZ2T8B)_07:B");
      Utility utility0 = new Utility();
      String string0 = "oZ5'oTAd+$}]OVBUum";
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PLACE;
      Dictionary dictionary0 = new Dictionary("\u5B89\u5965\u516B\u767D\u767E\u90A6\u4FDD\u5317\u500D\u672C\u6BD4\u6EE8\u535A\u6B65\u90E8\u5F69\u83DC\u4ED3\u660C\u957F\u671D\u6C60\u8D64\u5DDD\u8239\u6DF3\u6B21\u6751\u5927\u4EE3\u5C9B\u7A3B\u9053\u5FB7\u5730\u5178\u6E21\u5C14\u7E41\u996D\u98CE\u798F\u5188\u9AD8\u5DE5\u5BAB\u53E4\u8C37\u5173\u5E7F\u6842\u8D35\u597D\u6D69\u548C\u5408\u6CB3\u9ED1\u6A2A\u6052\u5B8F\u540E\u6237\u8352\u7ED8\u5409\u7EAA\u4F73\u52A0\u89C1\u5065\u6C5F\u4ECB\u91D1\u4ECA\u8FDB\u4E95\u9759\u656C\u9756\u4E45\u9152\u83CA\u4FCA\u5EB7\u53EF\u514B\u53E3\u68A8\u7406\u91CC\u793C\u6817\u4E3D\u5229\u7ACB\u51C9\u826F\u6797\u73B2\u94C3\u67F3\u9686\u9E7F\u9EBB\u739B\u7F8E\u840C\u5F25\u654F\u6728\u7EB3\u5357\u7537\u5185\u9E1F\u5B81\u670B\u7247\u5E73\u5D0E\u9F50\u5343\u524D\u6D45\u6865\u7434\u9752\u6E05\u5E86\u79CB\u4E18\u66F2\u6CC9\u4EC1\u5FCD\u65E5\u8363\u82E5\u4E09\u68EE\u7EB1\u6749\u5C71\u5584\u4E0A\u4F38\u795E\u5723\u77F3\u5B9E\u77E2\u4E16\u5E02\u5BA4\u6C34\u987A\u53F8\u677E\u6CF0\u6843\u85E4\u5929\u7530\u571F\u4E07\u671B\u5C3E\u672A\u6587\u6B66\u4E94\u821E\u897F\u7EC6\u590F\u5BAA\u76F8\u5C0F\u5B5D\u65B0\u661F\u884C\u96C4\u79C0\u96C5\u4E9A\u5CA9\u6768\u6D0B\u9633\u9065\u91CE\u4E5F\u53F6\u4E00\u4F0A\u8863\u9038\u4E49\u76CA\u6A31\u6C38\u7531\u6709\u4F51\u5B87\u7FBD\u90C1\u6E0A\u5143\u57A3\u539F\u8FDC\u6708\u60A6\u65E9\u9020\u5219\u6CFD\u589E\u624E\u5B85\u7AE0\u662D\u6CBC\u771F\u653F\u679D\u77E5\u4E4B\u690D\u667A\u6CBB\u4E2D\u5FE0\u4EF2\u7AF9\u52A9\u690E\u5B50\u4F50\u962A\u5742\u5800\u837B\u83C5\u85B0\u6D5C\u6FD1\u9E20\u7B71");
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "\u59CB##\u59CB", dictionary0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      Utility.isSBCCase("qx^L2W&MK");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)11;
      Utility.strncmp(byteArray0, 3051, byteArray0, 47);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      Utility.isAllChinese("yo|V-r$,l0!q");
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      Utility utility0 = new Utility();
      Utility.isDBCCase(",()\"'");
      Utility.isInAggregate("\u5B89\u5965\u516B\u767D\u767E\u90A6\u4FDD\u5317\u500D\u672C\u6BD4\u6EE8\u535A\u6B65\u90E8\u5F69\u83DC\u4ED3\u660C\u957F\u671D\u6C60\u8D64\u5DDD\u8239\u6DF3\u6B21\u6751\u5927\u4EE3\u5C9B\u7A3B\u9053\u5FB7\u5730\u5178\u6E21\u5C14\u7E41\u996D\u98CE\u798F\u5188\u9AD8\u5DE5\u5BAB\u53E4\u8C37\u5173\u5E7F\u6842\u8D35\u597D\u6D69\u548C\u5408\u6CB3\u9ED1\u6A2A\u6052\u5B8F\u540E\u6237\u8352\u7ED8\u5409\u7EAA\u4F73\u52A0\u89C1\u5065\u6C5F\u4ECB\u91D1\u4ECA\u8FDB\u4E95\u9759\u656C\u9756\u4E45\u9152\u83CA\u4FCA\u5EB7\u53EF\u514B\u53E3\u68A8\u7406\u91CC\u793C\u6817\u4E3D\u5229\u7ACB\u51C9\u826F\u6797\u73B2\u94C3\u67F3\u9686\u9E7F\u9EBB\u739B\u7F8E\u840C\u5F25\u654F\u6728\u7EB3\u5357\u7537\u5185\u9E1F\u5B81\u670B\u7247\u5E73\u5D0E\u9F50\u5343\u524D\u6D45\u6865\u7434\u9752\u6E05\u5E86\u79CB\u4E18\u66F2\u6CC9\u4EC1\u5FCD\u65E5\u8363\u82E5\u4E09\u68EE\u7EB1\u6749\u5C71\u5584\u4E0A\u4F38\u795E\u5723\u77F3\u5B9E\u77E2\u4E16\u5E02\u5BA4\u6C34\u987A\u53F8\u677E\u6CF0\u6843\u85E4\u5929\u7530\u571F\u4E07\u671B\u5C3E\u672A\u6587\u6B66\u4E94\u821E\u897F\u7EC6\u590F\u5BAA\u76F8\u5C0F\u5B5D\u65B0\u661F\u884C\u96C4\u79C0\u96C5\u4E9A\u5CA9\u6768\u6D0B\u9633\u9065\u91CE\u4E5F\u53F6\u4E00\u4F0A\u8863\u9038\u4E49\u76CA\u6A31\u6C38\u7531\u6709\u4F51\u5B87\u7FBD\u90C1\u6E0A\u5143\u57A3\u539F\u8FDC\u6708\u60A6\u65E9\u9020\u5219\u6CFD\u589E\u624E\u5B85\u7AE0\u662D\u6CBC\u771F\u653F\u679D\u77E5\u4E4B\u690D\u667A\u6CBB\u4E2D\u5FE0\u4EF2\u7AF9\u52A9\u690E\u5B50\u4F50\u962A\u5742\u5800\u837B\u83C5\u85B0\u6D5C\u6FD1\u9E20\u7B71", (String) null);
      Utility.isDBCCase("\n\r \u3000");
      utility0.GetForeignType("0");
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      Utility.isAllSingleByte("(|K");
      int int0 = Utility.CC_NUM;
      Utility.isInAggregate("I", "<._1 K");
      Utility.isDBCCase((String) null);
      Utility.isAllLetter("utf-16be");
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      Utility.isYearTime("\uFF10\uFF11\uFF12\uFF13\uFF14\uFF15\uFF16\uFF17\uFF18\uFF19");
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte)17;
      byteArray0[6] = (byte)70;
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      Utility.strchr(byteArray0, (byte) (-1));
      Utility utility0 = new Utility();
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (byte) (-1);
      intArray0[1] = 6768;
      intArray0[2] = 100;
      Utility.binarySearch(200, intArray0);
      Utility.getUnsigned((byte)2);
      Utility.CC_CHAR2((byte)17);
      PipedInputStream pipedInputStream0 = new PipedInputStream(100);
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      byte[] byteArray1 = Utility.readBytes(dataInputStream0, 1);
      Utility.isSingle("\u672A##\u4EBA");
      Utility.strchr(byteArray1, (byte)11);
      Utility.TAG_TYPE.values();
      Utility.removeInvalid(intArray0);
      byte[] byteArray2 = new byte[3];
      byteArray2[0] = (byte)2;
      byteArray2[1] = (byte)11;
      byteArray2[2] = (byte)89;
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray1, byteArray1, byteArray2);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("org.ictclas4j.utility.GFCommon", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)83;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)41;
      byte byte0 = (byte) (-12);
      byteArray0[4] = (byte) (-12);
      byteArray0[5] = (byte)42;
      byteArray0[6] = (byte) (-95);
      Utility.strchr(byteArray0, (byte)42);
      Utility.TAG_TYPE.values();
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)42;
      byteArray1[1] = (byte)112;
      byteArray1[2] = (byte) (-12);
      byteArray1[3] = (byte) (-12);
      byteArray1[4] = (byte)41;
      byteArray1[5] = (byte)41;
      byteArray1[6] = (byte)112;
      byteArray1[7] = (byte) (-12);
      byteArray1[8] = (byte)41;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)83;
      byteArray2[1] = (byte) (-95);
      byteArray2[2] = (byte) (-95);
      byteArray2[3] = (byte) (-95);
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray1, byteArray1, byteArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 4 out of bounds for length 4
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.TAG_TYPE.values();
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-9);
      byteArray1[1] = (byte)17;
      byteArray1[2] = (byte) (-50);
      byteArray1[3] = (byte) (-101);
      Utility.isAllIndex(byteArray1);
      Utility utility0 = new Utility();
      Utility.isYearTime(".");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Utility.getGB(0);
      Utility.isSBCCase("\u554A");
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      Utility.strcat(byteArray0, byteArray0, (byte) (-93));
      Utility.CC_CHAR1(51);
      int[] intArray0 = new int[2];
      intArray0[1] = (int) (byte) (-93);
      Utility.binarySearch((byte) (-93), intArray0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Utility.charType((String) null);
      Utility.strcat((byte[]) null, (byte[]) null, 17);
      Utility.CC_CHAR1((-1));
      int[] intArray0 = new int[6];
      Utility.binarySearch(32, intArray0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Utility.getUnsigned((byte)16);
      Utility.getGB((byte)16);
      Utility.isAllLetter("JE|\"YS60bqC");
      int[] intArray0 = new int[7];
      intArray0[0] = 16;
      intArray0[1] = 0;
      intArray0[2] = 0;
      intArray0[3] = 16;
      intArray0[4] = (-2420);
      intArray0[5] = 16;
      intArray0[6] = 0;
      Utility.binarySearch(0, intArray0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      String string0 = "\u53E3\u5CB8";
      Utility.CC_ID("\u53E3\u5CB8");
      Utility.isYearTime("\u53E3\u5CB8");
      String string1 = "z";
      // Undeclared exception!
      try { 
        Utility.TAG_TYPE.valueOf("z");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.ictclas4j.utility.Utility.TAG_TYPE.z
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Utility.gbGenerate("RoD");
      int[] intArray0 = new int[6];
      Utility.removeInvalid(intArray0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)41;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[5] = (byte)125;
      byteArray0[6] = (byte)70;
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      Utility.strchr(byteArray0, (byte)89);
      int int0 = Utility.MAX_SEGMENT_NUM;
      Utility.CC_CHAR1((-1));
      Utility.binarySearch(2024, (int[]) null);
      Utility.removeInvalid((int[]) null);
      Utility.CC_CHAR1(48);
      Utility.CC_CHAR2(48);
      Utility.isDelimiter("xZqb4^+");
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      Utility.strchr(byteArray0, (byte) (-34));
      int[] intArray0 = new int[2];
      intArray0[0] = (int) (byte) (-34);
      intArray0[1] = (-1);
      Utility.removeInvalid(intArray0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Utility.charType("\u96A7\u9053");
      int[] intArray0 = new int[0];
      Utility.binarySearch(64, intArray0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      int int0 = Utility.CC_NUM;
      Utility.isAllChineseNum((String) null);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utility.isAllIndex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)89;
      byteArray0[5] = (byte)125;
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte)0;
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_TRANS_PERSON;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "`*^@tw*XxT=%U&", (Dictionary) null);
      Utility.chineseNameSplit("\u9AD8\u539F", posTagger0);
      Utility utility0 = new Utility();
      utility0.GetForeignType("\u9AD8\u539F");
      Utility.CC_CHAR2(55);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      try { 
        fileDescriptor0.sync();
        fail("Expecting exception: SyncFailedException");
      
      } catch(SyncFailedException e) {
         //
         // sync failed
         //
         verifyException("java.io.FileDescriptor", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Utility.getGB(43);
      Utility.chineseNameSplit("\u75A4", (PosTagger) null);
      Utility.isAllLetter("^");
      Utility.isUnknownWord("\u75A4");
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.strcpy(byteArray0, byteArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.getForeignCharCount("*lN+fE");
      Utility utility0 = new Utility();
      Utility.isAllChineseNum("\u00B7\u2014\u963F\u57C3\u827E\u7231\u5B89\u6602\u6556\u5965\u6FB3\u7B06\u82AD\u5DF4\u767D\u62DC\u73ED\u90A6\u4FDD\u5821\u9C8D\u5317\u8D1D\u672C\u6BD4\u6BD5\u5F7C\u522B\u6CE2\u73BB\u535A\u52C3\u4F2F\u6CCA\u535C\u5E03\u624D\u91C7\u4ED3\u67E5\u5DEE\u67F4\u5F7B\u5DDD\u8328\u6148\u6B21\u8FBE\u5927\u6234\u4EE3\u4E39\u65E6\u4F46\u5F53\u9053\u5FB7\u5F97\u7684\u767B\u8FEA\u72C4\u8482\u5E1D\u4E01\u4E1C\u675C\u6566\u591A\u989D\u4FC4\u5384\u9102\u6069\u5C14\u4F10\u6CD5\u8303\u83F2\u82AC\u8D39\u4F5B\u592B\u798F\u5F17\u752B\u5676\u76D6\u5E72\u5188\u54E5\u6208\u9769\u845B\u683C\u5404\u6839\u53E4\u74DC\u54C8\u6D77\u7F55\u7FF0\u6C57\u6C49\u8C6A\u5408\u6CB3\u8D6B\u4EA8\u4FAF\u547C\u80E1\u534E\u970D\u57FA\u5409\u53CA\u52A0\u8D3E\u575A\u7B80\u6770\u91D1\u4EAC\u4E45\u5C45\u541B\u5580\u5361\u51EF\u574E\u5EB7\u8003\u67EF\u79D1\u53EF\u514B\u80AF\u5E93\u594E\u62C9\u5587\u83B1\u6765\u5170\u90CE\u6717\u52B3\u52D2\u96F7\u7D2F\u695E\u9ECE\u7406\u674E\u91CC\u8389\u4E3D\u5386\u5229\u7ACB\u529B\u8FDE\u5EC9\u826F\u5217\u70C8\u6797\u9686\u5362\u864F\u9C81\u8DEF\u4F26\u4ED1\u7F57\u6D1B\u739B\u9A6C\u4E70\u9EA6\u8FC8\u66FC\u8305\u8302\u6885\u95E8\u8499\u76DF\u7C73\u871C\u5BC6\u654F\u660E\u6469\u83AB\u58A8\u9ED8\u59C6\u6728\u7A46\u90A3\u5A1C\u7EB3\u4E43\u5948\u5357\u5185\u5C3C\u5E74\u6D85\u5B81\u7EBD\u52AA\u8BFA\u6B27\u5E15\u6F58\u7554\u5E9E\u57F9\u4F69\u5F6D\u76AE\u5E73\u6CFC\u666E\u5176\u5951\u6070\u5F3A\u4E54\u5207\u94A6\u6C81\u6CC9\u8BA9\u70ED\u8363\u8089\u5112\u745E\u82E5\u8428\u585E\u8D5B\u6851\u745F\u68EE\u838E\u6C99\u5C71\u5584\u7ECD\u820D\u5723\u65BD\u8BD7\u77F3\u4EC0\u53F2\u58EB\u5B88\u65AF\u53F8\u4E1D\u82CF\u7D20\u7D22\u5854\u6CF0\u5766\u6C64\u5510\u9676\u7279\u63D0\u6C40\u56FE\u571F\u5410\u6258\u9640\u74E6\u4E07\u738B\u65FA\u5A01\u97E6\u7EF4\u9B4F\u6E29\u6587\u7FC1\u6C83\u4E4C\u543E\u6B66\u4F0D\u897F\u9521\u5E0C\u559C\u590F\u76F8\u9999\u6B47\u8C22\u8F9B\u65B0\u7259\u96C5\u4E9A\u5F66\u5C27\u53F6\u4F9D\u4F0A\u8863\u5B9C\u4E49\u56E0\u97F3\u82F1\u96CD\u5C24\u4E8E\u7EA6\u5BB0\u6CFD\u589E\u8A79\u73CD\u6CBB\u4E2D\u4EF2\u6731\u8BF8\u5353\u5B5C\u7956\u4F50\u4F3D\u5A05\u5C15\u8153\u6ED5\u6D4E\u5609\u6D25\u8D56\u83B2\u7433\u5F8B\u7565\u6155\u59AE\u8042\u88F4\u6D66\u5947\u9F50\u7434\u8339\u73CA\u536B\u6B23\u900A\u672D\u54F2\u667A\u5179\u8299\u6C76\u8FE6\u73C0\u742A\u68B5\u6590\u80E5\u9EDB");
      Utility.isAllLetter("o3tf~");
      Utility.strncmp(byteArray0, 1354, byteArray0, 1);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      byte byte0 = (byte)30;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)30;
      Utility.isAllChineseNum("#E]Hi");
      Utility.strcpy(byteArray0, byteArray0);
      String string0 = null;
      Utility.isYearTime((String) null);
      String string1 = null;
      Utility.chineseNameSplit((String) null, (PosTagger) null);
      byte[] byteArray1 = null;
      Utility.strstr(byteArray0, (byte[]) null);
      // Undeclared exception!
      try { 
        Utility.isAllIndex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Utility.strcat((byte[]) null, (byte[]) null, 1571);
      Utility.CC_Find((byte[]) null, (byte[]) null);
      // Undeclared exception!
      try { 
        Utility.isAllIndex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      Dictionary dictionary0 = new Dictionary("{z5");
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "{z5", dictionary0);
      Utility.chineseNameSplit("{z5", posTagger0);
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.strcpy(byteArray0, byteArray0);
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Utility.isSingle("4;yPP");
      Utility.TAG_TYPE.values();
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      Dictionary dictionary0 = new Dictionary();
      dictionary0.isExist("", (-2392));
      dictionary0.getWordType("75'~T ?");
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "", dictionary0);
      Utility.chineseNameSplit("4;yPP", posTagger0);
      Utility.isSingle("\u80E1\u540C");
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.isAllDelimiter(byteArray0);
      // Undeclared exception!
      try { 
        Utility.strcpy(byteArray0, byteArray0, 186);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      Utility.isAllChineseNum(".");
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Utility.getGB(43);
      Utility.getForeignCharCount("\u75A4");
      Utility.isInAggregate("\u75A4", "\u75A4");
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.isAllIndex(byteArray0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Utility.charType((String) null);
      Utility utility0 = new Utility();
      utility0.GetForeignType("mEgZ;JiRj)*|P");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-81);
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-2);
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      Utility.charType("");
      byte[] byteArray0 = null;
      // Undeclared exception!
      try { 
        Utility.strcpy((byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Utility.isAllForeign("org.ictclas4j.bean.SegNode");
      Utility.gbGenerate("(piseEP");
      // Undeclared exception!
      Utility.gbGenerate("yue");
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Utility.gbGenerate("\u76C6\u5730");
          Utility.CC_ID("\u76C6\u5730");
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      String string0 = "\u5E73\u539F";
      Utility.isUnknownWord("\u5E73\u539F");
      Utility.gbGenerate("\u5E73\u539F");
      // Undeclared exception!
      Utility.gbGenerate("7wJ");
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      Utility.isAllLetter("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Utility.charType("");
      Utility.gbGenerate("");
      Utility.CC_ID("");
      int int0 = Utility.WT_DELIMITER;
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      Utility.isSBCCase("2p ");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)0;
      Utility.strchr(byteArray1, (byte)116);
      Utility utility0 = new Utility();
      Utility utility1 = new Utility();
      Utility.isYearTime("\u672A##\u6570");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Utility.getGB(6768);
      Utility.isUnknownWord("BG");
      Utility.CC_CHAR2(0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-93);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-93);
      Utility.getCCPrefix(byteArray1);
      Utility.strchr(byteArray0, (byte) (-21));
      Utility.isAllChineseNum("#_tlDAOF'p]]u)U.j=");
      int int0 = Utility.WT_CHINESE;
      Utility.isAllLetter((String) null);
      String string0 = "Mx`I%2f@i";
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PERSON;
      Dictionary dictionary0 = new Dictionary("");
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "#_tlDAOF'p]]u)U.j=", dictionary0);
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Utility.strchr((byte[]) null, (byte) (-34));
      Utility.CC_Find((byte[]) null, (byte[]) null);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      Utility.isAllLetter("[");
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utility.CC_ID("o");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      Utility.isAllNum("\u2236\u00B7\uFF0E\uFF0F");
      Utility.isDBCCase("r8O<zYL>KT");
      Utility.getGB((-2628));
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Utility.CC_CHAR2((-24));
      Utility.TAG_TYPE.values();
      Utility.TAG_TYPE.values();
      Utility.CC_ID("org.ictclas4j.bean.ContextStat");
      Utility.isAllChinese("$U+$0");
      Utility.isUnknownWord("$U+$0");
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Utility.strncmp((byte[]) null, 460, (byte[]) null, (-4127));
      Utility.isAllLetter("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.CC_Find((byte[]) null, (byte[]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)0;
      Utility.strncmp((byte[]) null, 984, byteArray0, (byte)7);
      Utility utility0 = new Utility();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      Utility.readBytes(dataInputStream0, 0);
      Utility.isAllNum("\u672A##\u5730");
      Utility.isSingle("*VVK+m}O?'c~g3");
      Utility.isForeign("\u65B0\u6751");
      Utility.isAllForeign("");
      Utility.CC_Generate("O<J`");
      Utility.isAllNum("\u96F6\u25CB\u4E00\u4E8C\u4E24\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u5341\u5EFF\u767E\u5343\u4E07\u4EBF\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396\u62FE\u4F70\u4EDF\u2236\u00B7\uFF0E\uFF0F\u70B9");
      Utility.isDBCCase("f*|Rl!8w\"(LE=Qvn");
      Utility.getGB((-4127));
      Utility.CC_ID("");
      Utility.getUnsigned((byte) (-89));
      Utility.CC_CHAR2(41);
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      String string0 = "WC2z22ert";
      // Undeclared exception!
      try { 
        Utility.isAllForeign((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      Utility.isYearTime("/");
      Utility.getForeignCharCount((String) null);
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      Utility.CC_CHAR2((-21));
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.isAllDelimiter(byteArray0);
      Utility.CC_CHAR1((-1263));
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-94);
      byteArray0[1] = (byte) (-6);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-17);
      Utility.isAllNonChinese(byteArray0);
      Utility.strcpy(byteArray0, (byte[]) null, (int) (byte) (-94));
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      Utility.strchr(byteArray0, (byte) (-34));
      Utility.isAllDelimiter(byteArray0);
      Utility.isAllNonChinese(byteArray0);
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      Utility.isAllLetter("");
      Utility.isAllForeign("");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      Utility.CC_Generate("shuai");
      Utility.isInAggregate("", "shuai");
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      Utility.getGB(43);
      Utility.isYearTime("\u75A4");
      int int0 = Utility.CC_NUM;
      Utility.isForeign("\u75A4");
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      Utility.isSBCCase("2p ");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte) (-16);
      byteArray0[4] = (byte) (-114);
      byteArray0[5] = (byte) (-26);
      Utility.CC_CHAR2((byte)0);
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PERSON;
      Dictionary dictionary0 = new Dictionary();
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, (InputStream) null, (InputStream) null, dictionary0);
      Utility.chineseNameSplit("2p ", posTagger0);
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      String string0 = "qg`t&l'Km+s~6";
      Utility.isInAggregate("qg`t&l'Km+s~6", "qg`t&l'Km+s~6");
      Utility.TAG_TYPE.values();
      Utility.isDelimiter("qg`t&l'Km+s~6");
      // Undeclared exception!
      try { 
        Utility.TAG_TYPE.valueOf("i5!^a-P/L!TM;Wx");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.ictclas4j.utility.Utility.TAG_TYPE.i5!^a-P/L!TM;Wx
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      Utility.charType("org.ictclas4j.utility.Utility$TAG_TYPE");
      Utility.isDelimiter("org.ictclas4j.utility.Utility$TAG_TYPE");
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      Utility.strncmp((byte[]) null, 460, (byte[]) null, (-4127));
      Utility.isAllLetter("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.CC_Find((byte[]) null, (byte[]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      int[] intArray0 = new int[0];
      Utility.binarySearch(239, intArray0);
      Utility.removeInvalid(intArray0);
      Utility.CC_CHAR1((byte)7);
      Utility.CC_CHAR2((byte)7);
      Utility.isInAggregate("<._1 K", "<._1 K");
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      Utility.isAllChineseNum("ajd:[");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-55);
      byteArray0[1] = (byte)4;
      Utility.isAllDelimiter(byteArray0);
      Utility.isYearTime("ajd:[");
      Utility.isAllChineseNum("ajd:[");
      Utility.isAllLetter("ajd:[");
      Utility.isAllForeign("ajd:[");
      Utility.strcat(byteArray0, byteArray0, (byte)4);
      Utility.isUnknownWord("ajd:[");
      Utility.strstr(byteArray0, byteArray0);
      Utility.isAllSingleByte("ajd:[");
      Utility.CC_CHAR1((-1));
      Utility.isSBCCase("ajd:[");
      int[] intArray0 = new int[3];
      intArray0[0] = (int) (byte)4;
      intArray0[1] = (int) (byte)4;
      intArray0[2] = (int) (byte) (-55);
      Utility.binarySearch((-1), intArray0);
      Utility.removeInvalid(intArray0);
      Utility.CC_CHAR1((-153));
      Utility.getForeignCharCount("ajd:[");
      Utility.CC_CHAR2(0);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Utility.gbGenerate("RoD");
      int[] intArray0 = new int[1];
      Utility.removeInvalid(intArray0);
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      Utility.getGB(43);
      Utility.chineseNameSplit("\u75A4", (PosTagger) null);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-16);
      Utility.getCCPrefix(byteArray0);
      Utility.strchr(byteArray0, (byte)51);
      Utility.isAllChineseNum("\u75A4");
      Utility.strcpy(byteArray0, byteArray0);
      String string0 = "";
      Utility.isAllLetter("");
      Utility.chineseNameSplit("", (PosTagger) null);
      byte[] byteArray1 = null;
      Utility.strstr(byteArray0, (byte[]) null);
      byte[] byteArray2 = new byte[20];
      byteArray2[0] = (byte)51;
      Utility.strcat((byte[]) null, byteArray2, (byte)51);
      Utility.isAllIndex(byteArray0);
      Utility.TAG_TYPE.values();
      // Undeclared exception!
      try { 
        Utility.isAllIndex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      Utility.isInAggregate("xia", "0");
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      Utility.charType("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      int[] intArray0 = new int[0];
      Utility.removeInvalid(intArray0);
      Utility.isAllNum("");
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte)30;
      int int0 = Utility.MAX_POS_PER_WORD;
      Utility.CC_Find(byteArray0, byteArray0);
      byte[] byteArray1 = new byte[4];
      Utility.strstr(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)0;
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)24;
      byteArray1[2] = (byte)24;
      byteArray1[3] = (byte)24;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte)0;
      Utility.strstr(byteArray0, byteArray1);
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      Utility.isAllLetter("");
      Utility.isAllForeign("WC2z22ert");
      Utility utility0 = new Utility();
      Utility.isYearTime("\u672A##\u5730");
      Utility.getForeignCharCount(",()\"'");
      Utility.isAllNum("");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      MockFileInputStream mockFileInputStream1 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream1);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream1, mockFileInputStream1);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      Utility.isAllDelimiter(byteArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.CC_ID("T{hVgbYp#<b/nb~J^");
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      Utility.charType((String) null);
      Utility utility0 = new Utility();
      utility0.GetForeignType("mEgZ;JiRj)*|P");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-81);
      byteArray0[0] = (byte)21;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      int[] intArray0 = new int[4];
      intArray0[0] = 100;
      intArray0[1] = 120;
      intArray0[2] = 0;
      intArray0[3] = 200;
      Utility.binarySearch(0, intArray0);
      Utility.removeInvalid(intArray0);
      Utility.CC_CHAR1(1);
      Utility.getForeignCharCount(",()\"'");
      Utility.CC_CHAR2(20);
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      Utility.isDBCCase("");
      Utility.getUnsigned((byte)0);
      Utility.isInAggregate("", "");
      Utility.isSingle("CD");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-128);
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      Utility.strncpy(byteArray0, byteArray0, 0);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)71;
      byteArray1[4] = (byte)0;
      byteArray1[5] = (byte) (-128);
      byteArray1[6] = (byte)0;
      byteArray1[7] = (byte) (-128);
      byteArray1[8] = (byte)0;
      Utility.strstr(byteArray0, byteArray1);
      Utility.charType("CD");
      int[] intArray0 = new int[1];
      intArray0[0] = (int) (byte)0;
      int[] intArray1 = Utility.removeInvalid(intArray0);
      Utility.getCCPrefix(byteArray1);
      Utility.removeInvalid(intArray1);
      Utility.isAllForeign(",&dtO%6?%");
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      Utility.getUnsigned((byte) (-60));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Utility.CC_CHAR2((byte) (-60));
      Utility.charType("\uFF10\uFF11\uFF12\uFF13\uFF14\uFF15\uFF16\uFF17\uFF18\uFF19");
      Utility.isAllNum("\uFF10\uFF11\uFF12\uFF13\uFF14\uFF15\uFF16\uFF17\uFF18\uFF19");
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Utility.isAllDelimiter(byteArray0);
      Utility.getCCPrefix(byteArray0);
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Utility.isSingle("C8JB{\"");
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      Utility.isAllNum("!");
      Utility.isSingle("!");
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      Utility.isSingle("org.ictclas4j.bean.WordItem");
      Utility utility0 = new Utility();
      utility0.GetForeignType("Z`+<K5!+-DaF^!R");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)65;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-4);
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      Utility utility0 = new Utility();
      utility0.GetForeignType(" ");
      Utility.isUnknownWord("\u5B89\u5965\u516B\u767D\u767E\u90A6\u4FDD\u5317\u500D\u672C\u6BD4\u6EE8\u535A\u6B65\u90E8\u5F69\u83DC\u4ED3\u660C\u957F\u671D\u6C60\u8D64\u5DDD\u8239\u6DF3\u6B21\u6751\u5927\u4EE3\u5C9B\u7A3B\u9053\u5FB7\u5730\u5178\u6E21\u5C14\u7E41\u996D\u98CE\u798F\u5188\u9AD8\u5DE5\u5BAB\u53E4\u8C37\u5173\u5E7F\u6842\u8D35\u597D\u6D69\u548C\u5408\u6CB3\u9ED1\u6A2A\u6052\u5B8F\u540E\u6237\u8352\u7ED8\u5409\u7EAA\u4F73\u52A0\u89C1\u5065\u6C5F\u4ECB\u91D1\u4ECA\u8FDB\u4E95\u9759\u656C\u9756\u4E45\u9152\u83CA\u4FCA\u5EB7\u53EF\u514B\u53E3\u68A8\u7406\u91CC\u793C\u6817\u4E3D\u5229\u7ACB\u51C9\u826F\u6797\u73B2\u94C3\u67F3\u9686\u9E7F\u9EBB\u739B\u7F8E\u840C\u5F25\u654F\u6728\u7EB3\u5357\u7537\u5185\u9E1F\u5B81\u670B\u7247\u5E73\u5D0E\u9F50\u5343\u524D\u6D45\u6865\u7434\u9752\u6E05\u5E86\u79CB\u4E18\u66F2\u6CC9\u4EC1\u5FCD\u65E5\u8363\u82E5\u4E09\u68EE\u7EB1\u6749\u5C71\u5584\u4E0A\u4F38\u795E\u5723\u77F3\u5B9E\u77E2\u4E16\u5E02\u5BA4\u6C34\u987A\u53F8\u677E\u6CF0\u6843\u85E4\u5929\u7530\u571F\u4E07\u671B\u5C3E\u672A\u6587\u6B66\u4E94\u821E\u897F\u7EC6\u590F\u5BAA\u76F8\u5C0F\u5B5D\u65B0\u661F\u884C\u96C4\u79C0\u96C5\u4E9A\u5CA9\u6768\u6D0B\u9633\u9065\u91CE\u4E5F\u53F6\u4E00\u4F0A\u8863\u9038\u4E49\u76CA\u6A31\u6C38\u7531\u6709\u4F51\u5B87\u7FBD\u90C1\u6E0A\u5143\u57A3\u539F\u8FDC\u6708\u60A6\u65E9\u9020\u5219\u6CFD\u589E\u624E\u5B85\u7AE0\u662D\u6CBC\u771F\u653F\u679D\u77E5\u4E4B\u690D\u667A\u6CBB\u4E2D\u5FE0\u4EF2\u7AF9\u52A9\u690E\u5B50\u4F50\u962A\u5742\u5800\u837B\u83C5\u85B0\u6D5C\u6FD1\u9E20\u7B71");
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte) (-122);
      byteArray0[2] = (byte)38;
      byteArray0[3] = (byte)27;
      byteArray0[4] = (byte)75;
      byteArray0[5] = (byte)23;
      byteArray0[6] = (byte) (-9);
      Utility.isAllIndex(byteArray0);
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      Utility.CC_Generate("org.ictclas4j.bean.SegNode");
      Utility.isForeign("org.ictclas4j.bean.SegNode");
      Utility.charType((String) null);
      Utility.isForeign("A}h_ja@");
      Utility.gbGenerate("A}h_ja@");
      Utility.CC_ID((String) null);
      Utility.CC_CHAR2(17);
      Utility.isUnknownWord((String) null);
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      Utility.isUnknownWord("?mE'L^*@&{yG]");
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      Utility.isAllIndex(byteArray0);
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      Utility.isUnknownWord("PCPX]m6{A>");
      Utility.isSBCCase("PCPX]m6{A>");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-9);
      byteArray0[2] = (byte)93;
      byteArray0[3] = (byte)106;
      byteArray0[4] = (byte) (-9);
      byteArray0[5] = (byte)6;
      byteArray0[6] = (byte)104;
      Utility.isAllIndex(byteArray0);
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      Utility.isAllLetter("");
      Utility.isAllForeign("WC2z22ert");
      Utility utility0 = new Utility();
      Utility.getForeignCharCount(",()\"'");
      Utility.isAllNum("");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      Utility.isAllLetter("$VALUES");
      Utility.CC_ID("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      byte[] byteArray0 = new byte[0];
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)66;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-70);
      byteArray0[6] = (byte)0;
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Utility.isDelimiter("I");
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("org.ictclas4j.utility.GFCommon", e);
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Utility.isYearTime("CZ%wqdog*ER");
      int int0 = Utility.TT_RUSSIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Utility.isSingle("Q");
      Utility utility0 = new Utility();
      Utility.isAllChinese("e|-r%m}B");
      Utility utility1 = new Utility();
      utility0.GetForeignType("ajfVXiJG)sV|ycl");
      Utility.isAllSingleByte("\u3001\uFF0C\uFF08\uFF09\u201C\u201D\u2018\u2019");
      Utility.getCharCount("\u672A##\u6570", "j9jn{jt's-)`j6r?lx}");
      Utility.isAllIndex(byteArray0);
      Utility.isAllChineseNum("\u672A##\u4E32");
      byte[] byteArray1 = new byte[5];
      byteArray1[1] = (byte)107;
      byteArray1[3] = (byte)107;
      byteArray1[4] = (byte)14;
      Utility.strncmp(byteArray0, 0, byteArray1, 1);
      Utility.isInAggregate("\n\r \u3000", "\n\r \u3000");
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.strncmp(byteArray0, 7, byteArray0, 7);
      Utility.isDBCCase("\u51E0\u6570\u7B2C\u4E0A\u6210");
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)89;
      byteArray0[5] = (byte)125;
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)70;
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      Utility.strchr(byteArray0, (byte)89);
      int int0 = Utility.TT_ENGLISH;
      Utility.CC_CHAR1((-1));
      int[] intArray0 = new int[2];
      intArray0[1] = (int) (byte) (-75);
      Utility.binarySearch((byte)70, intArray0);
      Utility.removeInvalid(intArray0);
      Utility.CC_CHAR1((byte)125);
      String string0 = "{z5";
      Utility.isInAggregate("Veq{Y:~Ipb@", "{z5");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Veq{Y:~Ipb@.ctx");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Veq{Y:~Ipb@");
      Dictionary dictionary0 = new Dictionary("Veq{Y:~Ipb@");
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "Veq{Y:~Ipb@", dictionary0);
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      Utility.getForeignCharCount((String) null);
      Utility.isUnknownWord("g");
      DataInputStream dataInputStream0 = null;
      Utility.readBytes((DataInputStream) null, 237);
      // Undeclared exception!
      try { 
        Utility.strcpy((byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      String string0 = "{z5";
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      Dictionary dictionary0 = new Dictionary("{z5");
      // Undeclared exception!
      try { 
        dictionary0.load((InputStream) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.strcpy(byteArray0, byteArray0);
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.getForeignCharCount("*lN+fE");
      Utility utility0 = new Utility();
      Utility.CC_CHAR1(10);
      Utility.CC_CHAR2(6768);
      Utility.isAllNum(",()\"'");
      Utility.strcat(byteArray0, byteArray0, 8);
      byte[] byteArray1 = new byte[4];
      byteArray1[0] = (byte) (-118);
      byteArray1[1] = (byte)15;
      byteArray1[2] = (byte) (-111);
      byteArray1[3] = (byte)115;
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray1, byteArray0, byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      Utility.strchr(byteArray0, (byte) (-34));
      Utility.isAllDelimiter(byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      Utility.readBytes(dataInputStream0, (byte) (-34));
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      // Undeclared exception!
      try { 
        Utility.PostfixSplit((byte[]) null, (byte[]) null, (byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      Utility.TAG_TYPE.values();
      Utility utility0 = new Utility();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte)24;
      Enumeration<ByteArrayInputStream> enumeration0 = (Enumeration<ByteArrayInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      Utility.readBytes(dataInputStream0, 120);
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("org.ictclas4j.utility.GFCommon", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Utility.getCCPrefix(byteArray0);
      Utility.strcat(byteArray0, byteArray0, (-1350));
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Utility.strchr(byteArray0, (byte) (-55));
      Utility utility0 = new Utility();
      Utility utility1 = new Utility();
      Utility.isYearTime("%/W3~LQXe");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Utility.getGB((-1114));
      Utility.isUnknownWord("C)c{WJ");
      Utility.CC_CHAR2(206);
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      Utility.isYearTime("10qNz=");
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.strcpy(byteArray0, byteArray0);
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.getForeignCharCount("*lN+fE");
      Utility utility0 = new Utility();
      Utility.CC_CHAR1(10);
      Utility.CC_CHAR2(6768);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Utility.readBytes(dataInputStream0, 6);
      Utility.isAllNum("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
      Utility.isSingle("\u672A##\u4E32");
      Utility.isForeign("/GOB");
      Utility.isAllForeign("");
      Utility.CC_Generate("*VVK+m}O?'c~g3");
      Utility.isAllNum("{l1\"uwZZ}p&=S<");
      Utility.isDBCCase("*VVK+m}O?'c~g3");
      Utility.getGB(43);
      Utility.CC_ID("\u672B##\u672B");
      Utility.getUnsigned((byte) (-127));
      Utility.CC_CHAR2(0);
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)2;
      Utility.strncpy(byteArray0, byteArray0, (byte)2);
      Utility.isAllNum("j23LD9\"`Yvm");
      Utility.isUnknownWord("j23LD9\"`Yvm");
      Utility.strcat(byteArray0, byteArray0, 5);
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      Utility.isAllForeign("org.ictclas4j.bean.SegNode");
      Utility.isForeign("org.ictclas4j.bean.SegNode");
      Utility.isAllForeign("org.ictclas4j.bean.SegNode");
      Utility.isForeign("org.ictclas4j.bean.SegNode");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte) (-7);
      byteArray0[4] = (byte) (-72);
      Utility.getCCPrefix(byteArray0);
      Utility.isForeign((String) null);
      Utility.isSBCCase("SfPtrc`un77}Jt^I");
      Utility.strncpy(byteArray0, byteArray0, (byte)7);
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-93);
      byteArray1[1] = (byte)30;
      byteArray1[2] = (byte) (-7);
      byteArray1[3] = (byte) (-7);
      byteArray1[4] = (byte)7;
      byteArray1[5] = (byte)30;
      byteArray1[6] = (byte) (-93);
      byteArray1[7] = (byte) (-93);
      Utility.strstr(byteArray1, byteArray1);
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      Utility.strncmp((byte[]) null, 460, (byte[]) null, (-4127));
      Utility.isAllLetter("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.CC_Find((byte[]) null, (byte[]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)0;
      Utility.strncmp((byte[]) null, 984, byteArray0, (byte)7);
      Utility utility0 = new Utility();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.markSupported();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      Utility.isAllNum("\u672A");
      Utility.strcat(byteArray0, byteArray0, 1);
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, (byte[]) null, (byte[]) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("org.ictclas4j.utility.GFCommon", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      Utility.strcat(byteArray0, byteArray0, 4);
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.strstr(byteArray0, byteArray0);
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-86);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)89;
      byteArray0[1] = (byte)125;
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-86);
      byteArray1[1] = (byte) (-86);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Utility.strstr(byteArray0, byteArray1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Utility.getCharCount("?V13jZ2T8B)_07:B", "?V13jZ2T8B)_07:B");
      Utility.isSingle("?V13jZ2T8B)_07:B");
      Utility.isAllSingleByte("?V13jZ2T8B)_07:B");
      Utility utility0 = new Utility();
      Dictionary dictionary0 = new Dictionary();
      Utility.isAllNum("+8&oibkrS,>");
      Utility.isInAggregate("\u672A##\u4EBA", "@");
      utility0.GetForeignType("?V13jZ2T8B)_07:B");
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)66;
      // Undeclared exception!
      try { 
        Utility.isAllIndex(byteArray2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      Utility.isInAggregate("J]Io4Xql!{A", (String) null);
      Utility.isYearTime((String) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)119;
      byteArray0[1] = (byte)0;
      Utility.strchr(byteArray0, (byte)119);
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Utility.isAllNonChinese(byteArray0);
      Utility.getCharCount("-", "1S&=M9'l`7/m");
      Utility.isSingle("a0AGJ~$PFhT,x");
      Utility.isAllSingleByte("a0AGJ~$PFhT,x");
      Utility utility0 = new Utility();
      Utility.isDBCCase("\u76D0\u6E56");
      Dictionary dictionary0 = new Dictionary("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_NORMAL;
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "oZ5'oTAd+$}]OVBUum", dictionary0);
      Utility.chineseNameSplit("-", posTagger0);
      byte[] byteArray1 = new byte[0];
      byte[] byteArray2 = new byte[0];
      Utility.strcpy(byteArray1, byteArray2);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 2;
      intArray0[2] = 2;
      intArray0[3] = 120;
      intArray0[4] = 0;
      intArray0[5] = 100;
      intArray0[6] = 9;
      intArray0[7] = 6;
      Utility.binarySearch(650, intArray0);
      Utility.CC_ID("Qa[");
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Utility.isAllForeign(":7xu+@-}");
      Utility.TAG_TYPE.values();
      Utility.strchr((byte[]) null, (byte) (-108));
      Utility.isAllChinese(":7xu+@-}");
      Utility.CC_CHAR1((-765));
      Utility.strstr((byte[]) null, (byte[]) null);
      Utility.getForeignCharCount((String) null);
      Utility.CC_CHAR2((byte) (-108));
      int[] intArray0 = new int[9];
      intArray0[0] = 168;
      intArray0[1] = (-1);
      intArray0[2] = (-1285);
      intArray0[3] = 168;
      intArray0[4] = (-1285);
      intArray0[5] = 147;
      intArray0[6] = 168;
      intArray0[7] = (-1);
      intArray0[8] = (-1);
      Utility.binarySearch((-1285), intArray0);
      Utility.binarySearch(205, intArray0);
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      Utility.getGB(43);
      Utility.chineseNameSplit("\u75A4", (PosTagger) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)47;
      Utility.getCCPrefix(byteArray0);
      Utility.strchr(byteArray0, (byte)51);
      Utility.isAllChineseNum("\u75A4");
      Utility.strcpy(byteArray0, byteArray0);
      String string0 = "";
      Utility.isAllLetter("");
      Utility.chineseNameSplit("", (PosTagger) null);
      byte[] byteArray1 = null;
      Utility.strstr(byteArray0, (byte[]) null);
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)51;
      Utility.strcat((byte[]) null, byteArray2, (byte)51);
      Utility.isAllIndex(byteArray0);
      Utility.TAG_TYPE.values();
      // Undeclared exception!
      try { 
        Utility.isAllIndex((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      Utility.strncmp((byte[]) null, 460, (byte[]) null, (-4127));
      Utility.isAllLetter("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.CC_Find((byte[]) null, (byte[]) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)7;
      Utility.strncpy((byte[]) null, byteArray0, 24);
      Utility.strstr(byteArray0, byteArray0);
      Utility.charType("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      int[] intArray0 = new int[0];
      Utility.removeInvalid(intArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.removeInvalid((int[]) null);
      Utility.isAllForeign("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      Utility.isAllSingleByte("1cE/KZ&coA");
      Utility.isSBCCase("R^R5*");
      Utility.isInAggregate("BCD", (String) null);
      Utility.isDBCCase((String) null);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)23;
      Utility.isAllNonChinese(byteArray0);
      Utility.getGB(0);
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.strcpy(byteArray0, byteArray0);
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.getCCPrefix(byteArray0);
      Utility.isAllForeign("J");
      Utility utility0 = new Utility();
      Utility.getForeignCharCount("jP:Y^IP\u0002nS'W*D");
      Utility.isAllNum("6");
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      String string0 = "lQ$W2,4lTZs#rR)tE^w";
      Utility.CC_ID("lQ$W2,4lTZs#rR)tE^w");
      Utility.getGB(1858);
      Utility.isSBCCase("lQ$W2,4lTZs#rR)tE^w");
      Utility.isDelimiter("\uFF0D");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-76);
      byteArray0[2] = (byte) (-85);
      byteArray0[3] = (byte) (-34);
      byteArray0[4] = (byte) (-74);
      Utility.strcat(byteArray0, byteArray0, 166);
      Utility.getGB((-6472));
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PERSON;
      Dictionary dictionary0 = new Dictionary();
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "\uFF0D", dictionary0);
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.strcat(byteArray0, byteArray0, 4);
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[2] = (byte)89;
      byteArray0[5] = (byte)125;
      byteArray0[4] = (byte)41;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)70;
      Utility.getForeignCharCount("/7_/x1GITU;tu");
      Utility.isAllNum("/7_/x1GITU;tu");
      Utility.isAllLetter("/7_/x1GITU;tu");
      // Undeclared exception!
      try { 
        Utility.CC_ID("q");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.ictclas4j.utility.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)30;
      byteArray0[1] = (byte) (-47);
      byteArray0[2] = (byte) (-64);
      Utility.strstr(byteArray0, byteArray0);
      String string0 = "";
      Utility.isAllForeign("");
      String string1 = "";
      Utility.isDelimiter("");
      Utility.isForeign("");
      Utility.isAllNonChinese(byteArray0);
      // Undeclared exception!
      try { 
        Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // -1
         //
         verifyException("org.ictclas4j.utility.GFCommon", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      Utility.isAllDelimiter(byteArray0);
      Utility.getForeignCharCount("\u8C37\u5730");
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      Utility.isDBCCase("{T_q/7g,?-y5");
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      byte[] byteArray0 = null;
      Utility.strstr((byte[]) null, (byte[]) null);
      Utility.isAllLetter("");
      Utility.strcat((byte[]) null, (byte[]) null, (-1));
      Utility.isAllForeign("WC2z22ert");
      Utility.getCharCount("", "\u76D0\u573A");
      Utility utility0 = new Utility();
      Utility.isAllNum("");
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_PERSON;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(mockFileInputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(bufferedInputStream0, mockFileInputStream0);
      Dictionary dictionary0 = new Dictionary("\u3001\uFF0C\uFF08\uFF09\u201C\u201D\u2018\u2019");
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, sequenceInputStream0, mockFileInputStream0, dictionary0);
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      Utility.isYearTime("\u96F6\u25CB\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396");
      int int0 = Utility.CC_NUM;
      Utility.isForeign("\u96F6\u25CB\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396");
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      Utility.isYearTime("\u96F6\u25CB\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396");
      Utility.isAllLetter("\u96F6\u25CB\u4E00\u4E8C\u4E09\u56DB\u4E94\u516D\u4E03\u516B\u4E5D\u58F9\u8D30\u53C1\u8086\u4F0D\u9646\u67D2\u634C\u7396");
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      Utility.strncmp((byte[]) null, 460, (byte[]) null, 460);
      Utility.isAllLetter("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.CC_Find((byte[]) null, (byte[]) null);
      byte[] byteArray0 = new byte[2];
      Utility.isForeign("|<l9a1W?Aj8rI");
      Utility.gbGenerate("n");
      Utility.CC_ID((String) null);
      Utility.CC_CHAR2(460);
      Utility.strcpy(byteArray0, (byte[]) null, 1253);
      Utility.isUnknownWord("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      Utility.getUnsigned((byte)84);
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-93);
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte) (-7);
      byteArray0[4] = (byte) (-72);
      Utility.getCCPrefix(byteArray0);
      Utility.isSBCCase("SfPtrc`un77}Jt^I");
      Utility.strncpy(byteArray0, byteArray0, (byte)7);
      Utility.PostfixSplit(byteArray0, byteArray0, byteArray0);
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte) (-93);
      byteArray1[1] = (byte)30;
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)7;
      byteArray2[1] = (byte)30;
      byteArray2[2] = (byte) (-72);
      byteArray2[3] = (byte) (-7);
      byteArray2[4] = (byte) (-7);
      byteArray2[5] = (byte) (-72);
      byteArray2[6] = (byte)30;
      byteArray2[7] = (byte) (-7);
      byte[] byteArray3 = new byte[5];
      byteArray3[0] = (byte)30;
      byteArray3[1] = (byte)30;
      byteArray3[2] = (byte) (-61);
      byteArray3[3] = (byte)30;
      byteArray3[4] = (byte) (-7);
      Utility.CC_Find(byteArray2, byteArray3);
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.strcpy(byteArray0, byteArray0);
      Utility.isAllDelimiter(byteArray0);
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)27;
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte) (-19);
      byteArray0[4] = (byte) (-26);
      byteArray0[5] = (byte) (-93);
      byteArray0[6] = (byte)91;
      Utility.strcat(byteArray0, byteArray0, (byte) (-26));
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      int int0 = Utility.CC_NUM;
      Utility.isForeign("B9AJ(q-x5");
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-3);
      byteArray0[2] = (byte)0;
      Utility.strstr(byteArray0, byteArray0);
      Utility.isAllNonChinese(byteArray0);
      Utility.getCharCount("1S&=M9'l`7/m", "?V13jZ2T8B)_07:B");
      Utility.isSingle("EGTe3iYMI&X@8)^lOn");
      Utility.isAllSingleByte("?V13jZ2T8B)_07:B");
      Utility utility0 = new Utility();
      Utility.isInAggregate("<ezMTKc@r6}", "\u575D\u90A6\u5821\u676F\u57CE\u6C60\u6751\u5355\u5C9B\u9053\u5824\u5E97\u6D1E\u6E21\u961F\u6CD5\u5CF0\u5E9C\u5188\u6E2F\u9601\u5BAB\u6C9F\u56FD\u6D77\u53F7\u6CB3\u6E56\u73AF\u96C6\u6C5F\u5956\u7901\u89D2\u8857\u4E95\u90E1\u5751\u53E3\u77FF\u91CC\u5CAD\u697C\u8DEF\u95E8\u76DF\u5E99\u5F04\u724C\u6D3E\u5761\u94FA\u65D7\u6865\u533A\u6E20\u6CC9\u4EBA\u5C71\u7701\u5E02\u6C34\u5BFA\u5854\u53F0\u6EE9\u575B\u5802\u5385\u4EAD\u5C6F\u6E7E\u6587\u5C4B\u6EAA\u5CE1\u53BF\u7EBF\u4E61\u5DF7\u578B\u6D0B\u7A91\u8425\u5C7F\u8BED\u56ED\u82D1\u9662\u95F8\u5BE8\u7AD9\u9547\u5DDE\u5E84\u65CF\u9642\u5EB5\u753A");
      Utility.CC_CHAR2(167);
      Utility.isInAggregate("\u2236\u00B7\uFF0E\uFF0F", ")Jg");
      Utility.isAllSingleByte((String) null);
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      Utility.isDelimiter("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      String string0 = "6\"MtYhKr";
      Utility.isAllNum("6\"MtYhKr");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-121);
      byteArray0[1] = (byte)37;
      Utility.strcat(byteArray0, byteArray0, 3);
      Utility.isAllNum("6\"MtYhKr");
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.strcat(byteArray0, byteArray0, 3);
      Utility.strcpy(byteArray0, byteArray0, 0);
      Utility.strncpy(byteArray0, byteArray0, 0);
      Utility.isDelimiter("6\"MtYhKr");
      Utility.strcat(byteArray0, byteArray0, 26);
      Utility.getUnsigned((byte)82);
      Utility.isAllSingleByte("orVbH7Wx>Xaym");
      Utility.isForeign("6\"MtYhKr");
      Utility.strchr(byteArray0, (byte)37);
      Utility.isDBCCase("6\"MtYhKr");
      Utility.strstr(byteArray0, byteArray0);
      Utility.isForeign("\u672A##\u4EBA");
      String string1 = "_:usSSjUxg1Ske8:de";
      Utility.TAG_TYPE utility_TAG_TYPE0 = Utility.TAG_TYPE.TT_TRANS_PERSON;
      Dictionary dictionary0 = new Dictionary();
      PosTagger posTagger0 = new PosTagger(utility_TAG_TYPE0, "", dictionary0);
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      Utility utility0 = new Utility();
      Utility.isYearTime("!?:;");
      Utility.isSingle("\u00B7\u963F\u5B89\u5965\u5DF4\u6BD4\u5F7C\u6CE2\u5E03\u5BDF\u8328\u5927\u5FB7\u5F97\u4E01\u675C\u5C14\u6CD5\u592B\u4F0F\u752B\u76D6\u683C\u54C8\u57FA\u52A0\u575A\u6377\u91D1\u5361\u79D1\u53EF\u514B\u5E93\u62C9\u83B1\u5170\u52D2\u96F7\u91CC\u5386\u5229\u8FDE\u5217\u5362\u9C81\u7F57\u6D1B\u9A6C\u6885\u8499\u7C73\u59C6\u5A1C\u6D85\u5B81\u8BFA\u5E15\u6CFC\u666E\u5947\u9F50\u4E54\u5207\u65E5\u8428\u8272\u5C71\u7533\u4EC0\u65AF\u7D22\u5854\u5766\u7279\u6258\u5A03\u7EF4\u6587\u4E4C\u897F\u5E0C\u8C22\u4E9A\u8036\u53F6\u4F9D\u4F0A\u4EE5\u624E\u4F50\u67F4\u8FBE\u767B\u8482\u6208\u679C\u6D77\u8D6B\u534E\u970D\u5409\u5B63\u6D25\u67EF\u7406\u7433\u739B\u66FC\u7A46\u7EB3\u5C3C\u5951\u94A6\u4E18\u6851\u6C99\u820D\u6CF0\u56FE\u74E6\u4E07\u96C5\u5353\u5179");
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      Utility.gbGenerate("");
      Utility.isForeign("");
      Utility.isAllChineseNum((String) null);
      Utility.isYearTime((String) null);
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      Utility.isAllForeign("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
      Utility.isInAggregate("\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026", "\u3002\uFF01\uFF1F\uFF1A\uFF1B\u2026");
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.getCCPrefix(byteArray0);
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Utility.CC_Find(byteArray0, (byte[]) null);
      Utility.charType((String) null);
      Utility.isDelimiter("\u96F6");
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      Utility.getForeignCharCount("*lN+fE");
      Utility utility0 = new Utility();
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      Utility.CC_Generate("n!Y&$~D.>2K}");
      Utility.isSBCCase("Gs:b~`9G*)h~M:7'{@8");
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      Utility.isYearTime("}?uV5");
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      String string0 = "\u672B##\u672B";
      Utility.isAllForeign("\u672B##\u672B");
      Utility.CC_Generate("$VALUES");
      Utility.TAG_TYPE.values();
      byte[] byteArray0 = new byte[0];
      Utility.CC_Find(byteArray0, byteArray0);
      Utility.isYearTime("\u672B##\u672B");
      // Undeclared exception!
      Utility.CC_Generate("\u672B##\u672B");
  }
}
