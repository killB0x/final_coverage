/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 03:02:23 GMT 2022
 */

package com.ajjpj.amapper.javabean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ajjpj.amapper.core.tpe.AQualifiedType;
import com.ajjpj.amapper.core.tpe.AQualifier;
import com.ajjpj.amapper.core.tpe.AType;
import com.ajjpj.amapper.javabean.JavaBeanType;
import com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper;
import com.ajjpj.amapper.javabean.SingleParamBeanType;
import java.util.Collection;
import java.util.LinkedList;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleJavaBeanMappingHelper_ESTest extends SimpleJavaBeanMappingHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = SimpleJavaBeanMappingHelper.INSTANCE;
      Class<Integer> class0 = Integer.class;
      Class<Object> class1 = Object.class;
      SingleParamBeanType<Integer, Object> singleParamBeanType0 = new SingleParamBeanType<Integer, Object>(class0, class1);
      Object object0 = simpleJavaBeanMappingHelper0.provideInstance((Object) null, singleParamBeanType0, singleParamBeanType0, singleParamBeanType0);
      try { 
        simpleJavaBeanMappingHelper0.INSTANCE.provideInstance(object0, (Object) null, (JavaBeanType<?>) null, singleParamBeanType0);
        fail("Expecting exception: InstantiationException");
      
      } catch(InstantiationException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      Class<Object> class0 = Object.class;
      SingleParamBeanType<Object, Object> singleParamBeanType0 = new SingleParamBeanType<Object, Object>(class0, class0);
      Object object0 = simpleJavaBeanMappingHelper0.provideInstance((Object) null, singleParamBeanType0, singleParamBeanType0, singleParamBeanType0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = SimpleJavaBeanMappingHelper.INSTANCE;
      Object object0 = simpleJavaBeanMappingHelper0.fromJuCollection((Collection<?>) null, (AQualifiedType) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      try { 
        simpleJavaBeanMappingHelper0.provideInstance((Object) null, (Object) null, (JavaBeanType<?>) null, (JavaBeanType<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      // Undeclared exception!
      try { 
        simpleJavaBeanMappingHelper0.elementType((AQualifiedType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      Class<Object> class0 = Object.class;
      SingleParamBeanType<Object, Object> singleParamBeanType0 = new SingleParamBeanType<Object, Object>(class0, class0);
      AQualifiedType aQualifiedType0 = new AQualifiedType(singleParamBeanType0, (AQualifier) null);
      AQualifiedType aQualifiedType1 = simpleJavaBeanMappingHelper0.elementType(aQualifiedType0);
      // Undeclared exception!
      try { 
        simpleJavaBeanMappingHelper0.elementType(aQualifiedType1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.ajjpj.amapper.javabean.JavaBeanType cannot be cast to class com.ajjpj.amapper.javabean.SingleParamBeanType (com.ajjpj.amapper.javabean.JavaBeanType and com.ajjpj.amapper.javabean.SingleParamBeanType are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6aed849a)
         //
         verifyException("com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      try { 
        simpleJavaBeanMappingHelper0.createEmptyCollection((AQualifiedType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      Class<Object> class0 = Object.class;
      SingleParamBeanType<Object, Object> singleParamBeanType0 = new SingleParamBeanType<Object, Object>(class0, class0);
      AQualifiedType aQualifiedType0 = new AQualifiedType(singleParamBeanType0, (AQualifier) null);
      try { 
        simpleJavaBeanMappingHelper0.createEmptyCollection(aQualifiedType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.Object cannot be cast to class java.util.Collection (java.lang.Object and java.util.Collection are in module java.base of loader 'bootstrap')
         //
         verifyException("com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      try { 
        simpleJavaBeanMappingHelper0.asJuCollection((Object) null, (AQualifiedType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      AQualifiedType aQualifiedType0 = new AQualifiedType((AType) null, (AQualifier) null);
      try { 
        simpleJavaBeanMappingHelper0.asJuCollection((Object) null, aQualifiedType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unsupported collection type AQualifiedType{tpe=null, qualifier=null}
         //
         verifyException("com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      try { 
        simpleJavaBeanMappingHelper0.asJuCollection((Object) simpleJavaBeanMappingHelper0, (AQualifiedType) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper cannot be cast to class java.util.Collection (com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @6aed849a; java.util.Collection is in module java.base of loader 'bootstrap')
         //
         verifyException("com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      Class<Integer> class0 = Integer.class;
      Class<Object> class1 = Object.class;
      SingleParamBeanType<Integer, Object> singleParamBeanType0 = new SingleParamBeanType<Integer, Object>(class0, class1);
      AQualifiedType aQualifiedType0 = new AQualifiedType(singleParamBeanType0, (AQualifier) null);
      try { 
        simpleJavaBeanMappingHelper0.createEmptyCollection(aQualifiedType0);
        fail("Expecting exception: InstantiationException");
      
      } catch(InstantiationException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      Class<Integer> class0 = Integer.class;
      Class<Object> class1 = Object.class;
      SingleParamBeanType<Integer, Object> singleParamBeanType0 = new SingleParamBeanType<Integer, Object>(class0, class1);
      AQualifiedType aQualifiedType0 = new AQualifiedType(singleParamBeanType0, (AQualifier) null);
      try { 
        simpleJavaBeanMappingHelper0.asJuCollection((Object) null, aQualifiedType0);
        fail("Expecting exception: InstantiationException");
      
      } catch(InstantiationException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SimpleJavaBeanMappingHelper simpleJavaBeanMappingHelper0 = new SimpleJavaBeanMappingHelper();
      Class<Integer> class0 = Integer.class;
      Class<Object> class1 = Object.class;
      SingleParamBeanType<Integer, Object> singleParamBeanType0 = new SingleParamBeanType<Integer, Object>(class0, class1);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      AQualifiedType aQualifiedType0 = new AQualifiedType(singleParamBeanType0, (AQualifier) null);
      Object object0 = simpleJavaBeanMappingHelper0.fromJuCollection(linkedList0, aQualifiedType0);
      Collection<TreeSet<TreeSet>> collection0 = simpleJavaBeanMappingHelper0.asJuCollection(object0, aQualifiedType0);
      assertNotNull(collection0);
  }
}
