/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 03:09:07 GMT 2022
 */

package com.ajjpj.amapper.javabean.mappingdef;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ajjpj.amapper.core.tpe.AQualifiedSourceAndTargetType;
import com.ajjpj.amapper.core.tpe.AQualifier;
import com.ajjpj.amapper.core.tpe.AType;
import com.ajjpj.amapper.javabean.SimpleJavaBeanMappingHelper;
import com.ajjpj.amapper.javabean.propbased.APartialBeanMapping;
import com.ajjpj.amapper.javabean.propbased.APropertyBasedObjectMappingDef;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractJavaBeanObjectMappingDefWithoutDefaultNullHandling_ESTest extends AbstractJavaBeanObjectMappingDefWithoutDefaultNullHandling_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<SimpleJavaBeanMappingHelper> class0 = SimpleJavaBeanMappingHelper.class;
      LinkedList<APartialBeanMapping<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>> linkedList0 = new LinkedList<APartialBeanMapping<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>>();
      APropertyBasedObjectMappingDef<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper> aPropertyBasedObjectMappingDef0 = null;
      try {
        aPropertyBasedObjectMappingDef0 = new APropertyBasedObjectMappingDef<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>(class0, (Class<SimpleJavaBeanMappingHelper>) null, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ajjpj.amapper.javabean.JavaBeanTypes", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<SimpleJavaBeanMappingHelper> class0 = SimpleJavaBeanMappingHelper.class;
      LinkedList<APartialBeanMapping<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>> linkedList0 = new LinkedList<APartialBeanMapping<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>>();
      APropertyBasedObjectMappingDef<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper> aPropertyBasedObjectMappingDef0 = new APropertyBasedObjectMappingDef<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>(class0, class0, linkedList0);
      // Undeclared exception!
      try { 
        aPropertyBasedObjectMappingDef0.canHandle((AQualifiedSourceAndTargetType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ajjpj.amapper.javabean.mappingdef.AbstractJavaBeanObjectMappingDefWithoutDefaultNullHandling", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<SimpleJavaBeanMappingHelper> class0 = SimpleJavaBeanMappingHelper.class;
      LinkedList<APartialBeanMapping<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>> linkedList0 = new LinkedList<APartialBeanMapping<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>>();
      APropertyBasedObjectMappingDef<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper> aPropertyBasedObjectMappingDef0 = new APropertyBasedObjectMappingDef<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>(class0, class0, linkedList0);
      AQualifiedSourceAndTargetType aQualifiedSourceAndTargetType0 = AQualifiedSourceAndTargetType.create((AType) aPropertyBasedObjectMappingDef0.targetType, (AQualifier) null, (AType) aPropertyBasedObjectMappingDef0.targetType, (AQualifier) null);
      aPropertyBasedObjectMappingDef0.canHandle(aQualifiedSourceAndTargetType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<SimpleJavaBeanMappingHelper> class0 = SimpleJavaBeanMappingHelper.class;
      LinkedList<APartialBeanMapping<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>> linkedList0 = new LinkedList<APartialBeanMapping<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>>();
      APropertyBasedObjectMappingDef<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper> aPropertyBasedObjectMappingDef0 = new APropertyBasedObjectMappingDef<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>(class0, class0, linkedList0);
      AQualifiedSourceAndTargetType aQualifiedSourceAndTargetType0 = AQualifiedSourceAndTargetType.create((AType) aPropertyBasedObjectMappingDef0.sourceType, (AQualifier) null, (AType) null, (AQualifier) null);
      aPropertyBasedObjectMappingDef0.canHandle(aQualifiedSourceAndTargetType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<SimpleJavaBeanMappingHelper> class0 = SimpleJavaBeanMappingHelper.class;
      LinkedList<APartialBeanMapping<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>> linkedList0 = new LinkedList<APartialBeanMapping<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>>();
      AQualifiedSourceAndTargetType aQualifiedSourceAndTargetType0 = AQualifiedSourceAndTargetType.create((AType) null, (AQualifier) null, (AType) null, (AQualifier) null);
      APropertyBasedObjectMappingDef<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper> aPropertyBasedObjectMappingDef0 = new APropertyBasedObjectMappingDef<SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper, SimpleJavaBeanMappingHelper>(class0, class0, linkedList0);
      aPropertyBasedObjectMappingDef0.canHandle(aQualifiedSourceAndTargetType0);
  }
}
