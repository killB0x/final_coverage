/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 03:08:00 GMT 2022
 */

package com.ajjpj.amapper.javabean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ajjpj.amapper.javabean.JavaBeanType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JavaBeanType_ESTest extends JavaBeanType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      JavaBeanType<Integer> javaBeanType0 = new JavaBeanType<Integer>(class0);
      String string0 = javaBeanType0.getName();
      assertEquals("java.lang.Integer", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JavaBeanType<Object> javaBeanType0 = new JavaBeanType<Object>((Class<Object>) null);
      JavaBeanType<Integer> javaBeanType1 = new JavaBeanType<Integer>((Class<Integer>) null);
      // Undeclared exception!
      try { 
        javaBeanType1.equals(javaBeanType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ajjpj.amapper.javabean.JavaBeanType", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      JavaBeanType<Integer> javaBeanType0 = new JavaBeanType<Integer>(class0);
      Class<Object> class1 = Object.class;
      JavaBeanType<Object> javaBeanType1 = new JavaBeanType<Object>(class1);
      boolean boolean0 = javaBeanType0.equals(javaBeanType1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      JavaBeanType<Integer> javaBeanType0 = new JavaBeanType<Integer>(class0);
      Object object0 = new Object();
      boolean boolean0 = javaBeanType0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Class<Object> class0 = Object.class;
      JavaBeanType<Object> javaBeanType0 = new JavaBeanType<Object>(class0);
      boolean boolean0 = javaBeanType0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JavaBeanType<Object> javaBeanType0 = new JavaBeanType<Object>((Class<Object>) null);
      // Undeclared exception!
      try { 
        javaBeanType0.getName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ajjpj.amapper.javabean.JavaBeanType", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      JavaBeanType<Integer> javaBeanType0 = new JavaBeanType<Integer>(class0);
      javaBeanType0.hashCode();
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Class<Object> class0 = Object.class;
      JavaBeanType<Object> javaBeanType0 = new JavaBeanType<Object>(class0);
      String string0 = javaBeanType0.toString();
      assertEquals("JavaBeanType{cls=class java.lang.Object}", string0);
  }
}
