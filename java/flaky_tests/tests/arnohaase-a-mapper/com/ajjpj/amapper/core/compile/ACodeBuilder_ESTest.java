/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 19 03:15:08 GMT 2022
 */

package com.ajjpj.amapper.core.compile;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ajjpj.amapper.core.compile.ACodeBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ACodeBuilder_ESTest extends ACodeBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ACodeBuilder aCodeBuilder0 = new ACodeBuilder((-501));
      // Undeclared exception!
      try { 
        aCodeBuilder0.appendLine((-501), "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ACodeBuilder aCodeBuilder0 = new ACodeBuilder(0);
      aCodeBuilder0.append(0, "/!m#$^{1>d_t%m!");
      aCodeBuilder0.toString();
      assertEquals("/!m#$^{1>d_t%m!", aCodeBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ACodeBuilder aCodeBuilder0 = new ACodeBuilder(0);
      String string0 = aCodeBuilder0.indent(1);
      assertEquals("    ", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ACodeBuilder aCodeBuilder0 = new ACodeBuilder(0);
      // Undeclared exception!
      try { 
        aCodeBuilder0.indent(1547);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ACodeBuilder aCodeBuilder0 = new ACodeBuilder(0);
      // Undeclared exception!
      try { 
        aCodeBuilder0.append((-1721), "^0t}O");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ACodeBuilder aCodeBuilder0 = new ACodeBuilder(0);
      String string0 = aCodeBuilder0.build();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ACodeBuilder aCodeBuilder0 = new ACodeBuilder(0);
      String string0 = aCodeBuilder0.indent(0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ACodeBuilder aCodeBuilder0 = new ACodeBuilder(0);
      aCodeBuilder0.appendLine();
      assertEquals("\n", aCodeBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ACodeBuilder aCodeBuilder0 = new ACodeBuilder((-501));
      String string0 = aCodeBuilder0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ACodeBuilder aCodeBuilder0 = new ACodeBuilder(0);
      aCodeBuilder0.appendLine(0, "                                                                            ");
      aCodeBuilder0.build();
      assertEquals("                                                                            \n", aCodeBuilder0.toString());
  }
}
