/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:31:59 GMT 2022
 */

package org.kivio.c3faces.script.property;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.kivio.c3faces.script.property.OnzoomMethod;
import org.kivio.c3faces.script.property.Zoom;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Zoom_ESTest extends Zoom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Boolean boolean0 = Boolean.TRUE;
      zoom0.setRescale(boolean0);
      Boolean boolean1 = zoom0.getRescale();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer((-1));
      OnzoomMethod onzoomMethod0 = new OnzoomMethod("org.kivio.c3faces.script.ArrayBlock", (String[]) null);
      Zoom zoom0 = new Zoom(boolean0, boolean0, integer0, (Integer) null, onzoomMethod0);
      Boolean boolean1 = zoom0.getRescale();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer((-1));
      OnzoomMethod onzoomMethod0 = new OnzoomMethod("org.kivio.c3faces.script.ArrayBlock", (String[]) null);
      Zoom zoom0 = new Zoom(boolean0, boolean0, integer0, (Integer) null, onzoomMethod0);
      OnzoomMethod onzoomMethod1 = zoom0.getOnzoomMethodProp();
      assertEquals("onzoom", onzoomMethod1.getName());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Zoom.NAME = null;
      String string0 = zoom0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Zoom.NAME = "";
      String string0 = zoom0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[6];
      OnzoomMethod onzoomMethod0 = new OnzoomMethod((String) null, stringArray0);
      Zoom zoom0 = new Zoom(boolean0, boolean0, (Integer) null, integer0, onzoomMethod0);
      Integer integer1 = zoom0.getExtentTo();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Integer integer0 = new Integer(473);
      zoom0.setExtentTo(integer0);
      Integer integer1 = zoom0.getExtentTo();
      assertEquals(473, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      OnzoomMethod onzoomMethod0 = new OnzoomMethod(", ", (String[]) null);
      Zoom zoom0 = new Zoom((Boolean) null, (Boolean) null, integer0, integer0, onzoomMethod0);
      Integer integer1 = zoom0.getExtentFrom();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Integer integer0 = new Integer((-1679));
      zoom0.setExtentFrom(integer0);
      Integer integer1 = zoom0.getExtentFrom();
      assertEquals((-1679), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[6];
      OnzoomMethod onzoomMethod0 = new OnzoomMethod("%)t(N~*", stringArray0);
      Boolean boolean1 = Boolean.valueOf(true);
      Zoom zoom0 = new Zoom(boolean1, boolean0, (Integer) null, integer0, onzoomMethod0);
      Boolean boolean2 = zoom0.getEnabled();
      assertFalse(zoom0.getRescale());
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[8];
      OnzoomMethod onzoomMethod0 = new OnzoomMethod("=w6z\"e'3}IsL>G[", stringArray0);
      Zoom zoom0 = new Zoom(boolean0, boolean0, integer0, integer0, onzoomMethod0);
      Boolean boolean1 = zoom0.getEnabled();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Integer integer0 = new Integer(0);
      String[] stringArray0 = new String[6];
      OnzoomMethod onzoomMethod0 = new OnzoomMethod("%)t(N~*", stringArray0);
      Zoom zoom0 = new Zoom(boolean0, boolean0, (Integer) null, integer0, onzoomMethod0);
      String string0 = zoom0.getScript(true);
      assertEquals("zoom: \n{enabled: false, \nrescale: false, \nonzoom: function (null, null, null, null, null, null) {%)t(N~*}}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Integer integer0 = new Integer((-1679));
      zoom0.setExtentTo(integer0);
      zoom0.setExtentFrom(integer0);
      zoom0.preScriptBuild();
      assertEquals(": ", zoom0.getSeparator());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Integer integer0 = new Integer((-1679));
      zoom0.setExtentFrom(integer0);
      zoom0.preScriptBuild();
      assertNull(zoom0.getExtentTo());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Boolean boolean0 = Boolean.valueOf(true);
      zoom0.setEnabled(boolean0);
      zoom0.preScriptBuild();
      assertNull(zoom0.getExtentFrom());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Integer integer0 = new Integer(867);
      zoom0.setExtentFrom(integer0);
      Integer integer1 = zoom0.getExtentFrom();
      assertEquals(867, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Boolean boolean0 = zoom0.getEnabled();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      String string0 = zoom0.getName();
      assertEquals("zoom", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Integer integer0 = zoom0.getExtentFrom();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("size");
      OnzoomMethod onzoomMethod0 = new OnzoomMethod("!FJ3&Bs*@bV", (String[]) null);
      Zoom zoom0 = new Zoom(boolean0, boolean0, (Integer) null, (Integer) null, onzoomMethod0);
      zoom0.setOnzoomMethodProp(onzoomMethod0);
      assertEquals("}", onzoomMethod0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("r|J`^CG_NS$O#p_W7T");
      Integer integer0 = new Integer((-2511));
      Zoom zoom0 = new Zoom(boolean0, boolean0, (Integer) null, integer0, (OnzoomMethod) null);
      Integer integer1 = zoom0.getExtentTo();
      assertEquals((-2511), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Boolean boolean0 = zoom0.getRescale();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      Integer integer0 = zoom0.getExtentTo();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Zoom zoom0 = new Zoom();
      OnzoomMethod onzoomMethod0 = zoom0.getOnzoomMethodProp();
      assertNull(onzoomMethod0);
  }
}
