/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:49:24 GMT 2022
 */

package org.kivio.c3faces.script.property;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.kivio.c3faces.script.property.Area;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Area_ESTest extends Area_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Area area0 = new Area();
      Boolean boolean0 = area0.getZerobased();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Area area0 = new Area();
      Boolean boolean0 = Boolean.valueOf("lKNZ,p,");
      area0.setZerobased(boolean0);
      Boolean boolean1 = area0.getZerobased();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Area area0 = new Area();
      Area.NAME = "area";
      Area.NAME = null;
      String string0 = area0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Area area0 = new Area();
      String string0 = area0.getName();
      assertEquals("area", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Area area0 = new Area(boolean0);
      Area.NAME = "";
      String string0 = area0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Area area0 = new Area();
      Boolean boolean0 = Boolean.valueOf("lKNZ,p,");
      area0.setZerobased(boolean0);
      area0.preScriptBuild();
      assertEquals("}", area0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Area area0 = new Area();
      String string0 = area0.getScript(false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Area area0 = new Area(boolean0);
      Boolean boolean1 = area0.getZerobased();
      assertTrue(boolean1);
  }
}
