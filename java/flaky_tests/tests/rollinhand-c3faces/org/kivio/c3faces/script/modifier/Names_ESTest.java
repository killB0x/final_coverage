/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:35:04 GMT 2022
 */

package org.kivio.c3faces.script.modifier;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.kivio.c3faces.listener.change.Change;
import org.kivio.c3faces.script.Property;
import org.kivio.c3faces.script.modifier.Names;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Names_ESTest extends Names_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Names names0 = new Names();
      Change<Object> change0 = new Change<Object>("viewDataSetAdded", "viewDataSetAdded");
      names0.onChange(change0);
      // Undeclared exception!
      try { 
        names0.getModificationProperty();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class java.lang.String cannot be cast to class org.kivio.c3faces.model.C3ViewDataSet (java.lang.String is in module java.base of loader 'bootstrap'; org.kivio.c3faces.model.C3ViewDataSet is in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @eba630e)
         //
         verifyException("org.kivio.c3faces.script.modifier.Names", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Names names0 = new Names();
      Property property0 = names0.getModificationProperty();
      assertEquals("}", property0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Names names0 = new Names();
      int int0 = names0.getDuration();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Names names0 = new Names();
      String string0 = names0.getMethodName();
      assertEquals("names", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Names names0 = new Names();
      boolean boolean0 = names0.isTimeoutable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Names names0 = new Names();
      List<String> list0 = names0.getFields();
      assertEquals(1, list0.size());
  }
}
