/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:56:56 GMT 2022
 */

package org.kivio.c3faces.script.property;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.kivio.c3faces.script.property.DonutProperties;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DonutProperties_ESTest extends DonutProperties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Boolean boolean0 = Boolean.valueOf(true);
      DonutProperties donutProperties0 = new DonutProperties(integer0, "nh97zlI", boolean0, boolean0);
      donutProperties0.getWidth();
      assertEquals("nh97zlI", donutProperties0.getTitle());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DonutProperties donutProperties0 = new DonutProperties();
      donutProperties0.setTitle("4q]UxlK");
      String string0 = donutProperties0.getTitle();
      assertEquals("4q]UxlK", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Boolean boolean0 = Boolean.valueOf(true);
      DonutProperties donutProperties0 = new DonutProperties(integer0, "nh97zlI", boolean0, boolean0);
      donutProperties0.setTitle("");
      donutProperties0.getTitle();
      assertEquals("", donutProperties0.getTitle());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DonutProperties donutProperties0 = new DonutProperties();
      DonutProperties.NAME = null;
      String string0 = donutProperties0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DonutProperties donutProperties0 = new DonutProperties();
      DonutProperties.NAME = "donut";
      DonutProperties.NAME = "";
      String string0 = donutProperties0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DonutProperties donutProperties0 = new DonutProperties();
      Integer integer0 = donutProperties0.getWidth();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DonutProperties donutProperties0 = new DonutProperties();
      Integer integer0 = new Integer(1911);
      donutProperties0.setWidth(integer0);
      Integer integer1 = donutProperties0.getWidth();
      assertEquals(1911, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DonutProperties donutProperties0 = new DonutProperties();
      String string0 = donutProperties0.getName();
      assertEquals("donut", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DonutProperties donutProperties0 = new DonutProperties();
      String string0 = donutProperties0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DonutProperties donutProperties0 = new DonutProperties();
      donutProperties0.preScriptBuild();
      assertNull(donutProperties0.getExpand());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-2328));
      Boolean boolean0 = Boolean.valueOf("donut");
      DonutProperties donutProperties0 = new DonutProperties(integer0, "", boolean0, boolean0);
      donutProperties0.getWidth();
      assertEquals("", donutProperties0.getTitle());
  }
}
