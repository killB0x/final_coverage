/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:51:27 GMT 2022
 */

package org.kivio.c3faces.script.property;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.kivio.c3faces.script.property.Pie;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Pie_ESTest extends Pie_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Pie pie0 = new Pie(boolean0, boolean0);
      pie0.preScriptBuild();
      assertEquals("}", pie0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Boolean boolean1 = Boolean.TRUE;
      Pie pie0 = new Pie(boolean0, boolean1);
      Boolean boolean2 = pie0.getShowLabels();
      assertTrue(boolean2);
      assertFalse(pie0.getExpand());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Pie pie0 = new Pie();
      Boolean boolean0 = Boolean.valueOf(false);
      pie0.setShowLabel(boolean0);
      Boolean boolean1 = pie0.getShowLabels();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Pie pie0 = new Pie();
      Pie.NAME = null;
      String string0 = pie0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Pie pie0 = new Pie();
      String string0 = pie0.getName();
      assertEquals("pie", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Pie pie0 = new Pie();
      Pie.NAME = "";
      String string0 = pie0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Pie pie0 = new Pie();
      Boolean boolean0 = Boolean.valueOf(true);
      pie0.setExpand(boolean0);
      Boolean boolean1 = pie0.getExpand();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      Pie pie0 = new Pie(boolean0, boolean0);
      Boolean boolean1 = pie0.getExpand();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Pie pie0 = new Pie();
      Boolean boolean0 = pie0.getShowLabels();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Pie pie0 = new Pie();
      Boolean boolean0 = pie0.getExpand();
      pie0.setShowLabel(boolean0);
      assertEquals("}", pie0.getSuffix());
  }
}
