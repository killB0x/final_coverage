/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:35:29 GMT 2022
 */

package org.kivio.c3faces.script.property;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.kivio.c3faces.script.property.Point;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Point_ESTest extends Point_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Double double0 = new Double(913.9972297);
      Double double1 = new Double(913.9972297);
      Point point0 = new Point((Boolean) null, double0, (Boolean) null, double1, double0);
      assertEquals("}", point0.getSuffix());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("");
      Double double0 = new Double(0.0);
      Double double1 = new Double(0.0);
      Point point0 = new Point(boolean0, double0, boolean0, double1, double1);
      assertEquals(0.0, point0.getExpandR(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Double double0 = new Double(0.0);
      Boolean boolean1 = Boolean.FALSE;
      Point point0 = new Point(boolean0, double0, boolean1, double0, double0);
      assertFalse(point0.getExpand());
      assertTrue(point0.getShow());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Point point0 = new Point();
      point0.preScriptBuild();
      assertNull(point0.getR());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Double double0 = new Double(913.9972297);
      Point point0 = new Point((Boolean) null, double0, (Boolean) null, double0, double0);
      Boolean boolean0 = Boolean.TRUE;
      point0.setShow(boolean0);
      Boolean boolean1 = point0.getShow();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Point point0 = new Point();
      Boolean boolean0 = Boolean.valueOf("point");
      point0.setShow(boolean0);
      Boolean boolean1 = point0.getShow();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Double double0 = new Double(0.0);
      Point point0 = new Point(boolean0, double0, boolean0, double0, double0);
      Double double1 = point0.getSelectR();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Point point0 = new Point();
      Double double0 = new Double(2544.89072464);
      point0.setSelectR(double0);
      Double double1 = point0.getSelectR();
      assertEquals(2544.89072464, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      Double double0 = new Double((-1358.9728679874));
      Point point0 = new Point(boolean0, double0, boolean0, double0, double0);
      Double double1 = point0.getSelectR();
      assertEquals((-1358.9728679874), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Point point0 = new Point();
      Double double0 = new Double(2544.89072464);
      point0.setR(double0);
      Double double1 = point0.getR();
      assertEquals(2544.89072464, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Point point0 = new Point();
      Double double0 = point0.getR();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("y8x:J8Mq~");
      Double double0 = new Double((-1.0));
      Point point0 = new Point(boolean0, double0, boolean0, double0, double0);
      Double double1 = point0.getR();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(false);
      Double double0 = new Double((-565.0));
      Point point0 = new Point(boolean0, double0, boolean0, double0, double0);
      Point.NAME = null;
      String string0 = point0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Point point0 = new Point();
      String string0 = point0.getName();
      assertEquals("point", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Point point0 = new Point();
      Point.NAME = "";
      String string0 = point0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Double double0 = new Double(0.0);
      Point point0 = new Point(boolean0, double0, boolean0, double0, double0);
      Double double1 = point0.getExpandR();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Point point0 = new Point();
      Double double0 = new Double(281.8);
      point0.setExpandR(double0);
      Double double1 = point0.getExpandR();
      assertEquals(281.8, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("y8x:J8Mq~");
      Double double0 = new Double((-1.0));
      Point point0 = new Point(boolean0, double0, boolean0, double0, double0);
      Double double1 = point0.getExpandR();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Point point0 = new Point();
      Boolean boolean0 = Boolean.TRUE;
      point0.setExpand(boolean0);
      Boolean boolean1 = point0.getExpand();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Point point0 = new Point();
      Boolean boolean0 = Boolean.FALSE;
      point0.setExpand(boolean0);
      Boolean boolean1 = point0.getExpand();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("");
      Double double0 = new Double(0.0);
      Point point0 = new Point(boolean0, double0, boolean0, double0, double0);
      Double double1 = point0.getR();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("");
      Double double0 = new Double(0.0);
      Point point0 = new Point(boolean0, double0, boolean0, double0, double0);
      String string0 = point0.getScript(true);
      assertEquals("point: \n{show: false, \nr: 0.0, \nfocus: \n{expand: \n{r: 0.0}}, \nselect: \n{r: 0.0}}", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Point point0 = new Point();
      Double double0 = point0.getSelectR();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Double double0 = new Double(913.9972297);
      Point point0 = new Point((Boolean) null, double0, (Boolean) null, double0, double0);
      Boolean boolean0 = point0.getShow();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Point point0 = new Point();
      Double double0 = point0.getExpandR();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Point point0 = new Point();
      Boolean boolean0 = point0.getExpand();
      assertNull(boolean0);
  }
}
