/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 20:53:03 GMT 2022
 */

package org.kivio.c3faces.script.property;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.kivio.c3faces.script.property.GaugeProperties;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class GaugeProperties_ESTest extends GaugeProperties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      gaugeProperties0.preScriptBuild();
      assertNull(gaugeProperties0.getExpand());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Boolean boolean0 = Boolean.valueOf((String) null);
      GaugeProperties gaugeProperties0 = new GaugeProperties(integer0, integer0, integer0, (String) null, boolean0, boolean0);
      Integer integer1 = gaugeProperties0.getWidth();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Boolean boolean0 = Boolean.valueOf("max");
      GaugeProperties gaugeProperties0 = new GaugeProperties(integer0, integer0, integer0, "\"Xa#I-dmk", boolean0, boolean0);
      gaugeProperties0.getWidth();
      assertEquals("\"Xa#I-dmk", gaugeProperties0.getUnits());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      Integer integer0 = new Integer((-1));
      gaugeProperties0.setWidth(integer0);
      Integer integer1 = gaugeProperties0.getWidth();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      gaugeProperties0.setUnits("");
      String string0 = gaugeProperties0.getUnits();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Integer integer0 = new Integer((-1));
      GaugeProperties.NAME = null;
      Boolean boolean0 = Boolean.valueOf((String) null);
      GaugeProperties gaugeProperties0 = new GaugeProperties(integer0, integer0, integer0, "p#Ket8{!&", boolean0, boolean0);
      String string0 = gaugeProperties0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      GaugeProperties.NAME = "";
      String string0 = gaugeProperties0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(0);
      Boolean boolean0 = Boolean.valueOf(false);
      GaugeProperties gaugeProperties0 = new GaugeProperties((Integer) null, integer0, (Integer) null, "{a", boolean0, boolean0);
      Integer integer1 = gaugeProperties0.getMin();
      assertNotNull(integer1);
      assertEquals("{a", gaugeProperties0.getUnits());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Integer integer0 = new Integer(1);
      Boolean boolean0 = Boolean.valueOf("max");
      GaugeProperties gaugeProperties0 = new GaugeProperties(integer0, integer0, integer0, "\"Xa#I-dmk", boolean0, boolean0);
      gaugeProperties0.getMin();
      assertEquals("\"Xa#I-dmk", gaugeProperties0.getUnits());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      Integer integer0 = new Integer((-1));
      gaugeProperties0.setMin(integer0);
      Integer integer1 = gaugeProperties0.getMin();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Integer integer0 = new Integer((-1632));
      Boolean boolean0 = Boolean.FALSE;
      Integer integer1 = new Integer(0);
      GaugeProperties gaugeProperties0 = new GaugeProperties(integer0, integer0, integer1, "\"M)N4Ij39{`k1^e", boolean0, boolean0);
      Integer integer2 = gaugeProperties0.getMax();
      assertEquals(0, (int)integer2);
      assertEquals((-1632), (int)gaugeProperties0.getMin());
      assertEquals((-1632), (int)gaugeProperties0.getWidth());
      assertEquals("\"M)N4Ij39{`k1^e", gaugeProperties0.getUnits());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer(1375);
      Boolean boolean0 = Boolean.valueOf("org.kivio.c3faces.script.property.GaugeProperties");
      GaugeProperties gaugeProperties0 = new GaugeProperties((Integer) null, (Integer) null, integer0, "tmClyre\"X", boolean0, boolean0);
      Integer integer1 = gaugeProperties0.getMax();
      assertEquals("tmClyre\"X", gaugeProperties0.getUnits());
      assertNotNull(integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      Integer integer0 = new Integer((-1));
      gaugeProperties0.setMax(integer0);
      Integer integer1 = gaugeProperties0.getMax();
      assertEquals((-1), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      String string0 = gaugeProperties0.getUnits();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Integer integer0 = Integer.getInteger("%Zg:y8EO!fcsj@L3:8");
      Boolean boolean0 = Boolean.valueOf(false);
      GaugeProperties gaugeProperties0 = new GaugeProperties((Integer) null, integer0, (Integer) null, "{a", boolean0, boolean0);
      String string0 = gaugeProperties0.getUnits();
      assertEquals("{a", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      Integer integer0 = gaugeProperties0.getMax();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      Integer integer0 = gaugeProperties0.getWidth();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      Integer integer0 = gaugeProperties0.getMin();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GaugeProperties gaugeProperties0 = new GaugeProperties();
      String string0 = gaugeProperties0.getName();
      assertEquals("gauge", string0);
  }
}
