/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:35:40 GMT 2022
 */

package org.jfaster.mango.datasource;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.datasource.DriverManagerDataSource;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DriverManagerDataSource_ESTest extends DriverManagerDataSource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      String string0 = driverManagerDataSource0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "", "");
      String string0 = driverManagerDataSource0.getUsername();
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", driverManagerDataSource0.getDriverClassName());
      assertEquals("", string0);
      assertEquals("", driverManagerDataSource0.getPassword());
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", driverManagerDataSource0.getUrl());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      String string0 = driverManagerDataSource0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      String string0 = driverManagerDataSource0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      String string0 = driverManagerDataSource0.getPassword();
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      String string0 = driverManagerDataSource0.getDriverClassName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "", (String) null, (String) null);
      // Undeclared exception!
      try { 
        driverManagerDataSource0.setDriverClassName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      // Undeclared exception!
      try { 
        driverManagerDataSource0.setDriverClassName(" ^5u,<j}4,Q");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not load JDBC driver class [^5u,<j}4,Q]
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      // Undeclared exception!
      try { 
        driverManagerDataSource0.getConnection();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = null;
      try {
        driverManagerDataSource0 = new DriverManagerDataSource((String) null, (String) null, (String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = null;
      try {
        driverManagerDataSource0 = new DriverManagerDataSource(")(0,o3 /Vy9 ", "", ")(0,o3 /Vy9 ", "");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Could not load JDBC driver class [)(0,o3 /Vy9]
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        driverManagerDataSource0.isWrapperFor(class0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      driverManagerDataSource0.setUsername("org.jfaster.mango.datasource.DriverManagerDataSource");
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", driverManagerDataSource0.getPassword());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      // Undeclared exception!
      try { 
        driverManagerDataSource0.setLoginTimeout((-4549));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      try { 
        driverManagerDataSource0.getConnection();
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // No suitable driver found for org.jfaster.mango.datasource.DriverManagerDataSource
         //
         verifyException("java.sql.DriverManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        driverManagerDataSource0.unwrap(class0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      // Undeclared exception!
      try { 
        driverManagerDataSource0.setLogWriter((PrintWriter) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      // Undeclared exception!
      try { 
        driverManagerDataSource0.getConnection("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      String string0 = driverManagerDataSource0.getDriverClassName();
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      // Undeclared exception!
      try { 
        driverManagerDataSource0.getParentLogger();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "");
      String string0 = driverManagerDataSource0.getPassword();
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", driverManagerDataSource0.getDriverClassName());
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", driverManagerDataSource0.getUsername());
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", driverManagerDataSource0.getUrl());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      driverManagerDataSource0.setPassword("org.jfaster.mango.datasource.DriverManagerDataSource");
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", driverManagerDataSource0.getDriverClassName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      driverManagerDataSource0.setDriverClassName("org.jfaster.mango.datasource.DriverManagerDataSource");
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", driverManagerDataSource0.getDriverClassName());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      driverManagerDataSource0.setUrl("");
      String string0 = driverManagerDataSource0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      String string0 = driverManagerDataSource0.getUsername();
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      // Undeclared exception!
      try { 
        driverManagerDataSource0.getLogWriter();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource("org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource", "org.jfaster.mango.datasource.DriverManagerDataSource");
      String string0 = driverManagerDataSource0.getUrl();
      assertEquals("org.jfaster.mango.datasource.DriverManagerDataSource", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      // Undeclared exception!
      try { 
        driverManagerDataSource0.getLoginTimeout();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.datasource.DriverManagerDataSource", e);
      }
  }
}
