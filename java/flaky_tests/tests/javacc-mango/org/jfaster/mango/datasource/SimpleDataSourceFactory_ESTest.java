/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:22:44 GMT 2022
 */

package org.jfaster.mango.datasource;

import org.junit.Test;
import static org.junit.Assert.*;
import javax.sql.DataSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.datasource.DriverManagerDataSource;
import org.jfaster.mango.datasource.SimpleDataSourceFactory;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SimpleDataSourceFactory_ESTest extends SimpleDataSourceFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SimpleDataSourceFactory simpleDataSourceFactory0 = new SimpleDataSourceFactory();
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      simpleDataSourceFactory0.setDataSource(driverManagerDataSource0);
      Class<Integer> class0 = Integer.class;
      DriverManagerDataSource driverManagerDataSource1 = (DriverManagerDataSource)simpleDataSourceFactory0.getSlaveDataSource(class0);
      assertNull(driverManagerDataSource1.getPassword());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SimpleDataSourceFactory simpleDataSourceFactory0 = new SimpleDataSourceFactory();
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      simpleDataSourceFactory0.setDataSource(driverManagerDataSource0);
      DriverManagerDataSource driverManagerDataSource1 = (DriverManagerDataSource)simpleDataSourceFactory0.getMasterDataSource();
      assertNull(driverManagerDataSource1.getDriverClassName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      SimpleDataSourceFactory simpleDataSourceFactory0 = new SimpleDataSourceFactory("", driverManagerDataSource0);
      DriverManagerDataSource driverManagerDataSource1 = (DriverManagerDataSource)simpleDataSourceFactory0.getDataSource();
      assertNull(driverManagerDataSource1.getUsername());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SimpleDataSourceFactory simpleDataSourceFactory0 = new SimpleDataSourceFactory();
      DataSource dataSource0 = simpleDataSourceFactory0.getMasterDataSource();
      assertNull(dataSource0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SimpleDataSourceFactory simpleDataSourceFactory0 = new SimpleDataSourceFactory();
      Class<Integer> class0 = Integer.class;
      DataSource dataSource0 = simpleDataSourceFactory0.getSlaveDataSource(class0);
      assertNull(dataSource0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SimpleDataSourceFactory simpleDataSourceFactory0 = new SimpleDataSourceFactory();
      DataSource dataSource0 = simpleDataSourceFactory0.getDataSource();
      assertNull(dataSource0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      SimpleDataSourceFactory simpleDataSourceFactory0 = new SimpleDataSourceFactory(driverManagerDataSource0);
      assertEquals("DEFAULT", simpleDataSourceFactory0.getName());
  }
}
