/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 14:49:34 GMT 2022
 */

package org.jfaster.mango.invoker.transfer.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Type;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.invoker.transfer.enums.EnumToStringTransfer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EnumToStringTransfer_ESTest extends EnumToStringTransfer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EnumToStringTransfer enumToStringTransfer0 = new EnumToStringTransfer();
      // Undeclared exception!
      try { 
        enumToStringTransfer0.columnToProperty("Primitive type '%s' used as %s", (Type) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EnumToStringTransfer enumToStringTransfer0 = new EnumToStringTransfer();
      Enum enum0 = enumToStringTransfer0.columnToProperty((String) null, (Type) null);
      assertNull(enum0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EnumToStringTransfer enumToStringTransfer0 = new EnumToStringTransfer();
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(type0).toString();
      // Undeclared exception!
      try { 
        enumToStringTransfer0.columnToProperty("hrT5$\"vj%1", type0);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // Unknown type: null
         //
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EnumToStringTransfer enumToStringTransfer0 = new EnumToStringTransfer();
      String string0 = enumToStringTransfer0.propertyToColumn((Enum) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EnumToStringTransfer enumToStringTransfer0 = new EnumToStringTransfer();
      boolean boolean0 = enumToStringTransfer0.isCheckType();
      assertFalse(boolean0);
  }
}
