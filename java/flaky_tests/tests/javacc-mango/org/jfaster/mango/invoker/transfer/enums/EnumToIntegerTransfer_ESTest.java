/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 14:02:18 GMT 2022
 */

package org.jfaster.mango.invoker.transfer.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Type;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.invoker.transfer.enums.EnumToIntegerTransfer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EnumToIntegerTransfer_ESTest extends EnumToIntegerTransfer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EnumToIntegerTransfer enumToIntegerTransfer0 = new EnumToIntegerTransfer();
      Integer integer0 = new Integer(1404);
      // Undeclared exception!
      try { 
        enumToIntegerTransfer0.columnToProperty(integer0, (Type) null);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EnumToIntegerTransfer enumToIntegerTransfer0 = new EnumToIntegerTransfer();
      Class<Integer> class0 = Integer.TYPE;
      Enum enum0 = enumToIntegerTransfer0.columnToProperty((Integer) null, (Type) class0);
      assertNull(enum0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EnumToIntegerTransfer enumToIntegerTransfer0 = new EnumToIntegerTransfer();
      Class<Integer> class0 = Integer.TYPE;
      Integer integer0 = new Integer(1217);
      // Undeclared exception!
      try { 
        enumToIntegerTransfer0.columnToProperty(integer0, (Type) class0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // int not an enum
         //
         verifyException("java.util.EnumSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EnumToIntegerTransfer enumToIntegerTransfer0 = new EnumToIntegerTransfer();
      Integer integer0 = enumToIntegerTransfer0.propertyToColumn((Enum) null);
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EnumToIntegerTransfer enumToIntegerTransfer0 = new EnumToIntegerTransfer();
      boolean boolean0 = enumToIntegerTransfer0.isCheckType();
      assertFalse(boolean0);
  }
}
