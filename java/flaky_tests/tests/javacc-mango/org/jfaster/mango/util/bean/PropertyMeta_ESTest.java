/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:53:15 GMT 2022
 */

package org.jfaster.mango.util.bean;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.reflect.Method;
import java.lang.reflect.Type;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.util.bean.PropertyMeta;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PropertyMeta_ESTest extends PropertyMeta_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("Bk.7]`w", (Type) null, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Type type0 = propertyMeta0.getType();
      assertNull(type0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta((String) null, type0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      String string0 = propertyMeta0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("qSSLfL9", type0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      String string0 = propertyMeta0.getName();
      assertEquals("qSSLfL9", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      PropertyMeta propertyMeta0 = new PropertyMeta("wlQ'O-B BcVF{o0KAa7", class0, (Method) null, (Method) null, (Set<Annotation>) null, (Set<Annotation>) null, (Set<Annotation>) null);
      // Undeclared exception!
      try { 
        propertyMeta0.getWriteMethodAnno(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.bean.PropertyMeta", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      PropertyMeta propertyMeta0 = new PropertyMeta("3hfqT\r-SGVB&2[x", class0, (Method) null, (Method) null, (Set<Annotation>) null, (Set<Annotation>) null, (Set<Annotation>) null);
      // Undeclared exception!
      try { 
        propertyMeta0.getReadMethodAnno(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.bean.PropertyMeta", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      PropertyMeta propertyMeta0 = new PropertyMeta("wlQ'O-B BcVF{o0KAa7", class0, (Method) null, (Method) null, (Set<Annotation>) null, (Set<Annotation>) null, (Set<Annotation>) null);
      // Undeclared exception!
      try { 
        propertyMeta0.getPropertyAnno(class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.bean.PropertyMeta", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      LinkedHashSet<Annotation> linkedHashSet1 = new LinkedHashSet<Annotation>(linkedHashSet0);
      PropertyMeta propertyMeta0 = new PropertyMeta("", class0, (Method) null, (Method) null, linkedHashSet1, linkedHashSet0, linkedHashSet1);
      linkedHashSet0.add((Annotation) null);
      PropertyMeta propertyMeta1 = new PropertyMeta("", class0, (Method) null, (Method) null, linkedHashSet1, linkedHashSet0, linkedHashSet0);
      boolean boolean0 = propertyMeta0.equals(propertyMeta1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      LinkedHashSet<Annotation> linkedHashSet1 = new LinkedHashSet<Annotation>();
      Class<Annotation> class0 = Annotation.class;
      linkedHashSet0.add((Annotation) null);
      PropertyMeta propertyMeta0 = new PropertyMeta((String) null, class0, (Method) null, (Method) null, linkedHashSet1, linkedHashSet1, linkedHashSet1);
      PropertyMeta propertyMeta1 = new PropertyMeta((String) null, class0, (Method) null, (Method) null, linkedHashSet1, linkedHashSet0, linkedHashSet1);
      boolean boolean0 = propertyMeta0.equals(propertyMeta1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      linkedHashSet0.add((Annotation) null);
      Class<Annotation> class0 = Annotation.class;
      LinkedHashSet<Annotation> linkedHashSet1 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("stNff!{p($f", class0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet1, linkedHashSet0);
      PropertyMeta propertyMeta1 = new PropertyMeta("stNff!{p($f", class0, (Method) null, (Method) null, linkedHashSet1, linkedHashSet1, linkedHashSet0);
      boolean boolean0 = propertyMeta0.equals(propertyMeta1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Class<Annotation> class0 = Annotation.class;
      PropertyMeta propertyMeta0 = new PropertyMeta((String) null, class0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      PropertyMeta propertyMeta1 = new PropertyMeta((String) null, (Type) null, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      boolean boolean0 = propertyMeta0.equals(propertyMeta1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("", class0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      boolean boolean0 = propertyMeta0.equals(linkedHashSet0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("", class0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      boolean boolean0 = propertyMeta0.equals(propertyMeta0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("qSSLfL9", type0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Class<Annotation> class0 = Annotation.class;
      linkedHashSet0.add((Annotation) null);
      Annotation annotation0 = propertyMeta0.getPropertyAnno(class0);
      assertNull(annotation0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("", class0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      linkedHashSet0.add((Annotation) null);
      Annotation annotation0 = propertyMeta0.getWriteMethodAnno(class0);
      assertNull(annotation0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("qSSLfL9", type0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Class<Annotation> class0 = Annotation.class;
      linkedHashSet0.add((Annotation) null);
      Annotation annotation0 = propertyMeta0.getReadMethodAnno(class0);
      assertNull(annotation0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      Class<Annotation> class0 = Annotation.class;
      PropertyMeta propertyMeta0 = new PropertyMeta("*@I", class0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Method method0 = propertyMeta0.getReadMethod();
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("qSSLfL9", type0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      propertyMeta0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("", class0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      String string0 = propertyMeta0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Annotation> class0 = Annotation.class;
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("", class0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Method method0 = propertyMeta0.getWriteMethod();
      assertNull(method0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Type type0 = mock(Type.class, new ViolatedAssumptionAnswer());
      doReturn("qSSLfL9").when(type0).toString();
      LinkedHashSet<Annotation> linkedHashSet0 = new LinkedHashSet<Annotation>();
      PropertyMeta propertyMeta0 = new PropertyMeta("qSSLfL9", type0, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Type type1 = propertyMeta0.getType();
      PropertyMeta propertyMeta1 = new PropertyMeta("", type1, (Method) null, (Method) null, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      boolean boolean0 = propertyMeta0.equals(propertyMeta1);
      assertFalse(boolean0);
  }
}
