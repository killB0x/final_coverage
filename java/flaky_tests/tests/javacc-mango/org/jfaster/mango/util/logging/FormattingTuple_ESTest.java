/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 14:20:30 GMT 2022
 */

package org.jfaster.mango.util.logging;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.jfaster.mango.util.logging.FormattingTuple;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FormattingTuple_ESTest extends FormattingTuple_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      Object[] objectArray1 = FormattingTuple.trimmedCopy(objectArray0);
      assertEquals(4, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      Object[] objectArray1 = FormattingTuple.trimmedCopy(objectArray0);
      assertEquals(0, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      MockThrowable mockThrowable0 = new MockThrowable();
      FormattingTuple formattingTuple0 = new FormattingTuple("", objectArray0, mockThrowable0);
      Throwable throwable0 = formattingTuple0.getThrowable();
      assertEquals("org.evosuite.runtime.mock.java.lang.MockThrowable", throwable0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FormattingTuple formattingTuple0 = FormattingTuple.NULL;
      String string0 = formattingTuple0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      MockThrowable mockThrowable0 = new MockThrowable();
      FormattingTuple formattingTuple0 = new FormattingTuple("", objectArray0, mockThrowable0);
      String string0 = formattingTuple0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FormattingTuple formattingTuple0 = FormattingTuple.NULL;
      Object[] objectArray0 = formattingTuple0.getArgArray();
      assertNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        FormattingTuple.trimmedCopy(objectArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // non-sensical empty or null argument array
         //
         verifyException("org.jfaster.mango.util.logging.FormattingTuple", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable((String) null);
      FormattingTuple formattingTuple0 = null;
      try {
        formattingTuple0 = new FormattingTuple((String) null, (Object[]) null, mockThrowable0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // non-sensical empty or null argument array
         //
         verifyException("org.jfaster.mango.util.logging.FormattingTuple", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      MockThrowable mockThrowable0 = new MockThrowable(":Bf&l+AcE", (Throwable) null);
      FormattingTuple formattingTuple0 = new FormattingTuple(":Bf&l+AcE", objectArray0, mockThrowable0);
      Object[] objectArray1 = formattingTuple0.getArgArray();
      assertEquals(0, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      FormattingTuple formattingTuple0 = new FormattingTuple("Wio", objectArray0, (Throwable) null);
      Object[] objectArray1 = formattingTuple0.getArgArray();
      assertEquals(5, objectArray1.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      FormattingTuple formattingTuple0 = new FormattingTuple("Wio", objectArray0, (Throwable) null);
      Throwable throwable0 = formattingTuple0.getThrowable();
      assertNull(throwable0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      FormattingTuple formattingTuple0 = new FormattingTuple("Wio", objectArray0, (Throwable) null);
      String string0 = formattingTuple0.getMessage();
      assertEquals("Wio", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FormattingTuple formattingTuple0 = new FormattingTuple(",5!3bC7");
      assertEquals(",5!3bC7", formattingTuple0.getMessage());
  }
}
