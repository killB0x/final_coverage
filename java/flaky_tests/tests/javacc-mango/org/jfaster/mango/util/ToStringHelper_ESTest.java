/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 13:02:42 GMT 2022
 */

package org.jfaster.mango.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.reflect.Method;
import java.lang.reflect.Type;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.descriptor.MethodDescriptor;
import org.jfaster.mango.descriptor.ParameterDescriptor;
import org.jfaster.mango.descriptor.ReturnDescriptor;
import org.jfaster.mango.util.ToStringHelper;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ToStringHelper_ESTest extends ToStringHelper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "");
      Type[] typeArray0 = new Type[2];
      ToStringHelper.printTypes(stringBuffer0, typeArray0, "0rq|,H{>mmdgIX}`Q0J", "?", "org.jfaster.mango.util.reflect.TypeCapture");
      assertEquals(62, stringBuffer0.length());
      assertEquals("0rq|,H{>mmdgIX}`Q0J?org.jfaster.mango.util.reflect.TypeCapture", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<ParameterDescriptor> class0 = ParameterDescriptor.class;
      String string0 = ToStringHelper.toString((Type) class0);
      assertEquals("ParameterDescriptor", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToStringHelper.toString((Iterable<Class>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.ToStringHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Type[] typeArray0 = new Type[1];
      // Undeclared exception!
      try { 
        ToStringHelper.printTypes((StringBuffer) null, typeArray0, "B", "B", "B");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.ToStringHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Type[] typeArray0 = new Type[0];
      ToStringHelper.printTypes((StringBuffer) null, typeArray0, "", "", "");
      assertEquals(0, typeArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class<Locale.Category> class0 = Locale.Category.class;
      Iterator<Class> iterator0 = (Iterator<Class>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn((Object) null).when(iterator0).next();
      Iterable<Class> iterable0 = (Iterable<Class>) mock(Iterable.class, new ViolatedAssumptionAnswer());
      doReturn(iterator0).when(iterable0).iterator();
      // Undeclared exception!
      try { 
        ToStringHelper.toString(iterable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.ToStringHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<ParameterDescriptor> linkedList0 = new LinkedList<ParameterDescriptor>();
      linkedList0.add((ParameterDescriptor) null);
      Class<Object> class0 = Object.class;
      MethodDescriptor methodDescriptor0 = MethodDescriptor.create("Mg|veSx", class0, (ReturnDescriptor) null, linkedList0);
      // Undeclared exception!
      try { 
        ToStringHelper.toString(methodDescriptor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.ToStringHelper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Class<Object> class0 = Object.class;
      LinkedList<Annotation> linkedList0 = new LinkedList<Annotation>();
      ReturnDescriptor returnDescriptor0 = ReturnDescriptor.create(class0, linkedList0);
      Stack<ParameterDescriptor> stack0 = new Stack<ParameterDescriptor>();
      MethodDescriptor methodDescriptor0 = MethodDescriptor.create("2N}0nA&<-~iSo6", class0, returnDescriptor0, stack0);
      String string0 = ToStringHelper.toString(methodDescriptor0);
      assertEquals("Object.2N}0nA&<-~iSo6()", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ToStringHelper.toString((Type) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ToStringHelper toStringHelper0 = new ToStringHelper();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToStringHelper.toString((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.ToStringHelper", e);
      }
  }
}
