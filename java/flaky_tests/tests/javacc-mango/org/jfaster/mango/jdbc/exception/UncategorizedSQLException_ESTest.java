/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:58:11 GMT 2022
 */

package org.jfaster.mango.jdbc.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.jfaster.mango.jdbc.exception.UncategorizedSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UncategorizedSQLException_ESTest extends UncategorizedSQLException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockThrowable mockThrowable0 = new MockThrowable("");
      SQLException sQLException0 = new SQLException("", (String) null, mockThrowable0);
      UncategorizedSQLException uncategorizedSQLException0 = new UncategorizedSQLException((String) null, sQLException0);
      String string0 = uncategorizedSQLException0.getSql();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SQLException sQLException0 = new SQLException("|(_j_gt", "|(_j_gt", (-1477), (Throwable) null);
      UncategorizedSQLException uncategorizedSQLException0 = new UncategorizedSQLException("|(_j_gt", sQLException0);
      String string0 = uncategorizedSQLException0.getSql();
      assertEquals("|(_j_gt", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SQLException sQLException0 = new SQLException("q8:3d`XS?", "");
      UncategorizedSQLException uncategorizedSQLException0 = new UncategorizedSQLException("", sQLException0);
      SQLException sQLException1 = uncategorizedSQLException0.getSQLException();
      assertSame(sQLException1, sQLException0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SQLException sQLException0 = new SQLException((String) null, "FOSQ>!<~`Dq>1;DXPe");
      SQLException sQLException1 = new SQLException((String) null, "EH,YG9_ 1^->~", 1, sQLException0);
      UncategorizedSQLException uncategorizedSQLException0 = new UncategorizedSQLException("FOSQ>!<~`Dq>1;DXPe", sQLException1);
      SQLException sQLException2 = uncategorizedSQLException0.getSQLException();
      assertFalse(sQLException2.equals((Object)sQLException0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UncategorizedSQLException uncategorizedSQLException0 = null;
      try {
        uncategorizedSQLException0 = new UncategorizedSQLException("", (SQLException) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.jdbc.exception.UncategorizedSQLException", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SQLException sQLException0 = new SQLException("|(_j_gt", "|(_j_gt", (-1477), (Throwable) null);
      UncategorizedSQLException uncategorizedSQLException0 = new UncategorizedSQLException("|(_j_gt", sQLException0);
      SQLException sQLException1 = uncategorizedSQLException0.getSQLException();
      assertSame(sQLException0, sQLException1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SQLException sQLException0 = new SQLException();
      UncategorizedSQLException uncategorizedSQLException0 = new UncategorizedSQLException("", sQLException0);
      String string0 = uncategorizedSQLException0.getSql();
      assertEquals("", string0);
  }
}
