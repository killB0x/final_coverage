/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 14:43:40 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.binding.InvocationContext;
import org.jfaster.mango.parser.ASTAndNode;
import org.jfaster.mango.parser.ASTGlobalTable;
import org.jfaster.mango.parser.ASTNotNode;
import org.jfaster.mango.parser.ASTTruncate;
import org.jfaster.mango.parser.Node;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.visitor.CheckAndBindVisitor;
import org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor;
import org.jfaster.mango.parser.visitor.ParameterExpandVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTNotNode_ESTest extends ASTNotNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTNotNode0.value(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(0);
      ASTTruncate aSTTruncate0 = new ASTTruncate(0);
      aSTNotNode0.jjtAddChild(aSTTruncate0, 0);
      // Undeclared exception!
      try { 
        aSTNotNode0.value((InvocationContext) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTTruncate cannot be cast to class org.jfaster.mango.parser.AbstractExpression (org.jfaster.mango.parser.ASTTruncate and org.jfaster.mango.parser.AbstractExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @b0cbd7b)
         //
         verifyException("org.jfaster.mango.parser.ASTNotNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(2478);
      Node[] nodeArray0 = new Node[0];
      aSTNotNode0.children = nodeArray0;
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTNotNode0.value(defaultInvocationContext0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(0);
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      Parser parser0 = new Parser("org.jfaster.mango.parser.ASTNotNode");
      ASTAndNode aSTAndNode0 = new ASTAndNode(parser0, 0);
      // Undeclared exception!
      try { 
        aSTNotNode0.jjtAccept(interablePropertyCollectVisitor0, aSTAndNode0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(2509);
      // Undeclared exception!
      try { 
        aSTNotNode0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTNotNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode((-1849));
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTNotNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode((-1));
      ASTGlobalTable aSTGlobalTable0 = new ASTGlobalTable((-1));
      aSTNotNode0.jjtAddChild(aSTGlobalTable0, 0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTNotNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTGlobalTable cannot be cast to class org.jfaster.mango.parser.AbstractExpression (org.jfaster.mango.parser.ASTGlobalTable and org.jfaster.mango.parser.AbstractExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @b0cbd7b)
         //
         verifyException("org.jfaster.mango.parser.ASTNotNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(2478);
      Node[] nodeArray0 = new Node[0];
      aSTNotNode0.children = nodeArray0;
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTNotNode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      Parser parser0 = new Parser(pipedInputStream0);
      ASTNotNode aSTNotNode0 = new ASTNotNode(parser0, 2001);
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      PipedInputStream pipedInputStream1 = (PipedInputStream)aSTNotNode0.jjtAccept(parameterExpandVisitor0, pipedInputStream0);
      assertEquals(0, pipedInputStream1.available());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ASTNotNode aSTNotNode0 = new ASTNotNode(1509);
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      Object object0 = aSTNotNode0.jjtAccept(checkAndBindVisitor0, (Object) null);
      assertNull(object0);
  }
}
