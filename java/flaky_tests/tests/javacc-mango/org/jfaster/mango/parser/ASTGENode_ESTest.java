/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 14:00:07 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.binding.InvocationContext;
import org.jfaster.mango.parser.ASTExpressionParameter;
import org.jfaster.mango.parser.ASTGENode;
import org.jfaster.mango.parser.ASTRootNode;
import org.jfaster.mango.parser.ASTUpdate;
import org.jfaster.mango.parser.Node;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.Token;
import org.jfaster.mango.parser.visitor.CheckAndBindVisitor;
import org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor;
import org.jfaster.mango.parser.visitor.ParameterExpandVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTGENode_ESTest extends ASTGENode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(0);
      assertEquals(0, aSTGENode0.jjtGetNumChildren());
      
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = (Node) aSTGENode0;
      nodeArray0[1] = (Node) aSTGENode0;
      nodeArray0[2] = (Node) aSTGENode0;
      Token token0 = new Token();
      aSTGENode0.jjtSetFirstToken(token0);
      nodeArray0[3] = (Node) aSTGENode0;
      nodeArray0[4] = (Node) aSTGENode0;
      nodeArray0[5] = (Node) aSTGENode0;
      aSTGENode0.children = nodeArray0;
      InvocationContext invocationContext0 = null;
      // Undeclared exception!
      try { 
        aSTGENode0.evaluate(invocationContext0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(2107);
      ASTExpressionParameter aSTExpressionParameter0 = new ASTExpressionParameter(2048);
      aSTGENode0.jjtAddChild(aSTExpressionParameter0, 0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGENode0.value(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // invoker must set
         //
         verifyException("org.jfaster.mango.parser.ASTExpressionParameter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(3777);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      Object object0 = aSTGENode0.value;
      aSTGENode0.jjtAccept(parameterExpandVisitor0, (Object) null);
      defaultInvocationContext0.setGlobalTable("TINYINT");
      // Undeclared exception!
      try { 
        aSTGENode0.value(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ASTRootNode aSTRootNode0 = new ASTRootNode((-1019));
      aSTGENode0.jjtAddChild(aSTRootNode0, 0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      defaultInvocationContext0.setGlobalTable("]A+");
      // Undeclared exception!
      try { 
        aSTGENode0.value(defaultInvocationContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTRootNode cannot be cast to class org.jfaster.mango.parser.AbstractExpression (org.jfaster.mango.parser.ASTRootNode and org.jfaster.mango.parser.AbstractExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @7214bab4)
         //
         verifyException("org.jfaster.mango.parser.ASTGENode", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(7);
      Node[] nodeArray0 = new Node[8];
      ASTUpdate aSTUpdate0 = new ASTUpdate(7);
      nodeArray0[0] = (Node) aSTUpdate0;
      nodeArray0[1] = (Node) aSTGENode0;
      nodeArray0[2] = (Node) aSTGENode0;
      nodeArray0[3] = (Node) aSTGENode0;
      nodeArray0[4] = (Node) aSTGENode0;
      nodeArray0[5] = (Node) aSTGENode0;
      nodeArray0[6] = (Node) aSTGENode0;
      nodeArray0[7] = (Node) aSTGENode0;
      aSTGENode0.children = nodeArray0;
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGENode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTUpdate cannot be cast to class org.jfaster.mango.parser.AbstractExpression (org.jfaster.mango.parser.ASTUpdate and org.jfaster.mango.parser.AbstractExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @7214bab4)
         //
         verifyException("org.jfaster.mango.parser.ASTGENode", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      ASTGENode aSTGENode0 = new ASTGENode(1);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) aSTGENode0;
      aSTGENode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        aSTGENode0.value(defaultInvocationContext0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(742);
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      aSTGENode0.jjtAccept(checkAndBindVisitor0, checkAndBindVisitor0);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode((-350));
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        aSTGENode0.jjtAccept(interablePropertyCollectVisitor0, interablePropertyCollectVisitor0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(0);
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      Integer integer0 = new Integer(0);
      Object object0 = aSTGENode0.jjtAccept(parameterExpandVisitor0, integer0);
      assertEquals(0, object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultInvocationContext.create();
      ASTGENode aSTGENode0 = new ASTGENode(0);
      aSTGENode0.jjtSetValue((Object) null);
      Integer integer0 = new Integer((-347));
      // Undeclared exception!
      try { 
        aSTGENode0.jjtAccept((ParserVisitor) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTGENode", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = 0;
      ASTGENode aSTGENode0 = new ASTGENode(0);
      ParserVisitor parserVisitor0 = null;
      aSTGENode0.toString("");
      Object object0 = null;
      // Undeclared exception!
      try { 
        aSTGENode0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTGENode", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(0);
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      Object object0 = aSTGENode0.jjtAccept(checkAndBindVisitor0, checkAndBindVisitor0);
      assertSame(object0, checkAndBindVisitor0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(57);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGENode0.value(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      ASTGENode aSTGENode0 = new ASTGENode(0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGENode0.value(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "";
      Parser parser0 = new Parser("");
      ASTGENode aSTGENode0 = new ASTGENode(parser0, (-757));
      DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGENode0.toString("");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index -757 out of bounds for length 37
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode((Parser) null, 58);
      assertEquals(0, aSTGENode0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTGENode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ASTGENode aSTGENode0 = new ASTGENode(0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      String string0 = "^]";
      defaultInvocationContext0.writeToSqlBuffer("^]");
      // Undeclared exception!
      try { 
        aSTGENode0.evaluate(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }
}
