/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:36:41 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.parser.ParseException;
import org.jfaster.mango.parser.Token;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseException_ESTest extends ParseException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = ParseException.add_escapes("/P!0(~|p");
      assertEquals("/P!0(~|p", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[3][1];
      int[] intArray1 = new int[9];
      intArray0[2] = intArray1;
      String[] stringArray0 = new String[5];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = ParseException.add_escapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        ParseException.add_escapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[][] intArray0 = new int[17][7];
      Token token0 = new Token();
      String[] stringArray0 = new String[0];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.jfaster.mango.parser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = ParseException.add_escapes(" `*ys");
      assertEquals(" `*ys\\u007f", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ParseException.add_escapes("'&k;2");
      assertEquals("\\'&k;2", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = ParseException.add_escapes("oHQ^Z K2Fi\"");
      assertEquals("oHQ^Z K2Fi\\\"", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = ParseException.add_escapes("\r");
      assertEquals("\\r", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = ParseException.add_escapes("\f");
      assertEquals("\\f", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[3][1];
      String[] stringArray0 = new String[3];
      token0.next = token0;
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Token token0 = new Token(1, "%U \n");
      int[][] intArray0 = new int[10][1];
      int[] intArray1 = new int[6];
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[4];
      token0.next = token0;
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Token token0 = new Token();
      int[][] intArray0 = new int[1][1];
      Token token1 = Token.newToken(11);
      token0.next = token1;
      token1.image = "";
      String[] stringArray0 = new String[16];
      ParseException parseException0 = new ParseException(token0, intArray0, stringArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Token token0 = Token.newToken((-2187));
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[1];
      intArray1[0] = 1;
      intArray0[0] = intArray1;
      String[] stringArray0 = new String[4];
      ParseException parseException0 = null;
      try {
        parseException0 = new ParseException(token0, intArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParseException parseException0 = new ParseException((String) null);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParseException parseException0 = new ParseException();
  }
}
