/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:23:00 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.parser.ASTText;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.visitor.CheckAndBindVisitor;
import org.jfaster.mango.parser.visitor.TextBlankJoinVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTText_ESTest extends ASTText_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTText aSTText0 = new ASTText((Parser) null, 3);
      CheckAndBindVisitor checkAndBindVisitor0 = CheckAndBindVisitor.INSTANCE;
      Object object0 = aSTText0.jjtAccept(checkAndBindVisitor0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTText aSTText0 = new ASTText(3319);
      assertNull(aSTText0.getGroupValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTText aSTText0 = new ASTText((Parser) null, (-5579));
      TextBlankJoinVisitor textBlankJoinVisitor0 = TextBlankJoinVisitor.INSTANCE;
      Object object0 = aSTText0.jjtAccept(textBlankJoinVisitor0, textBlankJoinVisitor0);
      assertSame(object0, textBlankJoinVisitor0);
  }
}
