/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:07:16 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.PipedWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.binding.InvocationContext;
import org.jfaster.mango.parser.ASTTrimComma;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor;
import org.jfaster.mango.parser.visitor.TextBlankJoinVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTTrimComma_ESTest extends ASTTrimComma_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTTrimComma aSTTrimComma0 = new ASTTrimComma(1950);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      boolean boolean0 = aSTTrimComma0.render(defaultInvocationContext0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Parser parser0 = new Parser("org.jfaster.mango.parser.ASTTrimComma");
      ASTTrimComma aSTTrimComma0 = new ASTTrimComma(parser0, 729);
      TextBlankJoinVisitor textBlankJoinVisitor0 = TextBlankJoinVisitor.INSTANCE;
      Object object0 = aSTTrimComma0.jjtAccept(textBlankJoinVisitor0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTTrimComma aSTTrimComma0 = new ASTTrimComma((-3603));
      // Undeclared exception!
      try { 
        aSTTrimComma0.render((InvocationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTTrimComma", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      PipedReader pipedReader0 = new PipedReader(pipedWriter0);
      Parser parser0 = new Parser(pipedReader0);
      ASTTrimComma aSTTrimComma0 = new ASTTrimComma(parser0, 0);
      // Undeclared exception!
      try { 
        aSTTrimComma0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTTrimComma", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ASTTrimComma aSTTrimComma0 = new ASTTrimComma((-4427));
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      Object object0 = aSTTrimComma0.jjtAccept(interablePropertyCollectVisitor0, interablePropertyCollectVisitor0);
      assertSame(object0, interablePropertyCollectVisitor0);
  }
}
