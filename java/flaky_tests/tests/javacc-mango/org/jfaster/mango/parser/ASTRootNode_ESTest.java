/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:46:30 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.binding.DefaultParameterContext;
import org.jfaster.mango.binding.ParameterContext;
import org.jfaster.mango.descriptor.ParameterDescriptor;
import org.jfaster.mango.parser.ASTBlank;
import org.jfaster.mango.parser.ASTGlobalTable;
import org.jfaster.mango.parser.ASTJDBCIterableParameter;
import org.jfaster.mango.parser.ASTJDBCParameter;
import org.jfaster.mango.parser.ASTNull;
import org.jfaster.mango.parser.ASTRootNode;
import org.jfaster.mango.parser.Node;
import org.jfaster.mango.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTRootNode_ESTest extends ASTRootNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(4274);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = (Node) aSTRootNode0;
      aSTRootNode0.children = nodeArray0;
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTRootNode0.render(defaultInvocationContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTRootNode cannot be cast to class org.jfaster.mango.parser.AbstractDMLNode (org.jfaster.mango.parser.ASTRootNode and org.jfaster.mango.parser.AbstractDMLNode are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @131dd116)
         //
         verifyException("org.jfaster.mango.parser.ASTRootNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(0);
      ASTBlank aSTBlank0 = new ASTBlank(0);
      aSTRootNode0.jjtAddChild(aSTBlank0, 1);
      // Undeclared exception!
      try { 
        aSTRootNode0.init();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTBlank cannot be cast to class org.jfaster.mango.parser.ASTBlock (org.jfaster.mango.parser.ASTBlank and org.jfaster.mango.parser.ASTBlock are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @131dd116)
         //
         verifyException("org.jfaster.mango.parser.ASTRootNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(0);
      aSTRootNode0.jjtAddChild((Node) null, 0);
      // Undeclared exception!
      try { 
        aSTRootNode0.init();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) aSTRootNode0;
      aSTRootNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        aSTRootNode0.getSQLType();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTRootNode cannot be cast to class org.jfaster.mango.parser.AbstractDMLNode (org.jfaster.mango.parser.ASTRootNode and org.jfaster.mango.parser.AbstractDMLNode are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @131dd116)
         //
         verifyException("org.jfaster.mango.parser.ASTRootNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode((-593));
      LinkedList<ParameterDescriptor> linkedList0 = new LinkedList<ParameterDescriptor>();
      Node[] nodeArray0 = new Node[0];
      aSTRootNode0.children = nodeArray0;
      DefaultParameterContext defaultParameterContext0 = DefaultParameterContext.create(linkedList0);
      // Undeclared exception!
      try { 
        aSTRootNode0.expandParameter(defaultParameterContext0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 0
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(82);
      Node[] nodeArray0 = new Node[7];
      ASTNull aSTNull0 = new ASTNull(82);
      nodeArray0[1] = (Node) aSTNull0;
      aSTRootNode0.children = nodeArray0;
      // Undeclared exception!
      try { 
        aSTRootNode0.checkAndBind((ParameterContext) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTNull cannot be cast to class org.jfaster.mango.parser.ASTBlock (org.jfaster.mango.parser.ASTNull and org.jfaster.mango.parser.ASTBlock are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @131dd116)
         //
         verifyException("org.jfaster.mango.parser.ASTRootNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(0);
      Node[] nodeArray0 = new Node[0];
      aSTRootNode0.children = nodeArray0;
      LinkedList<ParameterDescriptor> linkedList0 = new LinkedList<ParameterDescriptor>();
      DefaultParameterContext defaultParameterContext0 = DefaultParameterContext.create(linkedList0);
      // Undeclared exception!
      try { 
        aSTRootNode0.checkAndBind(defaultParameterContext0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 0
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(2004);
      List<ASTGlobalTable> list0 = aSTRootNode0.getASTGlobalTables();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode((-171));
      // Undeclared exception!
      try { 
        aSTRootNode0.getSQLType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(4274);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTRootNode0.render(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(10);
      // Undeclared exception!
      try { 
        aSTRootNode0.checkAndBind((ParameterContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(0);
      // Undeclared exception!
      try { 
        aSTRootNode0.expandParameter((ParameterContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode(0);
      List<ASTJDBCIterableParameter> list0 = aSTRootNode0.getJDBCIterableParameters();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Parser parser0 = new Parser("@/X**ox[bA%>N&");
      ASTRootNode aSTRootNode0 = new ASTRootNode(parser0, 0);
      // Undeclared exception!
      try { 
        aSTRootNode0.init();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ASTRootNode aSTRootNode0 = new ASTRootNode((-171));
      List<ASTJDBCParameter> list0 = aSTRootNode0.getJDBCParameters();
      assertEquals(0, list0.size());
  }
}
