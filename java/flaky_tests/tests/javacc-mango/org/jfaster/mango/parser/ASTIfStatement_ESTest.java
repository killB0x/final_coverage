/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 14:18:37 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.binding.InvocationContext;
import org.jfaster.mango.parser.ASTIfStatement;
import org.jfaster.mango.parser.Node;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.visitor.ParameterExpandVisitor;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTIfStatement_ESTest extends ASTIfStatement_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTIfStatement aSTIfStatement0 = new ASTIfStatement((-1032));
      Node[] nodeArray0 = new Node[3];
      aSTIfStatement0.children = nodeArray0;
      // Undeclared exception!
      try { 
        aSTIfStatement0.render((InvocationContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTIfStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTIfStatement aSTIfStatement0 = new ASTIfStatement(0);
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      Object object0 = aSTIfStatement0.jjtAccept(parameterExpandVisitor0, (Object) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTIfStatement aSTIfStatement0 = new ASTIfStatement(0);
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      Object object0 = new Object();
      Object object1 = aSTIfStatement0.jjtAccept(parameterExpandVisitor0, object0);
      assertSame(object0, object1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ASTIfStatement aSTIfStatement0 = new ASTIfStatement(0);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = (Node) aSTIfStatement0;
      aSTIfStatement0.children = nodeArray0;
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        aSTIfStatement0.render(defaultInvocationContext0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // class org.jfaster.mango.parser.ASTIfStatement cannot be cast to class org.jfaster.mango.parser.AbstractExpression (org.jfaster.mango.parser.ASTIfStatement and org.jfaster.mango.parser.AbstractExpression are in unnamed module of loader org.evosuite.instrumentation.InstrumentingClassLoader @3e9e444f)
         //
         verifyException("org.jfaster.mango.parser.ASTIfStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ASTIfStatement aSTIfStatement0 = new ASTIfStatement((-801));
      Node[] nodeArray0 = new Node[0];
      aSTIfStatement0.children = nodeArray0;
      // Undeclared exception!
      try { 
        aSTIfStatement0.render((InvocationContext) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 0 out of bounds for length 0
         //
         verifyException("org.jfaster.mango.parser.SimpleNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ASTIfStatement aSTIfStatement0 = new ASTIfStatement((Parser) null, (-16));
      assertEquals(0, aSTIfStatement0.jjtGetNumChildren());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ASTIfStatement aSTIfStatement0 = new ASTIfStatement(2);
      // Undeclared exception!
      try { 
        aSTIfStatement0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTIfStatement", e);
      }
  }
}
