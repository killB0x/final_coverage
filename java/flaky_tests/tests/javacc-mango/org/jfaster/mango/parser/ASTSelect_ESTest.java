/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:33:19 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.parser.ASTSelect;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.visitor.ParameterExpandVisitor;
import org.jfaster.mango.util.jdbc.SQLType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTSelect_ESTest extends ASTSelect_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTSelect aSTSelect0 = new ASTSelect(24);
      ParameterExpandVisitor parameterExpandVisitor0 = ParameterExpandVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        aSTSelect0.jjtAccept(parameterExpandVisitor0, parameterExpandVisitor0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.ParameterExpandVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTSelect aSTSelect0 = new ASTSelect(0);
      // Undeclared exception!
      try { 
        aSTSelect0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTSelect", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTSelect aSTSelect0 = new ASTSelect(0);
      SQLType sQLType0 = aSTSelect0.getSQLType();
      assertEquals(SQLType.SELECT, sQLType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ASTSelect aSTSelect0 = new ASTSelect((Parser) null, (-1315));
      assertEquals(0, aSTSelect0.jjtGetNumChildren());
  }
}
