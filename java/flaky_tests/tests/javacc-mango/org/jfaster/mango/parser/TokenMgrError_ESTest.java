/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 12:55:04 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.parser.TokenMgrError;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class TokenMgrError_ESTest extends TokenMgrError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError("/1)1U%B.WP", (-1));
      String string0 = tokenMgrError0.getMessage();
      assertEquals("/1)1U%B.WP", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.addEscapes((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenMgrError.LexicalError(false, 1, 1, 1, (String) null, ']');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TokenMgrError tokenMgrError0 = null;
      try {
        tokenMgrError0 = new TokenMgrError(true, 'N', 'N', 'N', (String) null, 'N', 'N');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.TokenMgrError", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("Y");
      assertEquals("Y", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("]dL#OPgJxJ198(;y-");
      assertEquals("]dL#OPgJxJ198\\u007f(;y-", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("'j23A5q+BExn@f80v$");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = TokenMgrError.LexicalError(true, 0, 2344, 1091, "Lexical error at line 2344, column 2344.  Encountered: \"P\" (80), after : \"\"", 'P');
      assertEquals("Lexical error at line 2344, column 1091.  Encountered: <EOF> after : \"Lexical error at line 2344, column 2344.  Encountered: \\\"P\\\" (80), after : \\\"\\\"\"", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("\f");
      assertEquals("\\f", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = TokenMgrError.addEscapes("\n");
      assertEquals("\\n", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError(false, (-1), (-1), (-1), "]:Nx[3fl.~2y?LBr$X", 'T', (-1));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError("", (-1));
      String string0 = tokenMgrError0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TokenMgrError tokenMgrError0 = new TokenMgrError();
      String string0 = tokenMgrError0.getMessage();
      assertNull(string0);
  }
}
