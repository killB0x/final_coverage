/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:55:35 GMT 2022
 */

package org.jfaster.mango.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.parser.ASTInsert;
import org.jfaster.mango.parser.Parser;
import org.jfaster.mango.parser.ParserVisitor;
import org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor;
import org.jfaster.mango.util.jdbc.SQLType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ASTInsert_ESTest extends ASTInsert_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ASTInsert aSTInsert0 = new ASTInsert(1158);
      InterablePropertyCollectVisitor interablePropertyCollectVisitor0 = InterablePropertyCollectVisitor.INSTANCE;
      // Undeclared exception!
      try { 
        aSTInsert0.jjtAccept(interablePropertyCollectVisitor0, interablePropertyCollectVisitor0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.visitor.InterablePropertyCollectVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTInsert aSTInsert0 = new ASTInsert((-2997));
      SQLType sQLType0 = aSTInsert0.getSQLType();
      assertEquals(SQLType.INSERT, sQLType0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ASTInsert aSTInsert0 = new ASTInsert(1285);
      // Undeclared exception!
      try { 
        aSTInsert0.jjtAccept((ParserVisitor) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.parser.ASTInsert", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ASTInsert aSTInsert0 = new ASTInsert((Parser) null, 0);
      assertEquals(0, aSTInsert0.jjtGetNumChildren());
  }
}
