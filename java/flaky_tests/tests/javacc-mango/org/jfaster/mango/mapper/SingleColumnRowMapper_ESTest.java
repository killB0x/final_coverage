/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:41:07 GMT 2022
 */

package org.jfaster.mango.mapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.mapper.SingleColumnRowMapper;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SingleColumnRowMapper_ESTest extends SingleColumnRowMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      SingleColumnRowMapper<Integer> singleColumnRowMapper0 = new SingleColumnRowMapper<Integer>(class0);
      Class<Integer> class1 = singleColumnRowMapper0.getMappedClass();
      assertFalse(class1.isArray());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Object> class0 = Object.class;
      SingleColumnRowMapper<Object> singleColumnRowMapper0 = new SingleColumnRowMapper<Object>(class0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((ResultSetMetaData) null).when(resultSet0).getMetaData();
      // Undeclared exception!
      try { 
        singleColumnRowMapper0.mapRow(resultSet0, 35);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.util.jdbc.ResultSetWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SingleColumnRowMapper<Object> singleColumnRowMapper0 = new SingleColumnRowMapper<Object>((Class<Object>) null);
      Class<Object> class0 = singleColumnRowMapper0.getMappedClass();
      assertNull(class0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Class<Object> class0 = Object.class;
      SingleColumnRowMapper<Object> singleColumnRowMapper0 = new SingleColumnRowMapper<Object>(class0);
      ResultSetMetaData resultSetMetaData0 = mock(ResultSetMetaData.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(resultSetMetaData0).getColumnCount();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(resultSetMetaData0).when(resultSet0).getMetaData();
      // Undeclared exception!
      try { 
        singleColumnRowMapper0.mapRow(resultSet0, 374);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
      }
  }
}
