/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:11:32 GMT 2022
 */

package org.jfaster.mango.operator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.lang.annotation.Annotation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.binding.InvocationContextFactory;
import org.jfaster.mango.descriptor.MethodDescriptor;
import org.jfaster.mango.jdbc.JdbcOperations;
import org.jfaster.mango.operator.Config;
import org.jfaster.mango.operator.UpdateOperator;
import org.jfaster.mango.operator.generator.DataSourceGenerator;
import org.jfaster.mango.operator.generator.TableGenerator;
import org.jfaster.mango.parser.ASTRootNode;
import org.jfaster.mango.util.jdbc.SQLType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AbstractOperator_ESTest extends AbstractOperator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SQLType sQLType0 = SQLType.REPLACE;
      ASTRootNode aSTRootNode0 = mock(ASTRootNode.class, new ViolatedAssumptionAnswer());
      doReturn(sQLType0).when(aSTRootNode0).getSQLType();
      Class<Integer> class0 = Integer.class;
      MethodDescriptor methodDescriptor0 = mock(MethodDescriptor.class, new ViolatedAssumptionAnswer());
      doReturn((Annotation) null).when(methodDescriptor0).getAnnotation(any(java.lang.Class.class));
      doReturn(class0).when(methodDescriptor0).getReturnRawType();
      doReturn(false).when(methodDescriptor0).isReturnGeneratedId();
      Config config0 = mock(Config.class, new ViolatedAssumptionAnswer());
      Config config1 = mock(Config.class, new ViolatedAssumptionAnswer());
      doReturn(config0).when(config1).copy();
      UpdateOperator updateOperator0 = new UpdateOperator(aSTRootNode0, methodDescriptor0, config1);
      updateOperator0.setDataSourceGenerator((DataSourceGenerator) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ASTRootNode aSTRootNode0 = mock(ASTRootNode.class, new ViolatedAssumptionAnswer());
      doReturn((SQLType) null).when(aSTRootNode0).getSQLType();
      Class<Integer> class0 = Integer.class;
      MethodDescriptor methodDescriptor0 = mock(MethodDescriptor.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(methodDescriptor0).toString();
      doReturn((Annotation) null).when(methodDescriptor0).getAnnotation(any(java.lang.Class.class));
      doReturn(class0).when(methodDescriptor0).getReturnRawType();
      doReturn(false).when(methodDescriptor0).isReturnGeneratedId();
      Config config0 = mock(Config.class, new ViolatedAssumptionAnswer());
      doReturn((Config) null).when(config0).copy();
      UpdateOperator updateOperator0 = new UpdateOperator(aSTRootNode0, methodDescriptor0, config0);
      MethodDescriptor methodDescriptor1 = updateOperator0.getMethodDescriptor();
      assertSame(methodDescriptor1, methodDescriptor0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SQLType sQLType0 = SQLType.REPLACE;
      ASTRootNode aSTRootNode0 = mock(ASTRootNode.class, new ViolatedAssumptionAnswer());
      doReturn(sQLType0).when(aSTRootNode0).getSQLType();
      Class<Integer> class0 = Integer.class;
      MethodDescriptor methodDescriptor0 = mock(MethodDescriptor.class, new ViolatedAssumptionAnswer());
      doReturn((Annotation) null).when(methodDescriptor0).getAnnotation(any(java.lang.Class.class));
      doReturn(class0).when(methodDescriptor0).getReturnRawType();
      doReturn(false).when(methodDescriptor0).isReturnGeneratedId();
      Config config0 = mock(Config.class, new ViolatedAssumptionAnswer());
      Config config1 = mock(Config.class, new ViolatedAssumptionAnswer());
      doReturn(config0).when(config1).copy();
      UpdateOperator updateOperator0 = new UpdateOperator(aSTRootNode0, methodDescriptor0, config1);
      updateOperator0.setInvocationContextFactory((InvocationContextFactory) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SQLType sQLType0 = SQLType.REPLACE;
      ASTRootNode aSTRootNode0 = mock(ASTRootNode.class, new ViolatedAssumptionAnswer());
      doReturn(sQLType0).when(aSTRootNode0).getSQLType();
      Class<Integer> class0 = Integer.class;
      MethodDescriptor methodDescriptor0 = mock(MethodDescriptor.class, new ViolatedAssumptionAnswer());
      doReturn((Annotation) null).when(methodDescriptor0).getAnnotation(any(java.lang.Class.class));
      doReturn(class0).when(methodDescriptor0).getReturnRawType();
      doReturn(false).when(methodDescriptor0).isReturnGeneratedId();
      Config config0 = mock(Config.class, new ViolatedAssumptionAnswer());
      Config config1 = mock(Config.class, new ViolatedAssumptionAnswer());
      doReturn(config0).when(config1).copy();
      UpdateOperator updateOperator0 = new UpdateOperator(aSTRootNode0, methodDescriptor0, config1);
      updateOperator0.setJdbcOperations((JdbcOperations) null);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SQLType sQLType0 = SQLType.REPLACE;
      ASTRootNode aSTRootNode0 = mock(ASTRootNode.class, new ViolatedAssumptionAnswer());
      doReturn(sQLType0).when(aSTRootNode0).getSQLType();
      Class<Integer> class0 = Integer.class;
      MethodDescriptor methodDescriptor0 = mock(MethodDescriptor.class, new ViolatedAssumptionAnswer());
      doReturn((Annotation) null).when(methodDescriptor0).getAnnotation(any(java.lang.Class.class));
      doReturn(class0).when(methodDescriptor0).getReturnRawType();
      doReturn(false).when(methodDescriptor0).isReturnGeneratedId();
      Config config0 = mock(Config.class, new ViolatedAssumptionAnswer());
      Config config1 = mock(Config.class, new ViolatedAssumptionAnswer());
      doReturn(config0).when(config1).copy();
      UpdateOperator updateOperator0 = new UpdateOperator(aSTRootNode0, methodDescriptor0, config1);
      updateOperator0.setTableGenerator((TableGenerator) null);
  }
}
