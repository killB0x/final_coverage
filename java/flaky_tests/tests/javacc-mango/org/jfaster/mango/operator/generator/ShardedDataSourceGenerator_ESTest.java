/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:12:37 GMT 2022
 */

package org.jfaster.mango.operator.generator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.binding.BindingParameter;
import org.jfaster.mango.binding.BindingParameterInvoker;
import org.jfaster.mango.binding.DefaultInvocationContext;
import org.jfaster.mango.binding.TransferableBindingParameterInvoker;
import org.jfaster.mango.datasource.DataSourceFactoryGroup;
import org.jfaster.mango.datasource.DataSourceType;
import org.jfaster.mango.operator.generator.ShardedDataSourceGenerator;
import org.jfaster.mango.sharding.NotUseShardingStrategy;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShardedDataSourceGenerator_ESTest extends ShardedDataSourceGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DataSourceFactoryGroup dataSourceFactoryGroup0 = new DataSourceFactoryGroup();
      DataSourceType dataSourceType0 = DataSourceType.SLAVE;
      Class<Integer> class0 = Integer.TYPE;
      JdbcType jdbcType0 = JdbcType.NVARCHAR;
      BindingParameter bindingParameter0 = BindingParameter.create("", "", jdbcType0);
      TransferableBindingParameterInvoker transferableBindingParameterInvoker0 = TransferableBindingParameterInvoker.create(class0, bindingParameter0);
      NotUseShardingStrategy notUseShardingStrategy0 = new NotUseShardingStrategy();
      ShardedDataSourceGenerator shardedDataSourceGenerator0 = new ShardedDataSourceGenerator(dataSourceFactoryGroup0, dataSourceType0, transferableBindingParameterInvoker0, notUseShardingStrategy0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      defaultInvocationContext0.addParameter("", bindingParameter0);
      // Undeclared exception!
      try { 
        shardedDataSourceGenerator0.getDataSourceFactoryName(defaultInvocationContext0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // error, unreachable code
         //
         verifyException("org.jfaster.mango.sharding.NotUseShardingStrategy", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DataSourceFactoryGroup dataSourceFactoryGroup0 = new DataSourceFactoryGroup();
      DataSourceType dataSourceType0 = DataSourceType.SLAVE;
      NotUseShardingStrategy notUseShardingStrategy0 = new NotUseShardingStrategy();
      ShardedDataSourceGenerator shardedDataSourceGenerator0 = new ShardedDataSourceGenerator(dataSourceFactoryGroup0, dataSourceType0, (BindingParameterInvoker) null, notUseShardingStrategy0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        shardedDataSourceGenerator0.getDataSourceFactoryName(defaultInvocationContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.binding.DefaultInvocationContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DataSourceFactoryGroup dataSourceFactoryGroup0 = new DataSourceFactoryGroup();
      DataSourceType dataSourceType0 = DataSourceType.SLAVE;
      Class<Integer> class0 = Integer.TYPE;
      JdbcType jdbcType0 = JdbcType.NVARCHAR;
      BindingParameter bindingParameter0 = BindingParameter.create("", "", jdbcType0);
      TransferableBindingParameterInvoker transferableBindingParameterInvoker0 = TransferableBindingParameterInvoker.create(class0, bindingParameter0);
      NotUseShardingStrategy notUseShardingStrategy0 = new NotUseShardingStrategy();
      ShardedDataSourceGenerator shardedDataSourceGenerator0 = new ShardedDataSourceGenerator(dataSourceFactoryGroup0, dataSourceType0, transferableBindingParameterInvoker0, notUseShardingStrategy0);
      DefaultInvocationContext defaultInvocationContext0 = DefaultInvocationContext.create();
      // Undeclared exception!
      try { 
        shardedDataSourceGenerator0.getDataSourceFactoryName(defaultInvocationContext0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Parameter ':' not found, available root parameters are []
         //
         verifyException("org.jfaster.mango.binding.DefaultInvocationContext", e);
      }
  }
}
