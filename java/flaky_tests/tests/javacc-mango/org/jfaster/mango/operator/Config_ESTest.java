/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:48:04 GMT 2022
 */

package org.jfaster.mango.operator;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.operator.Config;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Config_ESTest extends Config_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Config config0 = new Config();
      assertFalse(config0.isUseTransactionForBatchUpdate());
      
      config0.setUseTransactionForBatchUpdate(true);
      boolean boolean0 = config0.isUseTransactionForBatchUpdate();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Config config0 = new Config();
      assertFalse(config0.isUseActualParamName());
      
      config0.setUseActualParamName(true);
      boolean boolean0 = config0.isUseActualParamName();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Config config0 = new Config();
      assertTrue(config0.isCompatibleWithEmptyList());
      
      config0.setCompatibleWithEmptyList(false);
      boolean boolean0 = config0.isCompatibleWithEmptyList();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Config config0 = new Config();
      assertFalse(config0.isCheckColumn());
      
      config0.setCheckColumn(true);
      boolean boolean0 = config0.isCheckColumn();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Config config0 = new Config();
      assertFalse(config0.isUseTransactionForBatchUpdate());
      
      config0.setUseTransactionForBatchUpdate(true);
      config0.copy();
      assertTrue(config0.isUseTransactionForBatchUpdate());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Config config0 = new Config();
      assertFalse(config0.isUseActualParamName());
      
      config0.setUseActualParamName(true);
      config0.copy();
      assertTrue(config0.isUseActualParamName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.isUseTransactionForBatchUpdate();
      assertFalse(boolean0);
      assertFalse(config0.isUseActualParamName());
      assertFalse(config0.isCheckColumn());
      assertTrue(config0.isCompatibleWithEmptyList());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.isCompatibleWithEmptyList();
      assertFalse(config0.isUseTransactionForBatchUpdate());
      assertFalse(config0.isCheckColumn());
      assertFalse(config0.isUseActualParamName());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.isUseActualParamName();
      assertTrue(config0.isCompatibleWithEmptyList());
      assertFalse(config0.isUseTransactionForBatchUpdate());
      assertFalse(config0.isCheckColumn());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Config config0 = new Config();
      boolean boolean0 = config0.isCheckColumn();
      assertTrue(config0.isCompatibleWithEmptyList());
      assertFalse(config0.isUseActualParamName());
      assertFalse(boolean0);
      assertFalse(config0.isUseTransactionForBatchUpdate());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Config config0 = new Config();
      assertTrue(config0.isCompatibleWithEmptyList());
      
      config0.setCompatibleWithEmptyList(false);
      config0.copy();
      assertFalse(config0.isCompatibleWithEmptyList());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Config config0 = new Config();
      assertFalse(config0.isCheckColumn());
      
      config0.setCheckColumn(true);
      config0.copy();
      assertTrue(config0.isCheckColumn());
  }
}
