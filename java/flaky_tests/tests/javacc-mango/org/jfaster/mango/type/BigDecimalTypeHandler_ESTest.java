/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:04:52 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.type.BigDecimalTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class BigDecimalTypeHandler_ESTest extends BigDecimalTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BigDecimalTypeHandler bigDecimalTypeHandler0 = new BigDecimalTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((BigDecimal) null).when(resultSet0).getBigDecimal(anyInt());
      BigDecimal bigDecimal0 = bigDecimalTypeHandler0.getNullableResult(resultSet0, (-54));
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BigDecimalTypeHandler bigDecimalTypeHandler0 = new BigDecimalTypeHandler();
      RoundingMode roundingMode0 = RoundingMode.HALF_UP;
      MathContext mathContext0 = new MathContext(1111, roundingMode0);
      BigDecimal bigDecimal0 = new BigDecimal(0L, mathContext0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(bigDecimal0).when(resultSet0).getBigDecimal(anyInt());
      BigDecimal bigDecimal1 = bigDecimalTypeHandler0.getNullableResult(resultSet0, 1);
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BigDecimalTypeHandler bigDecimalTypeHandler0 = new BigDecimalTypeHandler();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(bigDecimal0).when(resultSet0).getBigDecimal(anyInt());
      BigDecimal bigDecimal1 = bigDecimalTypeHandler0.getNullableResult(resultSet0, 1);
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BigDecimalTypeHandler bigDecimalTypeHandler0 = new BigDecimalTypeHandler();
      BigDecimal bigDecimal0 = BigDecimal.valueOf((-1.0));
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(bigDecimal0).when(resultSet0).getBigDecimal(anyInt());
      BigDecimal bigDecimal1 = bigDecimalTypeHandler0.getNullableResult(resultSet0, 37);
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BigDecimalTypeHandler bigDecimalTypeHandler0 = new BigDecimalTypeHandler();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      JdbcType jdbcType0 = JdbcType.REAL;
      // Undeclared exception!
      try { 
        bigDecimalTypeHandler0.setNonNullParameter((PreparedStatement) null, 25, bigDecimal0, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.BigDecimalTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      BigDecimalTypeHandler bigDecimalTypeHandler0 = new BigDecimalTypeHandler();
      RoundingMode roundingMode0 = RoundingMode.HALF_UP;
      MathContext mathContext0 = new MathContext(1111, roundingMode0);
      BigDecimal bigDecimal0 = new BigDecimal(0L, mathContext0);
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      JdbcType jdbcType0 = JdbcType.TINYINT;
      bigDecimalTypeHandler0.setNonNullParameter(preparedStatement0, 26, bigDecimal0, jdbcType0);
      assertEquals(JdbcType.DECIMAL, bigDecimalTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BigDecimalTypeHandler bigDecimalTypeHandler0 = new BigDecimalTypeHandler();
      JdbcType jdbcType0 = bigDecimalTypeHandler0.getJdbcType();
      assertEquals(JdbcType.DECIMAL, jdbcType0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      BigDecimalTypeHandler bigDecimalTypeHandler0 = new BigDecimalTypeHandler();
      // Undeclared exception!
      try { 
        bigDecimalTypeHandler0.getNullableResult((ResultSet) null, 3066);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.BigDecimalTypeHandler", e);
      }
  }
}
