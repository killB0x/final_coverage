/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:26:56 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.type.SqlTimestampTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SqlTimestampTypeHandler_ESTest extends SqlTimestampTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SqlTimestampTypeHandler sqlTimestampTypeHandler0 = new SqlTimestampTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Timestamp) null).when(resultSet0).getTimestamp(anyInt());
      Timestamp timestamp0 = sqlTimestampTypeHandler0.getNullableResult(resultSet0, 86);
      assertNull(timestamp0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlTimestampTypeHandler sqlTimestampTypeHandler0 = new SqlTimestampTypeHandler();
      Timestamp timestamp0 = new Timestamp(0L);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(timestamp0).when(resultSet0).getTimestamp(anyInt());
      Timestamp timestamp1 = sqlTimestampTypeHandler0.getNullableResult(resultSet0, (-1));
      assertSame(timestamp1, timestamp0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SqlTimestampTypeHandler sqlTimestampTypeHandler0 = new SqlTimestampTypeHandler();
      Timestamp timestamp0 = new Timestamp((-2784L));
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(timestamp0).when(resultSet0).getTimestamp(anyInt());
      Timestamp timestamp1 = sqlTimestampTypeHandler0.getNullableResult(resultSet0, 86);
      assertEquals("1969-12-31 23:59:57.216", timestamp1.toString());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SqlTimestampTypeHandler sqlTimestampTypeHandler0 = new SqlTimestampTypeHandler();
      JdbcType jdbcType0 = sqlTimestampTypeHandler0.getJdbcType();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      Timestamp timestamp0 = new Timestamp(984);
      sqlTimestampTypeHandler0.setNonNullParameter(preparedStatement0, 984, timestamp0, jdbcType0);
      assertEquals(JdbcType.TIMESTAMP, sqlTimestampTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SqlTimestampTypeHandler sqlTimestampTypeHandler0 = new SqlTimestampTypeHandler();
      Timestamp timestamp0 = new Timestamp(0);
      JdbcType jdbcType0 = JdbcType.VARCHAR;
      // Undeclared exception!
      try { 
        sqlTimestampTypeHandler0.setNonNullParameter((PreparedStatement) null, 0, timestamp0, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.SqlTimestampTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SqlTimestampTypeHandler sqlTimestampTypeHandler0 = new SqlTimestampTypeHandler();
      // Undeclared exception!
      try { 
        sqlTimestampTypeHandler0.getNullableResult((ResultSet) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.SqlTimestampTypeHandler", e);
      }
  }
}
