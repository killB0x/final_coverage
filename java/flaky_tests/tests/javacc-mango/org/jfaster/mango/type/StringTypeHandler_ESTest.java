/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:35:17 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.type.StringTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class StringTypeHandler_ESTest extends StringTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringTypeHandler stringTypeHandler0 = new StringTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      JdbcType jdbcType0 = JdbcType.VARBINARY;
      stringTypeHandler0.setNonNullParameter(preparedStatement0, 1, "e", jdbcType0);
      assertEquals(JdbcType.VARCHAR, stringTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringTypeHandler stringTypeHandler0 = new StringTypeHandler();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      stringTypeHandler0.setParameter(preparedStatement0, 1, "bluQg.wem|vWRvy2");
      assertEquals(JdbcType.VARCHAR, stringTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringTypeHandler stringTypeHandler0 = new StringTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).getString(anyInt());
      String string0 = stringTypeHandler0.getNullableResult(resultSet0, 2345);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringTypeHandler stringTypeHandler0 = new StringTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("Sz(.>4i] &").when(resultSet0).getString(anyInt());
      String string0 = stringTypeHandler0.getNullableResult(resultSet0, 441);
      assertEquals("Sz(.>4i] &", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringTypeHandler stringTypeHandler0 = new StringTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("").when(resultSet0).getString(anyInt());
      String string0 = stringTypeHandler0.getNullableResult(resultSet0, (-2674));
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringTypeHandler stringTypeHandler0 = new StringTypeHandler();
      JdbcType jdbcType0 = stringTypeHandler0.getJdbcType();
      assertEquals(JdbcType.VARCHAR, jdbcType0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StringTypeHandler stringTypeHandler0 = new StringTypeHandler();
      // Undeclared exception!
      try { 
        stringTypeHandler0.getNullableResult((ResultSet) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.StringTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      StringTypeHandler stringTypeHandler0 = new StringTypeHandler();
      JdbcType jdbcType0 = JdbcType.REAL;
      // Undeclared exception!
      try { 
        stringTypeHandler0.setNonNullParameter((PreparedStatement) null, 3, "^Q&:\"U&PpYz", jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.StringTypeHandler", e);
      }
  }
}
