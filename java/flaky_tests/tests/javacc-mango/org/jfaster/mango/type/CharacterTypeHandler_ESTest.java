/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 14:56:22 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jfaster.mango.type.CharacterTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CharacterTypeHandler_ESTest extends CharacterTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharacterTypeHandler characterTypeHandler0 = new CharacterTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("\"'f`u_+Q").when(resultSet0).getString(anyInt());
      Character character0 = characterTypeHandler0.getNullableResult(resultSet0, 0);
      assertEquals('\"', (char)character0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharacterTypeHandler characterTypeHandler0 = new CharacterTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("0650h8Ah?wy`.} vs").when(resultSet0).getString(anyInt());
      Character character0 = characterTypeHandler0.getNullableResult(resultSet0, 0);
      assertEquals('0', (char)character0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CharacterTypeHandler characterTypeHandler0 = new CharacterTypeHandler();
      JdbcType jdbcType0 = characterTypeHandler0.getJdbcType();
      assertEquals(JdbcType.VARCHAR, jdbcType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CharacterTypeHandler characterTypeHandler0 = new CharacterTypeHandler();
      JdbcType jdbcType0 = JdbcType.DATETIMEOFFSET;
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        characterTypeHandler0.setNonNullParameter(preparedStatement0, 0, (Character) null, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.CharacterTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CharacterTypeHandler characterTypeHandler0 = new CharacterTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("").when(resultSet0).getString(anyInt());
      // Undeclared exception!
      try { 
        characterTypeHandler0.getNullableResult(resultSet0, (-374));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CharacterTypeHandler characterTypeHandler0 = new CharacterTypeHandler();
      // Undeclared exception!
      try { 
        characterTypeHandler0.getNullableResult((ResultSet) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.CharacterTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CharacterTypeHandler characterTypeHandler0 = new CharacterTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn("y?4L|5:<kP").when(resultSet0).getString(anyInt());
      Character character0 = characterTypeHandler0.getNullableResult(resultSet0, 0);
      JdbcType jdbcType0 = characterTypeHandler0.getJdbcType();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      characterTypeHandler0.setNonNullParameter(preparedStatement0, 0, character0, jdbcType0);
      assertEquals(JdbcType.VARCHAR, characterTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      CharacterTypeHandler characterTypeHandler0 = new CharacterTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(resultSet0).getString(anyInt());
      Character character0 = characterTypeHandler0.getNullableResult(resultSet0, 0);
      assertNull(character0);
  }
}
