/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 15:59:04 GMT 2022
 */

package org.jfaster.mango.type;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.jfaster.mango.type.SqlDateTypeHandler;
import org.jfaster.mango.util.jdbc.JdbcType;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SqlDateTypeHandler_ESTest extends SqlDateTypeHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SqlDateTypeHandler sqlDateTypeHandler0 = new SqlDateTypeHandler();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn((Date) null).when(resultSet0).getDate(anyInt());
      Date date0 = sqlDateTypeHandler0.getNullableResult(resultSet0, (-1693));
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlDateTypeHandler sqlDateTypeHandler0 = new SqlDateTypeHandler();
      JdbcType jdbcType0 = sqlDateTypeHandler0.getJdbcType();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      Date date0 = new Date(0L);
      sqlDateTypeHandler0.setNonNullParameter(preparedStatement0, 0, date0, jdbcType0);
      assertEquals(JdbcType.DATE, sqlDateTypeHandler0.getJdbcType());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SqlDateTypeHandler sqlDateTypeHandler0 = new SqlDateTypeHandler();
      Date date0 = new Date((-1657));
      JdbcType jdbcType0 = JdbcType.VARBINARY;
      // Undeclared exception!
      try { 
        sqlDateTypeHandler0.setNonNullParameter((PreparedStatement) null, (-1657), date0, jdbcType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.SqlDateTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SqlDateTypeHandler sqlDateTypeHandler0 = new SqlDateTypeHandler();
      // Undeclared exception!
      try { 
        sqlDateTypeHandler0.getNullableResult((ResultSet) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfaster.mango.type.SqlDateTypeHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SqlDateTypeHandler sqlDateTypeHandler0 = new SqlDateTypeHandler();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(761L);
      Date date0 = Date.valueOf(localDate0);
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(date0).when(resultSet0).getDate(anyInt());
      Date date1 = sqlDateTypeHandler0.getNullableResult(resultSet0, (-9));
      assertSame(date0, date1);
  }
}
