/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 05 16:40:26 GMT 2022
 */

package org.jfaster.mango.page;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfaster.mango.page.PageResult;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PageResult_ESTest extends PageResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      PageResult<Integer> pageResult0 = new PageResult<Integer>(linkedList0, 330L);
      long long0 = pageResult0.getTotal();
      assertEquals(330L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      PageResult<Object> pageResult0 = new PageResult<Object>(linkedList0, (-2628L));
      long long0 = pageResult0.getTotal();
      assertEquals((-2628L), long0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PageResult<Integer> pageResult0 = new PageResult<Integer>((List<Integer>) null, 0L);
      List<Integer> list0 = pageResult0.getData();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer((-3475));
      linkedList0.add(integer0);
      PageResult<Integer> pageResult0 = new PageResult<Integer>(linkedList0, 330L);
      pageResult0.getData();
      assertEquals(330L, pageResult0.getTotal());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PageResult<Integer> pageResult0 = new PageResult<Integer>((List<Integer>) null, 0L);
      long long0 = pageResult0.getTotal();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Class<Object> class0 = Object.class;
      PageResult<Object> pageResult0 = PageResult.empty(class0);
      pageResult0.getData();
      assertEquals(0L, pageResult0.getTotal());
  }
}
