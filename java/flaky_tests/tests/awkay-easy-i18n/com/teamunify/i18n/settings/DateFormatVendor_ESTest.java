/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 22:00:36 GMT 2022
 */

package com.teamunify.i18n.settings;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.teamunify.i18n.settings.DateFormatVendor;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockDateFormat;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DateFormatVendor_ESTest extends DateFormatVendor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.US;
      SimpleDateFormat simpleDateFormat0 = (SimpleDateFormat)dateFormatVendor0.getFormatFor((-2941), locale0, 1);
      assertEquals("MMMM d, y", simpleDateFormat0.toPattern());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      dateFormatVendor0.unregisterFormat((-1), locale0);
      assertEquals("zh_CN", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.CANADA_FRENCH;
      DateFormat[] dateFormatArray0 = dateFormatVendor0.getInputFormats(locale0);
      DateFormat[] dateFormatArray1 = dateFormatVendor0.getDateParsers(dateFormatArray0, locale0);
      assertEquals(8, dateFormatArray1.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
      // Undeclared exception!
      try { 
        dateFormatVendor0.registerInputFormat((Locale) null, dateFormat0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.settings.DFKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.CANADA_FRENCH;
      // Undeclared exception!
      try { 
        dateFormatVendor0.registerFormat(9, locale0, (DateFormat) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      // Undeclared exception!
      try { 
        dateFormatVendor0.getInputFormats((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.settings.DFKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      // Undeclared exception!
      try { 
        dateFormatVendor0.getFormatFor(9, (Locale) null, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.settings.DFKey", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.UK;
      // Undeclared exception!
      try { 
        dateFormatVendor0.getDateParsers((DateFormat[]) null, locale0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.settings.DateFormatVendor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.ENGLISH;
      SimpleDateFormat simpleDateFormat0 = (SimpleDateFormat)dateFormatVendor0.getFormatFor(3, locale0, 3);
      assertEquals("M/d/yy", simpleDateFormat0.toLocalizedPattern());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.CANADA_FRENCH;
      DateFormat dateFormat0 = MockDateFormat.getDateTimeInstance();
      dateFormatVendor0.registerInputFormat(locale0, dateFormat0);
      DateFormat[] dateFormatArray0 = dateFormatVendor0.getInputFormats(locale0);
      assertEquals(5, dateFormatArray0.length);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.GERMAN;
      DateFormat dateFormat0 = MockDateFormat.getTimeInstance();
      dateFormatVendor0.registerFormat(9, locale0, dateFormat0, true);
      assertEquals("de", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.JAPAN;
      DateFormat dateFormat0 = MockDateFormat.getDateInstance(0);
      // Undeclared exception!
      try { 
        dateFormatVendor0.registerFormat(0, locale0, dateFormat0, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Custom date format IDs must be greater than DEFAULT_DATE_FORMAT_ID (9)
         //
         verifyException("com.teamunify.i18n.settings.DateFormatVendor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.ENGLISH;
      DateFormat dateFormat0 = dateFormatVendor0.getFormatFor(9, locale0, 9);
      dateFormatVendor0.registerFormat(3251, locale0, dateFormat0, false);
      SimpleDateFormat simpleDateFormat0 = (SimpleDateFormat)dateFormatVendor0.getFormatFor(3251, locale0, (-2729));
      assertEquals("M/d/yy", simpleDateFormat0.toLocalizedPattern());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.CANADA;
      SimpleDateFormat simpleDateFormat0 = (SimpleDateFormat)dateFormatVendor0.getFormatFor(2, locale0, 2);
      assertEquals("MMM d, y", simpleDateFormat0.toPattern());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.PRC;
      SimpleDateFormat simpleDateFormat0 = (SimpleDateFormat)dateFormatVendor0.getFormatFor(1, locale0, 1);
      assertEquals("y\u5E74M\u6708d\u65E5", simpleDateFormat0.toPattern());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      Locale locale0 = Locale.CANADA_FRENCH;
      SimpleDateFormat simpleDateFormat0 = (SimpleDateFormat)dateFormatVendor0.getFormatFor(2473, locale0, (-1892));
      assertNotNull(simpleDateFormat0);
      assertEquals("yy-MM-dd", simpleDateFormat0.toLocalizedPattern());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DateFormatVendor dateFormatVendor0 = new DateFormatVendor();
      // Undeclared exception!
      try { 
        dateFormatVendor0.unregisterFormat(9, (Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.settings.DFKey", e);
      }
  }
}
