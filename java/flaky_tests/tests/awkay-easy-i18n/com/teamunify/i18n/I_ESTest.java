/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 16 21:59:09 GMT 2022
 */

package com.teamunify.i18n;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.teamunify.i18n.I;
import com.teamunify.i18n.escape.EscapeFunction;
import com.teamunify.i18n.escape.HTMLEscapeFunction;
import com.teamunify.i18n.settings.BooleanFunction;
import com.teamunify.i18n.settings.GlobalLanguageSettingsProvider;
import com.teamunify.i18n.settings.LanguageSetting;
import com.teamunify.i18n.wiki.Wikifier;
import java.text.DateFormat;
import java.text.ParsePosition;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.text.MockSimpleDateFormat;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class I_ESTest extends I_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.addCustomDateFormat(1054, "Hh)B3z5;uZeS]mT0V", (String) null, "EEEE", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.fullName("~RS,z>]Q", "HK");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      String string0 = I.intToPercentage(65535, (-72));
      assertEquals("65.535\u00A0%", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      String string0 = I.imageURL("[w[0*-N5?G{~", "und");
      assertEquals("[w[0*-N5?G{~", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      String string0 = I.imageURL("com.teamunify.i18n.settings.DateFormatVendor", "wi2{vmhparso-e:[^");
      assertEquals("com.teamunify.i18n.settings_de.DateFormatVendor", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      String string0 = I.preferredNumberFormat(0);
      assertEquals("#.###", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Date date0 = I.stringToTimestamp("Failed to parse currency: {}", mockDate0);
      assertEquals("Fri Feb 14 00:00:00 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      MockDate mockDate0 = new MockDate(216, 9, 153, (-1362), (-543));
      String string0 = I.timestampToString((Date) mockDate0, 1577, true, false);
      assertEquals("8:57 PM", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      String string0 = I.timestampToString((Date) null, false, false, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      String string0 = I.timestampToString((Date) null, false, true, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1910645468), (-111), 1658, 0, (-1910645468));
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      String string0 = I.timestampToString(date0, false, true);
      assertEquals("15.10.82 12:00:00 AM", string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = I.supports("Custom date format IDs must be greater than DEFAULT_DATE_FORMAT_ID (%d)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        I.tr_pluralw((EscapeFunction) null, "l'$[>$U+>:o!)t", "II3f~I&:fw_", 135, objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        I.tr_pluralw("#201[nc{/uEooi)6`{<", "J!xvOpz", (-897), objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      EscapeFunction escapeFunction0 = I.defaultEscapeFunction;
      Object[] objectArray0 = new Object[5];
      // Undeclared exception!
      try { 
        I.trcfw(escapeFunction0, "com.teamunify.i18n.settings.DFKey", "p04k>>v|HN/sky:3-u:", objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Object[] objectArray0 = new Object[6];
      // Undeclared exception!
      try { 
        I.trcfw((String) null, "wi2{vmhparso-e:[^", objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HTMLEscapeFunction hTMLEscapeFunction0 = new HTMLEscapeFunction();
      // Undeclared exception!
      try { 
        I.trcw("", "~)U?C(D7h3TLHjX~'//20142014", (EscapeFunction) hTMLEscapeFunction0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.trcw("", "und");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.trc("z9JQB)Tyf", "M/d/yy");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HTMLEscapeFunction hTMLEscapeFunction0 = (HTMLEscapeFunction)EscapeFunction.EscapeHTML;
      // Undeclared exception!
      try { 
        I.trw("{0}, or {1}2014", (EscapeFunction) hTMLEscapeFunction0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HTMLEscapeFunction hTMLEscapeFunction0 = (HTMLEscapeFunction)EscapeFunction.EscapeHTML;
      String string0 = I.preferredNumberFormat(1245);
      // Undeclared exception!
      try { 
        I.tr(string0, (EscapeFunction) hTMLEscapeFunction0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      String string0 = I.getDateFormatter((-1751268952), 1105);
      assertEquals("dd.MM.yy", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      I.setDefaultDateFormat("com.teamunify.i18n.escape.EscapeFunction", "**([^*/_]*)**", "**([^*/_]*)**");
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      I.addCustomDateFormat(739, "#,###.##", "#,###.##", ".0=0>~{", false);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      String string0 = I.wikified("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      String string0 = I.timestampToString((Date) null, true, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      String string0 = I.timestampToString((Date) null, 1529, true, true);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Date date0 = I.stringToDate("12/26/86 4:25 AM");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      double double0 = I.roundCurrency(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      double double0 = I.roundCurrency(29.66);
      assertEquals(29.66, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Double double0 = Double.valueOf(1439.19504);
      String string0 = I.numberToCurrencyString((Number) double0, true);
      assertEquals("1.439,20\u00A0\u20AC", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Byte byte0 = Byte.valueOf((byte)96);
      String string0 = I.numberToCurrencyString((Number) byte0);
      assertEquals("96,00\u00A0\u20AC", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Long long0 = Long.valueOf(0L);
      String string0 = I.numberToCompactCurrencyString(long0);
      assertEquals("0,00", string0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      String string0 = I.imageURL((String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      String string0 = I.imageURL("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      String string0 = I.fractionalNumberToPercentage(2);
      assertEquals("200\u00A0%", string0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 0, (-1));
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      String string0 = I.dayOfWeek(date0, 1808, false);
      assertEquals("Sonntag", string0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ParsePosition parsePosition0 = new ParsePosition(2501);
      MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("");
      Date date0 = mockSimpleDateFormat0.parse("pxJ'", parsePosition0);
      String string0 = I.dateToString(date0);
      assertEquals("14.02.14", string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String string0 = I.compressNumberString("ending of list in a setence with threeor more thngs");
      assertEquals("endingoflistinasetencewiththreeormorethngs", string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String string0 = I.compressNumberString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String string0 = I.compressCurrencyString("{0}, or {1}");
      assertEquals("{0}, or {1}", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String string0 = I.compressCurrencyString("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1577, 9, 9, 216, 1577);
      Date date0 = I.ISOTimestampToDate("N)v@OFcX", mockDate0);
      assertSame(mockDate0, date0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.wikified((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.supports((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.settings.LanguageSetting", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.supports((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Locale", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      // Undeclared exception!
      try { 
        I.stringToTimestamp((String) null, mockDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.setDefaultDateFormat("tws*p", "SY", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      EscapeFunction escapeFunction0 = EscapeFunction.NoEscape;
      // Undeclared exception!
      try { 
        I.numberToCurrencyString((Number) null, true, escapeFunction0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      String[] stringArray0 = new String[0];
      HTMLEscapeFunction hTMLEscapeFunction0 = new HTMLEscapeFunction();
      // Undeclared exception!
      try { 
        I.localizedStringsAsList(stringArray0, false, (EscapeFunction) hTMLEscapeFunction0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      // Undeclared exception!
      I.intToPercentage(9980, 65535);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.getDefaultLocaleForLanguage((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.addCustomDateFormat(3590, "{C073}3_!!c", "{C073}3_!!c", "{C073}3_!!c", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'C'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      boolean boolean0 = I.isNullDate(mockDate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      boolean boolean0 = I.isNullDate((Date) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = I.imageURL("en", "en");
      assertEquals("en", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Byte byte0 = Byte.valueOf((byte)77);
      String string0 = I.numberToString(byte0);
      assertEquals("77", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Number number0 = I.currencyStringToNumber((String) null, (Number) null);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Number number0 = I.currencyStringToNumber("#", (Number) null);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HTMLEscapeFunction hTMLEscapeFunction0 = (HTMLEscapeFunction)EscapeFunction.EscapeHTML;
      // Undeclared exception!
      try { 
        I.numberToCurrencyString((Number) 2, true, (EscapeFunction) hTMLEscapeFunction0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/apache/commons/lang/StringEscapeUtils
         //
         verifyException("com.teamunify.i18n.escape.HTMLEscapeFunction", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Integer integer0 = Integer.valueOf((-205242406));
      EscapeFunction escapeFunction0 = I.defaultEscapeFunction;
      String string0 = I.numberToCurrencyString((Number) integer0, false, escapeFunction0);
      assertEquals("-205.242.406,00", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String string0 = I.longToCurrencyString(0L, true);
      assertEquals("0,00\u00A0\u20AC", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String string0 = I.preferredDateFormat(495);
      assertEquals("dd.MM.yy", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.stringToTime((Date) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-1624), 2390, (-241));
      Date date0 = I.stringToTime(mockDate0, "und");
      assertEquals("Tue Jul 02 00:00:00 GMT 474", date0.toString());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Date date0 = I.stringToDate("2014");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      String string0 = I.timestampToString((Date) mockDate0, (-1), false, false, false);
      assertEquals("14.02.14 8:21 PM", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      String string0 = I.timestampToString((Date) null, (-1), false, false, false);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      MockDate mockDate0 = new MockDate(1016L);
      String string0 = I.timestampToString((Date) mockDate0, 3, true, true, true);
      assertEquals("12:00:01 AM UTC", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = I.dateToString((Date) null, 1154);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      String string0 = I.dateToString((Date) mockDate0, 1154);
      assertEquals("14.02.14", string0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Locale locale0 = I.getLocale("C");
      boolean boolean0 = I.supports(locale0);
      assertEquals("c", locale0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      EscapeFunction escapeFunction0 = I.defaultEscapeFunction;
      // Undeclared exception!
      try { 
        I.trf(escapeFunction0, "_H_6lCl3I$W$2014", (Object[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      I.setLanguage(locale0);
      assertEquals("", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      DateFormat dateFormat0 = I.getDateFormat((-1530), (-1530));
      assertTrue(dateFormat0.isLenient());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        I.tr_plural("ikB-", "ikB-", 3, objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.trcf((EscapeFunction) null, "YF", "YF", (Object[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.numberToCurrencyString((Number) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.tr("F");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      LanguageSetting languageSetting0 = I.getDefaultLanguage();
      assertNotNull(languageSetting0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = I.getCurrencyFractionDigits();
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.tru("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      HTMLEscapeFunction hTMLEscapeFunction0 = (HTMLEscapeFunction)EscapeFunction.EscapeHTML;
      // Undeclared exception!
      try { 
        I.tr_plural((EscapeFunction) hTMLEscapeFunction0, "K5zQAo-u@sAlk8WF%w", "K5zQAo-u@sAlk8WF%w", 2791, (Object[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        I.trfu("H", objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.compressCurrencyString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      TimeZone timeZone0 = I.getTimeZone();
      assertEquals("Etc/UTC", timeZone0.getID());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.trcf("WCA\"A~", "WCA\"A~", (Object[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.trf("Jkwy+XqxP?dD=baj&IW", (Object[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HTMLEscapeFunction hTMLEscapeFunction0 = new HTMLEscapeFunction();
      // Undeclared exception!
      try { 
        I.trc("_br_", "_br_", (EscapeFunction) hTMLEscapeFunction0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = I.monthName(2496, true);
      assertEquals("Feb", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = I.monthName((-2834), false);
      assertEquals("February", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.dayOfWeek((Date) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      String string0 = I.dayOfWeek((Date) mockDate0, false);
      assertEquals("Friday", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = I.wikified("cot.teamunify.B18n");
      assertEquals("cot.teamunify.B18n", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.setNullDateTest((BooleanFunction<Date>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Date testing function cannot be null
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Date date0 = I.ISOTimestampToDate("0", (Date) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Date date0 = I.ISOTimestampToDate("", (Date) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Date date0 = I.ISOTimestampToDate((String) null, (Date) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = I.dateToISOString((Date) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      String string0 = I.dateToISOString(mockDate0);
      assertEquals("2014-02-14", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = I.timestampToISOString((Date) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      Date date0 = mockGregorianCalendar0.getGregorianChange();
      String string0 = I.timestampToISOString(date0);
      assertEquals("1582-10-15 00:00:00.0", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = I.intToPercentage(2802, 2802);
      assertEquals("0%", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      double double0 = I.roundCurrency((-579.800949159));
      assertEquals((-579.8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = I.imageURL((String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = I.imageURL("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = I.numberToString((Number) null);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = I.preferredNumberFormat((-3288));
      assertEquals("#,###", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      // Undeclared exception!
      I.preferredNumberFormat(65547);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Number number0 = I.stringToNumber("{0}, or {1}", (Number) null);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Number number0 = I.stringToNumber("", (Number) null);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Number number0 = I.stringToNumber((String) null, (Number) null);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = I.preferredCurrencyFormat();
      assertEquals("#,###.##", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.currencyStringToLong("GGv*;?#0", 885L);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Character array is missing \"e\" notation exponential mark.
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Number number0 = I.currencyStringToNumber("", (Number) null);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      Date date0 = I.stringToTimestamp("2/14/14 8:21 PM", mockDate0);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
      assertNotSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Date date0 = I.stringToTimestamp("jR", (Date) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Date date0 = I.stringToTimestamp("0", (Date) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Date date0 = I.stringToDate("uIsV;jJW7]&qI)\":");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Date date0 = I.stringToDate("pzc?zq/bsC\"7z6_U");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Date date0 = I.stringToDate("com.teamunify.i18n.settings.LanguageSetting$1");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Date date0 = I.stringToDate("");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Date date0 = I.stringToDate((String) null);
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      String string0 = I.timestampToString((Date) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      String string0 = I.dateToShortString((Date) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      String string0 = I.dateToShortString(mockDate0);
      assertEquals("2/14/14", string0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      boolean boolean0 = I.supports("_");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      boolean boolean0 = I.supports("#.###,##");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      boolean boolean0 = I.supports("+7NK_ikB-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      boolean boolean0 = I.supports("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      boolean boolean0 = I.supports((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Locale locale0 = I.getLocale("+7NK_ikB-");
      assertEquals("+7", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.getLocale("_");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.getLocale((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Locale locale0 = I.getDefaultLocaleForLanguage("");
      assertEquals("", locale0.getISO3Country());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      I.setDefaultLocaleForLanguage("C", (Locale) null);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      I.setDefaultLocaleForLanguage((String) null, locale0);
      assertEquals("en", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Locale locale0 = Locale.ENGLISH;
      I.setDefaultLocaleForLanguage(",", locale0);
      assertEquals("eng", locale0.getISO3Language());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.fractionalNumberToPercentage((Number) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Number
         //
         verifyException("java.text.DecimalFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        I.trfw("ending of list in a sentence with three or more things", objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.dayOfWeek((Date) null, 0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      LanguageSetting languageSetting0 = I.getCurrentLanguage();
      assertNotNull(languageSetting0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      String string0 = "tBZ\\u>b";
      // Undeclared exception!
      try { 
        I.trj(string0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      Date date0 = I.getDefaultDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      String string0 = I.timestampToString((Date) mockDate0, true, true, true);
      assertEquals("8:21:21 PM UTC", string0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String string0 = I.getLanguage();
      assertEquals("en", string0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HTMLEscapeFunction hTMLEscapeFunction0 = (HTMLEscapeFunction)EscapeFunction.EscapeHTML;
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        I.trcfw((EscapeFunction) hTMLEscapeFunction0, "%", "%", objectArray0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.addCustomDateFormat((-433), "W-,Y", "W-,Y", "W-,Y", false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Custom date format IDs must be greater than DEFAULT_DATE_FORMAT_ID (9)
         //
         verifyException("com.teamunify.i18n.settings.DateFormatVendor", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.trfj("|xy7'<gW}EKrMi", (Object[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String string0 = I.longToCurrencyString(1L);
      assertEquals("\u00A40.01", string0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      String string0 = I.numberToCompactString(2);
      assertEquals("2", string0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HTMLEscapeFunction hTMLEscapeFunction0 = (HTMLEscapeFunction)EscapeFunction.EscapeHTML;
      I.setEscapeFunction(hTMLEscapeFunction0);
      String string0 = I.preferredNumberFormat(1245);
      // Undeclared exception!
      try { 
        I.trcw(string0, string0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      I i0 = new I();
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      BooleanFunction<Date> booleanFunction0 = I.getNullDateTest();
      I.setNullDateTest(booleanFunction0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HTMLEscapeFunction hTMLEscapeFunction0 = new HTMLEscapeFunction();
      // Undeclared exception!
      try { 
        I.trfw((EscapeFunction) hTMLEscapeFunction0, "P}?.\">eAZM<EuLwH$2014", (Object[]) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.wholeNumberToPercentage((-2702));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      String string0 = I.preferredDateFormat();
      assertEquals("M/d/yy", string0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.numberToCompactCurrencyString((Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.trw("$|[RU_twB+c@)");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      GlobalLanguageSettingsProvider globalLanguageSettingsProvider0 = new GlobalLanguageSettingsProvider();
      I.setLanguageSettingsProvider(globalLanguageSettingsProvider0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      String string0 = I.longToCompactCurrencyString((-1794310380));
      assertEquals("-17943103.80", string0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      boolean boolean0 = I.supports("W-,Y", "W-,Y");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.numberToCurrencyString((Number) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      String string0 = I.getDateFormatter((-51));
      assertEquals("M/d/yy", string0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      String string0 = I.imageURL(";");
      assertEquals(";", string0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.compressNumberString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      I.setDefaultDate((Date) null);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      String string0 = I.currencySign();
      assertEquals("\u00A4", string0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.localizedStringsAsList((String[]) null, true);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // gnu/gettext/GettextResource
         //
         verifyException("com.teamunify.i18n.I", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Wikifier wikifier0 = I.getWikiEngine();
      I.setWikiEngine(wikifier0);
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2623L);
      String string0 = I.timestampToString((Date) mockDate0);
      //  // Unstable assertion: assertEquals("1970-01-01 12:00:02 AM", string0);
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      String string0 = I.dateToString((Date) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      I.setLanguage("a list of options in a sntence with exactly two things");
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      // Undeclared exception!
      try { 
        I.setDefaultDateFormat("U", "U", "{0} or {1}");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'o'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }
}
