# Automatically generated by Pynguin.
import pytest
import leibniz.diffeq._impl.rk_common as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '^op$\n43-+9~GS'
    str_1 = 'UNq'
    module_0.rk4_step_func(str_0, str_0, str_1, str_1)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    dict_0 = {}
    module_0.rk4_step_func(dict_0, bool_0, bool_0, dict_0, dict_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.rk4_alt_step_func(none_type_0, none_type_0, none_type_0, none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    module_0._ButcherTableau()

@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    module_0.rk4_alt_step_func(list_0, list_0, list_0, list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    bool_0 = False
    module_0.rk4_alt_step_func(list_0, bool_0, bool_0, list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    none_type_0 = None
    list_0 = [none_type_0]
    module_0.rk4_alt_step_func(none_type_0, bool_0, bool_0, list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    module_0.rk4_step_func(bool_0, bool_0, bool_0, dict_0, dict_0)