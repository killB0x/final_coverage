# Automatically generated by Pynguin.
import pytest
import leibniz.core3d.basis.x_y_z as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    str_0 = 'fwlquJygn\x0c$'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.inverse(none_type_0, none_type_0, none_type_0, **dict_0)
    list_0 = [var_0, dict_0, str_0, none_type_0]
    module_0.inverse(list_0, var_0, var_0, **var_0)

def test_case_1():
    complex_0 = (-2057.79+44.08j)
    none_type_0 = None
    str_0 = ')`^Cb8\rI~'
    dict_0 = {str_0: str_0}
    var_0 = module_0.dtransform(complex_0, complex_0, complex_0, complex_0, none_type_0, none_type_0, **dict_0)
    dict_1 = {complex_0: var_0, var_0: complex_0, complex_0: complex_0}
    var_1 = module_0.transform(dict_1, dict_1, complex_0)

def test_case_2():
    none_type_0 = None
    var_0 = module_0.dinverse(none_type_0, none_type_0, none_type_0, none_type_0, none_type_0, none_type_0)
    var_1 = module_0.inverse(none_type_0, none_type_0, none_type_0)
    var_2 = module_0.dtransform(none_type_0, none_type_0, none_type_0, none_type_0, none_type_0, none_type_0)
    bool_0 = True
    var_3 = module_0.inverse(var_2, none_type_0, bool_0)
    var_4 = module_0.inverse(var_1, var_1, var_1)