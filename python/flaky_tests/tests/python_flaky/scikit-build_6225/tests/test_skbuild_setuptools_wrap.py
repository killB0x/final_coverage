# Automatically generated by Pynguin.
import pytest
import skbuild.setuptools_wrap as module_0
import platform as module_1
import sysconfig as module_2

def test_case_0():
    module_0.parse_args()

@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.setup()

@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b'U\xe4\xa8\xdf,\xe7\xf0\x97\x1c\xe1\x98\xbd<K\xcd'
    module_0.strip_package(bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    module_0.create_skbuild_argparser()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'argparse.ArgumentParser'
    assert var_0.description is None
    assert var_0.argument_default is None
    assert var_0.prefix_chars == '-'
    assert var_0.conflict_handler == 'error'
    assert var_0.prog == 'pynguin'
    assert var_0.usage is None
    assert var_0.epilog is None
    assert var_0.fromfile_prefix_chars is None
    assert var_0.add_help is False
    assert var_0.allow_abbrev is True
    assert var_0.exit_on_error is True
    none_type_0 = None
    var_1 = module_0.strip_package(none_type_0, none_type_0)
    var_2 = var_1.testzip()

def test_case_4():
    var_0 = module_1.python_version()
    var_1 = module_0.strip_package(var_0, var_0)
    assert var_1 == '3.10.6'

def test_case_5():
    var_0 = module_2.get_makefile_filename()
    var_1 = module_0.strip_package(var_0, var_0)