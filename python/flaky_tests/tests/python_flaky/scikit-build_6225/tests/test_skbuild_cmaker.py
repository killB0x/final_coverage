# Automatically generated by Pynguin.
import pytest
import skbuild.cmaker as module_0
import platform as module_1
import _io as module_2
import shlex as module_3
import collections.abc as module_4
import skbuild.exceptions as module_5

def test_case_0():
    str_0 = '6Y~;?m:1'
    var_0 = module_0.has_cmake_cache_arg(str_0, str_0)
    assert var_0 is False

@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.CMaker()

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = '6Y~;?m:1'
    var_0 = module_0.has_cmake_cache_arg(str_0, str_0)
    assert var_0 is False
    dict_0 = {str_0: var_0, var_0: var_0, var_0: str_0}
    module_0.get_cmake_version(dict_0)

def test_case_3():
    var_0 = module_1.version()
    var_1 = module_0.pop_arg(var_0, var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    var_1 = c_maker_0.get_cached_generator_env()
    processor_0 = module_1._Processor()
    c_maker_0.configure(generator_name=c_maker_0, cmake_install_dir=c_maker_0, cleanup=var_0)

def test_case_5():
    var_0 = module_1.machine()
    var_1 = module_0.get_cmake_version(var_0)
    assert var_1 == '2.36.1'

@pytest.mark.xfail(strict=True)
def test_case_6():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    var_1 = c_maker_0.get_python_include_dir(var_0)
    var_0.__reversed__()

@pytest.mark.xfail(strict=True)
def test_case_7():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    c_maker_0.configure(skip_generator_test=c_maker_0, cmake_install_dir=c_maker_0, languages=var_0)

def test_case_8():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    var_1 = module_1.python_implementation()
    var_2 = c_maker_0.check_for_bad_installs()
    var_3 = module_1.machine()

def test_case_9():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    var_1 = c_maker_0.get_python_version()
    assert var_1 == '3.10'
    var_2 = module_1.python_implementation()
    var_3 = c_maker_0.check_for_bad_installs()
    var_4 = module_1.machine()

@pytest.mark.xfail(strict=True)
def test_case_10():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    none_type_0 = None
    var_1 = c_maker_0.get_python_include_dir(none_type_0)
    var_2 = module_0.has_cmake_cache_arg(var_0, var_0)
    assert var_2 is False
    i_o_base_0 = module_2._IOBase()
    shlex_0 = module_3.shlex(var_2)
    assert shlex_0.instream is False
    var_3 = module_1.python_implementation()
    var_4 = module_1.python_implementation()
    module_0.pop_arg(var_2, i_o_base_0, var_4)

def test_case_11():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    var_1 = c_maker_0.get_cached_generator_env()
    processor_0 = module_1._Processor()
    var_2 = var_0.__repr__()
    var_3 = module_1.machine()

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = 'uYLS['
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    values_view_0 = module_4.ValuesView(var_0)
    var_1 = module_0.has_cmake_cache_arg(str_0, var_0)
    assert var_1 is False
    var_2 = module_0.get_cmake_version(var_0)
    assert var_2 == '2.36.1'
    c_maker_0.make(var_0, source_dir=c_maker_0)

def test_case_13():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    var_1 = c_maker_0.install()
    var_2 = module_1.python_implementation()
    var_3 = c_maker_0.check_for_bad_installs()
    var_4 = module_1.machine()

@pytest.mark.xfail(strict=True)
def test_case_14():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    var_1 = c_maker_0.get_cached_generator_env()
    var_2 = c_maker_0.get_python_include_dir(var_0)
    var_3 = c_maker_0.check_for_bad_installs()
    tuple_0 = (var_3,)
    var_4 = module_1.python_version()
    c_maker_0.configure(skip_generator_test=var_0, cmake_source_dir=tuple_0, cmake_install_dir=var_2, cleanup=var_4)

@pytest.mark.xfail(strict=True)
def test_case_15():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    var_1 = c_maker_0.get_cached_generator_env()
    var_2 = c_maker_0.get_python_include_dir(var_0)
    var_3 = module_0.has_cmake_cache_arg(var_0, var_0)
    assert var_3 is False
    var_4 = c_maker_0.check_for_bad_installs()
    c_maker_0.get_python_library(var_2)

def test_case_16():
    var_0 = module_1.machine()
    c_maker_0 = module_0.CMaker(var_0)
    assert f'{type(c_maker_0).__module__}.{type(c_maker_0).__qualname__}' == 'skbuild.cmaker.CMaker'
    assert c_maker_0.cmake_executable == 'x86_64'
    assert c_maker_0.cmake_version == '2.36.1'
    assert f'{type(c_maker_0.platform).__module__}.{type(c_maker_0.platform).__qualname__}' == 'skbuild.platform_specifics.linux.LinuxPlatform'
    var_1 = c_maker_0.check_for_bad_installs()
    with pytest.raises(module_5.SKBuildError):
        c_maker_0.make()