# Automatically generated by Pynguin.
import pytest
import skbuild.platform_specifics.abstract as module_0
import enum as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    c_make_platform_0.get_best_generator(cmake_executable=c_make_platform_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    c_make_platform_0.write_test_cmakelist(c_make_platform_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    c_make_platform_0.get_best_generator(c_make_platform_0)

def test_case_3():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    var_0 = c_make_platform_0.get_best_generator(c_make_platform_0, c_make_platform_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakeGenerator'
    assert var_0.env == {'PYNGUIN_DANGER_AWARE': '', 'PYTHONUNBUFFERED': '1', 'HOSTNAME': 'bf88ab65620d', 'PYTHON_VERSION': '3.10.6', 'PYTHONHASHSEED': '0', 'PWD': '/pynguin', 'PYTHON_SETUPTOOLS_VERSION': '63.2.0', 'container': 'podman', 'HOME': '/root', 'LANG': 'C.UTF-8', 'GPG_KEY': 'A035C8C19219BA821ECEA86B64E628F8D684696D', 'TERM': 'xterm', 'SHLVL': '1', 'PYNGUIN_VERSION': '0.27.0', 'PYTHON_PIP_VERSION': '22.2.1', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTHON_GET_PIP_SHA256': '5aefe6ade911d997af080b315ebcb7f882212d070465df544e1175ac2be519b4', 'PYTHON_GET_PIP_URL': 'https://github.com/pypa/get-pip/raw/5eaac1050023df1f5c98b173b248c260023f2278/public/get-pip.py', 'PATH': '/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/usr/local/bin/pynguin'}
    assert f'{type(module_0.CMakeGenerator.name).__module__}.{type(module_0.CMakeGenerator.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakeGenerator.toolset).__module__}.{type(module_0.CMakeGenerator.toolset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakeGenerator.description).__module__}.{type(module_0.CMakeGenerator.description).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_4():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    var_0 = c_make_platform_0.cleanup_test()
    c_make_platform_0.get_best_generator(c_make_platform_0)

def test_case_5():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    var_0 = c_make_platform_0.get_generator(c_make_platform_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakeGenerator'
    assert var_0.env == {'PYNGUIN_DANGER_AWARE': '', 'PYTHONUNBUFFERED': '1', 'HOSTNAME': 'bf88ab65620d', 'PYTHON_VERSION': '3.10.6', 'PYTHONHASHSEED': '0', 'PWD': '/pynguin', 'PYTHON_SETUPTOOLS_VERSION': '63.2.0', 'container': 'podman', 'HOME': '/root', 'LANG': 'C.UTF-8', 'GPG_KEY': 'A035C8C19219BA821ECEA86B64E628F8D684696D', 'TERM': 'xterm', 'SHLVL': '1', 'PYNGUIN_VERSION': '0.27.0', 'PYTHON_PIP_VERSION': '22.2.1', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTHON_GET_PIP_SHA256': '5aefe6ade911d997af080b315ebcb7f882212d070465df544e1175ac2be519b4', 'PYTHON_GET_PIP_URL': 'https://github.com/pypa/get-pip/raw/5eaac1050023df1f5c98b173b248c260023f2278/public/get-pip.py', 'PATH': '/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/usr/local/bin/pynguin'}
    assert f'{type(module_0.CMakeGenerator.name).__module__}.{type(module_0.CMakeGenerator.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakeGenerator.toolset).__module__}.{type(module_0.CMakeGenerator.toolset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakeGenerator.description).__module__}.{type(module_0.CMakeGenerator.description).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_6():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    c_make_platform_0.compile_test_cmakelist(c_make_platform_0, c_make_platform_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    var_0 = c_make_platform_0.get_best_generator(c_make_platform_0, c_make_platform_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakeGenerator'
    assert var_0.env == {'PYNGUIN_DANGER_AWARE': '', 'PYTHONUNBUFFERED': '1', 'HOSTNAME': 'bf88ab65620d', 'PYTHON_VERSION': '3.10.6', 'PYTHONHASHSEED': '0', 'PWD': '/pynguin', 'PYTHON_SETUPTOOLS_VERSION': '63.2.0', 'container': 'podman', 'HOME': '/root', 'LANG': 'C.UTF-8', 'GPG_KEY': 'A035C8C19219BA821ECEA86B64E628F8D684696D', 'TERM': 'xterm', 'SHLVL': '1', 'PYNGUIN_VERSION': '0.27.0', 'PYTHON_PIP_VERSION': '22.2.1', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTHON_GET_PIP_SHA256': '5aefe6ade911d997af080b315ebcb7f882212d070465df544e1175ac2be519b4', 'PYTHON_GET_PIP_URL': 'https://github.com/pypa/get-pip/raw/5eaac1050023df1f5c98b173b248c260023f2278/public/get-pip.py', 'PATH': '/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/usr/local/bin/pynguin'}
    assert f'{type(module_0.CMakeGenerator.name).__module__}.{type(module_0.CMakeGenerator.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakeGenerator.toolset).__module__}.{type(module_0.CMakeGenerator.toolset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakeGenerator.description).__module__}.{type(module_0.CMakeGenerator.description).__qualname__}' == 'builtins.property'
    var_1 = c_make_platform_0.get_generator(c_make_platform_0)
    c_make_generator_0 = module_0.CMakeGenerator(c_make_platform_0, toolset=var_1)
    assert f'{type(c_make_generator_0).__module__}.{type(c_make_generator_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakeGenerator'
    assert c_make_generator_0.env == {'PYNGUIN_DANGER_AWARE': '', 'PYTHONUNBUFFERED': '1', 'HOSTNAME': 'bf88ab65620d', 'PYTHON_VERSION': '3.10.6', 'PYTHONHASHSEED': '0', 'PWD': '/pynguin', 'PYTHON_SETUPTOOLS_VERSION': '63.2.0', 'container': 'podman', 'HOME': '/root', 'LANG': 'C.UTF-8', 'GPG_KEY': 'A035C8C19219BA821ECEA86B64E628F8D684696D', 'TERM': 'xterm', 'SHLVL': '1', 'PYNGUIN_VERSION': '0.27.0', 'PYTHON_PIP_VERSION': '22.2.1', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTHON_GET_PIP_SHA256': '5aefe6ade911d997af080b315ebcb7f882212d070465df544e1175ac2be519b4', 'PYTHON_GET_PIP_URL': 'https://github.com/pypa/get-pip/raw/5eaac1050023df1f5c98b173b248c260023f2278/public/get-pip.py', 'PATH': '/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/usr/local/bin/pynguin'}
    c_make_platform_0.write_test_cmakelist(var_1)

@pytest.mark.xfail(strict=True)
def test_case_8():
    float_0 = 3103.081719
    none_type_0 = None
    c_make_generator_0 = module_0.CMakeGenerator(float_0, toolset=none_type_0)
    assert f'{type(c_make_generator_0).__module__}.{type(c_make_generator_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakeGenerator'
    assert c_make_generator_0.env == {'PYNGUIN_DANGER_AWARE': '', 'PYTHONUNBUFFERED': '1', 'HOSTNAME': 'bf88ab65620d', 'PYTHON_VERSION': '3.10.6', 'PYTHONHASHSEED': '0', 'PWD': '/pynguin', 'PYTHON_SETUPTOOLS_VERSION': '63.2.0', 'container': 'podman', 'HOME': '/root', 'LANG': 'C.UTF-8', 'GPG_KEY': 'A035C8C19219BA821ECEA86B64E628F8D684696D', 'TERM': 'xterm', 'SHLVL': '1', 'PYNGUIN_VERSION': '0.27.0', 'PYTHON_PIP_VERSION': '22.2.1', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTHON_GET_PIP_SHA256': '5aefe6ade911d997af080b315ebcb7f882212d070465df544e1175ac2be519b4', 'PYTHON_GET_PIP_URL': 'https://github.com/pypa/get-pip/raw/5eaac1050023df1f5c98b173b248c260023f2278/public/get-pip.py', 'PATH': '/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/usr/local/bin/pynguin'}
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakeGenerator.name).__module__}.{type(module_0.CMakeGenerator.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakeGenerator.toolset).__module__}.{type(module_0.CMakeGenerator.toolset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakeGenerator.description).__module__}.{type(module_0.CMakeGenerator.description).__qualname__}' == 'builtins.property'
    module_0.CMakeGenerator(float_0, float_0)

def test_case_9():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_10():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    c_make_platform_0.get_best_generator(c_make_platform_0, c_make_platform_0, c_make_platform_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    c_make_platform_0.get_best_generator(c_make_platform_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    str_0 = 'ERROR: Too many "{}" separat2rs providUd (expected at most {}).'
    c_make_platform_0.get_best_generator(str_0, cleanup=str_0, cmake_executable=str_0, cmake_args=str_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    c_make_platform_0 = module_0.CMakePlatform()
    assert f'{type(c_make_platform_0).__module__}.{type(c_make_platform_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakePlatform'
    assert module_0.test_folder == '_cmake_test_compile'
    assert f'{type(module_0.CMakePlatform.default_generators).__module__}.{type(module_0.CMakePlatform.default_generators).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakePlatform.generator_installation_help).__module__}.{type(module_0.CMakePlatform.generator_installation_help).__qualname__}' == 'builtins.property'
    none_type_0 = None
    var_0 = c_make_platform_0.get_best_generator(c_make_platform_0, c_make_platform_0, cleanup=none_type_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'skbuild.platform_specifics.abstract.CMakeGenerator'
    assert var_0.env == {'PYNGUIN_DANGER_AWARE': '', 'PYTHONUNBUFFERED': '1', 'HOSTNAME': 'bf88ab65620d', 'PYTHON_VERSION': '3.10.6', 'PYTHONHASHSEED': '0', 'PWD': '/pynguin', 'PYTHON_SETUPTOOLS_VERSION': '63.2.0', 'container': 'podman', 'HOME': '/root', 'LANG': 'C.UTF-8', 'GPG_KEY': 'A035C8C19219BA821ECEA86B64E628F8D684696D', 'TERM': 'xterm', 'SHLVL': '1', 'PYNGUIN_VERSION': '0.27.0', 'PYTHON_PIP_VERSION': '22.2.1', 'PYTHONDONTWRITEBYTECODE': '1', 'PYTHON_GET_PIP_SHA256': '5aefe6ade911d997af080b315ebcb7f882212d070465df544e1175ac2be519b4', 'PYTHON_GET_PIP_URL': 'https://github.com/pypa/get-pip/raw/5eaac1050023df1f5c98b173b248c260023f2278/public/get-pip.py', 'PATH': '/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', '_': '/usr/local/bin/pynguin'}
    assert f'{type(module_0.CMakeGenerator.name).__module__}.{type(module_0.CMakeGenerator.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakeGenerator.toolset).__module__}.{type(module_0.CMakeGenerator.toolset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.CMakeGenerator.description).__module__}.{type(module_0.CMakeGenerator.description).__qualname__}' == 'builtins.property'
    module_1.unique(c_make_platform_0)