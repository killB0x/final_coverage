# Automatically generated by Pynguin.
import pytest
import systematic.stats.network.lsof as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    lsof_stats_0 = module_0.LsofStats()
    assert module_0.LSOF_FIELDS == ('command', 'pid', 'user', 'fd', 'connection_type', 'device', 'offset', 'node', 'name')
    assert module_0.LsofStats.parser_name == 'lsof -nPi'
    lsof_stats_0.as_dict(lsof_stats_0)

def test_case_1():
    lsof_stats_0 = module_0.LsofStats()
    assert module_0.LSOF_FIELDS == ('command', 'pid', 'user', 'fd', 'connection_type', 'device', 'offset', 'node', 'name')
    assert module_0.LsofStats.parser_name == 'lsof -nPi'

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.LsofStatEntry(none_type_0, none_type_0, none_type_0, none_type_0, none_type_0, none_type_0, none_type_0, none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    lsof_stats_0 = module_0.LsofStats()
    assert module_0.LSOF_FIELDS == ('command', 'pid', 'user', 'fd', 'connection_type', 'device', 'offset', 'node', 'name')
    assert module_0.LsofStats.parser_name == 'lsof -nPi'
    lsof_stats_0.to_json()

@pytest.mark.xfail(strict=True)
def test_case_4():
    lsof_stats_0 = module_0.LsofStats()
    assert module_0.LSOF_FIELDS == ('command', 'pid', 'user', 'fd', 'connection_type', 'device', 'offset', 'node', 'name')
    assert module_0.LsofStats.parser_name == 'lsof -nPi'
    var_0 = lsof_stats_0.update_timestamp()
    lsof_stats_0.to_json()