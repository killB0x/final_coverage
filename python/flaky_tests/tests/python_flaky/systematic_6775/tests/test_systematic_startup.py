# Automatically generated by Pynguin.
import pytest
import systematic.startup as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = 'oo^iu|(b:'
    init_script_0 = module_0.InitScript(str_0, str_0, str_0, str_0)
    init_script_0.restart()

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b"\xc6\xdb\x1f\xa9\xfa\x0b\x1b\x9b\xf9\xf0'\x0e\xbd\xb0\xe7dK\x9e:L"
    init_script_0 = module_0.InitScript(bytes_0, bytes_0, bytes_0)
    init_script_0.restart()

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'HV|Q^op$\n43'
    bytes_0 = b"\xc6\xdb\x1f\xa9\xfa\x0b\x1b\x9b\xf9\xf0'\x0e\xbd\xb0\xe7dK\x9e:L"
    init_script_0 = module_0.InitScript(bytes_0, bytes_0, str_0)
    var_0 = init_script_0.status()
    init_script_0.fail()

def test_case_3():
    init_script_error_0 = module_0.InitScriptError()

def test_case_4():
    bytes_0 = b"\xc6\xdb\x1f\xa9\xfa\x0b\x1b\x9b\xf9\xf0'\x0e\xbd\xb0\xe7dK\x9e:L"
    init_script_0 = module_0.InitScript(bytes_0, bytes_0, bytes_0)
    var_0 = init_script_0.status()

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '/proc/cpuinfo'
    init_script_0 = module_0.InitScript(str_0, str_0, str_0)
    init_script_0.restart()

@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b'\x9e\xf5\xf8tr\xf7\x8dp\xb63\xee\xe6\t\x1f\xc8Q\x7f\x93C'
    set_0 = {bytes_0, bytes_0}
    none_type_0 = None
    init_script_0 = module_0.InitScript(bytes_0, set_0, none_type_0)
    init_script_0.ok()

@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"\xc6\xdb\x1f\xa9\xfa\x0b\x1b\x9b\xf9\xf0'\x0e\xbd\xb0\xe7dK\x9e:L"
    str_0 = 'gDa?i@SU 4r H'
    init_script_0 = module_0.InitScript(bytes_0, bytes_0, str_0)
    str_1 = ''
    init_script_0.error(str_1, str_1)

@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    str_0 = '_Xfs}i|x'
    none_type_1 = None
    init_script_0 = module_0.InitScript(str_0, str_0, str_0, str_0, none_type_1)
    init_script_0.error(none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    bytes_0 = b''
    str_0 = '/proc/cpuinfo'
    none_type_0 = None
    init_script_0 = module_0.InitScript(str_0, bytes_0, str_0)
    var_0 = init_script_0.ok(none_type_0)
    init_script_0.restart()

@pytest.mark.xfail(strict=True)
def test_case_10():
    bool_0 = True
    list_0 = [bool_0]
    bytes_0 = b'\xea\x06\xb8]\x82!\xbf\xfb\xff\xd0\xd7/\xd6,\x0f9'
    str_0 = 'gD(a?i@SU*4rH'
    init_script_0 = module_0.InitScript(bytes_0, bytes_0, str_0)
    var_0 = init_script_0.status()
    init_script_0.fail(list_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    bool_0 = True
    bytes_0 = b'G\xcd(Db'
    bytes_1 = b'\xd3\xf0\xd33\t\xb4\x01\xc8\xbeA\xc6h\xba\x81\x16\xdd'
    init_script_0 = module_0.InitScript(bytes_1, bytes_1, bytes_1, valid_commands=bytes_1)
    var_0 = init_script_0.status()
    init_script_1 = module_0.InitScript(bytes_1, bytes_0, bool_0, valid_commands=var_0)
    none_type_0 = None
    var_1 = init_script_0.fail(bytes_1, none_type_0)
    var_1.start()

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = 'HV|Q^op$\n43'
    bytes_0 = b"\xc6\xdb\x1f\xa9\xfa\x0b\x1b\x9b\xf9\xf0'\x0e\xbd\xb0\xe7dK\x9e:L"
    init_script_0 = module_0.InitScript(bytes_0, bytes_0, str_0)
    var_0 = init_script_0.status()
    var_1 = init_script_0.fail(exit=var_0)
    var_2 = init_script_0.status()
    init_script_0.restart()

@pytest.mark.xfail(strict=True)
def test_case_13():
    bool_0 = False
    bytes_0 = b'.'
    str_0 = 'gD(a?i@SU*4rH'
    init_script_0 = module_0.InitScript(bytes_0, bytes_0, str_0)
    init_script_error_0 = module_0.InitScriptError()
    var_0 = init_script_0.ok(bool_0)
    var_1 = init_script_0.status()
    init_script_0.restart()