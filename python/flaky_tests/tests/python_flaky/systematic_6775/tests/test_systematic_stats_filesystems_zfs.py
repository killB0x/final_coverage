# Automatically generated by Pynguin.
import pytest
import systematic.stats.filesystems.zfs as module_0

def test_case_0():
    z_f_s_stats_0 = module_0.ZFSStats()
    assert f'{type(z_f_s_stats_0.zpool_client).__module__}.{type(z_f_s_stats_0.zpool_client).__qualname__}' == 'systematic.filesystems.zfs.zpool.ZPoolClient'
    assert f'{type(z_f_s_stats_0.zfs_client).__module__}.{type(z_f_s_stats_0.zfs_client).__qualname__}' == 'systematic.filesystems.zfs.zfs.ZfsClient'
    assert module_0.ZFSStats.parser_name == 'zfs'
    assert f'{type(module_0.ZFSStats.zpools).__module__}.{type(module_0.ZFSStats.zpools).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ZFSStats.volumes).__module__}.{type(module_0.ZFSStats.volumes).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ZFSStats.snapshots).__module__}.{type(module_0.ZFSStats.snapshots).__qualname__}' == 'builtins.property'
    var_0 = z_f_s_stats_0.to_json()
    assert var_0 == '{\n  "timestamp": null,\n  "zpools": [],\n  "volumes": [],\n  "snapshots": []\n}'

def test_case_1():
    z_f_s_stats_0 = module_0.ZFSStats()
    assert f'{type(z_f_s_stats_0.zpool_client).__module__}.{type(z_f_s_stats_0.zpool_client).__qualname__}' == 'systematic.filesystems.zfs.zpool.ZPoolClient'
    assert f'{type(z_f_s_stats_0.zfs_client).__module__}.{type(z_f_s_stats_0.zfs_client).__qualname__}' == 'systematic.filesystems.zfs.zfs.ZfsClient'
    assert module_0.ZFSStats.parser_name == 'zfs'
    assert f'{type(module_0.ZFSStats.zpools).__module__}.{type(module_0.ZFSStats.zpools).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ZFSStats.volumes).__module__}.{type(module_0.ZFSStats.volumes).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ZFSStats.snapshots).__module__}.{type(module_0.ZFSStats.snapshots).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_2():
    z_f_s_stats_0 = module_0.ZFSStats()
    assert f'{type(z_f_s_stats_0.zpool_client).__module__}.{type(z_f_s_stats_0.zpool_client).__qualname__}' == 'systematic.filesystems.zfs.zpool.ZPoolClient'
    assert f'{type(z_f_s_stats_0.zfs_client).__module__}.{type(z_f_s_stats_0.zfs_client).__qualname__}' == 'systematic.filesystems.zfs.zfs.ZfsClient'
    assert module_0.ZFSStats.parser_name == 'zfs'
    assert f'{type(module_0.ZFSStats.zpools).__module__}.{type(module_0.ZFSStats.zpools).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ZFSStats.volumes).__module__}.{type(module_0.ZFSStats.volumes).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ZFSStats.snapshots).__module__}.{type(module_0.ZFSStats.snapshots).__qualname__}' == 'builtins.property'
    var_0 = z_f_s_stats_0.to_json()
    assert var_0 == '{\n  "timestamp": null,\n  "zpools": [],\n  "volumes": [],\n  "snapshots": []\n}'
    z_f_s_stats_0.update()