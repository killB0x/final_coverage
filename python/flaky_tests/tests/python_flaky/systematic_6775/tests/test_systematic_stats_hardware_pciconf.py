# Automatically generated by Pynguin.
import pytest
import systematic.stats.hardware.pciconf as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    p_c_i_conf_stats_0 = module_0.PCIConfStats()
    assert p_c_i_conf_stats_0.devices == []
    assert module_0.PCIConfStats.parser_name == 'pciconf'
    p_c_i_conf_stats_0.to_json()

def test_case_1():
    p_c_i_conf_stats_0 = module_0.PCIConfStats()
    assert p_c_i_conf_stats_0.devices == []
    assert module_0.PCIConfStats.parser_name == 'pciconf'
    var_0 = p_c_i_conf_stats_0.update_timestamp()
    var_1 = p_c_i_conf_stats_0.to_json(var_0)

def test_case_2():
    p_c_i_conf_stats_0 = module_0.PCIConfStats()
    assert p_c_i_conf_stats_0.devices == []
    assert module_0.PCIConfStats.parser_name == 'pciconf'

def test_case_3():
    str_0 = '9^G2.('
    p_c_i_device_0 = module_0.PCIDevice(str_0, str_0, str_0, str_0, str_0, str_0, str_0)
    assert p_c_i_device_0.info == {'device': None, 'vendor': None, 'class': None, 'subclass': None}
    assert p_c_i_device_0.driver == '9^G2.('

def test_case_4():
    str_0 = '9^G2.('
    p_c_i_device_0 = module_0.PCIDevice(str_0, str_0, str_0, str_0, str_0, str_0, str_0)
    assert p_c_i_device_0.info == {'device': None, 'vendor': None, 'class': None, 'subclass': None}
    assert p_c_i_device_0.driver == '9^G2.('
    var_0 = p_c_i_device_0.__repr__()
    assert var_0 == '9^G2.( driver 9^G2.('

def test_case_5():
    str_0 = '9^G2.('
    p_c_i_device_0 = module_0.PCIDevice(str_0, str_0, str_0, str_0, str_0, str_0, str_0)
    assert p_c_i_device_0.info == {'device': None, 'vendor': None, 'class': None, 'subclass': None}
    assert p_c_i_device_0.driver == '9^G2.('
    var_0 = p_c_i_device_0.to_json()