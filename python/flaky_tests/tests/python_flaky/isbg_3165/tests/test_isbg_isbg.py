# Automatically generated by Pynguin.
import pytest
import isbg.isbg as module_0
import email.charset as module_1
import codecs as module_2
import email._header_value_parser as module_3

def test_case_0():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'

def test_case_1():
    i_s_b_g_error_0 = module_0.ISBGError()
    assert f'{type(i_s_b_g_error_0).__module__}.{type(i_s_b_g_error_0).__qualname__}' == 'isbg.isbg.ISBGError'
    assert i_s_b_g_error_0.exitcode == 0
    assert i_s_b_g_error_0.message == ''
    assert module_0.xdg_cache_home == '/root/.cache'
    var_0 = module_1.add_charset(i_s_b_g_error_0, i_s_b_g_error_0)
    with pytest.raises(ValueError):
        module_0.ISBGError(var_0, i_s_b_g_error_0)

def test_case_2():
    i_s_b_g_error_0 = module_0.ISBGError()
    assert f'{type(i_s_b_g_error_0).__module__}.{type(i_s_b_g_error_0).__qualname__}' == 'isbg.isbg.ISBGError'
    assert i_s_b_g_error_0.exitcode == 0
    assert i_s_b_g_error_0.message == ''
    assert module_0.xdg_cache_home == '/root/.cache'

@pytest.mark.xfail(strict=True)
def test_case_3():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    module_2.getincrementalencoder(i_s_b_g_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    i_s_b_g_0.do_isbg()

@pytest.mark.xfail(strict=True)
def test_case_5():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    var_0 = i_s_b_g_0.removelock()
    i_s_b_g_1 = module_0.ISBG()
    assert i_s_b_g_1.maxsize == 120000
    assert i_s_b_g_1.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_1.partialrun == 50
    assert i_s_b_g_1.spamflagscmd == '+FLAGS.SILENT'
    var_1 = i_s_b_g_1.pastuid_read(i_s_b_g_1)
    assert i_s_b_g_1.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'
    i_s_b_g_0.do_isbg()

@pytest.mark.xfail(strict=True)
def test_case_6():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    i_s_b_g_1 = module_0.ISBG()
    assert i_s_b_g_1.maxsize == 120000
    assert i_s_b_g_1.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_1.partialrun == 50
    assert i_s_b_g_1.spamflagscmd == '+FLAGS.SILENT'
    incremental_decoder_0 = module_2.IncrementalDecoder()
    var_0 = i_s_b_g_1.removelock()
    var_1 = i_s_b_g_1.pastuid_read(i_s_b_g_1)
    assert i_s_b_g_1.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'
    i_s_b_g_1.do_isbg()

def test_case_7():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    var_0 = i_s_b_g_0.pastuid_read(i_s_b_g_0, i_s_b_g_0)
    assert i_s_b_g_0.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'

def test_case_8():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    var_0 = i_s_b_g_0.pastuid_read(i_s_b_g_0)
    assert i_s_b_g_0.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'
    i_s_b_g_1 = module_0.ISBG()
    assert i_s_b_g_1.maxsize == 120000
    assert i_s_b_g_1.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_1.partialrun == 50
    assert i_s_b_g_1.spamflagscmd == '+FLAGS.SILENT'

@pytest.mark.xfail(strict=True)
def test_case_9():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    i_s_b_g_1 = module_0.ISBG()
    assert i_s_b_g_1.maxsize == 120000
    assert i_s_b_g_1.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_1.partialrun == 50
    assert i_s_b_g_1.spamflagscmd == '+FLAGS.SILENT'
    none_type_0 = None
    var_0 = i_s_b_g_0.pastuid_read(none_type_0)
    assert i_s_b_g_0.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'
    i_s_b_g_error_0 = module_0.ISBGError()
    assert f'{type(i_s_b_g_error_0).__module__}.{type(i_s_b_g_error_0).__qualname__}' == 'isbg.isbg.ISBGError'
    assert i_s_b_g_error_0.exitcode == 0
    assert i_s_b_g_error_0.message == ''
    var_1 = i_s_b_g_1.pastuid_write(var_0, var_0, var_0)
    assert i_s_b_g_1.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'
    i_s_b_g_1.do_spamassassin()

@pytest.mark.xfail(strict=True)
def test_case_10():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    i_s_b_g_1 = module_0.ISBG()
    assert i_s_b_g_1.maxsize == 120000
    assert i_s_b_g_1.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_1.partialrun == 50
    assert i_s_b_g_1.spamflagscmd == '+FLAGS.SILENT'
    i_s_b_g_2 = module_0.ISBG()
    assert i_s_b_g_2.maxsize == 120000
    assert i_s_b_g_2.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_2.partialrun == 50
    assert i_s_b_g_2.spamflagscmd == '+FLAGS.SILENT'
    var_0 = i_s_b_g_2.pastuid_read(i_s_b_g_2)
    assert i_s_b_g_2.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'
    var_1 = i_s_b_g_2.pastuid_write(var_0, var_0, var_0)
    i_s_b_g_2.do_isbg()

@pytest.mark.xfail(strict=True)
def test_case_11():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    i_s_b_g_0.do_isbg()

@pytest.mark.xfail(strict=True)
def test_case_12():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    i_s_b_g_0.do_spamassassin()

@pytest.mark.xfail(strict=True)
def test_case_13():
    none_type_0 = None
    var_0 = module_3.get_address_list(none_type_0)
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    i_s_b_g_0.do_imap_logout()

@pytest.mark.xfail(strict=True)
def test_case_14():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    i_s_b_g_1 = module_0.ISBG()
    assert i_s_b_g_1.maxsize == 120000
    assert i_s_b_g_1.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_1.partialrun == 50
    assert i_s_b_g_1.spamflagscmd == '+FLAGS.SILENT'
    var_0 = i_s_b_g_0.pastuid_read(i_s_b_g_0)
    assert i_s_b_g_0.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'
    var_1 = i_s_b_g_0.pastuid_write(var_0, var_0, var_0)
    var_2 = i_s_b_g_1.pastuid_read(var_0)
    assert i_s_b_g_1.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'
    var_1.formatmonthname(var_1, var_2, i_s_b_g_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    var_0 = i_s_b_g_0.pastuid_read(i_s_b_g_0)
    assert i_s_b_g_0.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'
    i_s_b_g_0.do_isbg()

@pytest.mark.xfail(strict=True)
def test_case_16():
    i_s_b_g_0 = module_0.ISBG()
    assert f'{type(i_s_b_g_0).__module__}.{type(i_s_b_g_0).__qualname__}' == 'isbg.isbg.ISBG'
    assert f'{type(i_s_b_g_0.imapsets).__module__}.{type(i_s_b_g_0.imapsets).__qualname__}' == 'isbg.imaputils.ImapSettings'
    assert i_s_b_g_0.imap is None
    assert f'{type(i_s_b_g_0.logger).__module__}.{type(i_s_b_g_0.logger).__qualname__}' == 'logging.Logger'
    assert i_s_b_g_0.imaplist is False
    assert i_s_b_g_0.nostats is False
    assert i_s_b_g_0.noreport is False
    assert i_s_b_g_0.exitcodes is True
    assert i_s_b_g_0.verbose_mails is False
    assert i_s_b_g_0.dryrun is False
    assert i_s_b_g_0.maxsize == 120000
    assert i_s_b_g_0.teachonly is False
    assert i_s_b_g_0.spamc is False
    assert i_s_b_g_0.gmail is False
    assert i_s_b_g_0.movehamto is None
    assert i_s_b_g_0.delete is False
    assert i_s_b_g_0.deletehigherthan is None
    assert i_s_b_g_0.flag is False
    assert i_s_b_g_0.expunge is False
    assert i_s_b_g_0.learnflagged is False
    assert i_s_b_g_0.learnunflagged is False
    assert i_s_b_g_0.learnthendestroy is False
    assert i_s_b_g_0.learnthenflag is False
    assert i_s_b_g_0.ignorelockfile is False
    assert i_s_b_g_0.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_0.lockfilegrace == pytest.approx(240.0, abs=0.01, rel=0.01)
    assert i_s_b_g_0.passwdfilename is None
    assert i_s_b_g_0.savepw is False
    assert i_s_b_g_0.trackfile is None
    assert i_s_b_g_0.partialrun == 50
    assert i_s_b_g_0.interactive is False
    assert i_s_b_g_0.spamflagscmd == '+FLAGS.SILENT'
    assert i_s_b_g_0.spamflags == []
    assert module_0.xdg_cache_home == '/root/.cache'
    assert f'{type(module_0.ISBG.verbose).__module__}.{type(module_0.ISBG.verbose).__qualname__}' == 'builtins.property'
    i_s_b_g_1 = module_0.ISBG()
    assert i_s_b_g_1.maxsize == 120000
    assert i_s_b_g_1.lockfilename == '/root/.cache/isbg/lock'
    assert i_s_b_g_1.partialrun == 50
    assert i_s_b_g_1.spamflagscmd == '+FLAGS.SILENT'
    var_0 = module_0.ISBG()
    assert var_0.maxsize == 120000
    assert var_0.lockfilename == '/root/.cache/isbg/lock'
    assert var_0.partialrun == 50
    assert var_0.spamflagscmd == '+FLAGS.SILENT'
    var_1 = i_s_b_g_1.pastuid_read(i_s_b_g_1)
    assert i_s_b_g_1.trackfile == '/root/.cache/isbg/track56fdd686137c8645d44024096a0ed441'
    var_2 = i_s_b_g_1.pastuid_read(i_s_b_g_0)
    var_1.__complex__()