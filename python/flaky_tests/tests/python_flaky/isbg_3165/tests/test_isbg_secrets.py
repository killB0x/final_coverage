# Automatically generated by Pynguin.
import pytest
import isbg.secrets as module_0
import builtins as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x88-'"
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0, bytes_0)
    assert f'{type(secret_isbg_0).__module__}.{type(secret_isbg_0).__qualname__}' == 'isbg.secrets.SecretIsbg'
    assert secret_isbg_0.filename == b"\x88-'"
    assert secret_isbg_0.imapset == b"\x88-'"
    assert secret_isbg_0.hashlen == b"\x88-'"
    secret_isbg_0.set(secret_isbg_0, secret_isbg_0, secret_isbg_0)

def test_case_1():
    bytes_0 = b"\x88-'"
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0, bytes_0)
    assert f'{type(secret_isbg_0).__module__}.{type(secret_isbg_0).__qualname__}' == 'isbg.secrets.SecretIsbg'
    assert secret_isbg_0.filename == b"\x88-'"
    assert secret_isbg_0.imapset == b"\x88-'"
    assert secret_isbg_0.hashlen == b"\x88-'"
    secret_isbg_0.get(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    secret_isbg_0 = module_0.SecretIsbg(none_type_0, none_type_0, none_type_0)
    assert f'{type(secret_isbg_0).__module__}.{type(secret_isbg_0).__qualname__}' == 'isbg.secrets.SecretIsbg'
    assert secret_isbg_0.filename is None
    assert secret_isbg_0.imapset is None
    assert secret_isbg_0.hashlen is None
    secret_isbg_0.delete(none_type_0)

def test_case_3():
    int_0 = -1768
    secret_0 = module_0.Secret(int_0)
    assert secret_0.hashlen == 256
    var_0 = secret_0.delete(secret_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\x88-'"
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0, bytes_0)
    assert f'{type(secret_isbg_0).__module__}.{type(secret_isbg_0).__qualname__}' == 'isbg.secrets.SecretIsbg'
    assert secret_isbg_0.filename == b"\x88-'"
    assert secret_isbg_0.imapset == b"\x88-'"
    assert secret_isbg_0.hashlen == b"\x88-'"
    secret_isbg_0.delete(secret_isbg_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    none_type_1 = None
    secret_isbg_0 = module_0.SecretIsbg(none_type_0, none_type_0)
    assert secret_isbg_0.filename is None
    assert secret_isbg_0.imapset is None
    assert secret_isbg_0.hashlen == 256
    secret_isbg_0.set(none_type_1, none_type_1, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b'Ys\x99\x83\x91\xd9\xd1'
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0)
    assert secret_isbg_0.filename == b'Ys\x99\x83\x91\xd9\xd1'
    assert secret_isbg_0.imapset == b'Ys\x99\x83\x91\xd9\xd1'
    assert secret_isbg_0.hashlen == 256
    secret_isbg_0.get(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b"-'"
    secret_0 = module_0.Secret(bytes_0)
    assert secret_0.hashlen == 256
    var_0 = secret_0.get(secret_0)
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0, bytes_0)
    assert f'{type(secret_isbg_0).__module__}.{type(secret_isbg_0).__qualname__}' == 'isbg.secrets.SecretIsbg'
    assert secret_isbg_0.filename == b"-'"
    assert secret_isbg_0.imapset == b"-'"
    assert secret_isbg_0.hashlen == b"-'"
    secret_isbg_0.set(bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b'-'
    secret_0 = module_0.Secret(bytes_0)
    assert secret_0.hashlen == 256
    var_0 = secret_0.set(secret_0, secret_0)
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0)
    assert secret_isbg_0.filename == b'-'
    assert secret_isbg_0.imapset == b'-'
    assert secret_isbg_0.hashlen == 256
    secret_isbg_0.delete(bytes_0)

def test_case_9():
    bytes_0 = b"\x88-'"
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0)
    assert secret_isbg_0.filename == b"\x88-'"
    assert secret_isbg_0.imapset == b"\x88-'"
    assert secret_isbg_0.hashlen == 256
    with pytest.raises(ValueError):
        secret_isbg_0.delete(bytes_0)

def test_case_10():
    bytes_0 = b"\x88-'"
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0, bytes_0)
    assert f'{type(secret_isbg_0).__module__}.{type(secret_isbg_0).__qualname__}' == 'isbg.secrets.SecretIsbg'
    assert secret_isbg_0.filename == b"\x88-'"
    assert secret_isbg_0.imapset == b"\x88-'"
    assert secret_isbg_0.hashlen == b"\x88-'"
    set_0 = {secret_isbg_0, secret_isbg_0, bytes_0, secret_isbg_0}
    secret_isbg_0.delete(set_0)

def test_case_11():
    bytes_0 = b"\x88-'"
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0)
    assert secret_isbg_0.filename == b"\x88-'"
    assert secret_isbg_0.imapset == b"\x88-'"
    assert secret_isbg_0.hashlen == 256
    none_type_0 = None
    str_0 = "^Q'Jw'J.4\x0b"
    var_0 = secret_isbg_0.set(str_0, str_0)
    var_1 = secret_isbg_0.set(str_0, none_type_0)
    var_2 = secret_isbg_0.get(str_0)
    var_3 = secret_isbg_0.delete(str_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    bytes_0 = b"\x88-'"
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0)
    assert secret_isbg_0.filename == b"\x88-'"
    assert secret_isbg_0.imapset == b"\x88-'"
    assert secret_isbg_0.hashlen == 256
    str_0 = "^Q'Jw'J.4\x0b"
    var_0 = secret_isbg_0.set(str_0, str_0)
    var_1 = secret_isbg_0.set(str_0, var_0)
    module_1.ValueError(*secret_isbg_0)

def test_case_13():
    bytes_0 = b"\x88-'"
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0)
    assert secret_isbg_0.filename == b"\x88-'"
    assert secret_isbg_0.imapset == b"\x88-'"
    assert secret_isbg_0.hashlen == 256
    none_type_0 = None
    str_0 = "^Q'Jw'J.4\x0b"
    var_0 = secret_isbg_0.set(str_0, str_0)
    var_1 = secret_isbg_0.set(str_0, none_type_0)
    var_2 = secret_isbg_0.delete(str_0)

def test_case_14():
    bytes_0 = b'\x88\xbd\xdc'
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0)
    assert secret_isbg_0.filename == b'\x88\xbd\xdc'
    assert secret_isbg_0.imapset == b'\x88\xbd\xdc'
    assert secret_isbg_0.hashlen == 256
    none_type_0 = None
    str_0 = "^Q'Jw'J.4\x0b"
    var_0 = secret_isbg_0.set(str_0, str_0)
    var_1 = secret_isbg_0.set(str_0, none_type_0)
    var_2 = secret_isbg_0.get(str_0)
    var_3 = secret_isbg_0.delete(str_0)

def test_case_15():
    bytes_0 = b"\x88-'"
    secret_isbg_0 = module_0.SecretIsbg(bytes_0, bytes_0)
    assert secret_isbg_0.filename == b"\x88-'"
    assert secret_isbg_0.imapset == b"\x88-'"
    assert secret_isbg_0.hashlen == 256
    none_type_0 = None
    str_0 = "^Q'Jw'J.4\x0b"
    var_0 = secret_isbg_0.set(str_0, none_type_0, none_type_0)