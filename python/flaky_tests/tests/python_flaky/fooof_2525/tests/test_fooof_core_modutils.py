# Automatically generated by Pynguin.
import pytest
import fooof.core.modutils as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.safe_import()

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '*7g;zgX?},m'
    var_0 = module_0.docs_append_to_section(str_0, str_0, str_0)
    assert var_0 == '*7g;zgX?},m*7g;zgX?},m'
    var_1 = module_0.copy_doc_class(str_0, add=var_0)
    var_2 = module_0.copy_doc_func_to_method(str_0)
    module_0.docs_drop_param(var_1)

@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 0.45
    none_type_0 = None
    module_0.docs_append_to_section(float_0, none_type_0, none_type_0)

def test_case_3():
    str_0 = '*7g;zgX?},m'
    var_0 = module_0.copy_doc_func_to_method(str_0)

def test_case_4():
    bool_0 = True
    var_0 = module_0.check_dependency(bool_0, bool_0)
    set_0 = {bool_0, var_0, bool_0, var_0}
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: set_0}
    var_1 = module_0.check_dependency(dict_0, dict_0)

def test_case_5():
    str_0 = '*g;7D\r?},m'
    var_0 = module_0.docs_drop_param(str_0)
    assert var_0 == '*g;7D\r?},m'

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'shade'
    str_1 = 'shad'
    var_0 = module_0.docs_append_to_section(str_1, str_0, str_0)
    assert var_0 == 'shad'
    bool_0 = False
    var_1 = module_0.copy_doc_func_to_method(bool_0)
    var_2 = module_0.copy_doc_func_to_method(bool_0)
    var_3 = module_0.check_dependency(var_2, var_2)
    var_4 = module_0.copy_doc_func_to_method(var_3)
    module_0.safe_import()

def test_case_7():
    str_0 = 'T3>|-/3Qbq9Bdj'
    var_0 = module_0.docs_drop_param(str_0)
    assert var_0 == 'T3>|-/3Qbq9Bdj'
    var_1 = module_0.docs_append_to_section(var_0, var_0, str_0)
    assert var_1 == 'T3>|-/3Qbq9BdjT3>|-/3Qbq9Bdj'
    set_0 = {str_0, var_1}
    var_2 = module_0.copy_doc_class(set_0, add=var_1)
    bool_0 = False
    var_3 = module_0.check_dependency(bool_0, str_0)
    none_type_0 = None
    var_4 = module_0.safe_import(*set_0)
    assert var_4 is False
    var_5 = module_0.check_dependency(none_type_0, var_2)