# Automatically generated by Pynguin.
import pytest
import butter.mas.clients.client as module_0

def test_case_0():
    str_0 = '5Gb'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.getAvailableSounds()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_1 = client_0.getAvailableAnimations(str_0)
    var_2 = client_0.getAvailableHandlers()
    var_3 = client_0.playAudio(client_0)
    var_4 = client_0.pauseAnimation()
    var_5 = client_0.moveMotorInDirection(var_0, str_0, var_1)

def test_case_1():
    str_0 = ''
    none_type_0 = None
    client_0 = module_0.Client(none_type_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.getAvailableAnimations(none_type_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    client_1 = module_0.Client(str_0, none_type_0)
    var_1 = client_1.playAnimation(var_0)
    var_2 = client_1.playAudio(client_0)
    var_3 = client_0.moveMotorInDirection(var_0, str_0, var_1)

def test_case_2():
    str_0 = '5eb'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.getAvailableSounds(str_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_1 = client_0.moveMotorInTime(client_0, var_0, var_0)
    var_2 = client_0.getAvailableHandlers()
    var_3 = client_0.pauseAnimation()
    var_4 = client_0.moveMotorInDirection(var_1, str_0, var_1)

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'B'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.getAvailableSounds()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_0.pauseAnimation()

def test_case_4():
    none_type_0 = None
    client_0 = module_0.Client(none_type_0)
    assert client_0.port == 5555
    assert client_0.protocol == 'http'

def test_case_5():
    str_0 = '5Gb'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.getAvailableHandlers()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_1 = client_0.moveMotorInDirection(client_0, str_0, client_0)

def test_case_6():
    str_0 = '5eT'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.getAvailableMotorRegisters(str_0, str_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_1 = client_0.stopAudio()
    var_2 = client_0.moveMotorInDirection(var_0, str_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '/FHdIc\t%x2/I$YEl4A)'
    set_0 = {str_0, str_0, str_0, str_0}
    none_type_0 = None
    client_0 = module_0.Client(none_type_0)
    assert client_0.port == 5555
    assert client_0.protocol == 'http'
    var_0 = client_0.pauseAudio()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_1 = client_0.getMotorRegisterRange(none_type_0, none_type_0)
    client_1 = module_0.Client(str_0, protocol=str_0)
    assert client_1.port == 5555
    var_2 = client_0.getAvailableSounds(set_0)
    client_1.getMotorRegisterRange(set_0, none_type_0)

def test_case_8():
    str_0 = '5Gb'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.setMotorRegister(client_0, client_0, str_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_1 = client_0.moveMotorInDirection(client_0, str_0, client_0)

def test_case_9():
    str_0 = '5Gb'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.moveMotorInDirection(client_0, str_0, client_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    tuple_0 = (var_0, client_0)
    var_1 = client_0.moveMotorToPosition(client_0, client_0, tuple_0)

def test_case_10():
    str_0 = 'Br'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.getAvailableSounds()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    client_1 = module_0.Client(str_0, var_0)
    var_1 = client_1.moveMotorInTime(client_0, client_0, var_0)
    var_2 = client_0.moveMotorInDirection(var_0, str_0, var_1)

def test_case_11():
    str_0 = '/fhdic\tx2/i$yel"4a])'
    none_type_0 = None
    client_0 = module_0.Client(none_type_0, none_type_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.playAnimation(str_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_1 = client_0.moveMotorInDirection(none_type_0, str_0, var_0)

def test_case_12():
    none_type_0 = None
    client_0 = module_0.Client(none_type_0)
    assert client_0.port == 5555
    assert client_0.protocol == 'http'
    var_0 = client_0.pauseAnimation()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'

def test_case_13():
    str_0 = '5Gb'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.resumeAnimation()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_1 = client_0.resumeAnimation()
    var_2 = client_0.moveMotorInDirection(client_0, str_0, client_0)

def test_case_14():
    str_0 = "(/'SIL\rx&?XBK;\\qA,8"
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.getAvailableSounds()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    none_type_0 = None
    var_1 = client_0.stopAnimation()
    var_2 = client_0.moveMotorInDirection(none_type_0, str_0, var_1)

def test_case_15():
    str_0 = 'B'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.getAvailableSounds()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    none_type_0 = None
    var_1 = client_0.playAudio(client_0)
    client_1 = module_0.Client(str_0, none_type_0)
    var_2 = client_0.playAnimation(str_0)
    var_3 = client_0.moveMotorInDirection(none_type_0, str_0, var_2)

@pytest.mark.xfail(strict=True)
def test_case_16():
    none_type_0 = None
    client_0 = module_0.Client(none_type_0, protocol=none_type_0)
    assert client_0.port == 5555
    client_0.pauseAudio()

def test_case_17():
    str_0 = '5Gb'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.resumeAudio()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_1 = client_0.getAvailableHandlers()
    var_2 = client_0.playAnimation(str_0)
    var_3 = client_0.moveMotorInDirection(var_0, str_0, var_2)

def test_case_18():
    str_0 = '5Gb'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.getMotorRegister(client_0, str_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'
    var_1 = client_0.moveMotorInDirection(var_0, str_0, var_0)

def test_case_19():
    str_0 = '5Gb'
    client_0 = module_0.Client(str_0, str_0)
    assert client_0.protocol == 'http'
    var_0 = client_0.moveMotorInDirection(client_0, str_0, client_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 400
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 0
    assert var_0.raw is None
    assert var_0.url is None
    assert var_0.encoding is None
    assert var_0.history == []
    assert var_0.reason is None
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert var_0.request is None
    assert var_0.code == 'expired'
    assert var_0.error_type == 'expired'