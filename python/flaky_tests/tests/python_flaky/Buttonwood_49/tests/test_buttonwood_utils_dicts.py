# Automatically generated by Pynguin.
import pytest
import buttonwood.utils.dicts as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    n_deep_dict_0 = module_0.NDeepDict(bool_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    n_deep_dict_0.__contains__(n_deep_dict_0)

def test_case_1():
    float_0 = 1065.8824850782414
    n_deep_dict_0 = module_0.NDeepDict(float_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    var_0 = n_deep_dict_0.__contains__(float_0)
    assert var_0 is False
    var_1 = n_deep_dict_0.get(var_0)
    with pytest.raises(AssertionError):
        module_0.NDeepDict(var_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    list_0 = []
    int_0 = 1
    n_deep_dict_0 = module_0.NDeepDict(int_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    n_deep_dict_0.__getitem__(list_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    n_deep_dict_0 = module_0.NDeepDict(bool_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    n_deep_dict_0.__getitem__(n_deep_dict_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    n_deep_dict_0 = module_0.NDeepDict(bool_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    n_deep_dict_0.__setitem__(n_deep_dict_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = 4457.06
    n_deep_dict_0 = module_0.NDeepDict(float_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    none_type_0 = None
    n_deep_dict_0.__delitem__(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = '\n        Returns the name of the OrderLevelBook instance.\n\n        :return: str\n        '
    module_0.NDeepDict(str_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 317
    list_0 = []
    n_deep_dict_0 = module_0.NDeepDict(int_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    n_deep_dict_0.__contains__(list_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = True
    n_deep_dict_0 = module_0.NDeepDict(bool_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    var_0 = n_deep_dict_0.get(bool_0)
    n_deep_dict_0.__contains__(n_deep_dict_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    float_0 = 1024.9522377292583
    n_deep_dict_0 = module_0.NDeepDict(float_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    var_0 = n_deep_dict_0.__getitem__(float_0)
    assert len(n_deep_dict_0) == 1
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(var_0) == 0
    none_type_0 = None
    n_deep_dict_1 = module_0.NDeepDict(float_0)
    var_1 = n_deep_dict_1.__contains__(float_0)
    assert var_1 is False
    var_2 = var_0.__getitem__(none_type_0)
    list_0 = [float_0]
    var_3 = n_deep_dict_0.__delitem__(list_0)
    assert len(n_deep_dict_0) == 0
    var_4 = n_deep_dict_0.get(list_0)
    var_3.__delitem__(list_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    float_0 = 1065.8824850782414
    n_deep_dict_0 = module_0.NDeepDict(float_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    list_0 = [float_0, float_0]
    var_0 = n_deep_dict_0.__contains__(list_0)
    assert var_0 is False
    var_0.__getitem__(var_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    int_0 = 317
    list_0 = []
    n_deep_dict_0 = module_0.NDeepDict(int_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    n_deep_dict_0.__delitem__(list_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    n_deep_dict_0 = module_0.NDeepDict(bool_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    n_deep_dict_0.get(list_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    int_0 = -1258
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    int_1 = 735
    n_deep_dict_0 = module_0.NDeepDict(int_1)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    var_0 = n_deep_dict_0.__getitem__(list_0)
    assert len(n_deep_dict_0) == 1
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(var_0) == 0
    var_0.__delitem__(int_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    int_0 = 735
    n_deep_dict_0 = module_0.NDeepDict(int_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    var_0 = n_deep_dict_0.__setitem__(list_0, list_0)
    assert len(n_deep_dict_0) == 1
    var_0.__contains__(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    float_0 = 1002.3255967933142
    n_deep_dict_0 = module_0.NDeepDict(float_0)
    assert f'{type(n_deep_dict_0).__module__}.{type(n_deep_dict_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(n_deep_dict_0) == 0
    var_0 = n_deep_dict_0.__getitem__(float_0)
    assert len(n_deep_dict_0) == 1
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'buttonwood.utils.dicts.NDeepDict'
    assert len(var_0) == 0
    none_type_0 = None
    n_deep_dict_1 = module_0.NDeepDict(float_0)
    var_1 = n_deep_dict_1.__contains__(float_0)
    assert var_1 is False
    var_2 = var_0.__getitem__(none_type_0)
    list_0 = [float_0, float_0, n_deep_dict_0]
    var_3 = n_deep_dict_0.__contains__(list_0)
    assert var_3 is False
    n_deep_dict_0.__delitem__(list_0)