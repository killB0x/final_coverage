# Automatically generated by Pynguin.
import pytest
import buttonwood.MarketMetrics.MicroPrice as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    var_0 = module_0.size_weighted_midpoint(bool_0, bool_0, bool_0, bool_0)
    bool_1 = True
    var_1 = module_0.size_weighted_midpoint_from_price_levels(var_0, bool_1)
    bytes_0 = b're\x9d\xdf\xcc\xa7\xc2\xe4\x0bw\xb4D'
    tuple_0 = (bytes_0, var_0)
    module_0.size_weighted_midpoint(var_0, bool_0, var_0, tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'V7\x0c7?'
    module_0.size_weighted_midpoint(str_0, str_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b'[<\xf6\x8aQZ\xa6 "Iy\xe5\xdd\xd4'
    none_type_0 = None
    var_0 = module_0.size_weighted_midpoint_from_price_levels(bytes_0, none_type_0)
    str_0 = '\n        Tells if you the Quote is a buy or not\n  \n        :return: bool\n        '
    var_1 = module_0.size_weighted_midpoint_from_price_levels(var_0, str_0)
    bool_0 = True
    str_1 = 'wc7v:"'
    module_0.size_weighted_midpoint_from_price_levels(str_1, str_1, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '\n        Gets the visible quantity at the price fr the given side.\n\n        :param ide: MarketObjects.Side.Side\n        :param price: MarketObjects.Price.Price\n        :return: int\n        '
    module_0.size_weighted_midpoint_from_price_levels(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 16
    none_type_0 = None
    var_0 = module_0.size_weighted_midpoint_from_price_levels(int_0, none_type_0)
    module_0.size_weighted_midpoint_from_price_levels(int_0, int_0)