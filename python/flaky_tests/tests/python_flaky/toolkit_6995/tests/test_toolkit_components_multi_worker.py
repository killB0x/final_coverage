# Automatically generated by Pynguin.
import pytest
import toolkit.components.multi_worker as module_0

def test_case_0():
    bool_0 = False
    multi_thread_worker_0 = module_0.MultiThreadWorker(bool_0, bool_0, bool_0)
    assert multi_thread_worker_0.max_worker_count is False

def test_case_1():
    none_type_0 = None
    multi_process_worker_0 = module_0.MultiProcessWorker(none_type_0, none_type_0, none_type_0)
    assert f'{type(multi_process_worker_0).__module__}.{type(multi_process_worker_0).__qualname__}' == 'toolkit.components.multi_worker.MultiProcessWorker'
    assert multi_process_worker_0.generator is None
    assert multi_process_worker_0.target is None
    assert multi_process_worker_0.start is False
    assert module_0.MultiProcessWorker.max_worker_count == 48

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    multi_thread_worker_0 = module_0.MultiThreadWorker(bool_0, bool_0, bool_0)
    assert multi_thread_worker_0.max_worker_count is True
    var_0 = multi_thread_worker_0.process()
    multi_thread_worker_0.run()

def test_case_3():
    none_type_0 = None
    multi_process_worker_0 = module_0.MultiProcessWorker(none_type_0, none_type_0, none_type_0)
    assert f'{type(multi_process_worker_0).__module__}.{type(multi_process_worker_0).__qualname__}' == 'toolkit.components.multi_worker.MultiProcessWorker'
    assert multi_process_worker_0.generator is None
    assert multi_process_worker_0.target is None
    assert multi_process_worker_0.start is False
    assert module_0.MultiProcessWorker.max_worker_count == 48
    var_0 = multi_process_worker_0.process()

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'Ud:Vo'
    none_type_0 = None
    multi_process_worker_0 = module_0.MultiProcessWorker(str_0, none_type_0, none_type_0)
    assert f'{type(multi_process_worker_0).__module__}.{type(multi_process_worker_0).__qualname__}' == 'toolkit.components.multi_worker.MultiProcessWorker'
    assert multi_process_worker_0.generator == 'Ud:Vo'
    assert multi_process_worker_0.target is None
    assert multi_process_worker_0.start is False
    assert module_0.MultiProcessWorker.max_worker_count == 48
    multi_process_worker_0.run()

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'Ud:Vo'
    none_type_0 = None
    multi_thread_worker_0 = module_0.MultiThreadWorker(str_0, str_0, none_type_0)
    assert f'{type(multi_thread_worker_0).__module__}.{type(multi_thread_worker_0).__qualname__}' == 'toolkit.components.multi_worker.MultiThreadWorker'
    assert multi_thread_worker_0.generator == 'Ud:Vo'
    assert multi_thread_worker_0.target == 'Ud:Vo'
    assert multi_thread_worker_0.start is False
    var_0 = multi_thread_worker_0.run()
    var_0.join(multi_thread_worker_0)