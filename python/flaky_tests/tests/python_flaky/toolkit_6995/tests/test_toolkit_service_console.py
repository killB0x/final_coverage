# Automatically generated by Pynguin.
import pytest
import toolkit.service.console as module_0
import code as module_1
import builtins as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    threaded_stream_0 = module_0.ThreadedStream()
    assert threaded_stream_0.mode == 'w'
    assert f"{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__module__}.{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__qualname__}" == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.v == 'v'
    assert threaded_stream_0.:b7`>| == "4'-2l64|Yq"
    assert threaded_stream_0.B.h+d0ef is None
    assert f'{type(threaded_stream_0.).__module__}.{type(threaded_stream_0.).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.
iB&ibyh6[pp&oPs
 == '\niB&ibyh6[pp&oPs\n'
    assert threaded_stream_0.X5{k4y|
2|-%6^* == 'X5{\rk4y|\n2|-%6^*'
    assert threaded_stream_0.tG]sYF == 'tG]sYF'
    assert threaded_stream_0.l,A1BS0,[~T)/ == {'\x0bl,A1BS0,[~T)/'}
    assert threaded_stream_0.	!Goe+@Gw],b~xll == '\t!Goe+@Gw],b~xll'
    assert threaded_stream_0.70nFR2!9M == '70\rnFR2!9M'
    assert f"""{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__module__}.{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__qualname__}""" == 'builtins.list'
    assert len(threaded_stream_0.Zw(ia]qD
`'/;Lld) == 1
    assert f'{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__module__}.{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert f"""{type(threaded_stream_0.
iQy[pbp&os
).__module__}.{type(threaded_stream_0.
iQy[pbp&os
).__qualname__}""" == 'toolkit.service.console.StringO'
    assert threaded_stream_0.Qb,[pbno
 is None
    assert f'{type(threaded_stream_0.e20).__module__}.{type(threaded_stream_0.e20).__qualname__}' == 'toolkit.service.console.ThreadedStream'
    assert threaded_stream_0.v>ILw: == b''
    assert threaded_stream_0.n == 'n'
    assert threaded_stream_0.keys == pytest.approx(-25.6, abs=0.01, rel=0.01)
    var_0 = threaded_stream_0.__dir__()
    var_1 = threaded_stream_0.__dir__()
    var_2 = threaded_stream_0.__dir__()
    string_o_0 = module_0.StringO()
    var_3 = string_o_0.readline()
    assert var_3 == ''
    var_3.__getattribute__(threaded_stream_0)

def test_case_1():
    string_o_0 = module_0.StringO()
    var_0 = string_o_0.seek(string_o_0)
    var_1 = string_o_0.write(string_o_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    threaded_stream_0 = module_0.ThreadedStream()
    assert threaded_stream_0.mode == 'w'
    assert f"{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__module__}.{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__qualname__}" == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.v == 'v'
    assert threaded_stream_0.:b7`>| == "4'-2l64|Yq"
    assert threaded_stream_0.B.h+d0ef is None
    assert f'{type(threaded_stream_0.).__module__}.{type(threaded_stream_0.).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.
iB&ibyh6[pp&oPs
 == '\niB&ibyh6[pp&oPs\n'
    assert threaded_stream_0.X5{k4y|
2|-%6^* == 'X5{\rk4y|\n2|-%6^*'
    assert threaded_stream_0.tG]sYF == 'tG]sYF'
    assert threaded_stream_0.l,A1BS0,[~T)/ == {'\x0bl,A1BS0,[~T)/'}
    assert threaded_stream_0.	!Goe+@Gw],b~xll == '\t!Goe+@Gw],b~xll'
    assert threaded_stream_0.70nFR2!9M == '70\rnFR2!9M'
    assert f"""{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__module__}.{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__qualname__}""" == 'builtins.list'
    assert len(threaded_stream_0.Zw(ia]qD
`'/;Lld) == 1
    assert f'{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__module__}.{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert f"""{type(threaded_stream_0.
iQy[pbp&os
).__module__}.{type(threaded_stream_0.
iQy[pbp&os
).__qualname__}""" == 'toolkit.service.console.StringO'
    assert threaded_stream_0.Qb,[pbno
 is None
    assert f'{type(threaded_stream_0.e20).__module__}.{type(threaded_stream_0.e20).__qualname__}' == 'toolkit.service.console.ThreadedStream'
    assert threaded_stream_0.v>ILw: == b''
    assert threaded_stream_0.n == 'n'
    assert threaded_stream_0.keys == pytest.approx(-25.6, abs=0.01, rel=0.01)
    threaded_stream_0.fetch()

def test_case_3():
    threaded_stream_0 = module_0.ThreadedStream()
    assert threaded_stream_0.mode == 'w'
    assert f"{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__module__}.{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__qualname__}" == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.v == 'v'
    assert threaded_stream_0.:b7`>| == "4'-2l64|Yq"
    assert threaded_stream_0.B.h+d0ef is None
    assert f'{type(threaded_stream_0.).__module__}.{type(threaded_stream_0.).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.
iB&ibyh6[pp&oPs
 == '\niB&ibyh6[pp&oPs\n'
    assert threaded_stream_0.X5{k4y|
2|-%6^* == 'X5{\rk4y|\n2|-%6^*'
    assert threaded_stream_0.tG]sYF == 'tG]sYF'
    assert threaded_stream_0.l,A1BS0,[~T)/ == {'\x0bl,A1BS0,[~T)/'}
    assert threaded_stream_0.	!Goe+@Gw],b~xll == '\t!Goe+@Gw],b~xll'
    assert threaded_stream_0.70nFR2!9M == '70\rnFR2!9M'
    assert f"""{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__module__}.{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__qualname__}""" == 'builtins.list'
    assert len(threaded_stream_0.Zw(ia]qD
`'/;Lld) == 1
    assert f'{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__module__}.{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert f"""{type(threaded_stream_0.
iQy[pbp&os
).__module__}.{type(threaded_stream_0.
iQy[pbp&os
).__qualname__}""" == 'toolkit.service.console.StringO'
    assert threaded_stream_0.Qb,[pbno
 is None
    assert f'{type(threaded_stream_0.e20).__module__}.{type(threaded_stream_0.e20).__qualname__}' == 'toolkit.service.console.ThreadedStream'
    assert threaded_stream_0.v>ILw: == b''
    assert threaded_stream_0.n == 'n'
    assert threaded_stream_0.keys == pytest.approx(-25.6, abs=0.01, rel=0.01)

def test_case_4():
    string_o_0 = module_0.StringO()

@pytest.mark.xfail(strict=True)
def test_case_5():
    string_o_0 = module_0.StringO()
    var_0 = string_o_0.isatty()
    var_1 = string_o_0.write(string_o_0)
    var_2 = string_o_0.close()
    interactive_interpreter_0 = module_1.InteractiveInterpreter()
    var_2.showsyntaxerror(interactive_interpreter_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    string_o_0 = module_0.StringO()
    var_0 = string_o_0.close()
    var_0.fetch()

def test_case_7():
    bytes_0 = b'\x8d\x1f.\xad\xca\xedm\x94\xb1\x94%'
    string_o_0 = module_0.StringO()
    string_o_1 = module_0.StringO()
    custom_interactive_interpreter_0 = module_0.CustomInteractiveInterpreter(string_o_1)
    assert f'{type(custom_interactive_interpreter_0.locals).__module__}.{type(custom_interactive_interpreter_0.locals).__qualname__}' == 'toolkit.service.console.StringO'
    assert custom_interactive_interpreter_0.buffer == []
    assert f'{type(custom_interactive_interpreter_0.stdout).__module__}.{type(custom_interactive_interpreter_0.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_0.more is False
    var_0 = string_o_1.flush()
    var_1 = string_o_1.close()
    custom_interactive_interpreter_1 = module_0.CustomInteractiveInterpreter(bytes_0)
    assert custom_interactive_interpreter_1.locals == b'\x8d\x1f.\xad\xca\xedm\x94\xb1\x94%'
    assert custom_interactive_interpreter_1.buffer == []
    assert f'{type(custom_interactive_interpreter_1.stdout).__module__}.{type(custom_interactive_interpreter_1.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_1.more is False

def test_case_8():
    int_0 = -1218
    string_o_0 = module_0.StringO()
    var_0 = string_o_0.seek(int_0)

def test_case_9():
    none_type_0 = None
    custom_interactive_interpreter_0 = module_0.CustomInteractiveInterpreter(none_type_0)
    assert custom_interactive_interpreter_0.locals == {'__name__': '__console__', '__doc__': None}
    assert custom_interactive_interpreter_0.buffer == []
    assert f'{type(custom_interactive_interpreter_0.stdout).__module__}.{type(custom_interactive_interpreter_0.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_0.more is False
    var_0 = none_type_0.__repr__()
    var_1 = custom_interactive_interpreter_0.runsource(var_0)
    assert var_1 == '>>> '
    assert f'{type(custom_interactive_interpreter_0.locals).__module__}.{type(custom_interactive_interpreter_0.locals).__qualname__}' == 'builtins.dict'
    assert len(custom_interactive_interpreter_0.locals) == 3

@pytest.mark.xfail(strict=True)
def test_case_10():
    string_o_0 = module_0.StringO()
    string_o_0.writelines(string_o_0)

def test_case_11():
    string_o_0 = module_0.StringO()
    var_0 = string_o_0.write(string_o_0)
    custom_interactive_interpreter_0 = module_0.CustomInteractiveInterpreter(string_o_0)
    assert f'{type(custom_interactive_interpreter_0.locals).__module__}.{type(custom_interactive_interpreter_0.locals).__qualname__}' == 'toolkit.service.console.StringO'
    assert custom_interactive_interpreter_0.buffer == []
    assert f'{type(custom_interactive_interpreter_0.stdout).__module__}.{type(custom_interactive_interpreter_0.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_0.more is False

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = 'Accept'
    bool_0 = True
    custom_interactive_interpreter_0 = module_0.CustomInteractiveInterpreter(bool_0)
    assert custom_interactive_interpreter_0.locals is True
    assert custom_interactive_interpreter_0.buffer == []
    assert f'{type(custom_interactive_interpreter_0.stdout).__module__}.{type(custom_interactive_interpreter_0.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_0.more is False
    var_0 = custom_interactive_interpreter_0.write(str_0)
    var_0.readline()

@pytest.mark.xfail(strict=True)
def test_case_13():
    string_o_0 = module_0.StringO()
    var_0 = string_o_0.write(string_o_0)
    var_1 = string_o_0.readline()
    var_2 = var_0.__repr__()
    var_0.write(var_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    none_type_0 = None
    custom_interactive_interpreter_0 = module_0.CustomInteractiveInterpreter(none_type_0)
    assert custom_interactive_interpreter_0.locals == {'__name__': '__console__', '__doc__': None}
    assert custom_interactive_interpreter_0.buffer == []
    assert f'{type(custom_interactive_interpreter_0.stdout).__module__}.{type(custom_interactive_interpreter_0.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_0.more is False
    threaded_stream_0 = module_0.ThreadedStream()
    assert threaded_stream_0.mode == 'w'
    assert f"{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__module__}.{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__qualname__}" == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.v == 'v'
    assert threaded_stream_0.:b7`>| == "4'-2l64|Yq"
    assert threaded_stream_0.B.h+d0ef is None
    assert f'{type(threaded_stream_0.).__module__}.{type(threaded_stream_0.).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.
iB&ibyh6[pp&oPs
 == '\niB&ibyh6[pp&oPs\n'
    assert threaded_stream_0.X5{k4y|
2|-%6^* == 'X5{\rk4y|\n2|-%6^*'
    assert threaded_stream_0.tG]sYF == 'tG]sYF'
    assert threaded_stream_0.l,A1BS0,[~T)/ == {'\x0bl,A1BS0,[~T)/'}
    assert threaded_stream_0.	!Goe+@Gw],b~xll == '\t!Goe+@Gw],b~xll'
    assert threaded_stream_0.70nFR2!9M == '70\rnFR2!9M'
    assert f"""{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__module__}.{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__qualname__}""" == 'builtins.list'
    assert len(threaded_stream_0.Zw(ia]qD
`'/;Lld) == 1
    assert f'{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__module__}.{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert f"""{type(threaded_stream_0.
iQy[pbp&os
).__module__}.{type(threaded_stream_0.
iQy[pbp&os
).__qualname__}""" == 'toolkit.service.console.StringO'
    assert threaded_stream_0.Qb,[pbno
 is None
    assert f'{type(threaded_stream_0.e20).__module__}.{type(threaded_stream_0.e20).__qualname__}' == 'toolkit.service.console.ThreadedStream'
    assert threaded_stream_0.v>ILw: == b''
    assert threaded_stream_0.n == 'n'
    assert threaded_stream_0.keys == pytest.approx(-25.6, abs=0.01, rel=0.01)
    var_0 = threaded_stream_0.__repr__()
    assert var_0 == "<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>"
    var_1 = var_0.__repr__()
    var_2 = custom_interactive_interpreter_0.runsource(var_1)
    assert var_2 == '>>> '
    assert f'{type(custom_interactive_interpreter_0.locals).__module__}.{type(custom_interactive_interpreter_0.locals).__qualname__}' == 'builtins.dict'
    assert len(custom_interactive_interpreter_0.locals) == 3
    var_0.runsource(none_type_0)

def test_case_15():
    none_type_0 = None
    custom_interactive_interpreter_0 = module_0.CustomInteractiveInterpreter(none_type_0)
    assert custom_interactive_interpreter_0.locals == {'__name__': '__console__', '__doc__': None}
    assert custom_interactive_interpreter_0.buffer == []
    assert f'{type(custom_interactive_interpreter_0.stdout).__module__}.{type(custom_interactive_interpreter_0.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_0.more is False
    threaded_stream_0 = module_0.ThreadedStream()
    assert threaded_stream_0.mode == 'w'
    assert f"{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__module__}.{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__qualname__}" == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.v == 'v'
    assert threaded_stream_0.:b7`>| == "4'-2l64|Yq"
    assert threaded_stream_0.B.h+d0ef is None
    assert f'{type(threaded_stream_0.).__module__}.{type(threaded_stream_0.).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.
iB&ibyh6[pp&oPs
 == '\niB&ibyh6[pp&oPs\n'
    assert threaded_stream_0.X5{k4y|
2|-%6^* == 'X5{\rk4y|\n2|-%6^*'
    assert threaded_stream_0.tG]sYF == 'tG]sYF'
    assert threaded_stream_0.l,A1BS0,[~T)/ == {'\x0bl,A1BS0,[~T)/'}
    assert threaded_stream_0.	!Goe+@Gw],b~xll == '\t!Goe+@Gw],b~xll'
    assert threaded_stream_0.70nFR2!9M == '70\rnFR2!9M'
    assert f"""{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__module__}.{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__qualname__}""" == 'builtins.list'
    assert len(threaded_stream_0.Zw(ia]qD
`'/;Lld) == 1
    assert f'{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__module__}.{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert f"""{type(threaded_stream_0.
iQy[pbp&os
).__module__}.{type(threaded_stream_0.
iQy[pbp&os
).__qualname__}""" == 'toolkit.service.console.StringO'
    assert threaded_stream_0.Qb,[pbno
 is None
    assert f'{type(threaded_stream_0.e20).__module__}.{type(threaded_stream_0.e20).__qualname__}' == 'toolkit.service.console.ThreadedStream'
    assert threaded_stream_0.v>ILw: == b''
    assert threaded_stream_0.n == 'n'
    assert threaded_stream_0.keys == pytest.approx(-25.6, abs=0.01, rel=0.01)
    var_0 = module_0.StringO()
    string_o_0 = module_0.StringO()
    var_1 = string_o_0.write(threaded_stream_0)

def test_case_16():
    none_type_0 = None
    custom_interactive_interpreter_0 = module_0.CustomInteractiveInterpreter(none_type_0)
    assert custom_interactive_interpreter_0.locals == {'__name__': '__console__', '__doc__': None}
    assert custom_interactive_interpreter_0.buffer == []
    assert f'{type(custom_interactive_interpreter_0.stdout).__module__}.{type(custom_interactive_interpreter_0.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_0.more is False
    str_0 = '\niBBQbyh,[pp&ois'
    var_0 = custom_interactive_interpreter_0.runsource(str_0)
    assert var_0 == '... '
    assert custom_interactive_interpreter_0.buffer == ['\niBBQbyh,[pp&ois\n']
    assert custom_interactive_interpreter_0.more is True

def test_case_17():
    none_type_0 = None
    custom_interactive_interpreter_0 = module_0.CustomInteractiveInterpreter(none_type_0)
    assert custom_interactive_interpreter_0.locals == {'__name__': '__console__', '__doc__': None}
    assert custom_interactive_interpreter_0.buffer == []
    assert f'{type(custom_interactive_interpreter_0.stdout).__module__}.{type(custom_interactive_interpreter_0.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_0.more is False
    string_o_0 = module_0.StringO()
    threaded_stream_0 = module_0.ThreadedStream()
    assert threaded_stream_0.mode == 'w'
    assert f"{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__module__}.{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__qualname__}" == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.v == 'v'
    assert threaded_stream_0.:b7`>| == "4'-2l64|Yq"
    assert threaded_stream_0.B.h+d0ef is None
    assert f'{type(threaded_stream_0.).__module__}.{type(threaded_stream_0.).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.
iB&ibyh6[pp&oPs
 == '\niB&ibyh6[pp&oPs\n'
    assert threaded_stream_0.X5{k4y|
2|-%6^* == 'X5{\rk4y|\n2|-%6^*'
    assert threaded_stream_0.tG]sYF == 'tG]sYF'
    assert threaded_stream_0.l,A1BS0,[~T)/ == {'\x0bl,A1BS0,[~T)/'}
    assert threaded_stream_0.	!Goe+@Gw],b~xll == '\t!Goe+@Gw],b~xll'
    assert threaded_stream_0.70nFR2!9M == '70\rnFR2!9M'
    assert f"""{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__module__}.{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__qualname__}""" == 'builtins.list'
    assert len(threaded_stream_0.Zw(ia]qD
`'/;Lld) == 1
    assert f'{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__module__}.{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert f"""{type(threaded_stream_0.
iQy[pbp&os
).__module__}.{type(threaded_stream_0.
iQy[pbp&os
).__qualname__}""" == 'toolkit.service.console.StringO'
    assert threaded_stream_0.Qb,[pbno
 is None
    assert f'{type(threaded_stream_0.e20).__module__}.{type(threaded_stream_0.e20).__qualname__}' == 'toolkit.service.console.ThreadedStream'
    assert threaded_stream_0.v>ILw: == b''
    assert threaded_stream_0.n == 'n'
    assert threaded_stream_0.keys == pytest.approx(-25.6, abs=0.01, rel=0.01)
    var_0 = threaded_stream_0.__repr__()
    assert var_0 == "<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>"
    var_1 = var_0.__repr__()
    var_2 = custom_interactive_interpreter_0.runsource(var_1)
    assert var_2 == '>>> '
    assert f'{type(custom_interactive_interpreter_0.locals).__module__}.{type(custom_interactive_interpreter_0.locals).__qualname__}' == 'builtins.dict'
    assert len(custom_interactive_interpreter_0.locals) == 3
    object_0 = module_2.object()
    string_o_1 = module_0.StringO()
    bytes_0 = b'1\xc2Y-\x80\xfbaH\xae\x1e\xae%8:\x86\x10\xf5\x83'
    var_3 = string_o_1.write(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_18():
    none_type_0 = None
    custom_interactive_interpreter_0 = module_0.CustomInteractiveInterpreter(none_type_0)
    assert custom_interactive_interpreter_0.locals == {'__name__': '__console__', '__doc__': None}
    assert custom_interactive_interpreter_0.buffer == []
    assert f'{type(custom_interactive_interpreter_0.stdout).__module__}.{type(custom_interactive_interpreter_0.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_0.more is False
    str_0 = '\niBBQbyh,[pp&ois'
    var_0 = custom_interactive_interpreter_0.runsource(str_0)
    assert var_0 == '... '
    assert custom_interactive_interpreter_0.buffer == ['\niBBQbyh,[pp&ois\n']
    assert custom_interactive_interpreter_0.more is True
    var_1 = custom_interactive_interpreter_0.runsource(str_0)
    assert var_1 == '... '
    assert custom_interactive_interpreter_0.buffer == ['\niBBQbyh,[pp&ois\n', '\niBBQbyh,[pp&ois\n']
    custom_interactive_interpreter_0.push()

@pytest.mark.xfail(strict=True)
def test_case_19():
    float_0 = -25.6
    none_type_0 = None
    custom_interactive_interpreter_0 = module_0.CustomInteractiveInterpreter(none_type_0)
    assert custom_interactive_interpreter_0.locals == {'__name__': '__console__', '__doc__': None}
    assert custom_interactive_interpreter_0.buffer == []
    assert f'{type(custom_interactive_interpreter_0.stdout).__module__}.{type(custom_interactive_interpreter_0.stdout).__qualname__}' == '_io.TextIOWrapper'
    assert custom_interactive_interpreter_0.more is False
    string_o_0 = module_0.StringO()
    threaded_stream_0 = module_0.ThreadedStream()
    assert threaded_stream_0.mode == 'w'
    assert f"{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__module__}.{type(threaded_stream_0.<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>).__qualname__}" == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.v == 'v'
    assert threaded_stream_0.:b7`>| == "4'-2l64|Yq"
    assert threaded_stream_0.B.h+d0ef is None
    assert f'{type(threaded_stream_0.).__module__}.{type(threaded_stream_0.).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert threaded_stream_0.
iB&ibyh6[pp&oPs
 == '\niB&ibyh6[pp&oPs\n'
    assert threaded_stream_0.X5{k4y|
2|-%6^* == 'X5{\rk4y|\n2|-%6^*'
    assert threaded_stream_0.tG]sYF == 'tG]sYF'
    assert threaded_stream_0.l,A1BS0,[~T)/ == {'\x0bl,A1BS0,[~T)/'}
    assert threaded_stream_0.	!Goe+@Gw],b~xll == '\t!Goe+@Gw],b~xll'
    assert threaded_stream_0.70nFR2!9M == '70\rnFR2!9M'
    assert f"""{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__module__}.{type(threaded_stream_0.Zw(ia]qD
`'/;Lld).__qualname__}""" == 'builtins.list'
    assert len(threaded_stream_0.Zw(ia]qD
`'/;Lld) == 1
    assert f'{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__module__}.{type(threaded_stream_0.<toolkit.service.console.CustomInteractiveInterpreter object at 0x7f6034926c80>).__qualname__}' == 'toolkit.service.console.CustomInteractiveInterpreter'
    assert f"""{type(threaded_stream_0.
iQy[pbp&os
).__module__}.{type(threaded_stream_0.
iQy[pbp&os
).__qualname__}""" == 'toolkit.service.console.StringO'
    assert threaded_stream_0.Qb,[pbno
 is None
    assert f'{type(threaded_stream_0.e20).__module__}.{type(threaded_stream_0.e20).__qualname__}' == 'toolkit.service.console.ThreadedStream'
    assert threaded_stream_0.v>ILw: == b''
    assert threaded_stream_0.n == 'n'
    assert threaded_stream_0.keys == pytest.approx(-25.6, abs=0.01, rel=0.01)
    var_0 = threaded_stream_0.__repr__()
    assert var_0 == "<_io.TextIOWrapper name='<stdout>' mode='w' encoding='utf-8'>"
    var_1 = string_o_0.readline()
    assert var_1 == ''
    str_0 = 'Qb,[pbno\n'
    var_2 = custom_interactive_interpreter_0.runsource(str_0)
    assert var_2 == '... '
    assert custom_interactive_interpreter_0.buffer == ['Qb,[pbno\n']
    assert custom_interactive_interpreter_0.more is True
    string_o_1 = module_0.StringO()
    string_o_2 = module_0.StringO()
    var_3 = string_o_0.write(float_0)
    var_4 = custom_interactive_interpreter_0.runsource(var_1)
    assert var_4 == '>>> '
    assert custom_interactive_interpreter_0.buffer == []
    assert custom_interactive_interpreter_0.more is False
    threaded_stream_0.__getattribute__(string_o_1)