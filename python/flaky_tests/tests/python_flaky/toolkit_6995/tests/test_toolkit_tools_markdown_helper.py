# Automatically generated by Pynguin.
import pytest
import toolkit.tools.markdown_helper as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b'>>> '
    mark_down_render_0 = module_0.MarkDownRender(bytes_0, bytes_0)
    assert module_0.MarkDownRender.tpl == '\n    <html>\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel="stylesheet" href="%s">\n    <style>\n        .markdown-body {\n            box-sizing: border-box;\n            min-width: 200px;\n            max-width: 980px;\n            margin: 0 auto;\n            padding: 45px;\n        }\n\n        @media (max-width: 767px) {\n            .markdown-body {\n                padding: 15px;\n            }\n        }\n    </style> \n    <article class="markdown-body">\n        %s\n    </article>\n    </html>\n    '
    mark_down_render_0.render()

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    mark_down_render_0 = module_0.MarkDownRender(bool_0, bool_0)
    assert module_0.MarkDownRender.tpl == '\n    <html>\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel="stylesheet" href="%s">\n    <style>\n        .markdown-body {\n            box-sizing: border-box;\n            min-width: 200px;\n            max-width: 980px;\n            margin: 0 auto;\n            padding: 45px;\n        }\n\n        @media (max-width: 767px) {\n            .markdown-body {\n                padding: 15px;\n            }\n        }\n    </style> \n    <article class="markdown-body">\n        %s\n    </article>\n    </html>\n    '
    mark_down_render_0.render_css()

@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.MarkDownHelper()

def test_case_3():
    bytes_0 = b'>>> o'
    mark_down_render_0 = module_0.MarkDownRender(bytes_0, bytes_0)
    assert module_0.MarkDownRender.tpl == '\n    <html>\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel="stylesheet" href="%s">\n    <style>\n        .markdown-body {\n            box-sizing: border-box;\n            min-width: 200px;\n            max-width: 980px;\n            margin: 0 auto;\n            padding: 45px;\n        }\n\n        @media (max-width: 767px) {\n            .markdown-body {\n                padding: 15px;\n            }\n        }\n    </style> \n    <article class="markdown-body">\n        %s\n    </article>\n    </html>\n    '
    var_0 = mark_down_render_0.__enter__()
    var_1 = var_0.render()

@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    mark_down_render_0 = module_0.MarkDownRender(bool_0, bool_0)
    assert module_0.MarkDownRender.tpl == '\n    <html>\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel="stylesheet" href="%s">\n    <style>\n        .markdown-body {\n            box-sizing: border-box;\n            min-width: 200px;\n            max-width: 980px;\n            margin: 0 auto;\n            padding: 45px;\n        }\n\n        @media (max-width: 767px) {\n            .markdown-body {\n                padding: 15px;\n            }\n        }\n    </style> \n    <article class="markdown-body">\n        %s\n    </article>\n    </html>\n    '
    mark_down_render_0.__exit__(bool_0, bool_0, mark_down_render_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b'..'
    mark_down_render_0 = module_0.MarkDownRender(bytes_0, bytes_0)
    assert module_0.MarkDownRender.tpl == '\n    <html>\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel="stylesheet" href="%s">\n    <style>\n        .markdown-body {\n            box-sizing: border-box;\n            min-width: 200px;\n            max-width: 980px;\n            margin: 0 auto;\n            padding: 45px;\n        }\n\n        @media (max-width: 767px) {\n            .markdown-body {\n                padding: 15px;\n            }\n        }\n    </style> \n    <article class="markdown-body">\n        %s\n    </article>\n    </html>\n    '
    mark_down_render_0.render()

@pytest.mark.xfail(strict=True)
def test_case_6():
    list_0 = []
    bytes_0 = b'..'
    mark_down_render_0 = module_0.MarkDownRender(list_0, bytes_0)
    assert module_0.MarkDownRender.tpl == '\n    <html>\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel="stylesheet" href="%s">\n    <style>\n        .markdown-body {\n            box-sizing: border-box;\n            min-width: 200px;\n            max-width: 980px;\n            margin: 0 auto;\n            padding: 45px;\n        }\n\n        @media (max-width: 767px) {\n            .markdown-body {\n                padding: 15px;\n            }\n        }\n    </style> \n    <article class="markdown-body">\n        %s\n    </article>\n    </html>\n    '
    mark_down_render_0.render()

@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b'>>> '
    mark_down_render_0 = module_0.MarkDownRender(bytes_0, bytes_0)
    assert module_0.MarkDownRender.tpl == '\n    <html>\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel="stylesheet" href="%s">\n    <style>\n        .markdown-body {\n            box-sizing: border-box;\n            min-width: 200px;\n            max-width: 980px;\n            margin: 0 auto;\n            padding: 45px;\n        }\n\n        @media (max-width: 767px) {\n            .markdown-body {\n                padding: 15px;\n            }\n        }\n    </style> \n    <article class="markdown-body">\n        %s\n    </article>\n    </html>\n    '
    mark_down_render_0.render_css()

@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b'>>> '
    mark_down_render_0 = module_0.MarkDownRender(bytes_0, bytes_0)
    assert module_0.MarkDownRender.tpl == '\n    <html>\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel="stylesheet" href="%s">\n    <style>\n        .markdown-body {\n            box-sizing: border-box;\n            min-width: 200px;\n            max-width: 980px;\n            margin: 0 auto;\n            padding: 45px;\n        }\n\n        @media (max-width: 767px) {\n            .markdown-body {\n                padding: 15px;\n            }\n        }\n    </style> \n    <article class="markdown-body">\n        %s\n    </article>\n    </html>\n    '
    mark_down_render_0.render()

@pytest.mark.xfail(strict=True)
def test_case_9():
    bytes_0 = b'>>> '
    str_0 = 'N'
    mark_down_render_0 = module_0.MarkDownRender(bytes_0, str_0)
    assert module_0.MarkDownRender.tpl == '\n    <html>\n    <meta name="viewport" content="width=device-width, initial-scale=1">\n    <link rel="stylesheet" href="%s">\n    <style>\n        .markdown-body {\n            box-sizing: border-box;\n            min-width: 200px;\n            max-width: 980px;\n            margin: 0 auto;\n            padding: 45px;\n        }\n\n        @media (max-width: 767px) {\n            .markdown-body {\n                padding: 15px;\n            }\n        }\n    </style> \n    <article class="markdown-body">\n        %s\n    </article>\n    </html>\n    '
    mark_down_render_0.render()