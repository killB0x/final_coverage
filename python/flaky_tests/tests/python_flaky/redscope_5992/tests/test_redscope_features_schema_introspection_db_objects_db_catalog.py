# Automatically generated by Pynguin.
import pytest
import redscope.features.schema_introspection.db_objects.db_catalog as module_0
import redscope.features.schema_introspection.db_objects.user as module_1
import redscope.features.schema_introspection.db_objects.group as module_2
import redscope.features.schema_introspection.db_objects.schema as module_3
import redscope.features.schema_introspection.db_objects.view as module_4
import redscope.features.schema_introspection.db_objects.table as module_5

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.DbCatalog(groups=bool_0, views=bool_0)

def test_case_1():
    db_catalog_0 = module_0.DbCatalog()
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'NOT NULL'
    module_0.DbCatalog(tables=str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '[b,AWzTa!DPU'
    user_0 = module_1.User(str_0)
    none_type_0 = None
    module_0.DbCatalog(groups=user_0, tables=none_type_0, users=str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ' / ot av\x0cilable locally'
    str_1 = '>r-P*b~;W.m'
    user_0 = module_1.User(str_1)
    list_0 = [user_0, user_0, user_0]
    db_catalog_0 = module_0.DbCatalog(users=list_0, constraints=list_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    str_2 = 'Lpp:+._+-Tp/'
    dict_0 = db_catalog_0.get_tables_by_schema(str_2)
    db_catalog_0.get_schema(str_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '}7SIaR(jo%8+'
    group_0 = module_2.Group(str_0)
    none_type_0 = None
    module_0.DbCatalog(views=group_0, tables=none_type_0, user_groups=str_0)

def test_case_6():
    str_0 = 'bzp;6X`5R~--\\</'
    schema_0 = module_3.Schema(str_0)
    none_type_0 = None
    str_1 = '^#FyCM+'
    view_0 = module_4.View(none_type_0, str_1, str_0)
    schema_1 = module_3.Schema(view_0)
    list_0 = [schema_0, schema_0, schema_1, schema_0]
    db_catalog_0 = module_0.DbCatalog(list_0, none_type_0, user_groups=none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = 'b2SLl#\\6pK&\\M>D'
    str_1 = '#\t'
    view_0 = module_4.View(str_1, str_1, str_1)
    view_1 = module_4.View(str_1, str_1, str_1)
    list_0 = [view_0, view_1, view_0, view_1]
    db_catalog_0 = module_0.DbCatalog(views=list_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    dict_0 = db_catalog_0.get_tables_by_schema(str_0)
    str_2 = 'users'
    list_1 = db_catalog_0.get_db_objects(str_2)
    none_type_0 = None
    db_catalog_1 = module_0.DbCatalog(views=list_0)
    module_0.DbCatalog(groups=str_2, views=none_type_0, users=none_type_0, user_groups=none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = '2q%,'
    str_1 = '>S8T)'
    str_2 = 'c`oWX6=j<-7pb:G sM '
    str_3 = '+Z}5\x0cm=/~lP0#'
    view_0 = module_4.View(str_1, str_2, str_3)
    str_4 = 'action'
    view_1 = module_4.View(str_4, str_4, view_0)
    list_0 = [view_0, view_1]
    list_1 = []
    db_catalog_0 = module_0.DbCatalog(views=list_0, users=list_1)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    db_catalog_0.get_user_group(str_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'U)u!S*:"#a$CP$FV'
    str_1 = "BN0`7[\\u'_BZ]C[B%"
    none_type_0 = None
    db_catalog_0 = module_0.DbCatalog(none_type_0, none_type_0, none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    dict_0 = db_catalog_0.get_tables_by_schema(str_1)
    none_type_1 = None
    module_0.DbCatalog(users=none_type_1, user_groups=str_0)

def test_case_10():
    list_0 = []
    none_type_0 = None
    db_catalog_0 = module_0.DbCatalog(users=none_type_0, user_groups=none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    dict_0 = db_catalog_0.get_tables_by_schema(list_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = ' boolean'
    none_type_0 = None
    str_1 = 'choices'
    db_catalog_0 = module_0.DbCatalog(groups=none_type_0, constraints=none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    dict_0 = db_catalog_0.get_tables_by_schema(str_1)
    db_catalog_1 = module_0.DbCatalog(none_type_0, views=none_type_0, users=none_type_0, user_groups=none_type_0)
    db_catalog_1.get_db_objects(str_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = ' DROP USER '
    none_type_0 = None
    db_catalog_0 = module_0.DbCatalog(users=none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    db_catalog_0.get_schema(str_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = '\x0c~]^pkP/?.wLpa\n&:q|'
    set_0 = {str_0, str_0}
    none_type_0 = None
    db_catalog_0 = module_0.DbCatalog(groups=none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    db_catalog_0.get_group(set_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    str_0 = '&.bEw'
    none_type_0 = None
    db_catalog_0 = module_0.DbCatalog(views=none_type_0, user_groups=none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    db_catalog_0.get_view(str_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    bool_0 = True
    group_0 = module_2.Group(bool_0)
    list_0 = [group_0, group_0]
    none_type_0 = None
    db_catalog_0 = module_0.DbCatalog(none_type_0, views=none_type_0, users=none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    db_catalog_0.get_table(list_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    str_0 = 'b2SLl#\\6pK&\\M>D'
    str_1 = '#\t'
    view_0 = module_4.View(str_1, str_1, str_1)
    list_0 = [view_0, view_0, view_0, view_0]
    db_catalog_0 = module_0.DbCatalog(views=list_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    dict_0 = db_catalog_0.get_tables_by_schema(str_0)
    str_2 = '+^\'JZ"v'
    db_catalog_1 = module_0.DbCatalog()
    assert f'{type(db_catalog_1).__module__}.{type(db_catalog_1).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    db_catalog_1.get_user(str_2)

@pytest.mark.xfail(strict=True)
def test_case_17():
    str_0 = 'b2SLl#\\6pK&\\M>D'
    str_1 = '#\t'
    view_0 = module_4.View(str_1, str_1, str_1)
    view_1 = module_4.View(str_1, str_1, str_1)
    list_0 = [view_0, view_1, view_0, view_1]
    db_catalog_0 = module_0.DbCatalog(views=list_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    dict_0 = db_catalog_0.get_tables_by_schema(str_0)
    str_2 = '+^\'JZ"v'
    none_type_0 = None
    db_catalog_1 = module_0.DbCatalog(tables=none_type_0, user_groups=none_type_0)
    assert f'{type(db_catalog_1).__module__}.{type(db_catalog_1).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    db_catalog_1.get_constraint(str_2)

@pytest.mark.xfail(strict=True)
def test_case_18():
    str_0 = '#\t'
    view_0 = module_4.View(str_0, str_0, str_0)
    list_0 = [view_0, view_0, view_0, view_0]
    db_catalog_0 = module_0.DbCatalog(views=list_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    dict_0 = db_catalog_0.get_tables_by_schema(str_0)
    str_1 = 'users'
    list_1 = db_catalog_0.get_db_objects(str_1)
    db_catalog_0.get_table(str_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    str_0 = 'DROP GROUP '
    table_0 = module_5.Table(str_0, str_0, str_0)
    list_0 = [table_0, table_0, table_0, table_0]
    none_type_0 = None
    db_catalog_0 = module_0.DbCatalog(tables=list_0, users=none_type_0, constraints=none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    dict_0 = db_catalog_0.get_tables_by_schema(str_0)
    view_0 = module_4.View(str_0, str_0, str_0)
    str_1 = 'w\nb'
    module_0.DbCatalog(str_1)

@pytest.mark.xfail(strict=True)
def test_case_20():
    str_0 = 'Jb2SLl#\\6UK&\\M>D'
    str_1 = 'hVtzs'
    str_2 = 'DROP GROUP '
    str_3 = 'DROP TABLE '
    table_0 = module_5.Table(str_2, str_0, str_3)
    list_0 = [table_0, table_0, table_0, table_0]
    none_type_0 = None
    db_catalog_0 = module_0.DbCatalog(tables=list_0, users=none_type_0, constraints=none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    dict_0 = db_catalog_0.get_tables_by_schema(str_1)
    str_4 = '#\t'
    view_0 = module_4.View(str_4, str_4, str_4)
    module_0.DbCatalog(str_0)

@pytest.mark.xfail(strict=True)
def test_case_21():
    str_0 = '#\t'
    view_0 = module_4.View(str_0, str_0, str_0)
    view_1 = module_4.View(str_0, str_0, str_0)
    list_0 = [view_0, view_1, view_0, view_1]
    none_type_0 = None
    db_catalog_0 = module_0.DbCatalog(none_type_0, tables=none_type_0, users=list_0, constraints=none_type_0)
    assert f'{type(db_catalog_0).__module__}.{type(db_catalog_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    assert f'{type(module_0.DbCatalog.schemas).__module__}.{type(module_0.DbCatalog.schemas).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.groups).__module__}.{type(module_0.DbCatalog.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.views).__module__}.{type(module_0.DbCatalog.views).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.tables).__module__}.{type(module_0.DbCatalog.tables).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.users).__module__}.{type(module_0.DbCatalog.users).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.constraints).__module__}.{type(module_0.DbCatalog.constraints).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.DbCatalog.user_groups).__module__}.{type(module_0.DbCatalog.user_groups).__qualname__}' == 'builtins.property'
    str_1 = '%GqD?5aTvz%ot*'
    dict_0 = db_catalog_0.get_tables_by_schema(str_1)
    str_2 = 'users'
    list_1 = db_catalog_0.get_db_objects(str_2)
    db_catalog_1 = module_0.DbCatalog(dict_0)
    assert f'{type(db_catalog_1).__module__}.{type(db_catalog_1).__qualname__}' == 'redscope.features.schema_introspection.db_objects.db_catalog.DbCatalog'
    str_3 = '\x0c#Ea;ar.b{Od'
    db_catalog_2 = module_0.DbCatalog()
    db_catalog_2.get_table(str_3)