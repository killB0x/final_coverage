# Automatically generated by Pynguin.
import redscope.features.schema_introspection.db_objects.constraint as module_0

def test_case_0():
    str_0 = 'd%U'
    constraint_0 = module_0.Constraint(str_0, str_0, str_0, str_0)
    assert f'{type(constraint_0).__module__}.{type(constraint_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.constraint.Constraint'
    assert constraint_0.name == 'd%U'
    assert constraint_0.schema == 'd%U'
    assert constraint_0.table == 'd%U'
    assert f'{type(module_0.Constraint.file_name).__module__}.{type(module_0.Constraint.file_name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Constraint.create).__module__}.{type(module_0.Constraint.create).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Constraint.create_if_not_exist).__module__}.{type(module_0.Constraint.create_if_not_exist).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Constraint.drop).__module__}.{type(module_0.Constraint.drop).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Constraint.drop_if_exist).__module__}.{type(module_0.Constraint.drop_if_exist).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Constraint.ddl).__module__}.{type(module_0.Constraint.ddl).__qualname__}' == 'builtins.property'