# Automatically generated by Pynguin.
import pytest
import redscope.env.project_context as module_0

def test_case_0():
    dir_context_0 = module_0.DirContext()
    assert f'{type(dir_context_0).__module__}.{type(dir_context_0).__qualname__}' == 'redscope.env.project_context.DirContext'
    assert f'{type(dir_context_0.root_path).__module__}.{type(dir_context_0.root_path).__qualname__}' == 'pathlib.PosixPath'
    str_0 = dir_context_0.get_sql_file_name(dir_context_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    dir_context_0 = module_0.DirContext()
    assert f'{type(dir_context_0).__module__}.{type(dir_context_0).__qualname__}' == 'redscope.env.project_context.DirContext'
    assert f'{type(dir_context_0.root_path).__module__}.{type(dir_context_0.root_path).__qualname__}' == 'pathlib.PosixPath'
    dir_context_1 = module_0.DirContext()
    none_type_0 = None
    str_0 = dir_context_0.get_sql_file_name(none_type_0)
    assert str_0 == 'None.sql'
    var_0 = dir_context_1.init_dirs()
    var_1 = dir_context_1.init_dirs()
    var_0.init_dirs()

@pytest.mark.xfail(strict=True)
def test_case_2():
    set_0 = set()
    dir_context_0 = module_0.DirContext()
    assert f'{type(dir_context_0).__module__}.{type(dir_context_0).__qualname__}' == 'redscope.env.project_context.DirContext'
    assert f'{type(dir_context_0.root_path).__module__}.{type(dir_context_0.root_path).__qualname__}' == 'pathlib.PosixPath'
    dir_context_0.get_dir(set_0)