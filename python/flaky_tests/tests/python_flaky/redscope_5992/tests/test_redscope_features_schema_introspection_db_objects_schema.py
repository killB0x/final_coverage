# Automatically generated by Pynguin.
import redscope.features.schema_introspection.db_objects.schema as module_0

def test_case_0():
    str_0 = '_groups.sql'
    schema_0 = module_0.Schema(str_0)
    assert f'{type(schema_0).__module__}.{type(schema_0).__qualname__}' == 'redscope.features.schema_introspection.db_objects.schema.Schema'
    assert schema_0.name == '_groups.sql'
    assert f'{type(module_0.Schema.file_name).__module__}.{type(module_0.Schema.file_name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Schema.create).__module__}.{type(module_0.Schema.create).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Schema.create_if_not_exist).__module__}.{type(module_0.Schema.create_if_not_exist).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Schema.drop).__module__}.{type(module_0.Schema.drop).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Schema.drop_if_exist).__module__}.{type(module_0.Schema.drop_if_exist).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Schema.drop_if_exists_cascade).__module__}.{type(module_0.Schema.drop_if_exists_cascade).__qualname__}' == 'builtins.property'