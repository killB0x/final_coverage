# Automatically generated by Pynguin.
import redscope.features.schema_introspection.formatters.constraints as module_0

def test_case_0():
    str_0 = 'aM&[`wCgjK?Gv&\x0b'
    tuple_0 = (str_0,)
    dict_0 = {}
    constraint_formatter_0 = module_0.ConstraintFormatter(**dict_0)
    assert f'{type(constraint_formatter_0).__module__}.{type(constraint_formatter_0).__qualname__}' == 'redscope.features.schema_introspection.formatters.constraints.ConstraintFormatter'
    list_0 = constraint_formatter_0.format(tuple_0)

def test_case_1():
    constraint_formatter_0 = module_0.ConstraintFormatter()
    assert f'{type(constraint_formatter_0).__module__}.{type(constraint_formatter_0).__qualname__}' == 'redscope.features.schema_introspection.formatters.constraints.ConstraintFormatter'