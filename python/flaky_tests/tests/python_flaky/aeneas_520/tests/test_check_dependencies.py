# Automatically generated by Pynguin.
import check_dependencies as module_0

def test_case_0():
    var_0 = module_0.check_import()
    assert var_0 is False
    assert module_0.ANSI_ERROR == '\x1b[91m'
    assert module_0.ANSI_OK == '\x1b[92m'
    assert module_0.ANSI_WARNING == '\x1b[93m'
    assert module_0.ANSI_END == '\x1b[0m'
    assert module_0.IS_POSIX is True

def test_case_1():
    int_0 = 1949
    var_0 = module_0.print_error(int_0)
    assert module_0.ANSI_ERROR == '\x1b[91m'
    assert module_0.ANSI_OK == '\x1b[92m'
    assert module_0.ANSI_WARNING == '\x1b[93m'
    assert module_0.ANSI_END == '\x1b[0m'
    assert module_0.IS_POSIX is True

def test_case_2():
    float_0 = 3269.0
    var_0 = module_0.print_warning(float_0)
    assert module_0.ANSI_ERROR == '\x1b[91m'
    assert module_0.ANSI_OK == '\x1b[92m'
    assert module_0.ANSI_WARNING == '\x1b[93m'
    assert module_0.ANSI_END == '\x1b[0m'
    assert module_0.IS_POSIX is True

def test_case_3():
    float_0 = 3269.0
    var_0 = module_0.print_warning(float_0)
    assert module_0.ANSI_ERROR == '\x1b[91m'
    assert module_0.ANSI_OK == '\x1b[92m'
    assert module_0.ANSI_WARNING == '\x1b[93m'
    assert module_0.ANSI_END == '\x1b[0m'
    assert module_0.IS_POSIX is True
    var_1 = module_0.print_info(var_0)