# Automatically generated by Pynguin.
import pytest
import run_all_unit_tests as module_0

def test_case_0():
    n_o_p_stream_0 = module_0.NOPStream()
    assert f'{type(n_o_p_stream_0).__module__}.{type(n_o_p_stream_0).__qualname__}' == 'run_all_unit_tests.NOPStream'
    assert n_o_p_stream_0.verbose is False
    assert module_0.TEST_DIRECTORY == 'aeneas/tests'
    assert module_0.MAP == {'fast': ('test_*.py', 'test_'), 'bench': ('bench_test_*.py', 'bench_test_'), 'long': ('long_test_*.py', 'long_test_'), 'net': ('net_test_*.py', 'net_test_'), 'tool': ('tool_test_*.py', 'tool_test_')}

@pytest.mark.xfail(strict=True)
def test_case_1():
    n_o_p_stream_0 = module_0.NOPStream()
    assert f'{type(n_o_p_stream_0).__module__}.{type(n_o_p_stream_0).__qualname__}' == 'run_all_unit_tests.NOPStream'
    assert n_o_p_stream_0.verbose is False
    assert module_0.TEST_DIRECTORY == 'aeneas/tests'
    assert module_0.MAP == {'fast': ('test_*.py', 'test_'), 'bench': ('bench_test_*.py', 'bench_test_'), 'long': ('long_test_*.py', 'long_test_'), 'net': ('net_test_*.py', 'net_test_'), 'tool': ('tool_test_*.py', 'tool_test_')}
    n_o_p_stream_1 = module_0.NOPStream(n_o_p_stream_0)
    var_0 = n_o_p_stream_1.flush()
    var_1 = n_o_p_stream_1.write(n_o_p_stream_1)
    var_2 = n_o_p_stream_0.flush()
    var_3 = n_o_p_stream_1.write(n_o_p_stream_1)
    var_2.visit_List(n_o_p_stream_0)

def test_case_2():
    n_o_p_stream_0 = module_0.NOPStream()
    assert f'{type(n_o_p_stream_0).__module__}.{type(n_o_p_stream_0).__qualname__}' == 'run_all_unit_tests.NOPStream'
    assert n_o_p_stream_0.verbose is False
    assert module_0.TEST_DIRECTORY == 'aeneas/tests'
    assert module_0.MAP == {'fast': ('test_*.py', 'test_'), 'bench': ('bench_test_*.py', 'bench_test_'), 'long': ('long_test_*.py', 'long_test_'), 'net': ('net_test_*.py', 'net_test_'), 'tool': ('tool_test_*.py', 'tool_test_')}
    n_o_p_stream_1 = module_0.NOPStream()
    n_o_p_stream_2 = module_0.NOPStream(n_o_p_stream_0)
    var_0 = n_o_p_stream_1.write(n_o_p_stream_1)

def test_case_3():
    n_o_p_stream_0 = module_0.NOPStream()
    assert f'{type(n_o_p_stream_0).__module__}.{type(n_o_p_stream_0).__qualname__}' == 'run_all_unit_tests.NOPStream'
    assert n_o_p_stream_0.verbose is False
    assert module_0.TEST_DIRECTORY == 'aeneas/tests'
    assert module_0.MAP == {'fast': ('test_*.py', 'test_'), 'bench': ('bench_test_*.py', 'bench_test_'), 'long': ('long_test_*.py', 'long_test_'), 'net': ('net_test_*.py', 'net_test_'), 'tool': ('tool_test_*.py', 'tool_test_')}
    var_0 = n_o_p_stream_0.flush()
    n_o_p_stream_1 = module_0.NOPStream()
    var_1 = n_o_p_stream_1.flush()