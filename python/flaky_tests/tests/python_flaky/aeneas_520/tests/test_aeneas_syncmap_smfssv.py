# Automatically generated by Pynguin.
import aeneas.syncmap.smfssv as module_0

def test_case_0():
    bytes_0 = b"\xa4a\xdd\xcb\xab\x84'\xe5\xca\x97@\x94s\x9a\x9b"
    sync_map_format_s_s_v_0 = module_0.SyncMapFormatSSV(rconf=bytes_0, logger=bytes_0)
    assert f'{type(sync_map_format_s_s_v_0).__module__}.{type(sync_map_format_s_s_v_0).__qualname__}' == 'aeneas.syncmap.smfssv.SyncMapFormatSSV'
    assert sync_map_format_s_s_v_0.logger == b"\xa4a\xdd\xcb\xab\x84'\xe5\xca\x97@\x94s\x9a\x9b"
    assert sync_map_format_s_s_v_0.rconf == b"\xa4a\xdd\xcb\xab\x84'\xe5\xca\x97@\x94s\x9a\x9b"
    assert sync_map_format_s_s_v_0.variant == 'tabular'
    assert sync_map_format_s_s_v_0.parameters is None
    assert sync_map_format_s_s_v_0.write_template == '{begin} {end} {identifier} {text}'
    assert module_0.SyncMapFormatSSV.TAG == 'SyncMapFormatSSV'
    assert module_0.SyncMapFormatSSV.DEFAULT == 'ssv'
    assert module_0.SyncMapFormatSSV.HUMAN == 'ssvh'
    assert module_0.SyncMapFormatSSV.MACHINE == 'ssvm'
    assert module_0.SyncMapFormatSSV.MACHINE_ALIASES == ['ssv', 'ssvm']
    assert module_0.SyncMapFormatSSV.FIELD_DELIMITER == ' '
    assert module_0.SyncMapFormatSSV.FIELDS == {'begin': 0, 'end': 1, 'identifier': 2, 'text': 3}
    assert module_0.SyncMapFormatSSV.TEXT_DELIMITER == '"'
    str_0 = "<\x0b[{0+@ncKtx'"
    sync_map_format_s_s_v_1 = module_0.SyncMapFormatSSV(str_0, logger=str_0)
    assert sync_map_format_s_s_v_1.write_template == '{begin} {end} {identifier} {text}'
    sync_map_format_s_s_v_2 = module_0.SyncMapFormatSSV(logger=str_0)
    assert sync_map_format_s_s_v_2.write_template == '{begin} {end} {identifier} {text}'