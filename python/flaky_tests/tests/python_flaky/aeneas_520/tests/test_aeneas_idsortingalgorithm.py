# Automatically generated by Pynguin.
import pytest
import aeneas.idsortingalgorithm as module_0

def test_case_0():
    none_type_0 = None
    with pytest.raises(ValueError):
        module_0.IDSortingAlgorithm(none_type_0, none_type_0, none_type_0)

def test_case_1():
    str_0 = 'unsorted'
    i_d_sorting_algorithm_0 = module_0.IDSortingAlgorithm(str_0, str_0, str_0)
    assert f'{type(i_d_sorting_algorithm_0).__module__}.{type(i_d_sorting_algorithm_0).__qualname__}' == 'aeneas.idsortingalgorithm.IDSortingAlgorithm'
    assert i_d_sorting_algorithm_0.logger == 'unsorted'
    assert i_d_sorting_algorithm_0.rconf == 'unsorted'
    assert i_d_sorting_algorithm_0.algorithm == 'unsorted'
    assert module_0.IDSortingAlgorithm.LEXICOGRAPHIC == 'lexicographic'
    assert module_0.IDSortingAlgorithm.NUMERIC == 'numeric'
    assert module_0.IDSortingAlgorithm.UNSORTED == 'unsorted'
    assert module_0.IDSortingAlgorithm.ALLOWED_VALUES == ['lexicographic', 'numeric', 'unsorted']
    assert module_0.IDSortingAlgorithm.TAG == 'IDSortingAlgorithm'

def test_case_2():
    str_0 = 'unsorted'
    i_d_sorting_algorithm_0 = module_0.IDSortingAlgorithm(str_0)
    assert f'{type(i_d_sorting_algorithm_0).__module__}.{type(i_d_sorting_algorithm_0).__qualname__}' == 'aeneas.idsortingalgorithm.IDSortingAlgorithm'
    assert f'{type(i_d_sorting_algorithm_0.logger).__module__}.{type(i_d_sorting_algorithm_0.logger).__qualname__}' == 'aeneas.logger.Logger'
    assert len(i_d_sorting_algorithm_0.logger) == 0
    assert f'{type(i_d_sorting_algorithm_0.rconf).__module__}.{type(i_d_sorting_algorithm_0.rconf).__qualname__}' == 'aeneas.runtimeconfiguration.RuntimeConfiguration'
    assert i_d_sorting_algorithm_0.algorithm == 'unsorted'
    assert module_0.IDSortingAlgorithm.LEXICOGRAPHIC == 'lexicographic'
    assert module_0.IDSortingAlgorithm.NUMERIC == 'numeric'
    assert module_0.IDSortingAlgorithm.UNSORTED == 'unsorted'
    assert module_0.IDSortingAlgorithm.ALLOWED_VALUES == ['lexicographic', 'numeric', 'unsorted']
    assert module_0.IDSortingAlgorithm.TAG == 'IDSortingAlgorithm'
    var_0 = i_d_sorting_algorithm_0.sort(str_0)
    assert len(i_d_sorting_algorithm_0.logger) == 1