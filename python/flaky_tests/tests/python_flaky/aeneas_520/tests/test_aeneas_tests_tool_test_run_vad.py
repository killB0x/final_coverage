# Automatically generated by Pynguin.
import pytest
import aeneas.tests.tool_test_run_vad as module_0
import unittest.util as module_1
import aeneas.globalfunctions as module_2
import platform as module_3
import unittest as module_4

def test_case_0():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()

@pytest.mark.xfail(strict=True)
def test_case_1():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    test_run_v_a_d_c_l_i_0.test_run_extend_after()

@pytest.mark.xfail(strict=True)
def test_case_2():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    test_run_v_a_d_c_l_i_0.test_run_pure()

@pytest.mark.xfail(strict=True)
def test_case_3():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    var_0 = test_run_v_a_d_c_l_i_0.test_run_cannot_read()
    var_0.print_success(test_run_v_a_d_c_l_i_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    var_0 = test_run_v_a_d_c_l_i_0.test_run_bad()
    var_1 = module_1.unorderable_list_difference(var_0, var_0)
    var_0.assertIsNone(var_1, var_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    var_0 = module_2.print_warning(test_run_v_a_d_c_l_i_0)
    test_run_v_a_d_c_l_i_0.test_run_speech()

@pytest.mark.xfail(strict=True)
def test_case_6():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    var_0 = test_run_v_a_d_c_l_i_0.test_help()
    var_0.test_run_bad()

@pytest.mark.xfail(strict=True)
def test_case_7():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    var_0 = module_3.python_compiler()
    test_run_v_a_d_c_l_i_0.test_run_speech_stdout()

def test_case_8():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    var_0 = test_run_v_a_d_c_l_i_0.test_run_missing_2()
    var_1 = module_4.__dir__()

@pytest.mark.xfail(strict=True)
def test_case_9():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    var_0 = test_run_v_a_d_c_l_i_0.test_run_missing_1()
    var_1 = test_run_v_a_d_c_l_i_0.test_help()
    var_1.test_run_bad()

@pytest.mark.xfail(strict=True)
def test_case_10():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    test_run_v_a_d_c_l_i_0.test_run_both_stdout()

@pytest.mark.xfail(strict=True)
def test_case_11():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    test_run_v_a_d_c_l_i_0.test_run_nonspeech_stdout()

@pytest.mark.xfail(strict=True)
def test_case_12():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    test_run_v_a_d_c_l_i_0.test_run_both()

@pytest.mark.xfail(strict=True)
def test_case_13():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    test_run_v_a_d_c_l_i_0.test_run_nonspeech()

@pytest.mark.xfail(strict=True)
def test_case_14():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    var_0 = test_run_v_a_d_c_l_i_0.test_run_missing_2()
    test_run_v_a_d_c_l_i_0.test_run_no_cmfcc()

@pytest.mark.xfail(strict=True)
def test_case_15():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    none_type_0 = None
    var_0 = module_1.unorderable_list_difference(none_type_0, test_run_v_a_d_c_l_i_0)
    var_1 = test_run_v_a_d_c_l_i_0.test_run_cannot_write()
    var_2 = test_run_v_a_d_c_l_i_0.test_run_cannot_write()
    var_0.assertIsNone(var_2)

@pytest.mark.xfail(strict=True)
def test_case_16():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    test_run_v_a_d_c_l_i_0.test_run_extend_before()

@pytest.mark.xfail(strict=True)
def test_case_17():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    test_run_v_a_d_c_l_i_0.test_run_energy_threshold()

@pytest.mark.xfail(strict=True)
def test_case_18():
    test_run_v_a_d_c_l_i_0 = module_0.TestRunVADCLI()
    test_run_v_a_d_c_l_i_0.test_run_min_nonspeech()