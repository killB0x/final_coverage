# Automatically generated by Pynguin.
import pytest
import aeneas.tests.tool_test_extract_mfcc as module_0
import inspect as module_1

def test_case_0():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()

@pytest.mark.xfail(strict=True)
def test_case_1():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_0.test_extract_mfcc_size()

@pytest.mark.xfail(strict=True)
def test_case_2():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_0.test_extract_no_cmfcc()

@pytest.mark.xfail(strict=True)
def test_case_3():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_1 = module_0.TestExtractMFCCCLI()
    var_0 = test_extract_m_f_c_c_c_l_i_1.test_extract_missing_1()
    test_extract_m_f_c_c_c_l_i_0.test_extract_mfcc_emphasis_factor()

@pytest.mark.xfail(strict=True)
def test_case_4():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_0.test_extract_mfcc_window_shift()

def test_case_5():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    var_0 = test_extract_m_f_c_c_c_l_i_0.test_extract_cannot_write()
    var_1 = test_extract_m_f_c_c_c_l_i_0.test_extract_missing_1()

@pytest.mark.xfail(strict=True)
def test_case_6():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    var_0 = test_extract_m_f_c_c_c_l_i_0.test_extract_missing_2()
    var_1 = test_extract_m_f_c_c_c_l_i_0.test_extract_cannot_read()
    module_1.getgeneratorstate(test_extract_m_f_c_c_c_l_i_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_0.test_extract()

@pytest.mark.xfail(strict=True)
def test_case_8():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_0.test_extract_mfcc_fft_order()

@pytest.mark.xfail(strict=True)
def test_case_9():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_0.test_extract_mfcc_window_length()

@pytest.mark.xfail(strict=True)
def test_case_10():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_0.test_extract_mfcc_upper_frequency()

@pytest.mark.xfail(strict=True)
def test_case_11():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_0.test_extract_mp3()

@pytest.mark.xfail(strict=True)
def test_case_12():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    var_0 = test_extract_m_f_c_c_c_l_i_0.test_extract_missing_1()
    test_extract_m_f_c_c_c_l_i_0.test_extract_mfcc_lower_frequency()

@pytest.mark.xfail(strict=True)
def test_case_13():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_0.test_extract_pure()

@pytest.mark.xfail(strict=True)
def test_case_14():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    var_0 = test_extract_m_f_c_c_c_l_i_0.test_help()
    var_0.rstrip(test_extract_m_f_c_c_c_l_i_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    test_extract_m_f_c_c_c_l_i_0 = module_0.TestExtractMFCCCLI()
    test_extract_m_f_c_c_c_l_i_0.test_extract_mfcc_filters()