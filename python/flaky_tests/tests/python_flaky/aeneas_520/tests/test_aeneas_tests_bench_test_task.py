# Automatically generated by Pynguin.
import pytest
import aeneas.tests.bench_test_task as module_0
import platform as module_1
import aeneas.globalfunctions as module_2
import collections as module_3
import inspect as module_4

def test_case_0():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'

def test_case_1():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_060_plain_sentence()

@pytest.mark.xfail(strict=True)
def test_case_2():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.bench_execute(test_benchmark_execute_task_c_l_i_0, test_benchmark_execute_task_c_l_i_0, test_benchmark_execute_task_c_l_i_0)
    none_type_0 = None
    var_1 = module_1.python_version()
    var_2 = test_benchmark_execute_task_c_l_i_0.test_020_mplain()
    var_3 = module_2.safe_float(none_type_0)
    var_3.__contains__(none_type_0)

def test_case_3():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_005_plain_word()

def test_case_4():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_020_plain_sentence()

def test_case_5():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_030_plain_word()

def test_case_6():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_010_mplain()

def test_case_7():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_060_mplain()

def test_case_8():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_030_mplain()

def test_case_9():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_001_plain_sentence()

def test_case_10():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_010_plain_sentence()

@pytest.mark.xfail(strict=True)
def test_case_11():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_060_plain_word()
    var_1 = test_benchmark_execute_task_c_l_i_0.shortDescription()
    var_0.isdisjoint(var_0)

def test_case_12():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_010_plain_word()

def test_case_13():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_020_plain_word()

def test_case_14():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_005_plain_sentence()

def test_case_15():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_005_mplain()

def test_case_16():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_001_plain_word()

def test_case_17():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_030_plain_sentence()

def test_case_18():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_001_mplain()

@pytest.mark.xfail(strict=True)
def test_case_19():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    list_0 = []
    test_benchmark_execute_task_c_l_i_0.execute(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    user_string_0 = module_3.UserString(test_benchmark_execute_task_c_l_i_0)
    list_0 = module_2.object_to_unicode(user_string_0)
    test_benchmark_execute_task_c_l_i_0.execute(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_21():
    test_benchmark_execute_task_c_l_i_0 = module_0.TestBenchmarkExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    assert module_0.BENCH_DIR == '/root/.aeneas/benchmark_input'
    var_0 = test_benchmark_execute_task_c_l_i_0.test_030_plain_sentence()
    var_1 = module_4.getmembers(test_benchmark_execute_task_c_l_i_0, var_0)
    test_benchmark_execute_task_c_l_i_0.execute(var_1, var_1)