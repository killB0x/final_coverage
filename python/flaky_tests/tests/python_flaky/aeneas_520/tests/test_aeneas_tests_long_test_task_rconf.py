# Automatically generated by Pynguin.
import pytest
import aeneas.tests.long_test_task_rconf as module_0
import unittest.signals as module_1
import inspect as module_2

def test_case_0():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False

@pytest.mark.xfail(strict=True)
def test_case_1():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_cdtw()

@pytest.mark.xfail(strict=True)
def test_case_2():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_tts_cache()
    test_execute_task_c_l_i_0.test_exec_mfcc_window_length()

@pytest.mark.xfail(strict=True)
def test_case_3():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_cew()

@pytest.mark.xfail(strict=True)
def test_case_4():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_mfcc_size()

@pytest.mark.xfail(strict=True)
def test_case_5():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_mfcc_filters()

@pytest.mark.xfail(strict=True)
def test_case_6():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_mfcc_upper_frequency()

@pytest.mark.xfail(strict=True)
def test_case_7():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_tts_path()
    test_execute_task_c_l_i_0.test_exec_vad_log_energy_threshold()

def test_case_8():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_cfw()

def test_case_9():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_ffprobe_path()

@pytest.mark.xfail(strict=True)
def test_case_10():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_vad_extend_speech_before()

@pytest.mark.xfail(strict=True)
def test_case_11():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_tts_path()
    test_execute_task_c_l_i_0.test_exec_cmfcc()

@pytest.mark.xfail(strict=True)
def test_case_12():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = module_1.removeResult(test_execute_task_c_l_i_0)
    test_execute_task_c_l_i_0.test_exec_ffmpeg_sample_rate()

@pytest.mark.xfail(strict=True)
def test_case_13():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_mfcc_window_shift()

@pytest.mark.xfail(strict=True)
def test_case_14():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_tmp_path()

def test_case_15():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_tts_path()

@pytest.mark.xfail(strict=True)
def test_case_16():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_aba_no_zero_duration()

@pytest.mark.xfail(strict=True)
def test_case_17():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = module_2.BlockFinder()
    test_execute_task_c_l_i_0.test_exec_mfcc_fft_order()

@pytest.mark.xfail(strict=True)
def test_case_18():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_mfcc_mask_log_energy_threshold()

@pytest.mark.xfail(strict=True)
def test_case_19():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_vad_min_nonspeech_length()

@pytest.mark.xfail(strict=True)
def test_case_20():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = module_2.isclass(test_execute_task_c_l_i_0)
    test_execute_task_c_l_i_0.test_exec_mfcc_mask_nonspeech()

@pytest.mark.xfail(strict=True)
def test_case_21():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_mfcc_mask_extend_speech_after()

@pytest.mark.xfail(strict=True)
def test_case_22():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_dtw_algorithm()

@pytest.mark.xfail(strict=True)
def test_case_23():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_dtw_margin()

@pytest.mark.xfail(strict=True)
def test_case_24():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    block_finder_0 = module_2.BlockFinder()
    test_execute_task_c_l_i_0.test_exec_voice_code()

@pytest.mark.xfail(strict=True)
def test_case_25():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_tts()
    test_execute_task_c_l_i_0.test_exec_mfcc_mask_min_nonspeech_length()

@pytest.mark.xfail(strict=True)
def test_case_26():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_safety_checks()

def test_case_27():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_tts()

@pytest.mark.xfail(strict=True)
def test_case_28():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_tts_cache()
    module_1.removeResult(var_0)

@pytest.mark.xfail(strict=True)
def test_case_29():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_ffprobe_path()
    var_1 = test_execute_task_c_l_i_0.test_exec_tts_path()
    var_2 = test_execute_task_c_l_i_0.test_exec_tts()
    test_execute_task_c_l_i_0.test_exec_cew_subprocess_enabled()

@pytest.mark.xfail(strict=True)
def test_case_30():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_cew_subprocess_path()

@pytest.mark.xfail(strict=True)
def test_case_31():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_aba_nonspeech_tolerance()

@pytest.mark.xfail(strict=True)
def test_case_32():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_ffprobe_path()
    test_execute_task_c_l_i_0.test_exec_allow_unlisted_language()

@pytest.mark.xfail(strict=True)
def test_case_33():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_mfcc_lower_frequency()

@pytest.mark.xfail(strict=True)
def test_case_34():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_mfcc_emphasis_factor()

@pytest.mark.xfail(strict=True)
def test_case_35():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_vad_extend_speech_after()

def test_case_36():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_ffmpeg_path()

@pytest.mark.xfail(strict=True)
def test_case_37():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = module_2.iscode(test_execute_task_c_l_i_0)
    test_execute_task_c_l_i_0.test_exec_mfcc_mask_extend_speech_before()

@pytest.mark.xfail(strict=True)
def test_case_38():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.test_exec_ffprobe_path()
    test_execute_task_c_l_i_0.test_exec_c_extensions()