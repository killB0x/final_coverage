# Automatically generated by Pynguin.
import pytest
import aeneas.tests.long_test_task_parameters as module_0
import inspect as module_1
import platform as module_2

def test_case_0():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False

@pytest.mark.xfail(strict=True)
def test_case_1():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_text_type_mplain()

@pytest.mark.xfail(strict=True)
def test_case_2():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_text_type_unparsed()

@pytest.mark.xfail(strict=True)
def test_case_3():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_os_task_file_eaf_audio_ref()

@pytest.mark.xfail(strict=True)
def test_case_4():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = module_1.trace()
    test_execute_task_c_l_i_0.test_exec_os_task_file_levels_13()

@pytest.mark.xfail(strict=True)
def test_case_5():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = module_2.system()
    list_0 = [test_execute_task_c_l_i_0, var_0]
    var_1 = test_execute_task_c_l_i_0.addCleanup(test_execute_task_c_l_i_0, *list_0)
    test_execute_task_c_l_i_0.test_exec_exact_5600_16000_munparsed_issue_168()

@pytest.mark.xfail(strict=True)
def test_case_6():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_audio_file_head_length()

@pytest.mark.xfail(strict=True)
def test_case_7():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_os_task_file_head_tail_format_stretch()

@pytest.mark.xfail(strict=True)
def test_case_8():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_os_task_file_id_regex()

@pytest.mark.xfail(strict=True)
def test_case_9():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_text_type_parsed()

@pytest.mark.xfail(strict=True)
def test_case_10():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_text_type_plain()

@pytest.mark.xfail(strict=True)
def test_case_11():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = module_1.getfullargspec(test_execute_task_c_l_i_0)
    test_execute_task_c_l_i_0.test_exec_os_task_file_levels_1()

@pytest.mark.xfail(strict=True)
def test_case_12():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = module_1.trace()
    test_execute_task_c_l_i_0.test_exec_os_task_file_levels_3()

@pytest.mark.xfail(strict=True)
def test_case_13():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_audio_file_detect_head_min()

@pytest.mark.xfail(strict=True)
def test_case_14():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_audio_file_detect_tail_min()

@pytest.mark.xfail(strict=True)
def test_case_15():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_os_task_file_head_tail_format_hidden()

@pytest.mark.xfail(strict=True)
def test_case_16():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_task_adjust_boundary_nonspeech_min_task_adjust_boundary_nonspeech_string()

@pytest.mark.xfail(strict=True)
def test_case_17():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_task_adjust_boundary_offset_value()

@pytest.mark.xfail(strict=True)
def test_case_18():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_audio_file_detect_tail_max()

@pytest.mark.xfail(strict=True)
def test_case_19():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_text_file_transliterate_map()

@pytest.mark.xfail(strict=True)
def test_case_20():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_task_adjust_boundary_aftercurrent_value()

@pytest.mark.xfail(strict=True)
def test_case_21():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_audio_file_tail_length()

@pytest.mark.xfail(strict=True)
def test_case_22():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_audio_file_process_length()

@pytest.mark.xfail(strict=True)
def test_case_23():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_rate_task_adjust_boundary_rate_value()

@pytest.mark.xfail(strict=True)
def test_case_24():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_task_custom_id()

@pytest.mark.xfail(strict=True)
def test_case_25():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = module_1.trace()
    test_execute_task_c_l_i_0.test_exec_os_task_file_levels_12()

@pytest.mark.xfail(strict=True)
def test_case_26():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_os_task_file_levels_123()

@pytest.mark.xfail(strict=True)
def test_case_27():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_text_file_ignore_regex()

@pytest.mark.xfail(strict=True)
def test_case_28():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_os_task_file_head_tail_format_add()

@pytest.mark.xfail(strict=True)
def test_case_29():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_text_type_munparsed()

@pytest.mark.xfail(strict=True)
def test_case_30():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_os_task_file_smil_audio_ref_os_task_file_smil_page_ref()

@pytest.mark.xfail(strict=True)
def test_case_31():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_rateaggressive_task_adjust_boundary_rate_value()

@pytest.mark.xfail(strict=True)
def test_case_32():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_os_task_file_levels_23()

@pytest.mark.xfail(strict=True)
def test_case_33():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_os_task_file_levels_2()

@pytest.mark.xfail(strict=True)
def test_case_34():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_text_type_subtitles()

@pytest.mark.xfail(strict=True)
def test_case_35():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_task_adjust_boundary_beforenext_value()

@pytest.mark.xfail(strict=True)
def test_case_36():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_task_adjust_boundary_no_zero()

@pytest.mark.xfail(strict=True)
def test_case_37():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_task_description()

@pytest.mark.xfail(strict=True)
def test_case_38():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = module_2.system()
    test_execute_task_c_l_i_0.test_exec_task_adjust_boundary_percent_value()

@pytest.mark.xfail(strict=True)
def test_case_39():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_is_audio_file_detect_head_max()