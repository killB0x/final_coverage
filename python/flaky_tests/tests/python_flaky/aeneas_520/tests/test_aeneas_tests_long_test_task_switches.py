# Automatically generated by Pynguin.
import pytest
import aeneas.tests.long_test_task_switches as module_0

def test_case_0():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False

@pytest.mark.xfail(strict=True)
def test_case_1():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_keep_audio()

@pytest.mark.xfail(strict=True)
def test_case_2():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_faster_rate()

@pytest.mark.xfail(strict=True)
def test_case_3():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_output_html()

@pytest.mark.xfail(strict=True)
def test_case_4():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_presets_word()

@pytest.mark.xfail(strict=True)
def test_case_5():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_skip_validator()

@pytest.mark.xfail(strict=True)
def test_case_6():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_zero()

@pytest.mark.xfail(strict=True)
def test_case_7():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    var_0 = test_execute_task_c_l_i_0.shortDescription()
    test_execute_task_c_l_i_0.zzz_test_exec_youtube()

@pytest.mark.xfail(strict=True)
def test_case_8():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.zzz_test_exec_youtube_largest_audio()

@pytest.mark.xfail(strict=True)
def test_case_9():
    test_execute_task_c_l_i_0 = module_0.TestExecuteTaskCLI()
    assert module_0.EXTRA_TESTS is False
    test_execute_task_c_l_i_0.test_exec_rate()