# Automatically generated by Pynguin.
import pytest
import freegs.optimiser as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = 'uxxg ^IRzOXp{@'
    module_0.mutate(str_0, str_0)

def test_case_1():
    set_0 = set()
    var_0 = module_0.mutate(set_0, set_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.optimise(bool_0, bool_0, bool_0, bool_0, F=bool_0)

def test_case_3():
    bool_0 = True
    with pytest.raises(AssertionError):
        module_0.optimise(bool_0, bool_0, bool_0, bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    set_0 = set()
    module_0.pickUnique(set_0, set_0, set_0)

def test_case_5():
    bool_0 = True
    set_0 = set()
    var_0 = module_0.pickUnique(bool_0, bool_0, set_0)

def test_case_6():
    bool_0 = False
    set_0 = {bool_0}
    with pytest.raises(AssertionError):
        module_0.pickUnique(bool_0, bool_0, set_0)

def test_case_7():
    set_0 = set()
    int_0 = 3
    var_0 = module_0.pickUnique(int_0, int_0, set_0)
    str_0 = ''
    with pytest.raises(AssertionError):
        module_0.optimise(var_0, var_0, var_0, str_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = -576
    dict_0 = {int_0: int_0, int_0: int_0, int_0: int_0}
    bool_0 = True
    tuple_0 = (dict_0, dict_0, bool_0)
    module_0.mutate(int_0, tuple_0)