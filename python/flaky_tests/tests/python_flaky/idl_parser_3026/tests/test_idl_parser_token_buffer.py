# Automatically generated by Pynguin.
import pytest
import idl_parser.token_buffer as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b'\xeb\x89Q\xebg\xa9U\x90'
    module_0.TokenBuffer(bytes_0)

def test_case_1():
    dict_0 = {}
    token_buffer_0 = module_0.TokenBuffer(dict_0)
    assert f'{type(module_0.TokenBuffer.t_debug).__module__}.{type(module_0.TokenBuffer.t_debug).__qualname__}' == 'builtins.property'

def test_case_2():
    dict_0 = {}
    token_buffer_0 = module_0.TokenBuffer(dict_0)
    assert f'{type(module_0.TokenBuffer.t_debug).__module__}.{type(module_0.TokenBuffer.t_debug).__qualname__}' == 'builtins.property'
    var_0 = token_buffer_0.pop()

def test_case_3():
    set_0 = set()
    token_buffer_0 = module_0.TokenBuffer(set_0)
    assert f'{type(token_buffer_0).__module__}.{type(token_buffer_0).__qualname__}' == 'idl_parser.token_buffer.TokenBuffer'
    assert f'{type(module_0.TokenBuffer.t_debug).__module__}.{type(module_0.TokenBuffer.t_debug).__qualname__}' == 'builtins.property'
    float_0 = 133.8
    str_0 = '@QSOY&&n"'
    tuple_0 = (set_0, float_0, str_0)
    tuple_1 = (tuple_0,)
    token_buffer_1 = module_0.TokenBuffer(tuple_1)
    assert f'{type(token_buffer_1).__module__}.{type(token_buffer_1).__qualname__}' == 'idl_parser.token_buffer.TokenBuffer'
    var_0 = token_buffer_1.pop()

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ' , '
    set_0 = {str_0, str_0}
    int_0 = 470
    tuple_0 = (str_0, set_0, int_0)
    module_0.TokenBuffer(tuple_0)