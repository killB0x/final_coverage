# Automatically generated by Pynguin.
import pytest
import lcs.strategies.subsumption as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '\n        Searches one step forward in the reliable_classifiers classifier list.\n        Returns None if nothing was found so far, a sequence with a -1 element\n        if the search failed completely\n        (which is the case if the allowed array size of 10000 is reached),\n        or the sequence if one was found.\n        :param reliable_classifiers: ClassifiersList\n        :param forward_size: int\n        :param forward_point: int\n        :return: act sequence and new forward_size\n        '
    module_0.find_subsumers(str_0, str_0, str_0)

def test_case_1():
    tuple_0 = ()
    list_0 = module_0.find_subsumers(tuple_0, tuple_0, tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.does_subsume(bool_0, bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.find_subsumers(none_type_0, none_type_0, none_type_0)