# Automatically generated by Pynguin.
import pytest
import lcs.Perception as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b'\x10\xdf\xd5\x0cNx\xb6P<T\xc2O\xee\xaa['
    module_0.Perception(bytes_0, bytes_0)

def test_case_1():
    str_0 = 'q67o\\L\\L\tsdS]d`#&r'
    perception_0 = module_0.Perception(str_0)
    assert f'{type(perception_0).__module__}.{type(perception_0).__qualname__}' == 'lcs.Perception.Perception'
    assert len(perception_0) == 18
    assert f'{type(module_0.Perception.empty).__module__}.{type(module_0.Perception.empty).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Perception.oktypes).__module__}.{type(module_0.Perception.oktypes).__qualname__}' == 'builtins.member_descriptor'

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'u\njnRtL;o#a:dk\x0b\x0cL'
    perception_0 = module_0.Perception(str_0)
    assert f'{type(perception_0).__module__}.{type(perception_0).__qualname__}' == 'lcs.Perception.Perception'
    assert len(perception_0) == 17
    assert f'{type(module_0.Perception.empty).__module__}.{type(module_0.Perception.empty).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Perception.oktypes).__module__}.{type(module_0.Perception.oktypes).__qualname__}' == 'builtins.member_descriptor'
    var_0 = perception_0.index(perception_0)
    assert var_0 == 0
    int_0 = perception_0.__len__()
    module_0.Perception(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    set_0 = set()
    perception_0 = module_0.Perception(set_0, set_0)
    assert f'{type(perception_0).__module__}.{type(perception_0).__qualname__}' == 'lcs.Perception.Perception'
    assert len(perception_0) == 0
    assert f'{type(module_0.Perception.empty).__module__}.{type(module_0.Perception.empty).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Perception.oktypes).__module__}.{type(module_0.Perception.oktypes).__qualname__}' == 'builtins.member_descriptor'
    var_0 = perception_0.__hash__()
    assert var_0 == 5740354900026072187
    var_1 = perception_0.__eq__(perception_0)
    assert var_1 is True
    module_0.Perception(var_1, set_0)

def test_case_4():
    bytes_0 = b'C\x9a\x88\xbe\x15g,\xc9rvU\x90\x0f\xb0\x86\xf8!\xfd\xfb'
    with pytest.raises(AssertionError):
        module_0.Perception(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    set_0 = set()
    perception_0 = module_0.Perception(set_0, set_0)
    assert f'{type(perception_0).__module__}.{type(perception_0).__qualname__}' == 'lcs.Perception.Perception'
    assert len(perception_0) == 0
    assert f'{type(module_0.Perception.empty).__module__}.{type(module_0.Perception.empty).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Perception.oktypes).__module__}.{type(module_0.Perception.oktypes).__qualname__}' == 'builtins.member_descriptor'
    perception_1 = module_0.Perception(set_0, set_0)
    perception_2 = module_0.Perception(set_0)
    var_0 = perception_2.__str__()
    assert var_0 == ''
    var_1 = perception_1.__repr__()
    assert var_1 == ''
    var_2 = var_0.__repr__()
    assert var_2 == "''"
    int_0 = perception_0.__len__()
    perception_0.__getitem__(var_1)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'u\njnRtL;o#a:dk\x0b\x0cL'
    perception_0 = module_0.Perception(str_0)
    assert f'{type(perception_0).__module__}.{type(perception_0).__qualname__}' == 'lcs.Perception.Perception'
    assert len(perception_0) == 17
    assert f'{type(module_0.Perception.empty).__module__}.{type(module_0.Perception.empty).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Perception.oktypes).__module__}.{type(module_0.Perception.oktypes).__qualname__}' == 'builtins.member_descriptor'
    var_0 = perception_0.count(perception_0)
    assert var_0 == 1
    var_1 = perception_0.__getitem__(var_0)
    assert var_1 == '\n'
    var_0.__iand__(var_0)