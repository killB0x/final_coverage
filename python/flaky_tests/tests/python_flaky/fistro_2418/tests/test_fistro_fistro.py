# Automatically generated by Pynguin.
import pytest
import fistro.fistro as module_0
import enum as module_1

def test_case_0():
    dict_0 = {}
    var_0 = module_0.generate_from_json(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -1162
    module_0.generate_from_json(int_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'max_year'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.generate_from_json(dict_0)
    module_0.enrich_fields(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    enum_dict_0 = module_1._EnumDict()
    module_0.inner_inspection(enum_dict_0)

def test_case_4():
    bytes_0 = b'I#\xef\x99\xf1\xacM\xc6p\xb6\x00\xbc\xd0\xe1\x1bv\xc9o'
    var_0 = module_0.inner_inspection(bytes_0)

def test_case_5():
    dict_0 = {}
    str_0 = module_0.get_class_body_from_annotations(dict_0)
    assert str_0 == ''

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    module_0.enrich_fields(none_type_0, none_type_0)

def test_case_7():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0, none_type_0: none_type_0}
    str_0 = module_0.get_class_body_from_annotations(dict_0)
    assert str_0 == 'None: Any\n'

def test_case_8():
    list_0 = []
    var_0 = module_0.inner_inspection(list_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = '_Wa=FV '
    dict_0 = {str_0: str_0}
    module_0.get_class_body_from_annotations(dict_0)

def test_case_10():
    enum_dict_0 = module_1._EnumDict()
    var_0 = module_0.generate_from_json(enum_dict_0)
    list_0 = module_0.enrich_fields(var_0, enum_dict_0)

def test_case_11():
    enum_dict_0 = module_1._EnumDict()
    str_0 = module_0.get_class_body_from_annotations(enum_dict_0)
    assert str_0 == ''
    list_0 = [str_0, enum_dict_0, str_0, str_0]
    var_0 = module_0.generate_from_json(enum_dict_0)
    var_1 = module_0.inner_inspection(list_0)
    list_1 = module_0.enrich_fields(var_0, str_0)

def test_case_12():
    str_0 = 'max_year'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.generate_from_json(dict_0)
    var_1 = module_0.generate(var_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = 'max_year'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.generate_from_json(dict_0)
    dict_1 = {var_0: var_0, var_0: var_0, str_0: var_0, var_0: var_0, var_0: var_0, var_0: var_0, str_0: var_0}
    str_1 = module_0.get_class_body_from_annotations(dict_1)
    var_1 = module_0.generate(var_0, as_json=var_0)
    var_1.readlines(dict_0)

def test_case_14():
    str_0 = 'max_year'
    dict_0 = {str_0: str_0, str_0: str_0}
    var_0 = module_0.generate_from_json(dict_0)
    dict_1 = {var_0: var_0, var_0: var_0, str_0: var_0, var_0: var_0, var_0: var_0, var_0: var_0, str_0: var_0}
    str_1 = module_0.get_class_body_from_annotations(dict_1)
    var_1 = module_0.generate(var_0, as_dict=str_0)