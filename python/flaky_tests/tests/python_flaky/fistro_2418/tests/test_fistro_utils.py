# Automatically generated by Pynguin.
import pytest
import fistro.utils as module_0

def test_case_0():
    bytes_0 = b'A\x0b\xc7\x0e\xd2\xa7%Dm\xaf*\x8a'
    bool_0 = module_0.is_list(bytes_0)
    assert bool_0 is False

def test_case_1():
    str_0 = module_0.valid_id()
    bool_0 = module_0.is_dict(str_0)
    assert bool_0 is False

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.get_base_type(none_type_0)

def test_case_3():
    str_0 = module_0.valid_id()

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'This case makes no much sense'
    module_0.spawn_class(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = module_0.valid_id()
    module_0.get_name(str_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = -1899
    dict_0 = {}
    bool_0 = module_0.is_list(int_0)
    assert bool_0 is False
    module_0.get_return_type(dict_0)

def test_case_7():
    list_0 = []
    str_0 = module_0.valid_id()
    none_type_0 = module_0.spawn_class(str_0, list_0)
    str_1 = module_0.get_return_type_name(none_type_0)