# Automatically generated by Pynguin.
import pytest
import ledger.stores.directory_store as module_0
import builtins as module_1

def test_case_0():
    str_0 = '!'
    directory_store_0 = module_0.DirectoryStore(str_0, str_0)
    assert f'{type(directory_store_0).__module__}.{type(directory_store_0).__qualname__}' == 'ledger.stores.directory_store.DirectoryStore'
    assert directory_store_0.baseDir == '!'
    assert directory_store_0.dbName == '!'
    assert directory_store_0.dbPath == '!/!'
    assert f'{type(module_0.DirectoryStore.keys).__module__}.{type(module_0.DirectoryStore.keys).__qualname__}' == 'builtins.property'

def test_case_1():
    str_0 = '!'
    object_0 = module_0.DirectoryStore(str_0, str_0)
    assert f'{type(object_0).__module__}.{type(object_0).__qualname__}' == 'ledger.stores.directory_store.DirectoryStore'
    assert object_0.baseDir == '!'
    assert object_0.dbName == '!'
    assert object_0.dbPath == '!/!'
    assert f'{type(module_0.DirectoryStore.keys).__module__}.{type(module_0.DirectoryStore.keys).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 849
    module_0.DirectoryStore(int_0, int_0)

def test_case_3():
    str_0 = '<,xx'
    directory_store_0 = module_0.DirectoryStore(str_0, str_0)
    assert f'{type(directory_store_0).__module__}.{type(directory_store_0).__qualname__}' == 'ledger.stores.directory_store.DirectoryStore'
    assert directory_store_0.baseDir == '<,xx'
    assert directory_store_0.dbName == '<,xx'
    assert directory_store_0.dbPath == '<,xx/<,xx'
    assert f'{type(module_0.DirectoryStore.keys).__module__}.{type(module_0.DirectoryStore.keys).__qualname__}' == 'builtins.property'
    var_0 = directory_store_0.get(str_0)
    assert var_0 == ''
    var_1 = directory_store_0.get(var_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = '<,xx'
    directory_store_0 = module_0.DirectoryStore(str_0, str_0)
    assert f'{type(directory_store_0).__module__}.{type(directory_store_0).__qualname__}' == 'ledger.stores.directory_store.DirectoryStore'
    assert directory_store_0.baseDir == '<,xx'
    assert directory_store_0.dbName == '<,xx'
    assert directory_store_0.dbPath == '<,xx/<,xx'
    assert f'{type(module_0.DirectoryStore.keys).__module__}.{type(module_0.DirectoryStore.keys).__qualname__}' == 'builtins.property'
    str_1 = '<5`\\NH\rZ1T4edX\rkF_z8'
    var_0 = directory_store_0.get(str_0)
    assert var_0 == ''
    var_1 = directory_store_0.keyFilePath(var_0)
    assert var_1 == '<,xx/<,xx/'
    str_2 = 'E{iAT><LsswZO0HtpK8'
    var_2 = directory_store_0.get(str_2)
    var_3 = directory_store_0.iterator()
    var_4 = module_1.object()
    var_4.appendToValue(str_1, str_1)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '!'
    directory_store_0 = module_0.DirectoryStore(str_0, str_0)
    assert f'{type(directory_store_0).__module__}.{type(directory_store_0).__qualname__}' == 'ledger.stores.directory_store.DirectoryStore'
    assert directory_store_0.baseDir == '!'
    assert directory_store_0.dbName == '!'
    assert directory_store_0.dbPath == '!/!'
    assert f'{type(module_0.DirectoryStore.keys).__module__}.{type(module_0.DirectoryStore.keys).__qualname__}' == 'builtins.property'
    directory_store_0.put(str_0, directory_store_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = '!'
    directory_store_0 = module_0.DirectoryStore(str_0, str_0)
    assert f'{type(directory_store_0).__module__}.{type(directory_store_0).__qualname__}' == 'ledger.stores.directory_store.DirectoryStore'
    assert directory_store_0.baseDir == '!'
    assert directory_store_0.dbName == '!'
    assert directory_store_0.dbPath == '!/!'
    assert f'{type(module_0.DirectoryStore.keys).__module__}.{type(module_0.DirectoryStore.keys).__qualname__}' == 'builtins.property'
    directory_store_0.appendToValue(str_0, directory_store_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '\n       Lists stored chunks\n\n       :return: sorted list of available chunk indices\n       '
    str_1 = 'S~zA.\\)!W\x0br{q214Y!d'
    directory_store_0 = module_0.DirectoryStore(str_0, str_1)
    assert f'{type(directory_store_0).__module__}.{type(directory_store_0).__qualname__}' == 'ledger.stores.directory_store.DirectoryStore'
    assert directory_store_0.baseDir == '\n       Lists stored chunks\n\n       :return: sorted list of available chunk indices\n       '
    assert directory_store_0.dbName == 'S~zA.\\)!W\x0br{q214Y!d'
    assert directory_store_0.dbPath == '\n       Lists stored chunks\n\n       :return: sorted list of available chunk indices\n       /S~zA.\\)!W\x0br{q214Y!d'
    assert f'{type(module_0.DirectoryStore.keys).__module__}.{type(module_0.DirectoryStore.keys).__qualname__}' == 'builtins.property'
    var_0 = directory_store_0.get(str_0)
    assert var_0 == ''
    var_1 = directory_store_0.iterator()
    module_1.object(**directory_store_0)