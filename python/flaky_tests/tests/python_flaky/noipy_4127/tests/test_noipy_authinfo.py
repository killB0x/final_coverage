# Automatically generated by Pynguin.
import pytest
import noipy.authinfo as module_0
import re as module_1
import enum as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    module_0.store(bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'Ad-Y|MVO'
    module_0.store(str_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'Ad-^Y|Me6VO'
    module_0.load(str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    var_0 = module_1.purge()
    module_0.load(var_0)

def test_case_4():
    enum_dict_0 = module_2._EnumDict()
    api_auth_0 = module_0.ApiAuth(enum_dict_0, enum_dict_0)
    assert module_0.NOIPY_CONFIG == '.noipy'
    assert module_0.DEFAULT_CONFIG_DIR == '/root'
    assert f'{type(module_0.ApiAuth.token).__module__}.{type(module_0.ApiAuth.token).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ApiAuth.base64key).__module__}.{type(module_0.ApiAuth.base64key).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ApiAuth.get_instance).__module__}.{type(module_0.ApiAuth.get_instance).__qualname__}' == 'builtins.method'

def test_case_5():
    bool_0 = False
    api_auth_0 = module_0.ApiAuth(bool_0)
    assert module_0.NOIPY_CONFIG == '.noipy'
    assert module_0.DEFAULT_CONFIG_DIR == '/root'
    assert f'{type(module_0.ApiAuth.token).__module__}.{type(module_0.ApiAuth.token).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ApiAuth.base64key).__module__}.{type(module_0.ApiAuth.base64key).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ApiAuth.get_instance).__module__}.{type(module_0.ApiAuth.get_instance).__qualname__}' == 'builtins.method'
    var_0 = api_auth_0.__str__()
    assert var_0 == 'RmFsc2U6'
    var_1 = var_0.__str__()
    assert var_1 == 'RmFsc2U6'

def test_case_6():
    str_0 = 'T1'
    var_0 = module_0.exists(str_0, str_0)
    assert var_0 is True
    assert module_0.NOIPY_CONFIG == '.noipy'
    assert module_0.DEFAULT_CONFIG_DIR == '/root'

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = 'Ad-^Y|MVO'
    module_0.store(str_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'Ad-Y|MVO'
    api_auth_0 = module_0.ApiAuth(str_0, str_0)
    assert module_0.NOIPY_CONFIG == '.noipy'
    assert module_0.DEFAULT_CONFIG_DIR == '/root'
    assert f'{type(module_0.ApiAuth.token).__module__}.{type(module_0.ApiAuth.token).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ApiAuth.base64key).__module__}.{type(module_0.ApiAuth.base64key).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ApiAuth.get_instance).__module__}.{type(module_0.ApiAuth.get_instance).__qualname__}' == 'builtins.method'
    var_0 = api_auth_0.__eq__(str_0)
    assert var_0 is False
    module_0.store(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'Ad-^Y|MVO'
    module_0.load(str_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = 'Ap`/mY\n=VO'
    module_0.store(str_0, str_0)