# Automatically generated by Pynguin.
import pytest
import platform as module_0
import tests.system.test_produce_consume_commit_offset as module_1
import _pytest.freeze_support as module_2
import _pytest.mark.structures as module_3
import warnings as module_4
import _pytest.recwarn as module_5

@pytest.mark.xfail(strict=True)
def test_case_0():
    var_0 = module_0.machine()
    module_1.test_produce_many_consume_one(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = module_2.freeze_includes()
    module_1.test_produce_many_consume_some(list_0, list_0)

def test_case_2():
    module_1.producer()

@pytest.mark.xfail(strict=True)
def test_case_3():
    mark_generator_0 = module_3.MarkGenerator()
    catch_warnings_0 = module_4.catch_warnings(record=mark_generator_0)
    module_1.test_produce_many_consume_some(mark_generator_0, catch_warnings_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    var_0 = module_0.python_revision()
    mark_generator_0 = module_3.MarkGenerator()
    module_1.test_produce_many_consume_one(mark_generator_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    mark_generator_0 = module_3.MarkGenerator()
    var_0 = module_5.warns(match=mark_generator_0)
    module_1.test_produce_many_consume_one(mark_generator_0, var_0)