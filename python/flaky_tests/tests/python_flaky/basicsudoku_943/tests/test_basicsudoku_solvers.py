# Automatically generated by Pynguin.
import pytest
import basicsudoku.solvers as module_0
import basicsudoku as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.BasicSolver(none_type_0)

def test_case_1():
    sudoku_board_0 = module_1.SudokuBoard()
    basic_solver_0 = module_0.BasicSolver(sudoku_board_0)
    assert f'{type(basic_solver_0).__module__}.{type(basic_solver_0).__qualname__}' == 'basicsudoku.solvers.BasicSolver'
    assert f'{type(basic_solver_0.board).__module__}.{type(basic_solver_0.board).__qualname__}' == 'basicsudoku.SudokuBoard'
    assert len(basic_solver_0.board) == 81
    assert basic_solver_0.last_solve_time == pytest.approx(0.13504791259765625, abs=0.01, rel=0.01)

def test_case_2():
    sudoku_board_0 = module_1.SudokuBoard()
    var_0 = sudoku_board_0.clear()
    basic_solver_0 = module_0.BasicSolver(sudoku_board_0)
    assert f'{type(basic_solver_0).__module__}.{type(basic_solver_0).__qualname__}' == 'basicsudoku.solvers.BasicSolver'
    assert f'{type(basic_solver_0.board).__module__}.{type(basic_solver_0.board).__qualname__}' == 'basicsudoku.SudokuBoard'
    assert len(basic_solver_0.board) == 81
    assert basic_solver_0.last_solve_time == pytest.approx(0.13457798957824707, abs=0.01, rel=0.01)
    basic_solver_1 = module_0.BasicSolver(sudoku_board_0)