# Automatically generated by Pynguin.
import pytest
import journeyplanner.type as module_0

def test_case_0():
    resource_0 = module_0.Resource()

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_0.parsedatetime(bool_0, bool_0)

def test_case_2():
    str_0 = 'L{:CK4h[,w43e\rA"L'
    coordinate_0 = module_0.Coordinate(latitude=str_0, longitude=str_0)
    assert f'{type(module_0.Coordinate.x).__module__}.{type(module_0.Coordinate.x).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Coordinate.y).__module__}.{type(module_0.Coordinate.y).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Coordinate.fromxy).__module__}.{type(module_0.Coordinate.fromxy).__qualname__}' == 'builtins.method'

def test_case_3():
    bool_0 = False
    endpoint_0 = module_0.Endpoint(latitude=bool_0, longitude=bool_0, name=bool_0)
    assert f'{type(endpoint_0).__module__}.{type(endpoint_0).__qualname__}' == 'journeyplanner.type.Endpoint'
    assert endpoint_0.latitude is False
    assert endpoint_0.longitude is False
    assert endpoint_0.name is False

def test_case_4():
    resource_0 = module_0.Resource()
    trip_0 = resource_0.__repr__()

@pytest.mark.xfail(strict=True)
def test_case_5():
    dict_0 = {}
    trip_0 = module_0.Trip(dict_0)
    assert f'{type(trip_0).__module__}.{type(trip_0).__qualname__}' == 'journeyplanner.type.Trip'
    assert trip_0.alternative is False
    assert trip_0.valid is True
    assert trip_0.legs == []
    assert f'{type(module_0.Trip.duration).__module__}.{type(module_0.Trip.duration).__qualname__}' == 'builtins.property'
    none_type_0 = None
    trip_1 = module_0.Trip(dict_0)
    module_0.LegEndpoint(none_type_0)

def test_case_6():
    dict_0 = {}
    trip_0 = module_0.Trip(dict_0)
    assert f'{type(trip_0).__module__}.{type(trip_0).__qualname__}' == 'journeyplanner.type.Trip'
    assert trip_0.alternative is False
    assert trip_0.valid is True
    assert trip_0.legs == []
    assert f'{type(module_0.Trip.duration).__module__}.{type(module_0.Trip.duration).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_7():
    tuple_0 = ()
    dict_0 = {tuple_0: tuple_0}
    module_0.Trip(dict_0)