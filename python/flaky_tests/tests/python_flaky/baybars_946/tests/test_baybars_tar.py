# Automatically generated by Pynguin.
import pytest
import baybars.tar as module_0

def test_case_0():
    str_0 = 'Training and validation loss'
    str_1 = 'w9>k3'
    tar_b_z2_directory_0 = module_0.TarBZ2Directory(str_0, str_1)
    assert f'{type(tar_b_z2_directory_0).__module__}.{type(tar_b_z2_directory_0).__qualname__}' == 'baybars.tar.TarBZ2Directory'
    none_type_0 = tar_b_z2_directory_0.create()

def test_case_1():
    str_0 = '*{\x0c~\x0b_HJYLZD+A6(06'
    abstract_tar_directory_0 = module_0.AbstractTarDirectory(str_0, str_0, str_0)
    assert f'{type(abstract_tar_directory_0).__module__}.{type(abstract_tar_directory_0).__qualname__}' == 'baybars.tar.AbstractTarDirectory'
    assert f'{type(module_0.AbstractTarDirectory.write_mode).__module__}.{type(module_0.AbstractTarDirectory.write_mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.AbstractTarDirectory.read_mode).__module__}.{type(module_0.AbstractTarDirectory.read_mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.AbstractTarDirectory.directory_path).__module__}.{type(module_0.AbstractTarDirectory.directory_path).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.AbstractTarDirectory.file_path).__module__}.{type(module_0.AbstractTarDirectory.file_path).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.AbstractTarDirectory.mode).__module__}.{type(module_0.AbstractTarDirectory.mode).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    tar_g_z_directory_0 = module_0.TarGZDirectory(none_type_0, none_type_0)
    assert f'{type(tar_g_z_directory_0).__module__}.{type(tar_g_z_directory_0).__qualname__}' == 'baybars.tar.TarGZDirectory'
    tar_g_z_directory_0.extract()

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'w9k3'
    tar_b_z2_directory_0 = module_0.TarBZ2Directory(str_0, str_0)
    assert f'{type(tar_b_z2_directory_0).__module__}.{type(tar_b_z2_directory_0).__qualname__}' == 'baybars.tar.TarBZ2Directory'
    tar_b_z2_directory_0.extract()

def test_case_4():
    bool_0 = True
    str_0 = 'red'
    tar_directory_0 = module_0.TarDirectory(bool_0, str_0)
    assert f'{type(tar_directory_0).__module__}.{type(tar_directory_0).__qualname__}' == 'baybars.tar.TarDirectory'