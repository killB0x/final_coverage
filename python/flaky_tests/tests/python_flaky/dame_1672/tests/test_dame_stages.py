# Automatically generated by Pynguin.
import pytest
import dame.stages as module_0

def test_case_0():
    set_0 = set()
    stages_0 = module_0.Stages(set_0, set_0)
    assert f'{type(stages_0).__module__}.{type(stages_0).__qualname__}' == 'dame.stages.Stages'
    assert stages_0.provider == {}
    assert stages_0.stages == []
    assert stages_0.source == {*()}

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '2N/d)c834_A\t"'
    module_0.Stages(str_0, str_0)

def test_case_2():
    list_0 = []
    stages_0 = module_0.Stages(list_0, list_0)
    assert f'{type(stages_0).__module__}.{type(stages_0).__qualname__}' == 'dame.stages.Stages'
    assert stages_0.provider == {}
    assert stages_0.stages == []
    assert stages_0.source == []
    var_0 = stages_0.__iter__()

@pytest.mark.xfail(strict=True)
def test_case_3():
    set_0 = set()
    stages_0 = module_0.Stages(set_0, set_0)
    assert f'{type(stages_0).__module__}.{type(stages_0).__qualname__}' == 'dame.stages.Stages'
    assert stages_0.provider == {}
    assert stages_0.stages == []
    assert stages_0.source == {*()}
    stages_0.__getitem__(set_0)

def test_case_4():
    list_0 = []
    stages_0 = module_0.Stages(list_0, list_0)
    assert f'{type(stages_0).__module__}.{type(stages_0).__qualname__}' == 'dame.stages.Stages'
    assert stages_0.provider == {}
    assert stages_0.stages == []
    assert stages_0.source == []
    var_0 = stages_0.to()

@pytest.mark.xfail(strict=True)
def test_case_5():
    dict_0 = {}
    bytes_0 = b'V\xf7'
    list_0 = [bytes_0, bytes_0, bytes_0]
    stages_0 = module_0.Stages(list_0, dict_0)
    assert f'{type(stages_0).__module__}.{type(stages_0).__qualname__}' == 'dame.stages.Stages'
    assert stages_0.provider == {}
    assert stages_0.stages == []
    assert stages_0.source == [b'V\xf7', b'V\xf7', b'V\xf7']
    stages_0.to(*list_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    list_0 = []
    stages_0 = module_0.Stages(list_0, list_0)
    assert f'{type(stages_0).__module__}.{type(stages_0).__qualname__}' == 'dame.stages.Stages'
    assert stages_0.provider == {}
    assert stages_0.stages == []
    assert stages_0.source == []
    var_0 = stages_0.to()
    stages_1 = module_0.Stages(list_0, list_0)
    var_1 = stages_1.__iter__()
    stages_0.get_requirements(var_0)