# Automatically generated by Pynguin.
import pytest
import dame.dataset as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    dataset_0 = module_0.Dataset()
    assert f'{type(module_0.Dataset.manager).__module__}.{type(module_0.Dataset.manager).__qualname__}' == 'builtins.property'
    dataset_0.assequence()

def test_case_1():
    dataset_0 = module_0.Dataset()
    assert f'{type(module_0.Dataset.manager).__module__}.{type(module_0.Dataset.manager).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_2():
    dataset_0 = module_0.Dataset()
    assert f'{type(module_0.Dataset.manager).__module__}.{type(module_0.Dataset.manager).__qualname__}' == 'builtins.property'
    dataset_0.__getitem__(dataset_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    dataset_0 = module_0.Dataset()
    assert f'{type(module_0.Dataset.manager).__module__}.{type(module_0.Dataset.manager).__qualname__}' == 'builtins.property'
    dataset_0.__len__()

@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 973.561
    list_0 = []
    dict_0 = {}
    dataset_0 = module_0.Dataset(**dict_0)
    assert f'{type(module_0.Dataset.manager).__module__}.{type(module_0.Dataset.manager).__qualname__}' == 'builtins.property'
    dataset_0.set_arguments_for(float_0, *list_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    dataset_0 = module_0.Dataset()
    assert f'{type(module_0.Dataset.manager).__module__}.{type(module_0.Dataset.manager).__qualname__}' == 'builtins.property'
    dataset_0.assequence(dataset_0)