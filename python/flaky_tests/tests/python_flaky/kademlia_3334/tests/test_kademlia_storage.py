# Automatically generated by Pynguin.
import pytest
import kademlia.storage as module_0
import abc as module_1

def test_case_0():
    forgetful_storage_0 = module_0.ForgetfulStorage()
    assert f'{type(forgetful_storage_0).__module__}.{type(forgetful_storage_0).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(forgetful_storage_0.data).__module__}.{type(forgetful_storage_0.data).__qualname__}' == 'collections.OrderedDict'
    assert len(forgetful_storage_0.data) == 0
    assert forgetful_storage_0.ttl == 604800
    bool_0 = False
    var_0 = forgetful_storage_0.__setitem__(forgetful_storage_0, bool_0)
    assert len(forgetful_storage_0.data) == 1

@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -327
    forgetful_storage_0 = module_0.ForgetfulStorage(int_0)
    assert f'{type(forgetful_storage_0).__module__}.{type(forgetful_storage_0).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(forgetful_storage_0.data).__module__}.{type(forgetful_storage_0.data).__qualname__}' == 'collections.OrderedDict'
    assert len(forgetful_storage_0.data) == 0
    assert forgetful_storage_0.ttl == -327
    int_1 = 657
    var_0 = forgetful_storage_0.__setitem__(int_1, int_1)
    var_1 = forgetful_storage_0.__iter__()
    var_0.get(forgetful_storage_0)

def test_case_2():
    forgetful_storage_0 = module_0.ForgetfulStorage()
    assert f'{type(forgetful_storage_0).__module__}.{type(forgetful_storage_0).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(forgetful_storage_0.data).__module__}.{type(forgetful_storage_0.data).__qualname__}' == 'collections.OrderedDict'
    assert len(forgetful_storage_0.data) == 0
    assert forgetful_storage_0.ttl == 604800
    var_0 = forgetful_storage_0.cull()

@pytest.mark.xfail(strict=True)
def test_case_3():
    forgetful_storage_0 = module_0.ForgetfulStorage()
    assert f'{type(forgetful_storage_0).__module__}.{type(forgetful_storage_0).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(forgetful_storage_0.data).__module__}.{type(forgetful_storage_0.data).__qualname__}' == 'collections.OrderedDict'
    assert len(forgetful_storage_0.data) == 0
    assert forgetful_storage_0.ttl == 604800
    bool_0 = False
    var_0 = forgetful_storage_0.get(forgetful_storage_0, bool_0)
    assert var_0 is False
    forgetful_storage_0.__getitem__(bool_0)

def test_case_4():
    forgetful_storage_0 = module_0.ForgetfulStorage()
    assert f'{type(forgetful_storage_0).__module__}.{type(forgetful_storage_0).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(forgetful_storage_0.data).__module__}.{type(forgetful_storage_0.data).__qualname__}' == 'collections.OrderedDict'
    assert len(forgetful_storage_0.data) == 0
    assert forgetful_storage_0.ttl == 604800

@pytest.mark.xfail(strict=True)
def test_case_5():
    a_b_c_0 = module_1.ABC()
    forgetful_storage_0 = module_0.ForgetfulStorage()
    assert f'{type(forgetful_storage_0).__module__}.{type(forgetful_storage_0).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(forgetful_storage_0.data).__module__}.{type(forgetful_storage_0.data).__qualname__}' == 'collections.OrderedDict'
    assert len(forgetful_storage_0.data) == 0
    assert forgetful_storage_0.ttl == 604800
    var_0 = forgetful_storage_0.__repr__()
    assert var_0 == 'OrderedDict()'
    str_0 = 'a'
    forgetful_storage_1 = module_0.ForgetfulStorage(str_0)
    forgetful_storage_1.cull()

def test_case_6():
    bool_0 = True
    forgetful_storage_0 = module_0.ForgetfulStorage(bool_0)
    assert f'{type(forgetful_storage_0).__module__}.{type(forgetful_storage_0).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(forgetful_storage_0.data).__module__}.{type(forgetful_storage_0.data).__qualname__}' == 'collections.OrderedDict'
    assert len(forgetful_storage_0.data) == 0
    assert forgetful_storage_0.ttl is True
    var_0 = forgetful_storage_0.__iter__()

@pytest.mark.xfail(strict=True)
def test_case_7():
    forgetful_storage_0 = module_0.ForgetfulStorage()
    assert f'{type(forgetful_storage_0).__module__}.{type(forgetful_storage_0).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(forgetful_storage_0.data).__module__}.{type(forgetful_storage_0.data).__qualname__}' == 'collections.OrderedDict'
    assert len(forgetful_storage_0.data) == 0
    assert forgetful_storage_0.ttl == 604800
    var_0 = forgetful_storage_0.__setitem__(forgetful_storage_0, forgetful_storage_0)
    assert len(forgetful_storage_0.data) == 1
    forgetful_storage_1 = module_0.ForgetfulStorage()
    assert forgetful_storage_1.ttl == 604800
    var_1 = forgetful_storage_0.cull()
    var_2 = forgetful_storage_0.__iter__()
    var_3 = forgetful_storage_0.get(forgetful_storage_0)
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(var_3.data).__module__}.{type(var_3.data).__qualname__}' == 'collections.OrderedDict'
    assert len(var_3.data) == 1
    assert var_3.ttl == 604800
    var_4 = var_2.__repr__()
    forgetful_storage_2 = module_0.ForgetfulStorage()
    assert forgetful_storage_2.ttl == 604800
    var_5 = forgetful_storage_2.cull()
    var_2.__setitem__(forgetful_storage_2, forgetful_storage_2)

@pytest.mark.xfail(strict=True)
def test_case_8():
    forgetful_storage_0 = module_0.ForgetfulStorage()
    assert f'{type(forgetful_storage_0).__module__}.{type(forgetful_storage_0).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(forgetful_storage_0.data).__module__}.{type(forgetful_storage_0.data).__qualname__}' == 'collections.OrderedDict'
    assert len(forgetful_storage_0.data) == 0
    assert forgetful_storage_0.ttl == 604800
    var_0 = forgetful_storage_0.__setitem__(forgetful_storage_0, forgetful_storage_0)
    assert len(forgetful_storage_0.data) == 1
    var_1 = forgetful_storage_0.__setitem__(forgetful_storage_0, forgetful_storage_0)
    forgetful_storage_1 = module_0.ForgetfulStorage()
    assert forgetful_storage_1.ttl == 604800
    var_2 = forgetful_storage_0.cull()
    var_3 = forgetful_storage_0.__iter__()
    var_4 = forgetful_storage_0.get(forgetful_storage_0)
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'kademlia.storage.ForgetfulStorage'
    assert f'{type(var_4.data).__module__}.{type(var_4.data).__qualname__}' == 'collections.OrderedDict'
    assert len(var_4.data) == 1
    assert var_4.ttl == 604800
    var_5 = var_3.__repr__()
    forgetful_storage_2 = module_0.ForgetfulStorage()
    assert forgetful_storage_2.ttl == 604800
    var_6 = forgetful_storage_2.cull()
    var_3.__setitem__(forgetful_storage_2, forgetful_storage_2)