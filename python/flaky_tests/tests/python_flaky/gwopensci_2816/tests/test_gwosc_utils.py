# Automatically generated by Pynguin.
import pytest
import gwosc.utils as module_0
import posixpath as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = 'gX|xT\x0c4#~cS5w[XYN7'
    module_0.strain_extent(str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.full_coverage(bool_0, bool_0)
    assert var_0 is False
    list_0 = [var_0, var_0, var_0]
    module_0.full_coverage(list_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'ct8'
    str_1 = 'Returns True if the list of URLS completely covers a GPS interval\n\n    The URL list is presumed to be contiguous, so this just checks that\n    the first URL (by GPS timestamp) and the last URL can form a segment\n    that overlaps that given.\n    '
    tuple_0 = (str_0, str_0, str_0, str_1)
    var_0 = module_0.segments_overlap(tuple_0, str_0)
    assert var_0 is True
    none_type_0 = None
    module_0.strain_extent(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '0.post%d'
    var_0 = module_1.basename(str_0)
    var_1 = module_0.segments_overlap(var_0, str_0)
    dict_0 = {var_0: str_0, str_0: var_0, var_0: var_1}
    module_0.segments_overlap(dict_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    var_0 = module_0.full_coverage(bool_0, bool_0)
    assert var_0 is False
    list_0 = [var_0, var_0, var_0]
    module_0.url_overlaps_segment(list_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    tuple_0 = ()
    module_0.strain_extent(tuple_0)