# Automatically generated by Pynguin.
import pytest
import gwosc.datasets as module_0
import gwosc.api as module_1
import re as module_2

def test_case_0():
    var_0 = module_0.find_datasets()

def test_case_1():
    str_0 = 'U'
    with pytest.raises(ValueError):
        module_0.dataset_type(str_0)

def test_case_2():
    int_0 = -1869
    with pytest.raises(ValueError):
        module_0.event_gps(int_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    var_0 = module_1.fetch_cataloglist_json()
    assert len(module_1.JSON_CACHE) == 6
    module_0.event_gps(var_0, var_0)

def test_case_4():
    none_type_0 = None
    with pytest.raises(ValueError):
        module_0.run_segment(none_type_0)

def test_case_5():
    int_0 = 4132
    with pytest.raises(ValueError):
        module_0.run_at_gps(int_0)

def test_case_6():
    str_0 = 'aL+u$|vU"Nk\r6&r6psN\n'
    var_0 = module_0.find_datasets(match=str_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = 'O'
    module_0.event_at_gps(str_0, tol=str_0)

def test_case_8():
    str_0 = 'aL+u$|vU"Nk\r6&r6psN\n'
    var_0 = module_0.find_datasets(match=str_0)
    none_type_0 = None
    dict_0 = {}
    with pytest.raises(ValueError):
        module_0.run_segment(dict_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    var_0 = module_2.purge()
    none_type_0 = None
    module_0.event_detectors(none_type_0)

def test_case_10():
    int_0 = 801
    with pytest.raises(ValueError):
        module_0.event_at_gps(int_0)

def test_case_11():
    str_0 = 'aL+u$|vU"Nk\r^wr6psN\n'
    var_0 = module_0.find_datasets(version=str_0)

def test_case_12():
    bytes_0 = b'iN\x13\xe6dL\x96\xa7\x1b\x03bY'
    var_0 = module_0.find_datasets(segment=bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = 'aL+u$|vU"Nk\r6&r6psN\n'
    var_0 = module_0.find_datasets(match=str_0)
    str_1 = 'runs'
    module_0.find_datasets(type=str_1, segment=var_0, catalog=var_0, version=str_1)

@pytest.mark.xfail(strict=True)
def test_case_14():
    str_0 = 'runs'
    var_0 = module_0.find_datasets(str_0)
    var_0.getstate()

@pytest.mark.xfail(strict=True)
def test_case_15():
    str_0 = 'a+u|vU"Nk\r6&r6psN\n'
    var_0 = module_0.find_datasets(match=str_0)
    str_1 = 'rn'
    none_type_0 = None
    var_1 = module_0.find_datasets(catalog=str_1, version=var_0)
    module_0.run_at_gps(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    float_0 = 1267724186.7
    complex_0 = (-1843.297409+333.80072j)
    var_0 = module_0.event_at_gps(float_0)
    assert var_0 == 'GW200308_173609'
    var_0.seek(complex_0)