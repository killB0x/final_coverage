# Automatically generated by Pynguin.
import pytest
import geomstats.learning.kmeans as module_0

def test_case_0():
    none_type_0 = None
    riemannian_k_means_0 = module_0.RiemannianKMeans(none_type_0, point_type=none_type_0)
    assert f'{type(riemannian_k_means_0).__module__}.{type(riemannian_k_means_0).__qualname__}' == 'geomstats.learning.kmeans.RiemannianKMeans'
    assert riemannian_k_means_0.n_clusters == 8
    assert riemannian_k_means_0.init == 'random'
    assert riemannian_k_means_0.metric is None
    assert riemannian_k_means_0.tol == pytest.approx(0.01, abs=0.01, rel=0.01)
    assert riemannian_k_means_0.verbose == 0
    assert riemannian_k_means_0.mean_method == 'default'
    assert riemannian_k_means_0.point_type is None
    assert riemannian_k_means_0.centroids is None

def test_case_1():
    none_type_0 = None
    riemannian_k_means_0 = module_0.RiemannianKMeans(none_type_0, none_type_0, tol=none_type_0)
    assert f'{type(riemannian_k_means_0).__module__}.{type(riemannian_k_means_0).__qualname__}' == 'geomstats.learning.kmeans.RiemannianKMeans'
    assert riemannian_k_means_0.n_clusters is None
    assert riemannian_k_means_0.init == 'random'
    assert riemannian_k_means_0.metric is None
    assert riemannian_k_means_0.tol is None
    assert riemannian_k_means_0.verbose == 0
    assert riemannian_k_means_0.mean_method == 'default'
    assert riemannian_k_means_0.point_type == 'vector'
    assert riemannian_k_means_0.centroids is None
    with pytest.raises(RuntimeError):
        riemannian_k_means_0.predict(riemannian_k_means_0)