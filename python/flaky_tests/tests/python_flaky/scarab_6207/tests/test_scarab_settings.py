# Automatically generated by Pynguin.
import pytest
import scarab.settings as module_0
import scarab.ui as module_1
import builtins as module_2

def test_case_0():
    settings_0 = module_0.Settings()
    assert f'{type(settings_0).__module__}.{type(settings_0).__qualname__}' == 'scarab.settings.Settings'
    assert module_0.Settings.VALID_TEMPLATE_KEYS == ['product', 'component', 'version', 'severity', 'platform']

@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = -4248.3
    list_0 = [float_0]
    module_0.Settings(*list_0)

def test_case_2():
    settings_0 = module_0.Settings()
    assert f'{type(settings_0).__module__}.{type(settings_0).__qualname__}' == 'scarab.settings.Settings'
    assert module_0.Settings.VALID_TEMPLATE_KEYS == ['product', 'component', 'version', 'severity', 'platform']
    var_0 = settings_0.url()
    assert var_0 == 'https://bugs.freebsd.org/bugzilla/'

def test_case_3():
    int_0 = 1
    bool_0 = False
    list_0 = [bool_0]
    module_0.Settings(*list_0)
    assert f'{type(settings_0).__module__}.{type(settings_0).__qualname__}' == 'scarab.settings.Settings'
    assert module_0.Settings.VALID_TEMPLATE_KEYS == ['product', 'component', 'version', 'severity', 'platform']
    var_0 = settings_0.__new__(int_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'scarab.settings.Settings'
    settings_1 = module_0.Settings()
    var_1 = settings_1.url()
    list_1 = [bool_0]
    settings_2 = module_0.Settings()
    var_2 = settings_2.api_key()
    var_3 = module_1.output(var_2)
    var_4 = var_0.combine_templates(list_1)

def test_case_4():
    settings_0 = module_0.Settings()
    assert f'{type(settings_0).__module__}.{type(settings_0).__qualname__}' == 'scarab.settings.Settings'
    assert module_0.Settings.VALID_TEMPLATE_KEYS == ['product', 'component', 'version', 'severity', 'platform']
    var_0 = settings_0.api_key()
    var_1 = settings_0.url()
    assert var_1 == 'https://bugs.freebsd.org/bugzilla/'

@pytest.mark.xfail(strict=True)
def test_case_5():
    object_0 = module_2.object()
    settings_0 = module_0.Settings()
    assert f'{type(settings_0).__module__}.{type(settings_0).__qualname__}' == 'scarab.settings.Settings'
    assert module_0.Settings.VALID_TEMPLATE_KEYS == ['product', 'component', 'version', 'severity', 'platform']
    settings_0.combine_templates(object_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    set_0 = set()
    dict_0 = {}
    settings_0 = module_0.Settings(**dict_0)
    assert f'{type(settings_0).__module__}.{type(settings_0).__qualname__}' == 'scarab.settings.Settings'
    assert module_0.Settings.VALID_TEMPLATE_KEYS == ['product', 'component', 'version', 'severity', 'platform']
    var_0 = settings_0.combine_templates(set_0)
    var_1 = settings_0.api_key()
    module_1.fatal(var_1)

@pytest.mark.xfail(strict=True)
def test_case_7():
    settings_0 = module_0.Settings()
    assert f'{type(settings_0).__module__}.{type(settings_0).__qualname__}' == 'scarab.settings.Settings'
    assert module_0.Settings.VALID_TEMPLATE_KEYS == ['product', 'component', 'version', 'severity', 'platform']
    var_0 = settings_0.url()
    assert var_0 == 'https://bugs.freebsd.org/bugzilla/'
    list_0 = [var_0]
    settings_1 = module_0.Settings()
    module_0.Settings(*list_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = False
    settings_0 = module_0.Settings()
    assert f'{type(settings_0).__module__}.{type(settings_0).__qualname__}' == 'scarab.settings.Settings'
    assert module_0.Settings.VALID_TEMPLATE_KEYS == ['product', 'component', 'version', 'severity', 'platform']
    settings_0.load_file(bool_0)
    var_1 = module_1.output(var_0)

def test_case_9():
    settings_0 = module_0.Settings()
    assert f'{type(settings_0).__module__}.{type(settings_0).__qualname__}' == 'scarab.settings.Settings'
    assert module_0.Settings.VALID_TEMPLATE_KEYS == ['product', 'component', 'version', 'severity', 'platform']
    settings_0.template(settings_0)