# Automatically generated by Pynguin.
import pytest
import helpers.dsa.dictionaries.mixins.subscript as module_0

def test_case_0():
    subscriptable_0 = module_0.Subscriptable()
    assert len(subscriptable_0.data) == 371

def test_case_1():
    subscriptable_0 = module_0.Subscriptable()
    assert len(subscriptable_0.data) == 371
    subscriptable_1 = module_0.Subscriptable()
    assert len(subscriptable_1.data) == 371
    var_0 = subscriptable_1.__iter__()
    var_1 = subscriptable_1.__contains__(var_0)
    assert var_1 is False

@pytest.mark.xfail(strict=True)
def test_case_2():
    subscriptable_0 = module_0.Subscriptable()
    assert len(subscriptable_0.data) == 371
    var_0 = subscriptable_0.__iter__()
    var_1 = var_0.__iter__()
    subscriptable_1 = module_0.Subscriptable()
    assert len(subscriptable_1.data) == 371
    subscriptable_1.__getitem__(var_1)

def test_case_3():
    none_type_0 = None
    subscriptable_0 = module_0.Subscriptable()
    assert len(subscriptable_0.data) == 371
    var_0 = subscriptable_0.__setitem__(none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    subscriptable_0 = module_0.Subscriptable()
    assert len(subscriptable_0.data) == 371
    var_0 = subscriptable_0.__iter__()
    subscriptable_1 = module_0.Subscriptable(var_0)
    assert f'{type(subscriptable_1.data).__module__}.{type(subscriptable_1.data).__qualname__}' == 'builtins.generator'
    var_1 = subscriptable_1.__contains__(none_type_0)
    assert var_1 is False
    bool_0 = True
    set_0 = {bool_0}
    subscriptable_2 = module_0.Subscriptable()
    assert len(subscriptable_2.data) == 371
    subscriptable_2.__contains__(set_0)