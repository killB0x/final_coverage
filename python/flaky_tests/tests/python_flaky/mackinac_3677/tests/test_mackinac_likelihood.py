# Automatically generated by Pynguin.
import pytest
import mackinac.likelihood as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = ''
    module_0.download_data_files(str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    role_not_found_error_0 = module_0.RoleNotFoundError()
    assert module_0.MIN_EVALUE == pytest.approx(1e-200, abs=0.01, rel=0.01)
    module_0.download_data_files(role_not_found_error_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    role_not_found_error_0 = module_0.RoleNotFoundError()
    assert module_0.MIN_EVALUE == pytest.approx(1e-200, abs=0.01, rel=0.01)
    str_0 = "kP fz<a't01sf%k"
    module_0.calculate_likelihoods(str_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 165
    bad_likelihood_error_0 = module_0.BadLikelihoodError()
    assert module_0.MIN_EVALUE == pytest.approx(1e-200, abs=0.01, rel=0.01)
    none_type_0 = None
    module_0.calculate_likelihoods(int_0, bad_likelihood_error_0, none_type_0)

def test_case_4():
    role_not_found_error_0 = module_0.RoleNotFoundError()
    assert module_0.MIN_EVALUE == pytest.approx(1e-200, abs=0.01, rel=0.01)