# Automatically generated by Pynguin.
import pytest
import re as module_0
import mackinac.modelseed as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    var_0 = module_0.purge()
    module_1.create_cobra_model_from_modelseed_model(var_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    regex_flag_0 = module_0.RegexFlag.MULTILINE
    module_1.list_modelseed_models(regex_flag_0, print_output=regex_flag_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    module_1.list_modelseed_models()

def test_case_3():
    var_0 = module_0.purge()
    with pytest.raises(ValueError):
        module_1.create_cobra_model_from_modelseed_model(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -3106.781
    module_1.reconstruct_modelseed_model(float_0)

def test_case_5():
    bytes_0 = b'\xeb\xa9j\x9av\xa0Ks\xc5_\xa3\x1e\xe3\x190\xb7'
    with pytest.raises(ValueError):
        module_1.reconstruct_modelseed_model(bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    module_1.get_modelseed_model_stats(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = 'workspace'
    module_1.reconstruct_modelseed_model(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'workspace'
    module_1.reconstruct_modelseed_model(str_0, template_reference=str_0, model_id=str_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'wo_rkspac@'
    module_1.reconstruct_modelseed_model(str_0, likelihood=str_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = 'workspace'
    module_1.reconstruct_modelseed_model(str_0, template_reference=str_0)