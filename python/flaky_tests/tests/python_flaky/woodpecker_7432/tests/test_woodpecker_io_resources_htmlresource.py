# Automatically generated by Pynguin.
import pytest
import woodpecker.io.resources.htmlresource as module_0
import enum as module_1

def test_case_0():
    html_resource_0 = module_0.HtmlResource()
    assert html_resource_0.name is None
    assert f'{type(html_resource_0.timings).__module__}.{type(html_resource_0.timings).__qualname__}' == 'woodpecker.io.resources.baseresource.BaseResourceTimings'
    assert html_resource_0.resources == []
    assert html_resource_0.url is None
    assert html_resource_0.method == 'GET'
    assert f'{type(html_resource_0.request).__module__}.{type(html_resource_0.request).__qualname__}' == 'woodpecker.io.resources.htmlresource.HtmlRequest'
    assert f'{type(html_resource_0.response).__module__}.{type(html_resource_0.response).__qualname__}' == 'woodpecker.io.resources.htmlresource.HtmlResponse'
    var_0 = html_resource_0.mime_type()

def test_case_1():
    html_request_0 = module_0.HtmlRequest()

def test_case_2():
    html_resource_0 = module_0.HtmlResource()
    assert html_resource_0.name is None
    assert f'{type(html_resource_0.timings).__module__}.{type(html_resource_0.timings).__qualname__}' == 'woodpecker.io.resources.baseresource.BaseResourceTimings'
    assert html_resource_0.resources == []
    assert html_resource_0.url is None
    assert html_resource_0.method == 'GET'
    assert f'{type(html_resource_0.request).__module__}.{type(html_resource_0.request).__qualname__}' == 'woodpecker.io.resources.htmlresource.HtmlRequest'
    assert f'{type(html_resource_0.response).__module__}.{type(html_resource_0.response).__qualname__}' == 'woodpecker.io.resources.htmlresource.HtmlResponse'

def test_case_3():
    html_resource_0 = module_0.HtmlResource()
    assert html_resource_0.name is None
    assert f'{type(html_resource_0.timings).__module__}.{type(html_resource_0.timings).__qualname__}' == 'woodpecker.io.resources.baseresource.BaseResourceTimings'
    assert html_resource_0.resources == []
    assert html_resource_0.url is None
    assert html_resource_0.method == 'GET'
    assert f'{type(html_resource_0.request).__module__}.{type(html_resource_0.request).__qualname__}' == 'woodpecker.io.resources.htmlresource.HtmlRequest'
    assert f'{type(html_resource_0.response).__module__}.{type(html_resource_0.response).__qualname__}' == 'woodpecker.io.resources.htmlresource.HtmlResponse'
    var_0 = html_resource_0.mime_type()
    var_1 = html_resource_0.__repr__()
    assert var_1 == 'HtmlResource - GET - None'

def test_case_4():
    html_response_0 = module_0.HtmlResponse()
    assert html_response_0.size == 0

@pytest.mark.xfail(strict=True)
def test_case_5():
    html_response_0 = module_0.HtmlResponse()
    assert html_response_0.size == 0
    str_0 = 't!{)<1<e'
    html_response_0.parse_set_cookie_header(str_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    html_request_0 = module_0.HtmlRequest()
    var_0 = html_request_0.__repr__()
    html_request_0.parse_form_data(var_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    html_request_0 = module_0.HtmlRequest()
    var_0 = html_request_0.__repr__()
    html_request_0.parse_query_string(var_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    enum_dict_0 = module_1._EnumDict()
    var_0 = enum_dict_0.__repr__()
    html_request_0 = module_0.HtmlRequest()
    html_request_0.parse_cookie_header(var_0)