# Automatically generated by Pynguin.
import pytest
import woodpecker.misc.functions as module_0
import urllib.parse as module_1
import enum as module_2

def test_case_0():
    str_0 = '`m~=f-Y|'
    var_0 = module_0.split_by_element(str_0, str_0)
    with pytest.raises(TypeError):
        module_1.quote_from_bytes(str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_0.split_by_element(dict_0, dict_0)
    var_1 = module_0.split_by_element(dict_0, dict_0)
    var_2 = module_0.decode_datetime(var_1)
    var_3 = module_0.decode_datetime(dict_0)
    var_4 = module_0.split_by_element(dict_0, var_3)
    var_5 = module_0.decode_datetime(var_0)
    var_6 = module_0.split_by_element(var_1, var_3)
    var_7 = module_0.get_eol(var_4)
    module_0.import_sequence(var_3, var_3)

def test_case_2():
    none_type_0 = None
    var_0 = module_0.encode_datetime(none_type_0)

def test_case_3():
    enum_dict_0 = module_2._EnumDict()
    var_0 = module_0.get_eol(enum_dict_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'$\xe6\x93\xb9\x82y'
    module_0.import_sequence(bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    module_0.split_by_element(none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    module_0.cc2underscore(bool_0)

def test_case_7():
    bytes_0 = b'9\xf0\x84\xf2t\x19\xe0\xa1\xc7\\\x0e\x99\x15dq'
    var_0 = module_0.decode_datetime(bytes_0)
    assert var_0 == b'9\xf0\x84\xf2t\x19\xe0\xa1\xc7\\\x0e\x99\x15dq'

@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b'__datetime__'
    var_0 = module_0.encode_datetime(bytes_0)
    assert var_0 == b'__datetime__'
    module_0.decode_datetime(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'IcTx|~uz='
    var_0 = module_0.encode_datetime(str_0)
    assert var_0 == 'IcTx|~uz='
    var_1 = var_0.__repr__()
    var_2 = module_0.split_by_element(var_1, var_0)
    var_3 = var_0.__le__(str_0)
    module_0.import_sequence(var_0, var_3)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = 'EI"7pi\r#5'
    var_0 = module_0.get_eol(str_0)
    assert var_0 == '\r'
    dict_0 = {}
    var_1 = module_0.split_by_element(dict_0, dict_0)
    var_2 = var_1.__repr__()
    var_3 = module_0.get_eol(var_2)
    var_4 = module_0.split_by_element(dict_0, var_2)
    var_5 = module_0.decode_datetime(var_4)
    var_6 = var_4.__contains__(var_1)
    var_7 = module_0.decode_datetime(var_5)
    var_8 = module_0.encode_datetime(dict_0)
    module_0.import_sequence(var_5, var_8)