# Automatically generated by Pynguin.
import pytest
import rtv.exceptions as module_0
import rtv.downloaders.common as module_1

def test_case_0():
    no_template_found_error_0 = module_0.NoTemplateFoundError()
    video_downloader_0 = module_1.VideoDownloader(no_template_found_error_0, download_dir=no_template_found_error_0)
    assert f'{type(video_downloader_0).__module__}.{type(video_downloader_0).__qualname__}' == 'rtv.downloaders.common.VideoDownloader'
    assert f'{type(video_downloader_0.video).__module__}.{type(video_downloader_0.video).__qualname__}' == 'rtv.exceptions.NoTemplateFoundError'
    assert video_downloader_0.quality == 'worst'
    assert f'{type(video_downloader_0.download_dir).__module__}.{type(video_downloader_0.download_dir).__qualname__}' == 'rtv.exceptions.NoTemplateFoundError'
    assert video_downloader_0.templates == {'ipla.tv': '{date:%d} {title}.{ext}', 'polsatnews.pl': '{date:%d} {title}.{ext}', 'polskieradio.pl': '{date:%d} {title}.{ext}', 'radiozet.pl': '{date:%d} {show_name} - {title}.{ext}', 'rmf24.pl': '{date:%d} {title}.{ext}', 'tokfm.pl': '{date:%d} {title}.{ext}', 'tvn24.pl': '{date:%d} {title}.{ext}', 'tvp.info': '{date:%d} {title}.{ext}', 'tvp.pl': '{date:%d} {title}.{ext}', 'tvpparlament.pl': '{date:%d} {title}.{ext}', 'vod.pl': '{date:%d} {show_name} - {title}.{ext}', 'wp.pl': '{date:%d} {show_name} - {title}.{ext}'}

def test_case_1():
    bytes_0 = b'\x99\xa8\xd1\x94a'
    video_downloader_0 = module_1.VideoDownloader(bytes_0)
    assert f'{type(video_downloader_0).__module__}.{type(video_downloader_0).__qualname__}' == 'rtv.downloaders.common.VideoDownloader'
    assert video_downloader_0.video == b'\x99\xa8\xd1\x94a'
    assert video_downloader_0.quality == 'worst'
    assert f'{type(video_downloader_0.download_dir).__module__}.{type(video_downloader_0.download_dir).__qualname__}' == 'pathlib.PosixPath'
    assert video_downloader_0.templates == {'ipla.tv': '{date:%d} {title}.{ext}', 'polsatnews.pl': '{date:%d} {title}.{ext}', 'polskieradio.pl': '{date:%d} {title}.{ext}', 'radiozet.pl': '{date:%d} {show_name} - {title}.{ext}', 'rmf24.pl': '{date:%d} {title}.{ext}', 'tokfm.pl': '{date:%d} {title}.{ext}', 'tvn24.pl': '{date:%d} {title}.{ext}', 'tvp.info': '{date:%d} {title}.{ext}', 'tvp.pl': '{date:%d} {title}.{ext}', 'tvpparlament.pl': '{date:%d} {title}.{ext}', 'vod.pl': '{date:%d} {show_name} - {title}.{ext}', 'wp.pl': '{date:%d} {show_name} - {title}.{ext}'}

def test_case_2():
    str_0 = 'radiozet.pl'
    video_downloader_0 = module_1.VideoDownloader(str_0, templates=str_0)
    assert f'{type(video_downloader_0).__module__}.{type(video_downloader_0).__qualname__}' == 'rtv.downloaders.common.VideoDownloader'
    assert video_downloader_0.video == 'radiozet.pl'
    assert video_downloader_0.quality == 'worst'
    assert f'{type(video_downloader_0.download_dir).__module__}.{type(video_downloader_0.download_dir).__qualname__}' == 'pathlib.PosixPath'
    assert video_downloader_0.templates == 'radiozet.pl'

def test_case_3():
    bytes_0 = b'\x99\xa8=\xb5\x94'
    with pytest.raises(module_0.WrongQualityError):
        module_1.VideoDownloader(bytes_0, bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    video_downloader_0 = module_1.VideoDownloader(none_type_0, none_type_0)
    assert f'{type(video_downloader_0).__module__}.{type(video_downloader_0).__qualname__}' == 'rtv.downloaders.common.VideoDownloader'
    assert video_downloader_0.video is None
    assert video_downloader_0.quality == 'worst'
    assert f'{type(video_downloader_0.download_dir).__module__}.{type(video_downloader_0.download_dir).__qualname__}' == 'pathlib.PosixPath'
    assert video_downloader_0.templates == {'ipla.tv': '{date:%d} {title}.{ext}', 'polsatnews.pl': '{date:%d} {title}.{ext}', 'polskieradio.pl': '{date:%d} {title}.{ext}', 'radiozet.pl': '{date:%d} {show_name} - {title}.{ext}', 'rmf24.pl': '{date:%d} {title}.{ext}', 'tokfm.pl': '{date:%d} {title}.{ext}', 'tvn24.pl': '{date:%d} {title}.{ext}', 'tvp.info': '{date:%d} {title}.{ext}', 'tvp.pl': '{date:%d} {title}.{ext}', 'tvpparlament.pl': '{date:%d} {title}.{ext}', 'vod.pl': '{date:%d} {show_name} - {title}.{ext}', 'wp.pl': '{date:%d} {show_name} - {title}.{ext}'}
    video_downloader_0.download()