# Automatically generated by Pynguin.
import pytest
import kb_python.count as module_0
import kb_python.config as module_1
import re as module_2
import enum as module_3

@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b'\xc7n\x93\xa1P'
    module_0.bustools_count(bytes_0, bytes_0, bytes_0, bytes_0, bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = (1823-860.44j)
    module_0.bustools_count(complex_0, complex_0, complex_0, complex_0, complex_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.convert_matrices(none_type_0, none_type_0, none_type_0, none_type_0, txnames_path=none_type_0, nucleus=none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    var_0 = module_1.get_bustools_binary_path()
    module_0.convert_matrices(var_0, var_0, var_0, var_0, var_0)

def test_case_4():
    var_0 = module_1.get_bustools_binary_path()
    var_1 = module_0.copy_or_create_whitelist(var_0, var_0, var_0)
    assert var_1 == '/input/kb_python/bins/linux/bustools/bustools/whitelist.txt'

@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b'\xd0W\x08"\xa9\xd4\xfa\xc8'
    module_0.bustools_sort(bytes_0, bytes_0, bytes_0, bytes_0)

def test_case_6():
    tuple_0 = ()
    var_0 = module_0.bustools_inspect(tuple_0, tuple_0, tuple_0, tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    var_0 = module_1.get_bustools_binary_path()
    module_0.bustools_correct(var_0, var_0, var_0)

def test_case_8():
    var_0 = module_2.purge()
    var_1 = module_0.bustools_capture(var_0, var_0, var_0, var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    none_type_0 = None
    module_0.bustools_whitelist(none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    none_type_0 = None
    module_0.stream_fastqs(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    var_0 = module_3._EnumDict()
    module_0.kallisto_bus(var_0, var_0, var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    complex_0 = (51-5798.7922j)
    module_0.convert_matrix(complex_0, complex_0, complex_0)

def test_case_13():
    none_type_0 = None
    var_0 = module_0.bustools_count(none_type_0, none_type_0, none_type_0, none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    enum_dict_0 = module_1.get_kallisto_binary_path()
    module_0.kallisto_bus(enum_dict_0, enum_dict_0, enum_dict_0, enum_dict_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    var_0 = module_1.get_bustools_binary_path()
    module_0.convert_matrices(var_0, var_0, var_0, loom=var_0, nucleus=var_0, tcc=var_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    var_0 = module_1.get_bustools_binary_path()
    module_0.convert_matrices(var_0, var_0, var_0, ec_paths=var_0, nucleus=var_0, threads=var_0)

def test_case_17():
    tuple_0 = ()
    var_0 = module_0.stream_fastqs(tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_18():
    var_0 = module_1.get_bustools_binary_path()
    var_1 = module_0.stream_fastqs(var_0)
    module_0.convert_matrices(var_1, var_0, var_0, var_1, var_0, var_0, threads=var_0)

def test_case_19():
    var_0 = module_1.get_bustools_binary_path()
    var_1 = module_0.stream_fastqs(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    tuple_0 = module_1.get_kallisto_binary_path()
    module_0.convert_matrix(tuple_0, tuple_0, tuple_0, tuple_0, tcc=tuple_0, threads=tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_21():
    str_0 = ';4* o'
    module_0.count_velocity(str_0, str_0, str_0, str_0, str_0, str_0, str_0, filter=str_0, nucleus=str_0)

@pytest.mark.xfail(strict=True)
def test_case_22():
    var_0 = module_1.get_bustools_binary_path()
    module_0.convert_matrices(var_0, var_0, var_0, ec_paths=var_0, txnames_path=var_0, tcc=var_0, threads=var_0)

@pytest.mark.xfail(strict=True)
def test_case_23():
    tuple_0 = ()
    var_0 = module_0.bustools_inspect(tuple_0, tuple_0, tuple_0, tuple_0)
    none_type_0 = None
    var_1 = var_0.__setitem__(none_type_0, tuple_0)
    var_2 = module_0.stream_fastqs(var_0)
    none_type_1 = None
    module_0.convert_matrices(tuple_0, none_type_1, var_0, var_2, tuple_0, tcc=var_2)

@pytest.mark.xfail(strict=True)
def test_case_24():
    str_0 = 'pye=`\x0cF("P?Jec-:m_Q'
    module_0.count(str_0, str_0, str_0, str_0, str_0, threads=str_0)

@pytest.mark.xfail(strict=True)
def test_case_25():
    str_0 = ';4* o'
    none_type_0 = None
    var_0 = module_0.bustools_count(none_type_0, none_type_0, none_type_0, none_type_0, none_type_0, str_0)
    module_0.count_velocity(str_0, str_0, str_0, str_0, str_0, str_0, str_0, filter=str_0, nucleus=str_0)