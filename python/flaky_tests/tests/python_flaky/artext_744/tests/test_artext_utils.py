# Automatically generated by Pynguin.
import pytest
import artext.utils as module_0

def test_case_0():
    var_0 = module_0.arg_parser()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'argparse.ArgumentParser'
    assert var_0.description is None
    assert var_0.argument_default is None
    assert var_0.prefix_chars == '-'
    assert var_0.conflict_handler == 'error'
    assert var_0.prog == 'pynguin'
    assert var_0.usage is None
    assert var_0.epilog is None
    assert var_0.fromfile_prefix_chars is None
    assert var_0.add_help is True
    assert var_0.allow_abbrev is True
    assert var_0.exit_on_error is True
    assert f'{type(module_0.log).__module__}.{type(module_0.log).__qualname__}' == 'logging.Logger'
    assert module_0.log.name == 'ARTEXT'
    assert module_0.log.level == 0
    assert f'{type(module_0.log.parent).__module__}.{type(module_0.log.parent).__qualname__}' == 'logging.RootLogger'
    assert len(module_0.log.handlers) == 60
    assert module_0.fmt == '%(name)s %(asctime)s %(levelname)s: %(message)s'

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_0.rand_index(bool_0)