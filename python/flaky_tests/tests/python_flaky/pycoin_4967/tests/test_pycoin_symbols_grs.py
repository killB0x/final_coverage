# Automatically generated by Pynguin.
import pytest
import pycoin.symbols.grs as module_0

def test_case_0():
    var_0 = module_0.none_parser()
    assert module_0.network.symbol == 'GRS'
    assert module_0.network.network_name == 'Groestlcoin'
    assert module_0.network.subnet_name == 'mainnet'
    assert module_0.network.dns_bootstrap == ['groestlcoin.org', 'electrum1.groestlcoin.org', 'electrum2.groestlcoin.org', 'jswallet.groestlcoin.org', 'groestlsight.groestlcoin.org']
    assert module_0.network.default_port == 1331
    assert module_0.network.magic_header == b'\xf9\xbe\xb4\xd9'
    assert module_0.network.Key is None
    assert module_0.attr == 'address'

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'OP_2'
    module_0.bip32_as_string(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    list_0 = []
    module_0.bip32_as_string(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 1450
    module_0.b2a_hashed_base58_grs(int_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    str_0 = 'r]AMH _-\x0b]_P(G]4s '
    str_1 = 'f\x0bG'
    dict_0 = {str_0: list_0, str_1: str_1, str_0: str_1}
    var_0 = module_0.none_parser(*list_0, **dict_0)
    assert module_0.network.symbol == 'GRS'
    assert module_0.network.network_name == 'Groestlcoin'
    assert module_0.network.subnet_name == 'mainnet'
    assert module_0.network.dns_bootstrap == ['groestlcoin.org', 'electrum1.groestlcoin.org', 'electrum2.groestlcoin.org', 'jswallet.groestlcoin.org', 'groestlsight.groestlcoin.org']
    assert module_0.network.default_port == 1331
    assert module_0.network.magic_header == b'\xf9\xbe\xb4\xd9'
    assert module_0.network.Key is None
    assert module_0.attr == 'address'
    bool_0 = False
    module_0.wif_for_blob(bool_0)