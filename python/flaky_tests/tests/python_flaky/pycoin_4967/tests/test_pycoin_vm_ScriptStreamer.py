# Automatically generated by Pynguin.
import pytest
import pycoin.vm.ScriptStreamer as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '\n        Step through the script, returning a tuple with the next opcode, the next\n        piece of data (if the opcode represents data), the new PC, and a boolean indicated\n        valid parsing.\n        '
    module_0.ScriptStreamer(str_0, str_0, str_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '\n        Step through the script, returning a tuple with the next opcode, the next\n        piece of data (if the opcode represents data), the new PC, and a boolean indicated\n        valid parsing.\n        '
    module_0.make_sized_encoder(str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.make_const_handler(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.make_sized_handler(none_type_0, none_type_0, none_type_0)

def test_case_4():
    str_0 = '\n        Step through the script, returning a tuple with the next opcode, the next\n        piece of data (if the opcode represents data), the new PC, and a boolean indicated\n        valid parsing.\n        '
    script_streamer_0 = module_0.make_variable_handler(str_0, str_0, str_0, str_0)

def test_case_5():
    bytes_0 = b''
    var_0 = module_0.ScriptStreamer(bytes_0, bytes_0, bytes_0, bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b''
    script_streamer_0 = module_0.ScriptStreamer(bytes_0, bytes_0, bytes_0, bytes_0, bytes_0)
    script_streamer_0.compile_push_data(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    set_0 = set()
    script_streamer_0 = module_0.ScriptStreamer(set_0, set_0, set_0, set_0, set_0)
    str_0 = ':CzI[N'
    module_0.ScriptStreamer(set_0, str_0, set_0, str_0, script_streamer_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    set_0 = set()
    script_streamer_0 = module_0.make_const_handler(set_0)
    str_0 = '3r,\n-Zu/5xg~olAR628F'
    module_0.ScriptStreamer(set_0, set_0, str_0, str_0, script_streamer_0)

def test_case_9():
    set_0 = set()
    script_streamer_0 = module_0.ScriptStreamer(set_0, set_0, set_0, set_0, set_0)
    bool_0 = True
    tuple_0 = (bool_0, script_streamer_0, bool_0)
    var_0 = script_streamer_0.get_opcode(tuple_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    bytes_0 = b'\x00\x00'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_0 = None
    module_0.ScriptStreamer(dict_0, dict_0, bytes_0, dict_0, none_type_0)