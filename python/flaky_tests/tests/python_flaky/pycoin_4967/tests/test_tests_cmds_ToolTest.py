# Automatically generated by Pynguin.
import pytest
import tests.cmds.ToolTest as module_0

def test_case_0():
    tool_test_0 = module_0.ToolTest()
    assert module_0.DEFAULT_ENV == {'PYCOIN_BTC_PROVIDERS': 'blockchain.info blockexplorer.com', 'PATH': '/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'}

@pytest.mark.xfail(strict=True)
def test_case_1():
    tool_test_0 = module_0.ToolTest()
    assert module_0.DEFAULT_ENV == {'PYCOIN_BTC_PROVIDERS': 'blockchain.info blockexplorer.com', 'PATH': '/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'}
    tool_test_0.launch_tool(tool_test_0, tool_test_0, tool_test_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    tool_test_0 = module_0.ToolTest()
    assert module_0.DEFAULT_ENV == {'PYCOIN_BTC_PROVIDERS': 'blockchain.info blockexplorer.com', 'PATH': '/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'}
    tool_test_1 = module_0.ToolTest()
    var_0 = tool_test_1.set_cache_dir()
    tool_test_2 = module_0.ToolTest()
    tool_test_1.launch_tool()

@pytest.mark.xfail(strict=True)
def test_case_3():
    tool_test_0 = module_0.ToolTest()
    assert module_0.DEFAULT_ENV == {'PYCOIN_BTC_PROVIDERS': 'blockchain.info blockexplorer.com', 'PATH': '/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'}
    var_0 = tool_test_0.set_cache_dir()
    var_1 = tool_test_0.assertEqual(tool_test_0, tool_test_0)
    var_1.set_cache_dir()