# Automatically generated by Pynguin.
import pytest
import pycoin.wallet.SQLite3Wallet as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    int_0 = -768
    s_q_lite3_wallet_0 = module_0.SQLite3Wallet(bool_0, int_0, min_extra_spendable_amount=bool_0)
    s_q_lite3_wallet_0.create_payables(int_0, int_0, int_0, bool_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'\x1d5\x92}'
    s_q_lite3_wallet_0 = module_0.SQLite3Wallet(bytes_0, bytes_0, bytes_0)
    s_q_lite3_wallet_0.got_mempool_tx_callback(s_q_lite3_wallet_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    s_q_lite3_wallet_0 = module_0.SQLite3Wallet(bool_0, bool_0, bool_0)
    s_q_lite3_wallet_0.rewind(bool_0)

def test_case_3():
    bool_0 = True
    s_q_lite3_wallet_0 = module_0.SQLite3Wallet(bool_0, bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    s_q_lite3_wallet_0 = module_0.SQLite3Wallet(list_0, list_0)
    var_0 = s_q_lite3_wallet_0.got_ops_callback(list_0)
    list_1 = [var_0]
    s_q_lite3_wallet_0.got_ops_callback(list_1)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    s_q_lite3_wallet_0 = module_0.SQLite3Wallet(bool_0, bool_0)
    var_0 = s_q_lite3_wallet_0.create_payables(s_q_lite3_wallet_0, bool_0, s_q_lite3_wallet_0, bool_0, bool_0)
    s_q_lite3_wallet_1 = module_0.SQLite3Wallet(bool_0, bool_0, bool_0)
    s_q_lite3_wallet_1.create_payables(bool_0, bool_0, s_q_lite3_wallet_1, bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    s_q_lite3_wallet_0 = module_0.SQLite3Wallet(bool_0, bool_0, bool_0)
    s_q_lite3_wallet_0.create_payables(bool_0, bool_0, s_q_lite3_wallet_0, bool_0, bool_0)

def test_case_7():
    list_0 = []
    s_q_lite3_wallet_0 = module_0.SQLite3Wallet(list_0, list_0)
    tuple_0 = (list_0, s_q_lite3_wallet_0, list_0, s_q_lite3_wallet_0)
    list_1 = [tuple_0]
    with pytest.raises(Exception):
        s_q_lite3_wallet_0.got_ops_callback(list_1)