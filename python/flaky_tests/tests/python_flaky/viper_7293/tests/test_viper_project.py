# Automatically generated by Pynguin.
import pytest
import viper.project as module_0
import viper.collections as module_1

def test_case_0():
    tuple_0 = module_0.arg()

def test_case_1():
    tuple_0 = module_0.arg()
    project_0 = module_0.Project(tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'Meta data object creator.\n\n    :param `**mapping`: key-value pairs as the meta data.\n    :example:\n\n    .. code-block:: python\n\n        from viper import Host, meta\n\n        host = Host(\'1.1.1.1\', meta=meta(provider="aws"))\n        host.meta.provider\n        # \'aws\'\n        host.meta[\'provider\']\n        # \'aws\'\n        host[\'meta\'][\'provider\']\n        # \'aws\'\n    '
    project_0 = module_0.Project(str_0)
    list_0 = project_0.all_commands()
    callable_0 = project_0.action()
    results_0 = module_1.Results()
    results_0.pipe(callable_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '--sep'
    project_0 = module_0.Project(str_0)
    callable_0 = project_0.hostgroup()
    results_0 = module_1.Results(str_0)
    results_0.pipe(callable_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = '--sep'
    project_0 = module_0.Project(str_0)
    callable_0 = project_0.job()
    results_0 = module_1.Results(str_0)
    results_0.pipe(callable_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ']\x0bfd-\\~m'
    project_0 = module_0.Project(str_0)
    callable_0 = project_0.action()
    results_0 = module_1.Results(str_0)
    results_0.pipe(callable_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'error: '
    project_0 = module_0.Project(str_0)
    callable_0 = project_0.action(totype=project_0)
    results_0 = module_1.Results()
    results_0.pipe(callable_0)