# Automatically generated by Pynguin.
import pytest
import pkcs1.eme_pkcs1_v15 as module_0
import pkcs1.exceptions as module_1
import re as module_2
import pkcs1.primitives as module_3

def test_case_0():
    bytes_0 = b'\xa5g\xc0\xc8qZ\x15\xfeq=\xa9'
    with pytest.raises(module_1.DecryptionError):
        module_0.decode(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    var_0 = module_2.purge()
    module_0.decode(var_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b'\xa5g\xc0\xc8qZ\x15\xfeq=\xa9'
    var_0 = module_3.os2ip(bytes_0)
    module_0.encode(bytes_0, var_0, rnd=var_0)

def test_case_3():
    tuple_0 = ()
    bool_0 = False
    with pytest.raises(module_1.MessageTooLong):
        module_0.encode(tuple_0, bool_0, tuple_0, bool_0)

def test_case_4():
    bytes_0 = b'xO\x9f\xaaY\xe9\xee\xc5}\x80\xce\x96\xfc\x1d\xfcm'
    var_0 = module_3.os2ip(bytes_0)
    with pytest.raises(module_1.WrongLength):
        module_0.encode(bytes_0, var_0, bytes_0)