# Automatically generated by Pynguin.
import pytest
import HARK.parallel as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    list_0 = []
    list_1 = [list_0]
    str_0 = ' function evaluations.'
    list_2 = [list_1, str_0, list_1, list_0]
    module_0.multiThreadCommands(list_1, list_2)

@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 941
    list_0 = []
    none_type_0 = module_0.multiThreadCommandsFake(list_0, int_0)
    module_0.multiThreadCommands(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    list_0 = []
    module_0.multiThreadCommands(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 941
    list_0 = []
    none_type_0 = module_0.multiThreadCommandsFake(list_0, int_0)
    list_1 = [int_0, int_0, int_0]
    module_0.multiThreadCommands(list_1, list_1)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0]
    module_0.runCommands(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    int_0 = 1476
    list_0 = []
    str_0 = '  <Z`tcpcz1n'
    var_0 = module_0.runCommands(str_0, list_0)
    var_1 = module_0.runCommands(bool_0, list_0)
    none_type_0 = module_0.multiThreadCommandsFake(list_0, list_0)
    list_1 = []
    list_2 = [int_0, str_0, list_0]
    module_0.multiThreadCommands(list_1, list_2, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    int_0 = 1476
    list_0 = []
    str_0 = '  <Z`tcpcz1n'
    none_type_0 = module_0.multiThreadCommandsFake(list_0, list_0)
    var_0 = module_0.runCommands(str_0, list_0)
    var_1 = module_0.runCommands(bool_0, list_0)
    none_type_1 = module_0.multiThreadCommandsFake(list_0, list_0)
    list_1 = [int_0, str_0, list_0]
    module_0.multiThreadCommands(var_0, list_1, var_1)

def test_case_7():
    list_0 = []
    list_1 = [list_0]
    none_type_0 = module_0.multiThreadCommandsFake(list_0, list_1)
    none_type_1 = module_0.multiThreadCommands(list_1, list_0)

def test_case_8():
    list_0 = []
    none_type_0 = module_0.multiThreadCommandsFake(list_0, list_0)
    list_1 = [list_0]
    str_0 = ' function evalua@ions.'
    list_2 = [list_1, str_0, list_1, list_0]
    none_type_1 = module_0.multiThreadCommands(list_2, list_0)