# Automatically generated by Pynguin.
import pytest
import attila.virtual.atvirtualcommunicator as module_0
import attila.exceptions as module_1
import re as module_2

def test_case_0():
    str_0 = 'kanq]rkz8dp(+*(7'
    a_t_virtual_communicator_0 = module_0.ATVirtualCommunicator(str_0, str_0)
    assert f'{type(a_t_virtual_communicator_0).__module__}.{type(a_t_virtual_communicator_0).__qualname__}' == 'attila.virtual.atvirtualcommunicator.ATVirtualCommunicator'
    assert f'{type(module_0.ATVirtualCommunicator.serial_port).__module__}.{type(module_0.ATVirtualCommunicator.serial_port).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.baud_rate).__module__}.{type(module_0.ATVirtualCommunicator.baud_rate).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.default_timeout).__module__}.{type(module_0.ATVirtualCommunicator.default_timeout).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.line_break).__module__}.{type(module_0.ATVirtualCommunicator.line_break).__qualname__}' == 'builtins.property'

def test_case_1():
    str_0 = '/c81R,"_E-8R}J_'
    none_type_0 = None
    bool_0 = True
    a_t_virtual_communicator_0 = module_0.ATVirtualCommunicator(str_0, none_type_0, bool_0, read_callback=none_type_0)
    assert f'{type(a_t_virtual_communicator_0).__module__}.{type(a_t_virtual_communicator_0).__qualname__}' == 'attila.virtual.atvirtualcommunicator.ATVirtualCommunicator'
    assert f'{type(module_0.ATVirtualCommunicator.serial_port).__module__}.{type(module_0.ATVirtualCommunicator.serial_port).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.baud_rate).__module__}.{type(module_0.ATVirtualCommunicator.baud_rate).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.default_timeout).__module__}.{type(module_0.ATVirtualCommunicator.default_timeout).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.line_break).__module__}.{type(module_0.ATVirtualCommunicator.line_break).__qualname__}' == 'builtins.property'
    none_type_1 = a_t_virtual_communicator_0.open()
    with pytest.raises(module_1.ATSerialPortError):
        a_t_virtual_communicator_0.close()

def test_case_2():
    none_type_0 = None
    str_0 = 'kaAenq83-u|tm$~:'
    int_0 = -1053
    a_t_virtual_communicator_0 = module_0.ATVirtualCommunicator(str_0, int_0, int_0, write_callback=none_type_0)
    assert f'{type(a_t_virtual_communicator_0).__module__}.{type(a_t_virtual_communicator_0).__qualname__}' == 'attila.virtual.atvirtualcommunicator.ATVirtualCommunicator'
    assert f'{type(module_0.ATVirtualCommunicator.serial_port).__module__}.{type(module_0.ATVirtualCommunicator.serial_port).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.baud_rate).__module__}.{type(module_0.ATVirtualCommunicator.baud_rate).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.default_timeout).__module__}.{type(module_0.ATVirtualCommunicator.default_timeout).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.line_break).__module__}.{type(module_0.ATVirtualCommunicator.line_break).__qualname__}' == 'builtins.property'
    with pytest.raises(module_1.ATSerialPortError):
        a_t_virtual_communicator_0.close()

def test_case_3():
    str_0 = 'kanq]rkz8dp(+*(7'
    a_t_virtual_communicator_0 = module_0.ATVirtualCommunicator(str_0, str_0)
    assert f'{type(a_t_virtual_communicator_0).__module__}.{type(a_t_virtual_communicator_0).__qualname__}' == 'attila.virtual.atvirtualcommunicator.ATVirtualCommunicator'
    assert f'{type(module_0.ATVirtualCommunicator.serial_port).__module__}.{type(module_0.ATVirtualCommunicator.serial_port).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.baud_rate).__module__}.{type(module_0.ATVirtualCommunicator.baud_rate).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.default_timeout).__module__}.{type(module_0.ATVirtualCommunicator.default_timeout).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.line_break).__module__}.{type(module_0.ATVirtualCommunicator.line_break).__qualname__}' == 'builtins.property'
    bool_0 = a_t_virtual_communicator_0.is_open()
    with pytest.raises(module_1.ATSerialPortError):
        a_t_virtual_communicator_0.exec(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -3355.6
    float_0.close()

def test_case_5():
    str_0 = 'kanq]rkz8dp(+*(7'
    a_t_virtual_communicator_0 = module_0.ATVirtualCommunicator(str_0, str_0)
    assert f'{type(a_t_virtual_communicator_0).__module__}.{type(a_t_virtual_communicator_0).__qualname__}' == 'attila.virtual.atvirtualcommunicator.ATVirtualCommunicator'
    assert f'{type(module_0.ATVirtualCommunicator.serial_port).__module__}.{type(module_0.ATVirtualCommunicator.serial_port).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.baud_rate).__module__}.{type(module_0.ATVirtualCommunicator.baud_rate).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.default_timeout).__module__}.{type(module_0.ATVirtualCommunicator.default_timeout).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.line_break).__module__}.{type(module_0.ATVirtualCommunicator.line_break).__qualname__}' == 'builtins.property'
    bool_0 = a_t_virtual_communicator_0.is_open()

def test_case_6():
    str_0 = ' \\;R\\<v~$'
    bool_0 = False
    a_t_virtual_communicator_0 = module_0.ATVirtualCommunicator(str_0, bool_0, bool_0)
    assert f'{type(a_t_virtual_communicator_0).__module__}.{type(a_t_virtual_communicator_0).__qualname__}' == 'attila.virtual.atvirtualcommunicator.ATVirtualCommunicator'
    assert f'{type(module_0.ATVirtualCommunicator.serial_port).__module__}.{type(module_0.ATVirtualCommunicator.serial_port).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.baud_rate).__module__}.{type(module_0.ATVirtualCommunicator.baud_rate).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.default_timeout).__module__}.{type(module_0.ATVirtualCommunicator.default_timeout).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.line_break).__module__}.{type(module_0.ATVirtualCommunicator.line_break).__qualname__}' == 'builtins.property'
    none_type_0 = a_t_virtual_communicator_0.open()
    var_0 = module_2.escape(str_0)
    with pytest.raises(module_1.ATSerialPortError):
        a_t_virtual_communicator_0.close()

def test_case_7():
    none_type_0 = None
    int_0 = -1055
    a_t_virtual_communicator_0 = module_0.ATVirtualCommunicator(none_type_0, int_0)
    assert f'{type(a_t_virtual_communicator_0).__module__}.{type(a_t_virtual_communicator_0).__qualname__}' == 'attila.virtual.atvirtualcommunicator.ATVirtualCommunicator'
    assert f'{type(module_0.ATVirtualCommunicator.serial_port).__module__}.{type(module_0.ATVirtualCommunicator.serial_port).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.baud_rate).__module__}.{type(module_0.ATVirtualCommunicator.baud_rate).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.default_timeout).__module__}.{type(module_0.ATVirtualCommunicator.default_timeout).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.line_break).__module__}.{type(module_0.ATVirtualCommunicator.line_break).__qualname__}' == 'builtins.property'
    with pytest.raises(module_1.ATSerialPortError):
        a_t_virtual_communicator_0.open()

@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    str_0 = 'X{\x0c'
    int_0 = -1047
    a_t_virtual_communicator_0 = module_0.ATVirtualCommunicator(str_0, int_0, int_0, write_callback=none_type_0)
    assert f'{type(a_t_virtual_communicator_0).__module__}.{type(a_t_virtual_communicator_0).__qualname__}' == 'attila.virtual.atvirtualcommunicator.ATVirtualCommunicator'
    assert f'{type(module_0.ATVirtualCommunicator.serial_port).__module__}.{type(module_0.ATVirtualCommunicator.serial_port).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.baud_rate).__module__}.{type(module_0.ATVirtualCommunicator.baud_rate).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.default_timeout).__module__}.{type(module_0.ATVirtualCommunicator.default_timeout).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.line_break).__module__}.{type(module_0.ATVirtualCommunicator.line_break).__qualname__}' == 'builtins.property'
    none_type_1 = a_t_virtual_communicator_0.open()
    a_t_virtual_communicator_0.exec(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = ' d\\;R\\<\tv~$'
    bool_0 = False
    bool_1 = True
    a_t_virtual_communicator_0 = module_0.ATVirtualCommunicator(str_0, bool_0, bool_1)
    assert f'{type(a_t_virtual_communicator_0).__module__}.{type(a_t_virtual_communicator_0).__qualname__}' == 'attila.virtual.atvirtualcommunicator.ATVirtualCommunicator'
    assert f'{type(module_0.ATVirtualCommunicator.serial_port).__module__}.{type(module_0.ATVirtualCommunicator.serial_port).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.baud_rate).__module__}.{type(module_0.ATVirtualCommunicator.baud_rate).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.default_timeout).__module__}.{type(module_0.ATVirtualCommunicator.default_timeout).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ATVirtualCommunicator.line_break).__module__}.{type(module_0.ATVirtualCommunicator.line_break).__qualname__}' == 'builtins.property'
    none_type_0 = a_t_virtual_communicator_0.open()
    str_1 = '\\?{(.*)}'
    a_t_virtual_communicator_0.exec(str_1)