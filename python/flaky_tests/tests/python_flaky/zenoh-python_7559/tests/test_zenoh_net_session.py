# Automatically generated by Pynguin.
import pytest
import zenoh.net.session as module_0
import platform as module_1
import zenoh.net.binding as module_2
import codecs as module_3

@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -1229
    module_0.SubscriberMode(int_0, int_0)

def test_case_1():
    none_type_0 = None
    var_0 = module_0.zn_to_canonical_locator(none_type_0)
    assert module_0.ZN_USER_KEY == 80
    assert module_0.ZN_PASSWD_KEY == 81
    assert module_0.ZN_INFO_PID_KEY == 0
    assert module_0.ZN_INFO_PEER_KEY == 1
    assert module_0.ZN_INFO_PEER_PID_KEY == 2

@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1
    module_0.zn_to_canonical_locator(int_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.zn_rname_intersect(none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    module_0.Session(none_type_0)

def test_case_5():
    var_0 = module_1.processor()
    var_1 = module_0.zn_to_canonical_locator(var_0)
    assert var_1 == b'tcp/0.0.0.0:7447'
    assert module_0.ZN_USER_KEY == 80
    assert module_0.ZN_PASSWD_KEY == 81
    assert module_0.ZN_INFO_PID_KEY == 0
    assert module_0.ZN_INFO_PEER_KEY == 1
    assert module_0.ZN_INFO_PEER_PID_KEY == 2

def test_case_6():
    var_0 = module_2.get_user_lib_path()
    var_1 = module_0.zn_to_canonical_locator(var_0)
    assert module_0.ZN_USER_KEY == 80
    assert module_0.ZN_PASSWD_KEY == 81
    assert module_0.ZN_INFO_PID_KEY == 0
    assert module_0.ZN_INFO_PEER_KEY == 1
    assert module_0.ZN_INFO_PEER_PID_KEY == 2

def test_case_7():
    bool_0 = False
    none_type_0 = None
    subscriber_mode_0 = module_0.SubscriberMode(bool_0, none_type_0)
    assert f'{type(subscriber_mode_0).__module__}.{type(subscriber_mode_0).__qualname__}' == 'zenoh.net.session.SubscriberMode'
    assert f'{type(subscriber_mode_0.zn_sm).__module__}.{type(subscriber_mode_0.zn_sm).__qualname__}' == 'zenoh.net.binding.zn_sub_mode_t'
    assert module_0.ZN_USER_KEY == 80
    assert module_0.ZN_PASSWD_KEY == 81
    assert module_0.ZN_INFO_PID_KEY == 0
    assert module_0.ZN_INFO_PEER_KEY == 1
    assert module_0.ZN_INFO_PEER_PID_KEY == 2
    assert module_0.SubscriberMode.ZN_PUSH_MODE == 1
    assert module_0.SubscriberMode.ZN_PULL_MODE == 2
    assert module_0.SubscriberMode.ZN_PERIODIC_PUSH_MODE == 3
    assert module_0.SubscriberMode.ZN_PERIODIC_PULL_MODE == 4
    var_0 = module_1.node()

@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = False
    none_type_0 = None
    subscriber_mode_0 = module_0.SubscriberMode(bool_0, none_type_0)
    assert f'{type(subscriber_mode_0).__module__}.{type(subscriber_mode_0).__qualname__}' == 'zenoh.net.session.SubscriberMode'
    assert f'{type(subscriber_mode_0.zn_sm).__module__}.{type(subscriber_mode_0.zn_sm).__qualname__}' == 'zenoh.net.binding.zn_sub_mode_t'
    assert module_0.ZN_USER_KEY == 80
    assert module_0.ZN_PASSWD_KEY == 81
    assert module_0.ZN_INFO_PID_KEY == 0
    assert module_0.ZN_INFO_PEER_KEY == 1
    assert module_0.ZN_INFO_PEER_PID_KEY == 2
    assert module_0.SubscriberMode.ZN_PUSH_MODE == 1
    assert module_0.SubscriberMode.ZN_PULL_MODE == 2
    assert module_0.SubscriberMode.ZN_PERIODIC_PUSH_MODE == 3
    assert module_0.SubscriberMode.ZN_PERIODIC_PULL_MODE == 4
    var_0 = subscriber_mode_0.pull()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'zenoh.net.session.SubscriberMode'
    assert f'{type(var_0.zn_sm).__module__}.{type(var_0.zn_sm).__qualname__}' == 'zenoh.net.binding.zn_sub_mode_t'
    module_3.getdecoder(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = False
    none_type_0 = None
    subscriber_mode_0 = module_0.SubscriberMode(bool_0, none_type_0)
    assert f'{type(subscriber_mode_0).__module__}.{type(subscriber_mode_0).__qualname__}' == 'zenoh.net.session.SubscriberMode'
    assert f'{type(subscriber_mode_0.zn_sm).__module__}.{type(subscriber_mode_0.zn_sm).__qualname__}' == 'zenoh.net.binding.zn_sub_mode_t'
    assert module_0.ZN_USER_KEY == 80
    assert module_0.ZN_PASSWD_KEY == 81
    assert module_0.ZN_INFO_PID_KEY == 0
    assert module_0.ZN_INFO_PEER_KEY == 1
    assert module_0.ZN_INFO_PEER_PID_KEY == 2
    assert module_0.SubscriberMode.ZN_PUSH_MODE == 1
    assert module_0.SubscriberMode.ZN_PULL_MODE == 2
    assert module_0.SubscriberMode.ZN_PERIODIC_PUSH_MODE == 3
    assert module_0.SubscriberMode.ZN_PERIODIC_PULL_MODE == 4
    var_0 = subscriber_mode_0.push()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'zenoh.net.session.SubscriberMode'
    assert f'{type(var_0.zn_sm).__module__}.{type(var_0.zn_sm).__qualname__}' == 'zenoh.net.binding.zn_sub_mode_t'
    var_1 = subscriber_mode_0.pull()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'zenoh.net.session.SubscriberMode'
    assert f'{type(var_1.zn_sm).__module__}.{type(var_1.zn_sm).__qualname__}' == 'zenoh.net.binding.zn_sub_mode_t'
    module_3.getdecoder(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    var_0 = module_1.python_build()
    var_1 = var_0.__str__()
    module_0.zn_to_canonical_locator(var_1)