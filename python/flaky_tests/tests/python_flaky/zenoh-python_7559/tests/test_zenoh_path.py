# Automatically generated by Pynguin.
import pytest
import zenoh.path as module_0
import re as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 137
    module_0.Path(int_0)

def test_case_1():
    str_0 = 'Ahu9v#'
    with pytest.raises(ValueError):
        module_0.Path(str_0)

def test_case_2():
    str_0 = 'Ahu9v9'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 6
    var_0 = path_0.is_absolute()
    assert var_0 is False

def test_case_3():
    str_0 = 'Ahu9v9'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 6
    var_0 = path_0.is_absolute()
    assert var_0 is False
    var_1 = path_0.remove_prefix(str_0)
    assert len(path_0) == 0

def test_case_4():
    str_0 = 'Ahu9v9'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 6
    var_0 = path_0.to_string()
    var_1 = var_0.__len__()

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ';'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 1
    var_0 = path_0.__eq__(str_0)
    assert var_0 is False
    module_0.Path(path_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'Ahu9v9'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 6
    var_0 = path_0.to_string()
    var_1 = path_0.__str__()
    var_0.__setattr__(var_1, str_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = 'c'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 1
    var_0 = path_0.is_absolute()
    assert var_0 is False
    var_1 = path_0.__repr__()
    var_0.is_absolute()

def test_case_8():
    str_0 = 'Ahu9v9'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 6
    var_0 = path_0.__hash__()
    var_1 = path_0.is_absolute()
    assert var_1 is False

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = ';'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 1
    var_0 = path_0.to_path(path_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'zenoh.path.Path'
    assert len(var_0) == 1
    var_1 = path_0.__eq__(var_0)
    assert var_1 is True
    var_2 = var_0.is_valid(str_0)
    var_3 = path_0.__str__()
    var_1.is_absolute()

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = 'c'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 1
    var_0 = path_0.to_path(str_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'zenoh.path.Path'
    assert len(var_0) == 1
    var_1 = path_0.__str__()
    var_2 = path_0.is_absolute()
    assert var_2 is False
    path_0.is_prefix(var_0)

def test_case_11():
    str_0 = 'Ahu9v9'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 6
    var_0 = path_0.__hash__()
    var_1 = path_0.__len__()
    var_2 = path_0.is_absolute()
    assert var_2 is False

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = ';'
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 1
    var_0 = path_0.remove_prefix(str_0)
    assert len(path_0) == 0
    var_1 = path_0.remove_prefix(str_0)
    var_2 = path_0.to_path(str_0)
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'zenoh.path.Path'
    assert len(var_2) == 1
    var_3 = path_0.__eq__(str_0)
    assert var_3 is False
    var_4 = path_0.is_absolute()
    assert var_4 is False
    var_4.is_prefix(var_3)

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = "/dq'/Y}x"
    path_0 = module_0.Path(str_0)
    assert f'{type(path_0).__module__}.{type(path_0).__qualname__}' == 'zenoh.path.Path'
    assert len(path_0) == 8
    var_0 = path_0.is_absolute()
    assert var_0 is True
    var_1 = path_0.remove_prefix(str_0)
    assert len(path_0) == 0
    var_2 = path_0.to_string()
    assert var_2 == ''
    var_3 = path_0.to_string()
    assert var_3 == ''
    var_4 = module_1.finditer(var_3, str_0)
    var_5 = path_0.__len__()
    assert var_5 == 0
    module_0.Path(var_4)