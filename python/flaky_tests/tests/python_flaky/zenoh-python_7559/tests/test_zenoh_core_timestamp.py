# Automatically generated by Pynguin.
import pytest
import zenoh.core.timestamp as module_0

def test_case_0():
    timestamp_0 = module_0.Timestamp()
    assert f'{type(module_0.Timestamp.clock_id).__module__}.{type(module_0.Timestamp.clock_id).__qualname__}' == '_ctypes.CField'
    assert f'{type(module_0.Timestamp.time).__module__}.{type(module_0.Timestamp.time).__qualname__}' == '_ctypes.CField'
    var_0 = timestamp_0.__eq__(timestamp_0)
    assert var_0 is True

@pytest.mark.xfail(strict=True)
def test_case_1():
    timestamp_0 = module_0.Timestamp()
    assert f'{type(module_0.Timestamp.clock_id).__module__}.{type(module_0.Timestamp.clock_id).__qualname__}' == '_ctypes.CField'
    assert f'{type(module_0.Timestamp.time).__module__}.{type(module_0.Timestamp.time).__qualname__}' == '_ctypes.CField'
    var_0 = timestamp_0.floattime()
    assert var_0 == pytest.approx(0.0, abs=0.01, rel=0.01)
    var_1 = var_0.__hash__()
    assert var_1 == 0
    var_2 = timestamp_0.__eq__(var_1)
    var_0.clockid()

def test_case_2():
    timestamp_0 = module_0.Timestamp()
    assert f'{type(module_0.Timestamp.clock_id).__module__}.{type(module_0.Timestamp.clock_id).__qualname__}' == '_ctypes.CField'
    assert f'{type(module_0.Timestamp.time).__module__}.{type(module_0.Timestamp.time).__qualname__}' == '_ctypes.CField'
    var_0 = timestamp_0.__lt__(timestamp_0)
    assert var_0 is False

def test_case_3():
    timestamp_0 = module_0.Timestamp()
    assert f'{type(module_0.Timestamp.clock_id).__module__}.{type(module_0.Timestamp.clock_id).__qualname__}' == '_ctypes.CField'
    assert f'{type(module_0.Timestamp.time).__module__}.{type(module_0.Timestamp.time).__qualname__}' == '_ctypes.CField'
    var_0 = timestamp_0.__hash__()
    assert var_0 == 7184457178904771620

@pytest.mark.xfail(strict=True)
def test_case_4():
    timestamp_0 = module_0.Timestamp()
    assert f'{type(module_0.Timestamp.clock_id).__module__}.{type(module_0.Timestamp.clock_id).__qualname__}' == '_ctypes.CField'
    assert f'{type(module_0.Timestamp.time).__module__}.{type(module_0.Timestamp.time).__qualname__}' == '_ctypes.CField'
    timestamp_1 = module_0.Timestamp()
    var_0 = timestamp_1.__str__()
    assert var_0 == '1970-01-01T00:00:00.000000000Z/00000000000000000000000000000000'
    var_1 = timestamp_1.__hash__()
    assert var_1 == 7184457178904771620
    var_2 = timestamp_1.__hash__()
    var_2.clockid()

def test_case_5():
    timestamp_0 = module_0.Timestamp()
    assert f'{type(module_0.Timestamp.clock_id).__module__}.{type(module_0.Timestamp.clock_id).__qualname__}' == '_ctypes.CField'
    assert f'{type(module_0.Timestamp.time).__module__}.{type(module_0.Timestamp.time).__qualname__}' == '_ctypes.CField'
    var_0 = timestamp_0.__lt__(timestamp_0)
    assert var_0 is False
    var_1 = timestamp_0.datetime()

@pytest.mark.xfail(strict=True)
def test_case_6():
    dict_0 = {}
    timestamp_0 = module_0.Timestamp(**dict_0)
    assert f'{type(module_0.Timestamp.clock_id).__module__}.{type(module_0.Timestamp.clock_id).__qualname__}' == '_ctypes.CField'
    assert f'{type(module_0.Timestamp.time).__module__}.{type(module_0.Timestamp.time).__qualname__}' == '_ctypes.CField'
    var_0 = timestamp_0.clockid()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'zenoh.core.timestamp.c_ubyte_Array_16'
    assert len(var_0) == 16
    var_0.floattime()