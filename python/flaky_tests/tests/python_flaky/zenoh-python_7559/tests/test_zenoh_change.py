# Automatically generated by Pynguin.
import pytest
import zenoh.change as module_0
import platform as module_1
import zenoh.net.binding as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    change_0 = module_0.Change(none_type_0, none_type_0, none_type_0)
    assert f'{type(change_0).__module__}.{type(change_0).__qualname__}' == 'zenoh.change.Change'
    assert change_0.path is None
    assert change_0.timestamp is None
    assert change_0.value is None
    assert change_0.kind == module_0.ChangeKind.PUT
    var_0 = module_1.python_implementation()
    var_0.add_storage(none_type_0, change_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    zn_property_t_0 = module_2.zn_property_t()
    module_0.Change(zn_property_t_0, zn_property_t_0, zn_property_t_0)

def test_case_2():
    pass

@pytest.mark.xfail(strict=True)
def test_case_3():
    change_kind_0 = module_0.ChangeKind.PUT
    change_0 = module_0.Change(change_kind_0, change_kind_0, change_kind_0)
    assert f'{type(change_0).__module__}.{type(change_0).__qualname__}' == 'zenoh.change.Change'
    assert change_0.path == module_0.ChangeKind.PUT
    assert change_0.timestamp == module_0.ChangeKind.PUT
    assert change_0.value is None
    assert change_0.kind == module_0.ChangeKind.PUT
    change_0.__str__()

@pytest.mark.xfail(strict=True)
def test_case_4():
    change_kind_0 = module_0.ChangeKind.REMOVE
    change_0 = module_0.Change(change_kind_0, change_kind_0, change_kind_0, change_kind_0)
    assert f'{type(change_0).__module__}.{type(change_0).__qualname__}' == 'zenoh.change.Change'
    assert change_0.path == module_0.ChangeKind.REMOVE
    assert change_0.timestamp == module_0.ChangeKind.REMOVE
    assert change_0.value == module_0.ChangeKind.REMOVE
    assert change_0.kind == module_0.ChangeKind.REMOVE
    change_0.__repr__()

@pytest.mark.xfail(strict=True)
def test_case_5():
    change_kind_0 = module_0.ChangeKind.PUT
    change_0 = module_0.Change(change_kind_0, change_kind_0, change_kind_0)
    assert f'{type(change_0).__module__}.{type(change_0).__qualname__}' == 'zenoh.change.Change'
    assert change_0.path == module_0.ChangeKind.PUT
    assert change_0.timestamp == module_0.ChangeKind.PUT
    assert change_0.value is None
    assert change_0.kind == module_0.ChangeKind.PUT
    var_0 = change_0.get_kind()
    var_1 = change_0.get_value()
    var_0.get_kind()

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    change_0 = module_0.Change(none_type_0, none_type_0, none_type_0, none_type_0)
    assert f'{type(change_0).__module__}.{type(change_0).__qualname__}' == 'zenoh.change.Change'
    assert change_0.path is None
    assert change_0.timestamp is None
    assert change_0.value is None
    assert change_0.kind == module_0.ChangeKind.PUT
    var_0 = change_0.get_timestamp()
    var_0.get_value()

@pytest.mark.xfail(strict=True)
def test_case_7():
    none_type_0 = None
    change_0 = module_0.Change(none_type_0, none_type_0, none_type_0, none_type_0)
    assert f'{type(change_0).__module__}.{type(change_0).__qualname__}' == 'zenoh.change.Change'
    assert change_0.path is None
    assert change_0.timestamp is None
    assert change_0.value is None
    assert change_0.kind == module_0.ChangeKind.PUT
    var_0 = change_0.get_path()
    var_1 = change_0.get_timestamp()
    var_1.get_value()