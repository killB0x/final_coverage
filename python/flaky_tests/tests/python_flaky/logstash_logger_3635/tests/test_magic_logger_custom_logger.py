# Automatically generated by Pynguin.
import pytest
import magic_logger.custom_logger as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    list_0 = []
    custom_logger_0 = module_0.CustomLogger(list_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == []
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    custom_logger_0.debug(list_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    custom_logger_0 = module_0.CustomLogger(list_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == []
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    custom_logger_0.info(list_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    list_0 = []
    custom_logger_0 = module_0.CustomLogger(list_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == []
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    custom_logger_0.warning(custom_logger_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    custom_logger_0 = module_0.CustomLogger(list_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == []
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    custom_logger_0.exception(custom_logger_0, *list_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    custom_logger_0 = module_0.CustomLogger(list_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == []
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    custom_logger_0.critical(list_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    custom_logger_0 = module_0.CustomLogger(none_type_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name is None
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    custom_logger_0.handle(none_type_0, none_type_0)

def test_case_6():
    int_0 = 2347
    custom_logger_0 = module_0.CustomLogger(int_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == 2347
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None

@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b'\xa5\x9a\xc6\xc5~An\x99\xcc\x06\t\xc6\x9d\x0c\x10\xc9\xd5C|'
    int_0 = 92
    tuple_0 = (bytes_0, int_0)
    custom_logger_0 = module_0.CustomLogger(tuple_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == (b'\xa5\x9a\xc6\xc5~An\x99\xcc\x06\t\xc6\x9d\x0c\x10\xc9\xd5C|', 92)
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    list_0 = [int_0]
    custom_logger_0.handle(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    list_0 = []
    custom_logger_0 = module_0.CustomLogger(list_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == []
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    int_0 = 0
    var_0 = custom_logger_0.log(int_0, custom_logger_0)
    custom_logger_0.handle(custom_logger_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    list_0 = []
    custom_logger_0 = module_0.CustomLogger(list_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == []
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    custom_logger_0.handle(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    int_0 = 2347
    custom_logger_0 = module_0.CustomLogger(int_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == 2347
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    custom_logger_0.log(int_0, custom_logger_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    bool_0 = True
    custom_logger_0 = module_0.CustomLogger(bool_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name is True
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    custom_logger_0.log(bool_0, bool_0, bool_0)

def test_case_12():
    bytes_0 = b''
    int_0 = 92
    tuple_0 = (bytes_0, int_0)
    custom_logger_0 = module_0.CustomLogger(tuple_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == (b'', 92)
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    list_0 = [int_0]
    var_0 = custom_logger_0.setLevel(int_0)
    var_1 = custom_logger_0.exception(bytes_0, *list_0)

def test_case_13():
    bytes_0 = b''
    int_0 = 92
    tuple_0 = (bytes_0, int_0)
    custom_logger_0 = module_0.CustomLogger(tuple_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == (b'', 92)
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    list_0 = [int_0]
    var_0 = custom_logger_0.setLevel(int_0)
    int_1 = -1046
    var_1 = custom_logger_0.debug(int_1, *list_0)
    var_2 = custom_logger_0.exception(bytes_0, *list_0)

def test_case_14():
    bytes_0 = b''
    int_0 = 92
    tuple_0 = (bytes_0, int_0)
    custom_logger_0 = module_0.CustomLogger(tuple_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == (b'', 92)
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    list_0 = [int_0]
    var_0 = custom_logger_0.setLevel(int_0)
    int_1 = -1046
    var_1 = custom_logger_0.info(int_0)
    var_2 = custom_logger_0.debug(int_1, *list_0)
    var_3 = custom_logger_0.exception(bytes_0, *list_0)

def test_case_15():
    bytes_0 = b''
    int_0 = 92
    tuple_0 = (bytes_0, int_0)
    custom_logger_0 = module_0.CustomLogger(tuple_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == (b'', 92)
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    list_0 = [int_0]
    var_0 = custom_logger_0.setLevel(int_0)
    var_1 = custom_logger_0.critical(custom_logger_0)
    var_2 = custom_logger_0.exception(bytes_0, *list_0)

def test_case_16():
    bytes_0 = b''
    int_0 = 92
    tuple_0 = (bytes_0, int_0)
    custom_logger_0 = module_0.CustomLogger(tuple_0)
    assert custom_logger_0.filters == []
    assert custom_logger_0.name == (b'', 92)
    assert custom_logger_0.level == 0
    assert custom_logger_0.parent is None
    assert custom_logger_0.propagate is True
    assert custom_logger_0.handlers == []
    assert custom_logger_0.disabled is False
    assert custom_logger_0.logstash_handler is None
    list_0 = [int_0]
    var_0 = custom_logger_0.setLevel(int_0)
    var_1 = custom_logger_0.warning(int_0)
    int_1 = -1046
    var_2 = custom_logger_0.debug(int_1, *list_0)
    var_3 = custom_logger_0.exception(bytes_0, *list_0)