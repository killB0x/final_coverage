# Automatically generated by Pynguin.
import pytest
import pyburstlib.wallet_api.models.accounts as module_0
import pyburstlib.wallet_api.base as module_1

def test_case_0():
    int_0 = -175
    set_account_info_response_0 = module_0.SetAccountInfoResponse(int_0, broadcasted=int_0, transaction=int_0)
    assert f'{type(set_account_info_response_0).__module__}.{type(set_account_info_response_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetAccountInfoResponse'
    assert set_account_info_response_0.unsignedTransactionBytes == -175
    assert set_account_info_response_0.broadcasted == -175
    assert set_account_info_response_0.transactionBytes is None
    assert set_account_info_response_0.fullHash is None
    assert set_account_info_response_0.transaction == -175
    assert set_account_info_response_0.signatureHash is None
    assert set_account_info_response_0.requestProcessingTime is None
    assert f'{type(module_0.SetAccountInfoResponse.transactionJSON).__module__}.{type(module_0.SetAccountInfoResponse.transactionJSON).__qualname__}' == 'builtins.property'
    account_a_ts_0 = module_0.AccountATs(requestProcessingTime=set_account_info_response_0)
    assert f'{type(account_a_ts_0).__module__}.{type(account_a_ts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert account_a_ts_0.ats is None
    assert f'{type(account_a_ts_0.requestProcessingTime).__module__}.{type(account_a_ts_0.requestProcessingTime).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetAccountInfoResponse'
    var_0 = account_a_ts_0.to_dict()
    with pytest.raises(AssertionError):
        module_0.SendMoneyRequest(secretPhrase=var_0, broadcast=int_0, message=var_0, messageToEncrypt=set_account_info_response_0, messageToEncryptToSelfIsText=int_0, encryptToSelfMessageNonce=set_account_info_response_0, recipientPublicKey=var_0)

def test_case_1():
    account_transaction_ids_0 = module_0.AccountTransactionIds()
    assert f'{type(account_transaction_ids_0).__module__}.{type(account_transaction_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountTransactionIds'
    assert account_transaction_ids_0.transactionIds is None
    assert account_transaction_ids_0.requestProcessingTime is None
    account_subscriptions_0 = module_0.AccountSubscriptions()
    assert f'{type(account_subscriptions_0).__module__}.{type(account_subscriptions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert account_subscriptions_0.subscriptions is None
    assert account_subscriptions_0.requestProcessingTime is None
    none_type_0 = None
    with pytest.raises(AssertionError):
        module_0.SetRewardRecipientRequest(amountNQT=none_type_0, messageToEncryptIsText=none_type_0, messageToEncryptToSelf=none_type_0, messageToEncryptToSelfIsText=none_type_0)

def test_case_2():
    bytes_0 = b'c3\x14'
    with pytest.raises(AssertionError):
        module_0.SetAccountInfoRequest(referencedTransactionFullHash=bytes_0, message=bytes_0, messageToEncryptIsText=bytes_0, encryptToSelfMessageNonce=bytes_0)

def test_case_3():
    accounts_0 = module_0.Accounts()
    assert f'{type(accounts_0).__module__}.{type(accounts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Accounts'
    assert accounts_0.accounts is None
    assert accounts_0.requestProcessingTime is None

def test_case_4():
    account_0 = module_0.Account()
    assert f'{type(account_0).__module__}.{type(account_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Account'
    assert account_0.unconfirmedBalanceNQT is None
    assert account_0.guaranteedBalanceNQT is None
    assert account_0.effectiveBalanceNXT is None
    assert account_0.accountRS is None
    assert account_0.name is None
    assert account_0.description is None
    assert account_0.forgedBalanceNQT is None
    assert account_0.balanceNQT is None
    assert account_0.publicKey is None
    assert account_0.requestProcessingTime is None
    assert account_0.account is None

def test_case_5():
    account_a_ts_0 = module_0.AccountATs()
    assert f'{type(account_a_ts_0).__module__}.{type(account_a_ts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert account_a_ts_0.ats is None
    assert account_a_ts_0.requestProcessingTime is None

def test_case_6():
    account_block_ids_0 = module_0.AccountBlockIds()
    assert f'{type(account_block_ids_0).__module__}.{type(account_block_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountBlockIds'
    assert account_block_ids_0.blockIds is None
    assert account_block_ids_0.requestProcessingTime is None

def test_case_7():
    account_blocks_0 = module_0.AccountBlocks()
    assert f'{type(account_blocks_0).__module__}.{type(account_blocks_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountBlocks'
    assert account_blocks_0.blocks is None
    assert account_blocks_0.requestProcessingTime is None

def test_case_8():
    account_current_ask_order_ids_0 = module_0.AccountCurrentAskOrderIds()
    assert f'{type(account_current_ask_order_ids_0).__module__}.{type(account_current_ask_order_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrderIds'
    assert account_current_ask_order_ids_0.askOrderIds is None
    assert account_current_ask_order_ids_0.requestProcessingTime is None

def test_case_9():
    account_current_ask_orders_0 = module_0.AccountCurrentAskOrders()
    assert f'{type(account_current_ask_orders_0).__module__}.{type(account_current_ask_orders_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrders'
    assert account_current_ask_orders_0.askOrders is None
    assert account_current_ask_orders_0.requestProcessingTime is None

def test_case_10():
    account_current_bid_order_ids_0 = module_0.AccountCurrentBidOrderIds()
    assert f'{type(account_current_bid_order_ids_0).__module__}.{type(account_current_bid_order_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert account_current_bid_order_ids_0.bidOrderIds is None
    assert account_current_bid_order_ids_0.requestProcessingTime is None

def test_case_11():
    account_current_bid_orders_0 = module_0.AccountCurrentBidOrders()
    assert f'{type(account_current_bid_orders_0).__module__}.{type(account_current_bid_orders_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrders'
    assert account_current_bid_orders_0.bidOrders is None
    assert account_current_bid_orders_0.requestProcessingTime is None

def test_case_12():
    account_escrow_transactions_0 = module_0.AccountEscrowTransactions()
    assert f'{type(account_escrow_transactions_0).__module__}.{type(account_escrow_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountEscrowTransactions'
    assert account_escrow_transactions_0.escrows is None
    assert account_escrow_transactions_0.requestProcessingTime is None

def test_case_13():
    account_id_0 = module_0.AccountId()
    assert f'{type(account_id_0).__module__}.{type(account_id_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountId'
    assert account_id_0.accountRS is None
    assert account_id_0.publicKey is None
    assert account_id_0.account is None
    assert account_id_0.requestProcessingTime is None

def test_case_14():
    account_lessors_0 = module_0.AccountLessors()
    assert f'{type(account_lessors_0).__module__}.{type(account_lessors_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountLessors'
    assert account_lessors_0.accountRS is None
    assert account_lessors_0.lessors is None
    assert account_lessors_0.account is None
    assert account_lessors_0.requestProcessingTime is None

def test_case_15():
    account_public_key_0 = module_0.AccountPublicKey()
    assert f'{type(account_public_key_0).__module__}.{type(account_public_key_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountPublicKey'
    assert account_public_key_0.publicKey is None
    assert account_public_key_0.requestProcessingTime is None

def test_case_16():
    account_subscriptions_0 = module_0.AccountSubscriptions()
    assert f'{type(account_subscriptions_0).__module__}.{type(account_subscriptions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert account_subscriptions_0.subscriptions is None
    assert account_subscriptions_0.requestProcessingTime is None

def test_case_17():
    account_transaction_ids_0 = module_0.AccountTransactionIds()
    assert f'{type(account_transaction_ids_0).__module__}.{type(account_transaction_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountTransactionIds'
    assert account_transaction_ids_0.transactionIds is None
    assert account_transaction_ids_0.requestProcessingTime is None

def test_case_18():
    encrypted_message_0 = module_0.EncryptedMessage()
    assert f'{type(encrypted_message_0).__module__}.{type(encrypted_message_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.EncryptedMessage'
    assert encrypted_message_0.data is None
    assert encrypted_message_0.nonce is None
    assert encrypted_message_0.isText is None

def test_case_19():
    attachment_0 = module_0.Attachment()
    assert f'{type(attachment_0).__module__}.{type(attachment_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Attachment'
    assert attachment_0.name is None
    assert attachment_0.description is None
    assert f'{type(module_0.Attachment.encryptedMessage).__module__}.{type(module_0.Attachment.encryptedMessage).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_20():
    accounts_0 = module_0.Accounts()
    assert f'{type(accounts_0).__module__}.{type(accounts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Accounts'
    assert accounts_0.accounts is None
    assert accounts_0.requestProcessingTime is None
    var_0 = accounts_0.to_json()
    assert var_0 == '{"accounts": null, "requestProcessingTime": null}'
    account_public_key_0 = module_0.AccountPublicKey()
    assert f'{type(account_public_key_0).__module__}.{type(account_public_key_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountPublicKey'
    assert account_public_key_0.publicKey is None
    assert account_public_key_0.requestProcessingTime is None
    assets_0 = module_0.Assets()
    assert f'{type(assets_0).__module__}.{type(assets_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Assets'
    assert assets_0.assets is None
    assert assets_0.requestProcessingTime is None
    set_reward_recipient_response_0 = module_0.SetRewardRecipientResponse(broadcasted=var_0, transaction=var_0)
    assert f'{type(set_reward_recipient_response_0).__module__}.{type(set_reward_recipient_response_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetRewardRecipientResponse'
    assert set_reward_recipient_response_0.unsignedTransactionBytes is None
    assert set_reward_recipient_response_0.broadcasted == '{"accounts": null, "requestProcessingTime": null}'
    assert set_reward_recipient_response_0.transactionBytes is None
    assert set_reward_recipient_response_0.fullHash is None
    assert set_reward_recipient_response_0.transaction == '{"accounts": null, "requestProcessingTime": null}'
    assert set_reward_recipient_response_0.signatureHash is None
    assert set_reward_recipient_response_0.requestProcessingTime is None
    assert f'{type(module_0.SetRewardRecipientResponse.transactionJSON).__module__}.{type(module_0.SetRewardRecipientResponse.transactionJSON).__qualname__}' == 'builtins.property'
    transaction_j_s_o_n_0 = module_0.TransactionJSON(assets_0, assets_0, accounts_0, set_reward_recipient_response_0, sender=accounts_0, recipientRS=var_0, timestamp=accounts_0)
    assert f'{type(transaction_j_s_o_n_0).__module__}.{type(transaction_j_s_o_n_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.TransactionJSON'
    assert f'{type(transaction_j_s_o_n_0.senderPublicKey).__module__}.{type(transaction_j_s_o_n_0.senderPublicKey).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Assets'
    assert f'{type(transaction_j_s_o_n_0.feeNQT).__module__}.{type(transaction_j_s_o_n_0.feeNQT).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Assets'
    assert f'{type(transaction_j_s_o_n_0.type).__module__}.{type(transaction_j_s_o_n_0.type).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Accounts'
    assert f'{type(transaction_j_s_o_n_0.version).__module__}.{type(transaction_j_s_o_n_0.version).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetRewardRecipientResponse'
    assert transaction_j_s_o_n_0.ecBlockId is None
    assert transaction_j_s_o_n_0.senderRS is None
    assert transaction_j_s_o_n_0.subtype is None
    assert transaction_j_s_o_n_0.amountNQT is None
    assert f'{type(transaction_j_s_o_n_0.sender).__module__}.{type(transaction_j_s_o_n_0.sender).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Accounts'
    assert transaction_j_s_o_n_0.recipientRS == '{"accounts": null, "requestProcessingTime": null}'
    assert transaction_j_s_o_n_0.recipient is None
    assert transaction_j_s_o_n_0.ecBlockHeight is None
    assert transaction_j_s_o_n_0.deadline is None
    assert f'{type(transaction_j_s_o_n_0.timestamp).__module__}.{type(transaction_j_s_o_n_0.timestamp).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Accounts'
    assert transaction_j_s_o_n_0.height is None
    assert f'{type(module_0.TransactionJSON.attachment).__module__}.{type(module_0.TransactionJSON.attachment).__qualname__}' == 'builtins.property'
    attachment_0 = module_0.Attachment(description=accounts_0)
    assert f'{type(attachment_0).__module__}.{type(attachment_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Attachment'
    assert attachment_0.name is None
    assert f'{type(attachment_0.description).__module__}.{type(attachment_0.description).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Accounts'
    assert f'{type(module_0.Attachment.encryptedMessage).__module__}.{type(module_0.Attachment.encryptedMessage).__qualname__}' == 'builtins.property'
    var_0.to_json()

def test_case_21():
    account_transactions_0 = module_0.AccountTransactions()
    assert f'{type(account_transactions_0).__module__}.{type(account_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountTransactions'
    assert account_transactions_0.requestProcessingTime is None
    assert f'{type(module_0.AccountTransactions.transactions).__module__}.{type(module_0.AccountTransactions.transactions).__qualname__}' == 'builtins.property'

def test_case_22():
    assets_0 = module_0.Assets()
    assert f'{type(assets_0).__module__}.{type(assets_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Assets'
    assert assets_0.assets is None
    assert assets_0.requestProcessingTime is None

def test_case_23():
    balance_0 = module_0.Balance()
    assert f'{type(balance_0).__module__}.{type(balance_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Balance'
    assert balance_0.unconfirmedBalanceNQT is None
    assert balance_0.guaranteedBalanceNQT is None
    assert balance_0.effectiveBalanceNXT is None
    assert balance_0.forgedBalanceNQT is None
    assert balance_0.balanceNQT is None
    assert balance_0.requestProcessingTime is None

def test_case_24():
    guaranteed_balance_0 = module_0.GuaranteedBalance()
    assert f'{type(guaranteed_balance_0).__module__}.{type(guaranteed_balance_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.GuaranteedBalance'
    assert guaranteed_balance_0.guaranteedBalanceNQT is None
    assert guaranteed_balance_0.requestProcessingTime is None

def test_case_25():
    reward_recipient_0 = module_0.RewardRecipient()
    assert f'{type(reward_recipient_0).__module__}.{type(reward_recipient_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.RewardRecipient'
    assert reward_recipient_0.rewardRecipient is None
    assert reward_recipient_0.requestProcessingTime is None

def test_case_26():
    subscription_0 = module_0.Subscription()
    assert f'{type(subscription_0).__module__}.{type(subscription_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Subscription'
    assert subscription_0.subscription is None
    assert subscription_0.requestProcessingTime is None

def test_case_27():
    subscriptions_0 = module_0.Subscriptions()
    assert f'{type(subscriptions_0).__module__}.{type(subscriptions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Subscriptions'
    assert subscriptions_0.subscriptions is None
    assert subscriptions_0.requestProcessingTime is None

def test_case_28():
    unconfirmed_transaction_ids_0 = module_0.UnconfirmedTransactionIds()
    assert f'{type(unconfirmed_transaction_ids_0).__module__}.{type(unconfirmed_transaction_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.UnconfirmedTransactionIds'
    assert unconfirmed_transaction_ids_0.unconfirmedTransactionIds is None
    assert unconfirmed_transaction_ids_0.requestProcessingTime is None

def test_case_29():
    unconfirmed_transactions_0 = module_0.UnconfirmedTransactions()
    assert f'{type(unconfirmed_transactions_0).__module__}.{type(unconfirmed_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.UnconfirmedTransactions'
    assert unconfirmed_transactions_0.requestProcessingTime is None
    assert f'{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__module__}.{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__qualname__}' == 'builtins.property'

def test_case_30():
    rs_convert_0 = module_0.rsConvert()
    assert f'{type(rs_convert_0).__module__}.{type(rs_convert_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert rs_convert_0.account is None
    assert rs_convert_0.accountRS is None
    assert rs_convert_0.requestProcessingTime is None
    assert f'{type(module_0.rsConvert.friendly).__module__}.{type(module_0.rsConvert.friendly).__qualname__}' == 'builtins.property'

def test_case_31():
    send_money_response_0 = module_0.SendMoneyResponse()
    assert f'{type(send_money_response_0).__module__}.{type(send_money_response_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyResponse'
    assert send_money_response_0.unsignedTransactionBytes is None
    assert send_money_response_0.broadcasted is None
    assert send_money_response_0.transactionBytes is None
    assert send_money_response_0.fullHash is None
    assert send_money_response_0.transaction is None
    assert send_money_response_0.signatureHash is None
    assert send_money_response_0.requestProcessingTime is None
    assert f'{type(module_0.SendMoneyResponse.transactionJSON).__module__}.{type(module_0.SendMoneyResponse.transactionJSON).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_32():
    account_subscriptions_0 = module_0.AccountSubscriptions()
    assert f'{type(account_subscriptions_0).__module__}.{type(account_subscriptions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert account_subscriptions_0.subscriptions is None
    assert account_subscriptions_0.requestProcessingTime is None
    set_reward_recipient_response_0 = module_0.SetRewardRecipientResponse(fullHash=account_subscriptions_0)
    assert f'{type(set_reward_recipient_response_0).__module__}.{type(set_reward_recipient_response_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetRewardRecipientResponse'
    assert set_reward_recipient_response_0.unsignedTransactionBytes is None
    assert set_reward_recipient_response_0.broadcasted is None
    assert set_reward_recipient_response_0.transactionBytes is None
    assert f'{type(set_reward_recipient_response_0.fullHash).__module__}.{type(set_reward_recipient_response_0.fullHash).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert set_reward_recipient_response_0.transaction is None
    assert set_reward_recipient_response_0.signatureHash is None
    assert set_reward_recipient_response_0.requestProcessingTime is None
    assert f'{type(module_0.SetRewardRecipientResponse.transactionJSON).__module__}.{type(module_0.SetRewardRecipientResponse.transactionJSON).__qualname__}' == 'builtins.property'
    send_money_request_0 = module_0.SendMoneyRequest(account_subscriptions_0, account_subscriptions_0, account_subscriptions_0, deadline=account_subscriptions_0, messageToEncryptToSelfIsText=account_subscriptions_0, encryptToSelfMessageData=account_subscriptions_0, recipientPublicKey=account_subscriptions_0)
    assert f'{type(send_money_request_0).__module__}.{type(send_money_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyRequest'
    assert f'{type(send_money_request_0.recipient).__module__}.{type(send_money_request_0.recipient).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert f'{type(send_money_request_0.secretPhrase).__module__}.{type(send_money_request_0.secretPhrase).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert send_money_request_0.publicKey is None
    assert send_money_request_0.feeNQT == '100000000'
    assert f'{type(send_money_request_0.deadline).__module__}.{type(send_money_request_0.deadline).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert send_money_request_0.referencedTransactionFullHash is None
    assert send_money_request_0.broadcast is None
    assert send_money_request_0.message is None
    assert send_money_request_0.messageIsText is None
    assert send_money_request_0.messageToEncrypt is None
    assert send_money_request_0.messageToEncryptIsText is None
    assert send_money_request_0.encryptedMessageData is None
    assert send_money_request_0.encryptedMessageNonce is None
    assert send_money_request_0.messageToEncryptToSelf is None
    assert f'{type(send_money_request_0.messageToEncryptToSelfIsText).__module__}.{type(send_money_request_0.messageToEncryptToSelfIsText).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert f'{type(send_money_request_0.encryptToSelfMessageData).__module__}.{type(send_money_request_0.encryptToSelfMessageData).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert send_money_request_0.encryptToSelfMessageNonce is None
    assert f'{type(send_money_request_0.recipientPublicKey).__module__}.{type(send_money_request_0.recipientPublicKey).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert send_money_request_0.requestType == 'sendMoney'
    assert module_0.SendMoneyRequest.DEFAULT_SEND_MONEY_FEE == '100000000'
    assert module_0.SendMoneyRequest.DEFAULT_SEND_MONEY_DEADLINE == '1440'
    module_0.SendMoneyRequest(send_money_request_0, account_subscriptions_0, set_reward_recipient_response_0, feeNQT=account_subscriptions_0, deadline=set_reward_recipient_response_0, referencedTransactionFullHash=set_reward_recipient_response_0, messageToEncryptToSelf=set_reward_recipient_response_0, recipientPublicKey=account_subscriptions_0)

def test_case_33():
    int_0 = -175
    set_account_info_response_0 = module_0.SetAccountInfoResponse(int_0, broadcasted=int_0, transaction=int_0)
    assert f'{type(set_account_info_response_0).__module__}.{type(set_account_info_response_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetAccountInfoResponse'
    assert set_account_info_response_0.unsignedTransactionBytes == -175
    assert set_account_info_response_0.broadcasted == -175
    assert set_account_info_response_0.transactionBytes is None
    assert set_account_info_response_0.fullHash is None
    assert set_account_info_response_0.transaction == -175
    assert set_account_info_response_0.signatureHash is None
    assert set_account_info_response_0.requestProcessingTime is None
    assert f'{type(module_0.SetAccountInfoResponse.transactionJSON).__module__}.{type(module_0.SetAccountInfoResponse.transactionJSON).__qualname__}' == 'builtins.property'
    account_subscriptions_0 = module_0.AccountSubscriptions()
    assert f'{type(account_subscriptions_0).__module__}.{type(account_subscriptions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert account_subscriptions_0.subscriptions is None
    assert account_subscriptions_0.requestProcessingTime is None
    var_0 = set_account_info_response_0.to_dict()
    account_public_key_0 = module_0.AccountPublicKey()
    assert f'{type(account_public_key_0).__module__}.{type(account_public_key_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountPublicKey'
    assert account_public_key_0.publicKey is None
    assert account_public_key_0.requestProcessingTime is None

def test_case_34():
    unconfirmed_transactions_0 = module_0.UnconfirmedTransactions()
    assert f'{type(unconfirmed_transactions_0).__module__}.{type(unconfirmed_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.UnconfirmedTransactions'
    assert unconfirmed_transactions_0.requestProcessingTime is None
    assert f'{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__module__}.{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__qualname__}' == 'builtins.property'
    var_0 = unconfirmed_transactions_0.to_json()
    assert var_0 == '{"_unconfirmedTransactions": [], "requestProcessingTime": null}'
    set_reward_recipient_request_0 = module_0.SetRewardRecipientRequest(var_0, secretPhrase=var_0, publicKey=var_0, feeNQT=var_0, messageToEncrypt=unconfirmed_transactions_0, encryptedMessageData=var_0, encryptToSelfMessageNonce=var_0)
    assert f'{type(set_reward_recipient_request_0).__module__}.{type(set_reward_recipient_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetRewardRecipientRequest'
    assert set_reward_recipient_request_0.recipient == '{"_unconfirmedTransactions": [], "requestProcessingTime": null}'
    assert set_reward_recipient_request_0.amountNQT == 'None'
    assert set_reward_recipient_request_0.secretPhrase == '{"_unconfirmedTransactions": [], "requestProcessingTime": null}'
    assert set_reward_recipient_request_0.publicKey == '{"_unconfirmedTransactions": [], "requestProcessingTime": null}'
    assert set_reward_recipient_request_0.feeNQT == '{"_unconfirmedTransactions": [], "requestProcessingTime": null}'
    assert set_reward_recipient_request_0.deadline == '1440'
    assert set_reward_recipient_request_0.referencedTransactionFullHash is None
    assert set_reward_recipient_request_0.broadcast is None
    assert set_reward_recipient_request_0.message is None
    assert set_reward_recipient_request_0.messageIsText is None
    assert f'{type(set_reward_recipient_request_0.messageToEncrypt).__module__}.{type(set_reward_recipient_request_0.messageToEncrypt).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.UnconfirmedTransactions'
    assert set_reward_recipient_request_0.messageToEncryptIsText is None
    assert set_reward_recipient_request_0.encryptedMessageData == '{"_unconfirmedTransactions": [], "requestProcessingTime": null}'
    assert set_reward_recipient_request_0.encryptedMessageNonce is None
    assert set_reward_recipient_request_0.messageToEncryptToSelf is None
    assert set_reward_recipient_request_0.messageToEncryptToSelfIsText is None
    assert set_reward_recipient_request_0.encryptToSelfMessageData is None
    assert set_reward_recipient_request_0.encryptToSelfMessageNonce == '{"_unconfirmedTransactions": [], "requestProcessingTime": null}'
    assert set_reward_recipient_request_0.recipientPublicKey is None
    assert set_reward_recipient_request_0.requestType == 'setRewardRecipient'
    assert module_0.SetRewardRecipientRequest.DEFAULT_REWARD_RECIPIENT_FEE == '100000000'
    assert module_0.SetRewardRecipientRequest.DEFAULT_REWARD_RECIPIENT_DEADLINE == '1440'

def test_case_35():
    accounts_0 = module_0.Accounts()
    assert f'{type(accounts_0).__module__}.{type(accounts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Accounts'
    assert accounts_0.accounts is None
    assert accounts_0.requestProcessingTime is None
    var_0 = accounts_0.to_json()
    assert var_0 == '{"accounts": null, "requestProcessingTime": null}'
    list_0 = [var_0, accounts_0, accounts_0, accounts_0]
    with pytest.raises(AssertionError):
        module_0.SetRewardRecipientRequest(list_0, var_0, message=var_0, messageIsText=var_0, messageToEncryptIsText=list_0)

def test_case_36():
    bool_0 = False
    rs_convert_0 = module_0.rsConvert(requestProcessingTime=bool_0)
    assert f'{type(rs_convert_0).__module__}.{type(rs_convert_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert rs_convert_0.account is None
    assert rs_convert_0.accountRS is None
    assert rs_convert_0.requestProcessingTime is False
    assert f'{type(module_0.rsConvert.friendly).__module__}.{type(module_0.rsConvert.friendly).__qualname__}' == 'builtins.property'
    none_type_0 = None
    account_current_ask_orders_0 = module_0.AccountCurrentAskOrders()
    assert f'{type(account_current_ask_orders_0).__module__}.{type(account_current_ask_orders_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrders'
    assert account_current_ask_orders_0.askOrders is None
    assert account_current_ask_orders_0.requestProcessingTime is None
    account_current_bid_order_ids_0 = module_0.AccountCurrentBidOrderIds(requestProcessingTime=account_current_ask_orders_0)
    assert f'{type(account_current_bid_order_ids_0).__module__}.{type(account_current_bid_order_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert account_current_bid_order_ids_0.bidOrderIds is None
    assert f'{type(account_current_bid_order_ids_0.requestProcessingTime).__module__}.{type(account_current_bid_order_ids_0.requestProcessingTime).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrders'
    attachment_0 = module_0.Attachment(description=account_current_ask_orders_0)
    assert f'{type(attachment_0).__module__}.{type(attachment_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Attachment'
    assert attachment_0.name is None
    assert f'{type(attachment_0.description).__module__}.{type(attachment_0.description).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrders'
    assert f'{type(module_0.Attachment.encryptedMessage).__module__}.{type(module_0.Attachment.encryptedMessage).__qualname__}' == 'builtins.property'
    send_money_request_0 = module_0.SendMoneyRequest(account_current_bid_order_ids_0, account_current_bid_order_ids_0, account_current_bid_order_ids_0, deadline=account_current_ask_orders_0, messageToEncryptToSelfIsText=rs_convert_0, encryptToSelfMessageData=none_type_0, recipientPublicKey=account_current_bid_order_ids_0)
    assert f'{type(send_money_request_0).__module__}.{type(send_money_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyRequest'
    assert f'{type(send_money_request_0.recipient).__module__}.{type(send_money_request_0.recipient).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert f'{type(send_money_request_0.secretPhrase).__module__}.{type(send_money_request_0.secretPhrase).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert send_money_request_0.publicKey is None
    assert send_money_request_0.feeNQT == '100000000'
    assert f'{type(send_money_request_0.deadline).__module__}.{type(send_money_request_0.deadline).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrders'
    assert send_money_request_0.referencedTransactionFullHash is None
    assert send_money_request_0.broadcast is None
    assert send_money_request_0.message is None
    assert send_money_request_0.messageIsText is None
    assert send_money_request_0.messageToEncrypt is None
    assert send_money_request_0.messageToEncryptIsText is None
    assert send_money_request_0.encryptedMessageData is None
    assert send_money_request_0.encryptedMessageNonce is None
    assert send_money_request_0.messageToEncryptToSelf is None
    assert f'{type(send_money_request_0.messageToEncryptToSelfIsText).__module__}.{type(send_money_request_0.messageToEncryptToSelfIsText).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert send_money_request_0.encryptToSelfMessageData is None
    assert send_money_request_0.encryptToSelfMessageNonce is None
    assert f'{type(send_money_request_0.recipientPublicKey).__module__}.{type(send_money_request_0.recipientPublicKey).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert send_money_request_0.requestType == 'sendMoney'
    assert module_0.SendMoneyRequest.DEFAULT_SEND_MONEY_FEE == '100000000'
    assert module_0.SendMoneyRequest.DEFAULT_SEND_MONEY_DEADLINE == '1440'

def test_case_37():
    bool_0 = False
    rs_convert_0 = module_0.rsConvert(requestProcessingTime=bool_0)
    assert f'{type(rs_convert_0).__module__}.{type(rs_convert_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert rs_convert_0.account is None
    assert rs_convert_0.accountRS is None
    assert rs_convert_0.requestProcessingTime is False
    assert f'{type(module_0.rsConvert.friendly).__module__}.{type(module_0.rsConvert.friendly).__qualname__}' == 'builtins.property'
    none_type_0 = None
    account_current_ask_orders_0 = module_0.AccountCurrentAskOrders()
    assert f'{type(account_current_ask_orders_0).__module__}.{type(account_current_ask_orders_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrders'
    assert account_current_ask_orders_0.askOrders is None
    assert account_current_ask_orders_0.requestProcessingTime is None
    unconfirmed_transactions_0 = module_0.UnconfirmedTransactions()
    assert f'{type(unconfirmed_transactions_0).__module__}.{type(unconfirmed_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.UnconfirmedTransactions'
    assert unconfirmed_transactions_0.requestProcessingTime is None
    assert f'{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__module__}.{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__qualname__}' == 'builtins.property'
    set_account_info_request_0 = module_0.SetAccountInfoRequest(secretPhrase=bool_0, encryptedMessageNonce=none_type_0, messageToEncryptToSelf=rs_convert_0, encryptToSelfMessageNonce=bool_0)
    assert f'{type(set_account_info_request_0).__module__}.{type(set_account_info_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetAccountInfoRequest'
    assert set_account_info_request_0.name is None
    assert set_account_info_request_0.description is None
    assert set_account_info_request_0.secretPhrase is False
    assert set_account_info_request_0.publicKey is None
    assert set_account_info_request_0.feeNQT == '100000000'
    assert set_account_info_request_0.deadline == '1440'
    assert set_account_info_request_0.referencedTransactionFullHash is None
    assert set_account_info_request_0.broadcast is None
    assert set_account_info_request_0.message is None
    assert set_account_info_request_0.messageIsText is None
    assert set_account_info_request_0.messageToEncrypt is None
    assert set_account_info_request_0.messageToEncryptIsText is None
    assert set_account_info_request_0.encryptedMessageData is None
    assert set_account_info_request_0.encryptedMessageNonce is None
    assert f'{type(set_account_info_request_0.messageToEncryptToSelf).__module__}.{type(set_account_info_request_0.messageToEncryptToSelf).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert set_account_info_request_0.messageToEncryptToSelfIsText is None
    assert set_account_info_request_0.encryptToSelfMessageData is None
    assert set_account_info_request_0.encryptToSelfMessageNonce is False
    assert set_account_info_request_0.recipientPublicKey is None
    assert set_account_info_request_0.requestType == 'setAccountInfo'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_FEE == '100000000'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_DEADLINE == '1440'
    account_a_ts_0 = module_0.AccountATs()
    assert f'{type(account_a_ts_0).__module__}.{type(account_a_ts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert account_a_ts_0.ats is None
    assert account_a_ts_0.requestProcessingTime is None
    var_0 = account_current_ask_orders_0.to_dict()
    with pytest.raises(AssertionError):
        module_0.SendMoneyRequest(account_current_ask_orders_0, publicKey=none_type_0, referencedTransactionFullHash=var_0, message=var_0, encryptToSelfMessageData=unconfirmed_transactions_0)

def test_case_38():
    bool_0 = False
    rs_convert_0 = module_0.rsConvert(requestProcessingTime=bool_0)
    assert f'{type(rs_convert_0).__module__}.{type(rs_convert_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert rs_convert_0.account is None
    assert rs_convert_0.accountRS is None
    assert rs_convert_0.requestProcessingTime is False
    assert f'{type(module_0.rsConvert.friendly).__module__}.{type(module_0.rsConvert.friendly).__qualname__}' == 'builtins.property'
    none_type_0 = None
    unconfirmed_transactions_0 = module_0.UnconfirmedTransactions()
    assert f'{type(unconfirmed_transactions_0).__module__}.{type(unconfirmed_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.UnconfirmedTransactions'
    assert unconfirmed_transactions_0.requestProcessingTime is None
    assert f'{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__module__}.{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__qualname__}' == 'builtins.property'
    set_account_info_request_0 = module_0.SetAccountInfoRequest(secretPhrase=bool_0, encryptedMessageNonce=none_type_0, messageToEncryptToSelf=rs_convert_0, encryptToSelfMessageNonce=bool_0)
    assert f'{type(set_account_info_request_0).__module__}.{type(set_account_info_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetAccountInfoRequest'
    assert set_account_info_request_0.name is None
    assert set_account_info_request_0.description is None
    assert set_account_info_request_0.secretPhrase is False
    assert set_account_info_request_0.publicKey is None
    assert set_account_info_request_0.feeNQT == '100000000'
    assert set_account_info_request_0.deadline == '1440'
    assert set_account_info_request_0.referencedTransactionFullHash is None
    assert set_account_info_request_0.broadcast is None
    assert set_account_info_request_0.message is None
    assert set_account_info_request_0.messageIsText is None
    assert set_account_info_request_0.messageToEncrypt is None
    assert set_account_info_request_0.messageToEncryptIsText is None
    assert set_account_info_request_0.encryptedMessageData is None
    assert set_account_info_request_0.encryptedMessageNonce is None
    assert f'{type(set_account_info_request_0.messageToEncryptToSelf).__module__}.{type(set_account_info_request_0.messageToEncryptToSelf).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert set_account_info_request_0.messageToEncryptToSelfIsText is None
    assert set_account_info_request_0.encryptToSelfMessageData is None
    assert set_account_info_request_0.encryptToSelfMessageNonce is False
    assert set_account_info_request_0.recipientPublicKey is None
    assert set_account_info_request_0.requestType == 'setAccountInfo'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_FEE == '100000000'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_DEADLINE == '1440'
    var_0 = rs_convert_0.to_dict()
    attachment_0 = module_0.Attachment(encryptedMessage=var_0)
    assert f'{type(attachment_0).__module__}.{type(attachment_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Attachment'
    assert attachment_0.name is None
    assert attachment_0.description is None
    assert f'{type(module_0.Attachment.encryptedMessage).__module__}.{type(module_0.Attachment.encryptedMessage).__qualname__}' == 'builtins.property'
    with pytest.raises(AssertionError):
        module_0.SendMoneyRequest(attachment_0, var_0, feeNQT=var_0, deadline=set_account_info_request_0, messageIsText=set_account_info_request_0, messageToEncrypt=none_type_0, messageToEncryptIsText=bool_0, encryptToSelfMessageData=set_account_info_request_0)

def test_case_39():
    str_0 = 'Xzo5q\x0cz>a_m'
    set_account_info_request_0 = module_0.SetAccountInfoRequest(secretPhrase=str_0, feeNQT=str_0, messageIsText=str_0, messageToEncryptIsText=str_0, encryptToSelfMessageNonce=str_0, recipientPublicKey=str_0)
    assert f'{type(set_account_info_request_0).__module__}.{type(set_account_info_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetAccountInfoRequest'
    assert set_account_info_request_0.name is None
    assert set_account_info_request_0.description is None
    assert set_account_info_request_0.secretPhrase == 'Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.publicKey is None
    assert set_account_info_request_0.feeNQT == 'Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.deadline == '1440'
    assert set_account_info_request_0.referencedTransactionFullHash is None
    assert set_account_info_request_0.broadcast is None
    assert set_account_info_request_0.message is None
    assert set_account_info_request_0.messageIsText == 'Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.messageToEncrypt is None
    assert set_account_info_request_0.messageToEncryptIsText == 'Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.encryptedMessageData is None
    assert set_account_info_request_0.encryptedMessageNonce is None
    assert set_account_info_request_0.messageToEncryptToSelf is None
    assert set_account_info_request_0.messageToEncryptToSelfIsText is None
    assert set_account_info_request_0.encryptToSelfMessageData is None
    assert set_account_info_request_0.encryptToSelfMessageNonce == 'Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.recipientPublicKey == 'Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.requestType == 'setAccountInfo'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_FEE == '100000000'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_DEADLINE == '1440'

def test_case_40():
    bool_0 = False
    rs_convert_0 = module_0.rsConvert(requestProcessingTime=bool_0)
    assert f'{type(rs_convert_0).__module__}.{type(rs_convert_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert rs_convert_0.account is None
    assert rs_convert_0.accountRS is None
    assert rs_convert_0.requestProcessingTime is False
    assert f'{type(module_0.rsConvert.friendly).__module__}.{type(module_0.rsConvert.friendly).__qualname__}' == 'builtins.property'
    none_type_0 = None
    account_current_ask_orders_0 = module_0.AccountCurrentAskOrders()
    assert f'{type(account_current_ask_orders_0).__module__}.{type(account_current_ask_orders_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrders'
    assert account_current_ask_orders_0.askOrders is None
    assert account_current_ask_orders_0.requestProcessingTime is None
    unconfirmed_transactions_0 = module_0.UnconfirmedTransactions()
    assert f'{type(unconfirmed_transactions_0).__module__}.{type(unconfirmed_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.UnconfirmedTransactions'
    assert unconfirmed_transactions_0.requestProcessingTime is None
    assert f'{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__module__}.{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__qualname__}' == 'builtins.property'
    set_account_info_request_0 = module_0.SetAccountInfoRequest(secretPhrase=bool_0, encryptedMessageNonce=none_type_0, messageToEncryptToSelf=rs_convert_0, encryptToSelfMessageNonce=bool_0)
    assert f'{type(set_account_info_request_0).__module__}.{type(set_account_info_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetAccountInfoRequest'
    assert set_account_info_request_0.name is None
    assert set_account_info_request_0.description is None
    assert set_account_info_request_0.secretPhrase is False
    assert set_account_info_request_0.publicKey is None
    assert set_account_info_request_0.feeNQT == '100000000'
    assert set_account_info_request_0.deadline == '1440'
    assert set_account_info_request_0.referencedTransactionFullHash is None
    assert set_account_info_request_0.broadcast is None
    assert set_account_info_request_0.message is None
    assert set_account_info_request_0.messageIsText is None
    assert set_account_info_request_0.messageToEncrypt is None
    assert set_account_info_request_0.messageToEncryptIsText is None
    assert set_account_info_request_0.encryptedMessageData is None
    assert set_account_info_request_0.encryptedMessageNonce is None
    assert f'{type(set_account_info_request_0.messageToEncryptToSelf).__module__}.{type(set_account_info_request_0.messageToEncryptToSelf).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert set_account_info_request_0.messageToEncryptToSelfIsText is None
    assert set_account_info_request_0.encryptToSelfMessageData is None
    assert set_account_info_request_0.encryptToSelfMessageNonce is False
    assert set_account_info_request_0.recipientPublicKey is None
    assert set_account_info_request_0.requestType == 'setAccountInfo'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_FEE == '100000000'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_DEADLINE == '1440'

def test_case_41():
    bool_0 = False
    rs_convert_0 = module_0.rsConvert(requestProcessingTime=bool_0)
    assert f'{type(rs_convert_0).__module__}.{type(rs_convert_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert rs_convert_0.account is None
    assert rs_convert_0.accountRS is None
    assert rs_convert_0.requestProcessingTime is False
    assert f'{type(module_0.rsConvert.friendly).__module__}.{type(module_0.rsConvert.friendly).__qualname__}' == 'builtins.property'
    account_subscriptions_0 = module_0.AccountSubscriptions()
    assert f'{type(account_subscriptions_0).__module__}.{type(account_subscriptions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert account_subscriptions_0.subscriptions is None
    assert account_subscriptions_0.requestProcessingTime is None
    none_type_0 = None
    account_current_ask_orders_0 = module_0.AccountCurrentAskOrders()
    assert f'{type(account_current_ask_orders_0).__module__}.{type(account_current_ask_orders_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrders'
    assert account_current_ask_orders_0.askOrders is None
    assert account_current_ask_orders_0.requestProcessingTime is None
    account_current_bid_order_ids_0 = module_0.AccountCurrentBidOrderIds()
    assert f'{type(account_current_bid_order_ids_0).__module__}.{type(account_current_bid_order_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert account_current_bid_order_ids_0.bidOrderIds is None
    assert account_current_bid_order_ids_0.requestProcessingTime is None
    set_account_info_request_0 = module_0.SetAccountInfoRequest(bool_0, secretPhrase=bool_0, deadline=account_subscriptions_0, referencedTransactionFullHash=account_subscriptions_0, encryptedMessageNonce=none_type_0)
    assert f'{type(set_account_info_request_0).__module__}.{type(set_account_info_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetAccountInfoRequest'
    assert set_account_info_request_0.name is False
    assert set_account_info_request_0.description is None
    assert set_account_info_request_0.secretPhrase is False
    assert set_account_info_request_0.publicKey is None
    assert set_account_info_request_0.feeNQT == '100000000'
    assert f'{type(set_account_info_request_0.deadline).__module__}.{type(set_account_info_request_0.deadline).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert f'{type(set_account_info_request_0.referencedTransactionFullHash).__module__}.{type(set_account_info_request_0.referencedTransactionFullHash).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert set_account_info_request_0.broadcast is None
    assert set_account_info_request_0.message is None
    assert set_account_info_request_0.messageIsText is None
    assert set_account_info_request_0.messageToEncrypt is None
    assert set_account_info_request_0.messageToEncryptIsText is None
    assert set_account_info_request_0.encryptedMessageData is None
    assert set_account_info_request_0.encryptedMessageNonce is None
    assert set_account_info_request_0.messageToEncryptToSelf is None
    assert set_account_info_request_0.messageToEncryptToSelfIsText is None
    assert set_account_info_request_0.encryptToSelfMessageData is None
    assert set_account_info_request_0.encryptToSelfMessageNonce is None
    assert set_account_info_request_0.recipientPublicKey is None
    assert set_account_info_request_0.requestType == 'setAccountInfo'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_FEE == '100000000'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_DEADLINE == '1440'
    account_a_ts_0 = module_0.AccountATs(none_type_0)
    assert f'{type(account_a_ts_0).__module__}.{type(account_a_ts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert account_a_ts_0.ats is None
    assert account_a_ts_0.requestProcessingTime is None
    var_0 = rs_convert_0.to_dict()
    attachment_0 = module_0.Attachment()
    assert f'{type(attachment_0).__module__}.{type(attachment_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Attachment'
    assert attachment_0.name is None
    assert attachment_0.description is None
    assert f'{type(module_0.Attachment.encryptedMessage).__module__}.{type(module_0.Attachment.encryptedMessage).__qualname__}' == 'builtins.property'
    with pytest.raises(AssertionError):
        module_0.SendMoneyRequest(publicKey=none_type_0, feeNQT=none_type_0, messageToEncrypt=account_subscriptions_0, encryptToSelfMessageNonce=bool_0)

def test_case_42():
    account_subscriptions_0 = module_0.AccountSubscriptions()
    assert f'{type(account_subscriptions_0).__module__}.{type(account_subscriptions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert account_subscriptions_0.subscriptions is None
    assert account_subscriptions_0.requestProcessingTime is None
    account_a_ts_0 = module_0.AccountATs()
    assert f'{type(account_a_ts_0).__module__}.{type(account_a_ts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert account_a_ts_0.ats is None
    assert account_a_ts_0.requestProcessingTime is None
    reward_recipient_0 = module_0.RewardRecipient(requestProcessingTime=account_subscriptions_0)
    assert f'{type(reward_recipient_0).__module__}.{type(reward_recipient_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.RewardRecipient'
    assert reward_recipient_0.rewardRecipient is None
    assert f'{type(reward_recipient_0.requestProcessingTime).__module__}.{type(reward_recipient_0.requestProcessingTime).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    none_type_0 = None
    set_reward_recipient_request_0 = module_0.SetRewardRecipientRequest(reward_recipient_0, secretPhrase=account_subscriptions_0, publicKey=reward_recipient_0, deadline=account_subscriptions_0, messageIsText=none_type_0, encryptedMessageNonce=account_a_ts_0, encryptToSelfMessageData=account_a_ts_0, encryptToSelfMessageNonce=reward_recipient_0)
    assert f'{type(set_reward_recipient_request_0).__module__}.{type(set_reward_recipient_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetRewardRecipientRequest'
    assert f'{type(set_reward_recipient_request_0.recipient).__module__}.{type(set_reward_recipient_request_0.recipient).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.RewardRecipient'
    assert set_reward_recipient_request_0.amountNQT == 'None'
    assert f'{type(set_reward_recipient_request_0.secretPhrase).__module__}.{type(set_reward_recipient_request_0.secretPhrase).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert f'{type(set_reward_recipient_request_0.publicKey).__module__}.{type(set_reward_recipient_request_0.publicKey).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.RewardRecipient'
    assert set_reward_recipient_request_0.feeNQT == '100000000'
    assert f'{type(set_reward_recipient_request_0.deadline).__module__}.{type(set_reward_recipient_request_0.deadline).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert set_reward_recipient_request_0.referencedTransactionFullHash is None
    assert set_reward_recipient_request_0.broadcast is None
    assert set_reward_recipient_request_0.message is None
    assert set_reward_recipient_request_0.messageIsText is None
    assert set_reward_recipient_request_0.messageToEncrypt is None
    assert set_reward_recipient_request_0.messageToEncryptIsText is None
    assert set_reward_recipient_request_0.encryptedMessageData is None
    assert f'{type(set_reward_recipient_request_0.encryptedMessageNonce).__module__}.{type(set_reward_recipient_request_0.encryptedMessageNonce).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert set_reward_recipient_request_0.messageToEncryptToSelf is None
    assert set_reward_recipient_request_0.messageToEncryptToSelfIsText is None
    assert f'{type(set_reward_recipient_request_0.encryptToSelfMessageData).__module__}.{type(set_reward_recipient_request_0.encryptToSelfMessageData).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert f'{type(set_reward_recipient_request_0.encryptToSelfMessageNonce).__module__}.{type(set_reward_recipient_request_0.encryptToSelfMessageNonce).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.RewardRecipient'
    assert set_reward_recipient_request_0.recipientPublicKey is None
    assert set_reward_recipient_request_0.requestType == 'setRewardRecipient'
    assert module_0.SetRewardRecipientRequest.DEFAULT_REWARD_RECIPIENT_FEE == '100000000'
    assert module_0.SetRewardRecipientRequest.DEFAULT_REWARD_RECIPIENT_DEADLINE == '1440'
    account_current_bid_orders_0 = module_0.AccountCurrentBidOrders()
    assert f'{type(account_current_bid_orders_0).__module__}.{type(account_current_bid_orders_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrders'
    assert account_current_bid_orders_0.bidOrders is None
    assert account_current_bid_orders_0.requestProcessingTime is None
    account_public_key_0 = module_0.AccountPublicKey()
    assert f'{type(account_public_key_0).__module__}.{type(account_public_key_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountPublicKey'
    assert account_public_key_0.publicKey is None
    assert account_public_key_0.requestProcessingTime is None

def test_case_43():
    bool_0 = False
    rs_convert_0 = module_0.rsConvert(requestProcessingTime=bool_0)
    assert f'{type(rs_convert_0).__module__}.{type(rs_convert_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert rs_convert_0.account is None
    assert rs_convert_0.accountRS is None
    assert rs_convert_0.requestProcessingTime is False
    assert f'{type(module_0.rsConvert.friendly).__module__}.{type(module_0.rsConvert.friendly).__qualname__}' == 'builtins.property'
    account_subscriptions_0 = module_0.AccountSubscriptions()
    assert f'{type(account_subscriptions_0).__module__}.{type(account_subscriptions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    assert account_subscriptions_0.subscriptions is None
    assert account_subscriptions_0.requestProcessingTime is None
    var_0 = account_subscriptions_0.to_json()
    assert var_0 == '{"subscriptions": null, "requestProcessingTime": null}'
    none_type_0 = None
    account_current_bid_order_ids_0 = module_0.AccountCurrentBidOrderIds(requestProcessingTime=account_subscriptions_0)
    assert f'{type(account_current_bid_order_ids_0).__module__}.{type(account_current_bid_order_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert account_current_bid_order_ids_0.bidOrderIds is None
    assert f'{type(account_current_bid_order_ids_0.requestProcessingTime).__module__}.{type(account_current_bid_order_ids_0.requestProcessingTime).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'
    account_a_ts_0 = module_0.AccountATs(account_current_bid_order_ids_0, rs_convert_0)
    assert f'{type(account_a_ts_0).__module__}.{type(account_a_ts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert f'{type(account_a_ts_0.ats).__module__}.{type(account_a_ts_0.ats).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert f'{type(account_a_ts_0.requestProcessingTime).__module__}.{type(account_a_ts_0.requestProcessingTime).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    send_money_request_0 = module_0.SendMoneyRequest(account_current_bid_order_ids_0, var_0, account_a_ts_0, deadline=bool_0, messageToEncryptToSelfIsText=rs_convert_0, encryptToSelfMessageData=none_type_0, recipientPublicKey=rs_convert_0)
    assert f'{type(send_money_request_0).__module__}.{type(send_money_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyRequest'
    assert f'{type(send_money_request_0.recipient).__module__}.{type(send_money_request_0.recipient).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert send_money_request_0.amountNQT == '{"subscriptions": null, "requestProcessingTime": null}'
    assert f'{type(send_money_request_0.secretPhrase).__module__}.{type(send_money_request_0.secretPhrase).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert send_money_request_0.publicKey is None
    assert send_money_request_0.feeNQT == '100000000'
    assert send_money_request_0.deadline == '1440'
    assert send_money_request_0.referencedTransactionFullHash is None
    assert send_money_request_0.broadcast is None
    assert send_money_request_0.message is None
    assert send_money_request_0.messageIsText is None
    assert send_money_request_0.messageToEncrypt is None
    assert send_money_request_0.messageToEncryptIsText is None
    assert send_money_request_0.encryptedMessageData is None
    assert send_money_request_0.encryptedMessageNonce is None
    assert send_money_request_0.messageToEncryptToSelf is None
    assert f'{type(send_money_request_0.messageToEncryptToSelfIsText).__module__}.{type(send_money_request_0.messageToEncryptToSelfIsText).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert send_money_request_0.encryptToSelfMessageData is None
    assert send_money_request_0.encryptToSelfMessageNonce is None
    assert f'{type(send_money_request_0.recipientPublicKey).__module__}.{type(send_money_request_0.recipientPublicKey).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert send_money_request_0.requestType == 'sendMoney'
    assert module_0.SendMoneyRequest.DEFAULT_SEND_MONEY_FEE == '100000000'
    assert module_0.SendMoneyRequest.DEFAULT_SEND_MONEY_DEADLINE == '1440'
    account_current_bid_orders_0 = module_0.AccountCurrentBidOrders(requestProcessingTime=account_subscriptions_0)
    assert f'{type(account_current_bid_orders_0).__module__}.{type(account_current_bid_orders_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrders'
    assert account_current_bid_orders_0.bidOrders is None
    assert f'{type(account_current_bid_orders_0.requestProcessingTime).__module__}.{type(account_current_bid_orders_0.requestProcessingTime).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountSubscriptions'

@pytest.mark.xfail(strict=True)
def test_case_44():
    bool_0 = False
    send_money_response_0 = module_0.SendMoneyResponse(fullHash=bool_0, transaction=bool_0, signatureHash=bool_0)
    assert f'{type(send_money_response_0).__module__}.{type(send_money_response_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyResponse'
    assert send_money_response_0.unsignedTransactionBytes is None
    assert send_money_response_0.broadcasted is None
    assert send_money_response_0.transactionBytes is None
    assert send_money_response_0.fullHash is False
    assert send_money_response_0.transaction is False
    assert send_money_response_0.signatureHash is False
    assert send_money_response_0.requestProcessingTime is None
    assert f'{type(module_0.SendMoneyResponse.transactionJSON).__module__}.{type(module_0.SendMoneyResponse.transactionJSON).__qualname__}' == 'builtins.property'
    account_transaction_ids_0 = module_0.AccountTransactionIds(requestProcessingTime=bool_0)
    assert f'{type(account_transaction_ids_0).__module__}.{type(account_transaction_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountTransactionIds'
    assert account_transaction_ids_0.transactionIds is None
    assert account_transaction_ids_0.requestProcessingTime is False
    rs_convert_0 = module_0.rsConvert(requestProcessingTime=bool_0)
    assert f'{type(rs_convert_0).__module__}.{type(rs_convert_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert rs_convert_0.account is None
    assert rs_convert_0.accountRS is None
    assert rs_convert_0.requestProcessingTime is False
    assert f'{type(module_0.rsConvert.friendly).__module__}.{type(module_0.rsConvert.friendly).__qualname__}' == 'builtins.property'
    balance_0 = module_0.Balance(rs_convert_0, balanceNQT=bool_0)
    assert f'{type(balance_0).__module__}.{type(balance_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Balance'
    assert f'{type(balance_0.unconfirmedBalanceNQT).__module__}.{type(balance_0.unconfirmedBalanceNQT).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert balance_0.guaranteedBalanceNQT is None
    assert balance_0.effectiveBalanceNXT is None
    assert balance_0.forgedBalanceNQT is None
    assert balance_0.balanceNQT is False
    assert balance_0.requestProcessingTime is None
    account_current_bid_order_ids_0 = module_0.AccountCurrentBidOrderIds(requestProcessingTime=bool_0)
    assert f'{type(account_current_bid_order_ids_0).__module__}.{type(account_current_bid_order_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert account_current_bid_order_ids_0.bidOrderIds is None
    assert account_current_bid_order_ids_0.requestProcessingTime is False
    account_a_ts_0 = module_0.AccountATs(account_current_bid_order_ids_0, bool_0)
    assert f'{type(account_a_ts_0).__module__}.{type(account_a_ts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert f'{type(account_a_ts_0.ats).__module__}.{type(account_a_ts_0.ats).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert account_a_ts_0.requestProcessingTime is False
    var_0 = account_current_bid_order_ids_0.to_dict()
    attachment_0 = module_0.Attachment(description=var_0)
    assert f'{type(attachment_0).__module__}.{type(attachment_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Attachment'
    assert attachment_0.name is None
    assert attachment_0.description == {'bidOrderIds': None, 'requestProcessingTime': False}
    assert f'{type(module_0.Attachment.encryptedMessage).__module__}.{type(module_0.Attachment.encryptedMessage).__qualname__}' == 'builtins.property'
    account_transactions_0 = module_0.AccountTransactions(var_0)
    assert f'{type(account_transactions_0).__module__}.{type(account_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountTransactions'
    assert account_transactions_0.requestProcessingTime is None
    assert f'{type(module_0.AccountTransactions.transactions).__module__}.{type(module_0.AccountTransactions.transactions).__qualname__}' == 'builtins.property'
    var_1 = send_money_response_0.to_json()
    assert var_1 == '{"_transactionJSON": null, "unsignedTransactionBytes": null, "broadcasted": null, "transactionBytes": null, "fullHash": false, "transaction": false, "signatureHash": false, "requestProcessingTime": null}'
    send_money_request_0 = module_0.SendMoneyRequest(send_money_response_0, bool_0, bool_0, feeNQT=var_1, messageToEncryptToSelf=balance_0, messageToEncryptToSelfIsText=var_0, encryptToSelfMessageNonce=account_transaction_ids_0)
    assert f'{type(send_money_request_0).__module__}.{type(send_money_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyRequest'
    assert f'{type(send_money_request_0.recipient).__module__}.{type(send_money_request_0.recipient).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyResponse'
    assert send_money_request_0.amountNQT == 'False'
    assert send_money_request_0.secretPhrase is False
    assert send_money_request_0.publicKey is None
    assert send_money_request_0.feeNQT == '{"_transactionJSON": null, "unsignedTransactionBytes": null, "broadcasted": null, "transactionBytes": null, "fullHash": false, "transaction": false, "signatureHash": false, "requestProcessingTime": null}'
    assert send_money_request_0.deadline == '1440'
    assert send_money_request_0.referencedTransactionFullHash is None
    assert send_money_request_0.broadcast is None
    assert send_money_request_0.message is None
    assert send_money_request_0.messageIsText is None
    assert send_money_request_0.messageToEncrypt is None
    assert send_money_request_0.messageToEncryptIsText is None
    assert send_money_request_0.encryptedMessageData is None
    assert send_money_request_0.encryptedMessageNonce is None
    assert f'{type(send_money_request_0.messageToEncryptToSelf).__module__}.{type(send_money_request_0.messageToEncryptToSelf).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Balance'
    assert send_money_request_0.messageToEncryptToSelfIsText == {'bidOrderIds': None, 'requestProcessingTime': False}
    assert send_money_request_0.encryptToSelfMessageData is None
    assert f'{type(send_money_request_0.encryptToSelfMessageNonce).__module__}.{type(send_money_request_0.encryptToSelfMessageNonce).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountTransactionIds'
    assert send_money_request_0.recipientPublicKey is None
    assert send_money_request_0.requestType == 'sendMoney'
    assert module_0.SendMoneyRequest.DEFAULT_SEND_MONEY_FEE == '100000000'
    assert module_0.SendMoneyRequest.DEFAULT_SEND_MONEY_DEADLINE == '1440'
    reward_recipient_0 = module_0.RewardRecipient()
    assert f'{type(reward_recipient_0).__module__}.{type(reward_recipient_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.RewardRecipient'
    assert reward_recipient_0.rewardRecipient is None
    assert reward_recipient_0.requestProcessingTime is None
    account_current_bid_orders_0 = module_0.AccountCurrentBidOrders()
    assert f'{type(account_current_bid_orders_0).__module__}.{type(account_current_bid_orders_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrders'
    assert account_current_bid_orders_0.bidOrders is None
    assert account_current_bid_orders_0.requestProcessingTime is None
    module_1.BaseRequest(**send_money_response_0)

def test_case_45():
    str_0 = '\'"/Xzo5q\x0cz>a_m'
    set_account_info_request_0 = module_0.SetAccountInfoRequest(secretPhrase=str_0, feeNQT=str_0, messageIsText=str_0, messageToEncryptIsText=str_0, encryptToSelfMessageNonce=str_0, recipientPublicKey=str_0)
    assert f'{type(set_account_info_request_0).__module__}.{type(set_account_info_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetAccountInfoRequest'
    assert set_account_info_request_0.name is None
    assert set_account_info_request_0.description is None
    assert set_account_info_request_0.secretPhrase == '\'"/Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.publicKey is None
    assert set_account_info_request_0.feeNQT == '100000000'
    assert set_account_info_request_0.deadline == '1440'
    assert set_account_info_request_0.referencedTransactionFullHash is None
    assert set_account_info_request_0.broadcast is None
    assert set_account_info_request_0.message is None
    assert set_account_info_request_0.messageIsText == '\'"/Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.messageToEncrypt is None
    assert set_account_info_request_0.messageToEncryptIsText == '\'"/Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.encryptedMessageData is None
    assert set_account_info_request_0.encryptedMessageNonce is None
    assert set_account_info_request_0.messageToEncryptToSelf is None
    assert set_account_info_request_0.messageToEncryptToSelfIsText is None
    assert set_account_info_request_0.encryptToSelfMessageData is None
    assert set_account_info_request_0.encryptToSelfMessageNonce == '\'"/Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.recipientPublicKey == '\'"/Xzo5q\x0cz>a_m'
    assert set_account_info_request_0.requestType == 'setAccountInfo'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_FEE == '100000000'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_DEADLINE == '1440'

@pytest.mark.xfail(strict=True)
def test_case_46():
    bool_0 = False
    send_money_response_0 = module_0.SendMoneyResponse(fullHash=bool_0, transaction=bool_0, signatureHash=bool_0)
    assert f'{type(send_money_response_0).__module__}.{type(send_money_response_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyResponse'
    assert send_money_response_0.unsignedTransactionBytes is None
    assert send_money_response_0.broadcasted is None
    assert send_money_response_0.transactionBytes is None
    assert send_money_response_0.fullHash is False
    assert send_money_response_0.transaction is False
    assert send_money_response_0.signatureHash is False
    assert send_money_response_0.requestProcessingTime is None
    assert f'{type(module_0.SendMoneyResponse.transactionJSON).__module__}.{type(module_0.SendMoneyResponse.transactionJSON).__qualname__}' == 'builtins.property'
    account_transaction_ids_0 = module_0.AccountTransactionIds(requestProcessingTime=bool_0)
    assert f'{type(account_transaction_ids_0).__module__}.{type(account_transaction_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountTransactionIds'
    assert account_transaction_ids_0.transactionIds is None
    assert account_transaction_ids_0.requestProcessingTime is False
    rs_convert_0 = module_0.rsConvert(requestProcessingTime=bool_0)
    assert f'{type(rs_convert_0).__module__}.{type(rs_convert_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert rs_convert_0.account is None
    assert rs_convert_0.accountRS is None
    assert rs_convert_0.requestProcessingTime is False
    assert f'{type(module_0.rsConvert.friendly).__module__}.{type(module_0.rsConvert.friendly).__qualname__}' == 'builtins.property'
    balance_0 = module_0.Balance(rs_convert_0, balanceNQT=bool_0)
    assert f'{type(balance_0).__module__}.{type(balance_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Balance'
    assert f'{type(balance_0.unconfirmedBalanceNQT).__module__}.{type(balance_0.unconfirmedBalanceNQT).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert balance_0.guaranteedBalanceNQT is None
    assert balance_0.effectiveBalanceNXT is None
    assert balance_0.forgedBalanceNQT is None
    assert balance_0.balanceNQT is False
    assert balance_0.requestProcessingTime is None
    account_escrow_transactions_0 = module_0.AccountEscrowTransactions(requestProcessingTime=send_money_response_0)
    assert f'{type(account_escrow_transactions_0).__module__}.{type(account_escrow_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountEscrowTransactions'
    assert account_escrow_transactions_0.escrows is None
    assert f'{type(account_escrow_transactions_0.requestProcessingTime).__module__}.{type(account_escrow_transactions_0.requestProcessingTime).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyResponse'
    var_0 = balance_0.to_dict()
    var_1 = rs_convert_0.to_dict()
    account_current_bid_order_ids_0 = module_0.AccountCurrentBidOrderIds(requestProcessingTime=var_1)
    assert f'{type(account_current_bid_order_ids_0).__module__}.{type(account_current_bid_order_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert account_current_bid_order_ids_0.bidOrderIds is None
    assert account_current_bid_order_ids_0.requestProcessingTime == {'account': None, 'accountRS': None, 'requestProcessingTime': False}
    unconfirmed_transactions_0 = module_0.UnconfirmedTransactions()
    assert f'{type(unconfirmed_transactions_0).__module__}.{type(unconfirmed_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.UnconfirmedTransactions'
    assert unconfirmed_transactions_0.requestProcessingTime is None
    assert f'{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__module__}.{type(module_0.UnconfirmedTransactions.unconfirmedTransactions).__qualname__}' == 'builtins.property'
    account_id_0 = module_0.AccountId(var_1, requestProcessingTime=var_1)
    assert f'{type(account_id_0).__module__}.{type(account_id_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountId'
    assert account_id_0.accountRS == {'account': None, 'accountRS': None, 'requestProcessingTime': False}
    assert account_id_0.publicKey is None
    assert account_id_0.account is None
    assert account_id_0.requestProcessingTime == {'account': None, 'accountRS': None, 'requestProcessingTime': False}
    set_account_info_request_0 = module_0.SetAccountInfoRequest(secretPhrase=bool_0, encryptedMessageNonce=account_current_bid_order_ids_0, messageToEncryptToSelf=rs_convert_0, encryptToSelfMessageNonce=bool_0)
    assert f'{type(set_account_info_request_0).__module__}.{type(set_account_info_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetAccountInfoRequest'
    assert set_account_info_request_0.name is None
    assert set_account_info_request_0.description is None
    assert set_account_info_request_0.secretPhrase is False
    assert set_account_info_request_0.publicKey is None
    assert set_account_info_request_0.feeNQT == '100000000'
    assert set_account_info_request_0.deadline == '1440'
    assert set_account_info_request_0.referencedTransactionFullHash is None
    assert set_account_info_request_0.broadcast is None
    assert set_account_info_request_0.message is None
    assert set_account_info_request_0.messageIsText is None
    assert set_account_info_request_0.messageToEncrypt is None
    assert set_account_info_request_0.messageToEncryptIsText is None
    assert set_account_info_request_0.encryptedMessageData is None
    assert f'{type(set_account_info_request_0.encryptedMessageNonce).__module__}.{type(set_account_info_request_0.encryptedMessageNonce).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert f'{type(set_account_info_request_0.messageToEncryptToSelf).__module__}.{type(set_account_info_request_0.messageToEncryptToSelf).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert set_account_info_request_0.messageToEncryptToSelfIsText is None
    assert set_account_info_request_0.encryptToSelfMessageData is None
    assert set_account_info_request_0.encryptToSelfMessageNonce is False
    assert set_account_info_request_0.recipientPublicKey is None
    assert set_account_info_request_0.requestType == 'setAccountInfo'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_FEE == '100000000'
    assert module_0.SetAccountInfoRequest.DEFAULT_ACCOUNT_INFO_DEADLINE == '1440'
    account_a_ts_0 = module_0.AccountATs(account_current_bid_order_ids_0, var_1)
    assert f'{type(account_a_ts_0).__module__}.{type(account_a_ts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert f'{type(account_a_ts_0.ats).__module__}.{type(account_a_ts_0.ats).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert account_a_ts_0.requestProcessingTime == {'account': None, 'accountRS': None, 'requestProcessingTime': False}
    var_2 = account_current_bid_order_ids_0.to_dict()
    attachment_0 = module_0.Attachment(description=var_2)
    assert f'{type(attachment_0).__module__}.{type(attachment_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Attachment'
    assert attachment_0.name is None
    assert attachment_0.description == {'bidOrderIds': None, 'requestProcessingTime': {'account': None, 'accountRS': None, 'requestProcessingTime': False}}
    assert f'{type(module_0.Attachment.encryptedMessage).__module__}.{type(module_0.Attachment.encryptedMessage).__qualname__}' == 'builtins.property'
    send_money_request_0 = module_0.SendMoneyRequest(account_current_bid_order_ids_0, unconfirmed_transactions_0, account_a_ts_0, deadline=var_1, messageToEncryptToSelfIsText=rs_convert_0, encryptToSelfMessageData=var_2, recipientPublicKey=var_2)
    assert f'{type(send_money_request_0).__module__}.{type(send_money_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyRequest'
    assert f'{type(send_money_request_0.recipient).__module__}.{type(send_money_request_0.recipient).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert f'{type(send_money_request_0.secretPhrase).__module__}.{type(send_money_request_0.secretPhrase).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountATs'
    assert send_money_request_0.publicKey is None
    assert send_money_request_0.feeNQT == '100000000'
    assert send_money_request_0.deadline == {'account': None, 'accountRS': None, 'requestProcessingTime': False}
    assert send_money_request_0.referencedTransactionFullHash is None
    assert send_money_request_0.broadcast is None
    assert send_money_request_0.message is None
    assert send_money_request_0.messageIsText is None
    assert send_money_request_0.messageToEncrypt is None
    assert send_money_request_0.messageToEncryptIsText is None
    assert send_money_request_0.encryptedMessageData is None
    assert send_money_request_0.encryptedMessageNonce is None
    assert send_money_request_0.messageToEncryptToSelf is None
    assert f'{type(send_money_request_0.messageToEncryptToSelfIsText).__module__}.{type(send_money_request_0.messageToEncryptToSelfIsText).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.rsConvert'
    assert send_money_request_0.encryptToSelfMessageData == {'bidOrderIds': None, 'requestProcessingTime': {'account': None, 'accountRS': None, 'requestProcessingTime': False}}
    assert send_money_request_0.encryptToSelfMessageNonce is None
    assert send_money_request_0.recipientPublicKey == {'bidOrderIds': None, 'requestProcessingTime': {'account': None, 'accountRS': None, 'requestProcessingTime': False}}
    assert send_money_request_0.requestType == 'sendMoney'
    assert module_0.SendMoneyRequest.DEFAULT_SEND_MONEY_FEE == '100000000'
    assert module_0.SendMoneyRequest.DEFAULT_SEND_MONEY_DEADLINE == '1440'
    var_3 = unconfirmed_transactions_0.to_json()
    assert var_3 == '{"_unconfirmedTransactions": [], "requestProcessingTime": null}'
    account_transactions_0 = module_0.AccountTransactions(var_2)
    assert f'{type(account_transactions_0).__module__}.{type(account_transactions_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountTransactions'
    assert account_transactions_0.requestProcessingTime is None
    assert f'{type(module_0.AccountTransactions.transactions).__module__}.{type(module_0.AccountTransactions.transactions).__qualname__}' == 'builtins.property'
    account_current_ask_order_ids_0 = module_0.AccountCurrentAskOrderIds(account_current_bid_order_ids_0)
    assert f'{type(account_current_ask_order_ids_0).__module__}.{type(account_current_ask_order_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrderIds'
    assert f'{type(account_current_ask_order_ids_0.askOrderIds).__module__}.{type(account_current_ask_order_ids_0.askOrderIds).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrderIds'
    assert account_current_ask_order_ids_0.requestProcessingTime is None
    account_current_bid_orders_0 = module_0.AccountCurrentBidOrders()
    assert f'{type(account_current_bid_orders_0).__module__}.{type(account_current_bid_orders_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrders'
    assert account_current_bid_orders_0.bidOrders is None
    assert account_current_bid_orders_0.requestProcessingTime is None
    account_current_ask_order_ids_1 = module_0.AccountCurrentAskOrderIds()
    guaranteed_balance_0 = module_0.GuaranteedBalance(send_money_request_0)
    assert f'{type(guaranteed_balance_0).__module__}.{type(guaranteed_balance_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.GuaranteedBalance'
    assert f'{type(guaranteed_balance_0.guaranteedBalanceNQT).__module__}.{type(guaranteed_balance_0.guaranteedBalanceNQT).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyRequest'
    assert guaranteed_balance_0.requestProcessingTime is None
    account_current_bid_orders_1 = module_0.AccountCurrentBidOrders(account_escrow_transactions_0, guaranteed_balance_0)
    assert f'{type(account_current_bid_orders_1).__module__}.{type(account_current_bid_orders_1).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentBidOrders'
    assert f'{type(account_current_bid_orders_1.bidOrders).__module__}.{type(account_current_bid_orders_1.bidOrders).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountEscrowTransactions'
    assert f'{type(account_current_bid_orders_1.requestProcessingTime).__module__}.{type(account_current_bid_orders_1.requestProcessingTime).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.GuaranteedBalance'
    account_blocks_0 = module_0.AccountBlocks()
    assert f'{type(account_blocks_0).__module__}.{type(account_blocks_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountBlocks'
    assert account_blocks_0.blocks is None
    assert account_blocks_0.requestProcessingTime is None
    reward_recipient_0 = module_0.RewardRecipient(requestProcessingTime=attachment_0)
    assert f'{type(reward_recipient_0).__module__}.{type(reward_recipient_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.RewardRecipient'
    assert reward_recipient_0.rewardRecipient is None
    assert f'{type(reward_recipient_0.requestProcessingTime).__module__}.{type(reward_recipient_0.requestProcessingTime).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Attachment'
    set_account_info_request_1 = module_0.SetAccountInfoRequest(secretPhrase=guaranteed_balance_0, referencedTransactionFullHash=account_blocks_0, encryptedMessageNonce=unconfirmed_transactions_0, messageToEncryptToSelf=account_current_ask_order_ids_0, messageToEncryptToSelfIsText=account_transactions_0, encryptToSelfMessageData=set_account_info_request_0, encryptToSelfMessageNonce=send_money_response_0, recipientPublicKey=var_2)
    assert set_account_info_request_1.feeNQT == '100000000'
    assert set_account_info_request_1.deadline == '1440'
    assert set_account_info_request_1.requestType == 'setAccountInfo'
    unconfirmed_transaction_ids_0 = module_0.UnconfirmedTransactionIds(requestProcessingTime=balance_0)
    assert f'{type(unconfirmed_transaction_ids_0).__module__}.{type(unconfirmed_transaction_ids_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.UnconfirmedTransactionIds'
    assert unconfirmed_transaction_ids_0.unconfirmedTransactionIds is None
    assert f'{type(unconfirmed_transaction_ids_0.requestProcessingTime).__module__}.{type(unconfirmed_transaction_ids_0.requestProcessingTime).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Balance'
    str_0 = '\x0b \r%I!<<C,DabGx=f'
    set_reward_recipient_request_0 = module_0.SetRewardRecipientRequest(send_money_request_0, secretPhrase=var_1, feeNQT=str_0, referencedTransactionFullHash=var_3, encryptToSelfMessageData=account_current_ask_order_ids_1)
    assert f'{type(set_reward_recipient_request_0).__module__}.{type(set_reward_recipient_request_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SetRewardRecipientRequest'
    assert f'{type(set_reward_recipient_request_0.recipient).__module__}.{type(set_reward_recipient_request_0.recipient).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.SendMoneyRequest'
    assert set_reward_recipient_request_0.amountNQT == 'None'
    assert set_reward_recipient_request_0.secretPhrase == {'account': None, 'accountRS': None, 'requestProcessingTime': False}
    assert set_reward_recipient_request_0.publicKey is None
    assert set_reward_recipient_request_0.feeNQT == '100000000'
    assert set_reward_recipient_request_0.deadline == '1440'
    assert set_reward_recipient_request_0.referencedTransactionFullHash == '{"_unconfirmedTransactions": [], "requestProcessingTime": null}'
    assert set_reward_recipient_request_0.broadcast is None
    assert set_reward_recipient_request_0.message is None
    assert set_reward_recipient_request_0.messageIsText is None
    assert set_reward_recipient_request_0.messageToEncrypt is None
    assert set_reward_recipient_request_0.messageToEncryptIsText is None
    assert set_reward_recipient_request_0.encryptedMessageData is None
    assert set_reward_recipient_request_0.encryptedMessageNonce is None
    assert set_reward_recipient_request_0.messageToEncryptToSelf is None
    assert set_reward_recipient_request_0.messageToEncryptToSelfIsText is None
    assert f'{type(set_reward_recipient_request_0.encryptToSelfMessageData).__module__}.{type(set_reward_recipient_request_0.encryptToSelfMessageData).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.AccountCurrentAskOrderIds'
    assert set_reward_recipient_request_0.encryptToSelfMessageNonce is None
    assert set_reward_recipient_request_0.recipientPublicKey is None
    assert set_reward_recipient_request_0.requestType == 'setRewardRecipient'
    assert module_0.SetRewardRecipientRequest.DEFAULT_REWARD_RECIPIENT_FEE == '100000000'
    assert module_0.SetRewardRecipientRequest.DEFAULT_REWARD_RECIPIENT_DEADLINE == '1440'
    var_4 = account_id_0.to_json()
    accounts_0 = module_0.Accounts()
    assert f'{type(accounts_0).__module__}.{type(accounts_0).__qualname__}' == 'pyburstlib.wallet_api.models.accounts.Accounts'
    assert accounts_0.accounts is None
    assert accounts_0.requestProcessingTime is None
    var_4.as_payload()