# Automatically generated by Pynguin.
import pytest
import pyburstlib.wallet_api.accounts as module_0
import pyburstlib.wallet_api.models.accounts as module_1
import datetime as module_2

def test_case_0():
    bytes_0 = b'\xfd\xb8\xa1\x07-\x17c\xbc'
    accounts_api_0 = module_0.AccountsApi(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'\x1bQ '
    none_type_0 = None
    accounts_api_0 = module_0.AccountsApi(bytes_0)
    accounts_api_0.get_account_block_ids(bytes_0, first_index=none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    none_type_0 = None
    accounts_api_0 = module_0.AccountsApi(bool_0)
    accounts_api_0.get_account_blocks(last_index=none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    dict_0 = {}
    set_account_info_response_0 = module_1.SetAccountInfoResponse(dict_0, fullHash=dict_0, transaction=dict_0, signatureHash=dict_0)
    accounts_api_0 = module_0.AccountsApi(dict_0)
    var_0 = set_account_info_response_0.to_dict()
    var_1 = set_account_info_response_0.to_dict()
    accounts_api_0.get_account_current_bid_order_ids()

@pytest.mark.xfail(strict=True)
def test_case_4():
    guaranteed_balance_0 = module_1.GuaranteedBalance()
    accounts_api_0 = module_0.AccountsApi(guaranteed_balance_0)
    accounts_api_0.get_account_public_key()

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '639f$JBxrZ@'
    accounts_api_0 = module_0.AccountsApi(str_0)
    accounts_api_0.get_account_subscriptions(str_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    accounts_api_0 = module_0.AccountsApi(none_type_0)
    accounts_api_0.get_guaranteed_balance(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    accounts_api_0 = module_0.AccountsApi(bool_0)
    accounts_api_0.get_subscriptions_to_account()

@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    accounts_api_0 = module_0.AccountsApi(none_type_0)
    accounts_api_0.get_account()

@pytest.mark.xfail(strict=True)
def test_case_9():
    bytes_0 = b'&(Si\xd5\xf5D\xe6\x02'
    int_0 = 8125
    accounts_api_0 = module_0.AccountsApi(bytes_0)
    accounts_api_0.get_account_current_bid_orders(asset=int_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    bytes_0 = b'\x1bQ '
    accounts_api_0 = module_0.AccountsApi(bytes_0)
    int_0 = 4850
    account_current_ask_orders_0 = module_1.AccountCurrentAskOrders(int_0, int_0)
    accounts_api_0.get_account_escrow_transactions()

@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = 'POOL_PORT'
    accounts_api_0 = module_0.AccountsApi(str_0)
    accounts_api_0.get_account_id(public_key=str_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    set_0 = set()
    accounts_api_0 = module_0.AccountsApi(set_0)
    accounts_api_0.get_account_transaction_ids(_type=set_0, first_index=set_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    unconfirmed_transactions_0 = module_1.UnconfirmedTransactions()
    var_0 = unconfirmed_transactions_0.to_dict()
    accounts_api_0 = module_0.AccountsApi(unconfirmed_transactions_0)
    accounts_api_0.get_balance()

@pytest.mark.xfail(strict=True)
def test_case_14():
    bool_0 = False
    accounts_api_0 = module_0.AccountsApi(bool_0)
    accounts_api_0.get_account_ATs()

@pytest.mark.xfail(strict=True)
def test_case_15():
    set_0 = set()
    accounts_api_0 = module_0.AccountsApi(set_0)
    accounts_api_0.get_assets_by_issuer()

@pytest.mark.xfail(strict=True)
def test_case_16():
    str_0 = 'POOL_PORT'
    accounts_api_0 = module_0.AccountsApi(str_0)
    accounts_api_0.get_reward_recipient(accounts_api_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    guaranteed_balance_0 = module_1.GuaranteedBalance()
    accounts_api_0 = module_0.AccountsApi(guaranteed_balance_0)
    accounts_api_0.get_unconfirmed_transactions()

@pytest.mark.xfail(strict=True)
def test_case_18():
    dict_0 = {}
    set_account_info_response_0 = module_1.SetAccountInfoResponse(dict_0, fullHash=dict_0, transaction=dict_0, signatureHash=dict_0)
    accounts_api_0 = module_0.AccountsApi(dict_0)
    var_0 = accounts_api_0.get_escrow_transactions()
    module_2.timedelta(*accounts_api_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    none_type_0 = None
    account_a_ts_0 = module_1.AccountATs(requestProcessingTime=none_type_0)
    accounts_api_0 = module_0.AccountsApi(account_a_ts_0)
    accounts_api_0.get_subscription()

@pytest.mark.xfail(strict=True)
def test_case_20():
    bool_0 = False
    accounts_api_0 = module_0.AccountsApi(bool_0)
    accounts_api_0.set_account_info()

@pytest.mark.xfail(strict=True)
def test_case_21():
    bytes_0 = b'\x1bQ '
    accounts_api_0 = module_0.AccountsApi(bytes_0)
    accounts_api_0.set_reward_recipient()

@pytest.mark.xfail(strict=True)
def test_case_22():
    none_type_0 = None
    accounts_api_0 = module_0.AccountsApi(none_type_0)
    accounts_api_0.get_accounts_with_reward_recipient()

@pytest.mark.xfail(strict=True)
def test_case_23():
    none_type_0 = None
    accounts_api_0 = module_0.AccountsApi(none_type_0)
    accounts_api_0.send_money(accounts_api_0)

@pytest.mark.xfail(strict=True)
def test_case_24():
    none_type_0 = None
    set_0 = set()
    accounts_api_0 = module_0.AccountsApi(set_0)
    accounts_api_0.get_account_current_ask_order_ids(asset=none_type_0, last_index=accounts_api_0)

@pytest.mark.xfail(strict=True)
def test_case_25():
    none_type_0 = None
    accounts_api_0 = module_0.AccountsApi(none_type_0)
    accounts_api_0.rs_convert()

@pytest.mark.xfail(strict=True)
def test_case_26():
    dict_0 = {}
    set_account_info_response_0 = module_1.SetAccountInfoResponse(dict_0, fullHash=dict_0, transaction=dict_0, signatureHash=dict_0)
    accounts_api_0 = module_0.AccountsApi(dict_0)
    accounts_api_0.get_account_current_ask_orders()

@pytest.mark.xfail(strict=True)
def test_case_27():
    bytes_0 = b'&(Si\xd5\xf5D\xe6\x02'
    accounts_api_0 = module_0.AccountsApi(bytes_0)
    accounts_api_0.get_unconfirmed_transaction_ids()

@pytest.mark.xfail(strict=True)
def test_case_28():
    bool_0 = False
    accounts_api_0 = module_0.AccountsApi(bool_0)
    accounts_api_0.get_account_lessors(bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_29():
    bytes_0 = b'&(Si\xd5\xf5D\xe6\x02'
    int_0 = 8125
    accounts_api_0 = module_0.AccountsApi(bytes_0)
    none_type_0 = None
    accounts_api_0.get_account_transactions(int_0, accounts_api_0, none_type_0)