# Automatically generated by Pynguin.
import pytest
import pyburstlib.lib.utils.converters as module_0
import binascii as module_1
import enum as module_2
import builtins as module_3

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0.hex_string_to_bytes(none_type_0)
    assert var_0 == b''
    module_0.bytearray_to_hex_string(none_type_0)

def test_case_1():
    complex_0 = (616.7+110.639j)
    var_0 = module_0.hex_string_to_byte_array(complex_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'G>!W,.L)E8,y"sqx'
    str_1 = '9(X+'
    var_0 = module_0.is_hex(str_1)
    dict_0 = {str_0: str_0}
    module_1.Error(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    set_0 = set()
    var_0 = module_0.int_from_bytearray(set_0)
    assert var_0 == 0
    module_0.string_to_hex_string(set_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    module_0.string_to_hex_string(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 429
    module_0.bytearray_to_hex_string(int_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'G>!W,.L)E8,y"sqx'
    var_0 = module_0.string_to_hex_string(str_0)
    assert var_0 == '473e21572c2e4c2945382c7922737178'
    var_1 = module_0.is_hex(var_0)
    assert var_1 is True
    module_2.unique(var_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '9(X+'
    var_0 = module_0.string_to_hex_string(str_0)
    assert var_0 == '3928582b'
    var_1 = module_0.is_hex(str_0)
    var_2 = module_0.hex_string_to_byte_array(var_0)
    module_0.bytearray_to_hex_string(var_1)

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'G>!W,.L)E8,y"sqx'
    str_1 = ''
    var_0 = module_0.is_hex(str_1)
    assert var_0 is False
    var_1 = module_0.is_hex(str_1)
    assert var_1 is False
    var_2 = module_0.string_to_hex_string(str_1)
    assert var_2 == ''
    var_3 = module_0.hex_string_to_byte_array(str_0)
    module_3.type(*var_1, **var_1)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'G>!W,.L)E8,y"sqx'
    var_0 = module_0.string_to_hex_string(str_0)
    assert var_0 == '473e21572c2e4c2945382c7922737178'
    var_1 = module_0.hex_string_to_bytes(var_0)
    assert var_1 == b'G>!W,.L)E8,y"sqx'
    var_2 = module_0.string_to_hex_string(str_0)
    var_3 = module_0.is_hex(var_1)
    assert var_3 is False
    var_1.read()