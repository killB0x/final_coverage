# Automatically generated by Pynguin.
import pytest
import nuqql_based.config as module_0

def test_case_0():
    str_0 = 'K8F7:_G'
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    none_type_0 = config_0.read_from_file()

def test_case_1():
    str_0 = ']>{-wnoFuw'
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'account {}'
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    none_type_0 = config_0.read_from_file()
    config_0.init()

def test_case_3():
    str_0 = 'dt)%qZ2iH6UcGJ}bM1'
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    str_1 = config_0.get_af()
    assert str_1 == 'inet'
    none_type_0 = config_0.read_from_file()

def test_case_4():
    str_0 = "\x0bJ2'U?sOG!=r"
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    none_type_0 = config_0.read_from_file()
    str_1 = config_0.get_address()
    assert str_1 == 'localhost'

def test_case_5():
    str_0 = '\n        Store accounts in a file.\n        '
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    none_type_0 = config_0.read_from_file()
    int_0 = config_0.get_port()
    assert int_0 == 32000

def test_case_6():
    str_0 = 'K8F7:_G'
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    none_type_0 = config_0.read_from_file()
    path_0 = config_0.get_sockfile()

def test_case_7():
    str_0 = 'K8F7:_G'
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    none_type_0 = config_0.read_from_file()
    path_0 = config_0.get_dir()

def test_case_8():
    str_0 = 'account {}'
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    bool_0 = config_0.get_daemonize()
    none_type_0 = config_0.read_from_file()

def test_case_9():
    str_0 = '\n        Store acunts in a file.\n       '
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    int_0 = config_0.get_loglevel()
    none_type_0 = config_0.read_from_file()

def test_case_10():
    str_0 = ' '
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    bool_0 = config_0.get_history()

def test_case_11():
    str_0 = ']>{-wnoFuw'
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    bool_0 = config_0.get_push_accounts()

def test_case_12():
    str_0 = "*'I7c!@g2Z/"
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    str_1 = config_0.get_name()
    none_type_0 = config_0.read_from_file()

def test_case_13():
    str_0 = '\nNuqql-based logging\n'
    config_0 = module_0.Config(str_0, str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'nuqql_based.config.Config'
    none_type_0 = config_0.read_from_file()
    str_1 = config_0.get_version()