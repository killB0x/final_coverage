# Automatically generated by Pynguin.
import pytest
import nuqql_based.callback as module_0
import builtins as module_1

def test_case_0():
    callbacks_0 = module_0.Callbacks()

@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 821
    callbacks_0 = module_0.Callbacks()
    str_0 = 'FNlt0t(AgtNM2 lN7?4T'
    callback_0 = module_0.Callback.CHAT_PART
    var_0 = callbacks_0.add(callback_0, str_0)
    none_type_0 = callbacks_0.delete(callback_0)
    assert callbacks_0.callbacks == {}
    callbacks_1 = module_0.Callbacks()
    var_1 = callbacks_0.call(none_type_0, none_type_0, str_0)
    assert var_1 == ''
    var_2 = callbacks_1.add(str_0, str_0)
    var_2.call(int_0, int_0, int_0)

def test_case_2():
    callback_0 = module_0.Callback.CHAT_JOIN
    callbacks_0 = module_0.Callbacks()
    none_type_0 = callbacks_0.delete(callback_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    callbacks_0 = module_0.Callbacks()
    none_type_0 = None
    callbacks_1 = module_0.Callbacks()
    var_0 = callbacks_0.call(callbacks_1, callbacks_0, callbacks_1)
    assert var_0 == ''
    var_1 = callbacks_0.add(none_type_0, none_type_0)
    none_type_1 = None
    int_0 = -468
    callbacks_2 = module_0.Callbacks()
    var_2 = callbacks_2.add(int_0, int_0)
    var_3 = callbacks_2.add(int_0, callbacks_2)
    callbacks_2.call(int_0, callbacks_2, none_type_1)

def test_case_4():
    callbacks_0 = module_0.Callbacks()
    none_type_0 = None
    var_0 = callbacks_0.call(callbacks_0, callbacks_0, none_type_0)
    assert var_0 == ''

def test_case_5():
    str_0 = 'o>3(<_dQH\t>}~Ul'
    tuple_0 = (str_0,)
    callbacks_0 = module_0.Callbacks()
    var_0 = callbacks_0.add(tuple_0, str_0)