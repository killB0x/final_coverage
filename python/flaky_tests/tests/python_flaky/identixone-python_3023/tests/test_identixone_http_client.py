# Automatically generated by Pynguin.
import pytest
import re as module_0
import identixone.http.client as module_1
import platform as module_2
import requests.hooks as module_3

@pytest.mark.xfail(strict=True)
def test_case_0():
    regex_flag_0 = module_0.RegexFlag.VERBOSE
    identix_one_http_client_0 = module_1.IdentixOneHttpClient(regex_flag_0, timeout=regex_flag_0)
    assert identix_one_http_client_0.request_hooks == {'response': []}
    assert identix_one_http_client_0.timeout == module_0.RegexFlag.VERBOSE
    assert f'{type(module_1.IdentixOneHttpClient.common_headers).__module__}.{type(module_1.IdentixOneHttpClient.common_headers).__qualname__}' == 'builtins.property'
    var_0 = module_2.version()
    var_1 = var_0.__len__()
    var_0.get(var_0, data=var_1, files=identix_one_http_client_0, headers=regex_flag_0)

def test_case_1():
    bool_0 = False
    dict_0 = {bool_0: bool_0}
    identix_one_http_client_0 = module_1.IdentixOneHttpClient(dict_0, dict_0)
    assert identix_one_http_client_0.request_hooks == {False: False}
    assert identix_one_http_client_0.timeout == (4, 15)
    assert f'{type(module_1.IdentixOneHttpClient.common_headers).__module__}.{type(module_1.IdentixOneHttpClient.common_headers).__qualname__}' == 'builtins.property'

def test_case_2():
    none_type_0 = None
    identix_one_http_client_0 = module_1.IdentixOneHttpClient(none_type_0, timeout=none_type_0)
    assert identix_one_http_client_0.request_hooks == {'response': []}
    assert identix_one_http_client_0.timeout == (4, 15)
    assert f'{type(module_1.IdentixOneHttpClient.common_headers).__module__}.{type(module_1.IdentixOneHttpClient.common_headers).__qualname__}' == 'builtins.property'
    var_0 = identix_one_http_client_0.delete(none_type_0, data=none_type_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 404
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 9
    assert f'{type(var_0.raw).__module__}.{type(var_0.raw).__qualname__}' == 'urllib3.response.HTTPResponse'
    assert var_0.url == 'https://api.identix.one/'
    assert var_0.encoding == 'utf-8'
    assert var_0.history == []
    assert var_0.reason == 'Not Found'
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert f'{type(var_0.request).__module__}.{type(var_0.request).__qualname__}' == 'requests.models.PreparedRequest'
    assert f'{type(var_0.connection).__module__}.{type(var_0.connection).__qualname__}' == 'requests.adapters.HTTPAdapter'

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    identix_one_http_client_0 = module_1.IdentixOneHttpClient(none_type_0)
    assert identix_one_http_client_0.request_hooks == {'response': []}
    assert identix_one_http_client_0.timeout == (4, 15)
    assert f'{type(module_1.IdentixOneHttpClient.common_headers).__module__}.{type(module_1.IdentixOneHttpClient.common_headers).__qualname__}' == 'builtins.property'
    var_0 = identix_one_http_client_0.patch(none_type_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 404
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 9
    assert f'{type(var_0.raw).__module__}.{type(var_0.raw).__qualname__}' == 'urllib3.response.HTTPResponse'
    assert var_0.url == 'https://api.identix.one/'
    assert var_0.encoding == 'utf-8'
    assert var_0.history == []
    assert var_0.reason == 'Not Found'
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert f'{type(var_0.request).__module__}.{type(var_0.request).__qualname__}' == 'requests.models.PreparedRequest'
    assert f'{type(var_0.connection).__module__}.{type(var_0.connection).__qualname__}' == 'requests.adapters.HTTPAdapter'
    identix_one_http_client_0.post(none_type_0, data=identix_one_http_client_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    dict_0 = module_2.python_version_tuple()
    identix_one_http_client_0 = module_1.IdentixOneHttpClient(dict_0, dict_0)
    assert identix_one_http_client_0.request_hooks == ('3', '10', '6')
    assert identix_one_http_client_0.timeout == (4, 15)
    assert f'{type(module_1.IdentixOneHttpClient.common_headers).__module__}.{type(module_1.IdentixOneHttpClient.common_headers).__qualname__}' == 'builtins.property'
    var_0 = module_3.default_hooks()
    identix_one_http_client_0.post(bool_0, files=var_0, headers=identix_one_http_client_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    none_type_0 = None
    identix_one_http_client_0 = module_1.IdentixOneHttpClient(none_type_0, timeout=none_type_0)
    assert identix_one_http_client_0.request_hooks == {'response': []}
    assert identix_one_http_client_0.timeout == (4, 15)
    assert f'{type(module_1.IdentixOneHttpClient.common_headers).__module__}.{type(module_1.IdentixOneHttpClient.common_headers).__qualname__}' == 'builtins.property'
    var_0 = identix_one_http_client_0.get(none_type_0, data=none_type_0, headers=bool_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'requests.models.Response'
    assert var_0.status_code == 404
    assert f'{type(var_0.headers).__module__}.{type(var_0.headers).__qualname__}' == 'requests.structures.CaseInsensitiveDict'
    assert len(var_0.headers) == 9
    assert f'{type(var_0.raw).__module__}.{type(var_0.raw).__qualname__}' == 'urllib3.response.HTTPResponse'
    assert var_0.url == 'https://api.identix.one/'
    assert var_0.encoding == 'utf-8'
    assert var_0.history == []
    assert var_0.reason == 'Not Found'
    assert f'{type(var_0.cookies).__module__}.{type(var_0.cookies).__qualname__}' == 'requests.cookies.RequestsCookieJar'
    assert len(var_0.cookies) == 0
    assert f'{type(var_0.elapsed).__module__}.{type(var_0.elapsed).__qualname__}' == 'datetime.timedelta'
    assert f'{type(var_0.request).__module__}.{type(var_0.request).__qualname__}' == 'requests.models.PreparedRequest'
    assert f'{type(var_0.connection).__module__}.{type(var_0.connection).__qualname__}' == 'requests.adapters.HTTPAdapter'
    var_1 = identix_one_http_client_0.delete(none_type_0, data=none_type_0)
    assert var_1.status_code == 404
    assert len(var_1.headers) == 9
    assert var_1.encoding == 'utf-8'
    assert var_1.reason == 'Not Found'
    var_2 = module_2.machine()
    var_3 = identix_one_http_client_0.delete(none_type_0, data=var_2, auth=none_type_0)
    assert var_3.status_code == 404
    assert len(var_3.headers) == 9
    assert var_3.encoding == 'utf-8'
    assert var_3.reason == 'Not Found'
    var_2.__bool__()

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    identix_one_http_client_0 = module_1.IdentixOneHttpClient(none_type_0)
    assert identix_one_http_client_0.request_hooks == {'response': []}
    assert identix_one_http_client_0.timeout == (4, 15)
    assert f'{type(module_1.IdentixOneHttpClient.common_headers).__module__}.{type(module_1.IdentixOneHttpClient.common_headers).__qualname__}' == 'builtins.property'
    identix_one_http_client_0.delete(none_type_0, auth=identix_one_http_client_0)