# Automatically generated by Pynguin.
import pytest
import identixone.api.notifications.v1.notifications as module_0

def test_case_0():
    bytes_0 = b'\xdb6}\x05\xe9\t*3\x91\x0cx\xe6\xff'
    notifications_0 = module_0.Notifications(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    notifications_0 = module_0.Notifications(bool_0)
    str_0 = '"FRoLFtdv[@E(Ez'
    str_1 = 'method'
    dict_0 = {str_0: notifications_0, str_1: str_1}
    notifications_0.list(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    notifications_0 = module_0.Notifications(bool_0)
    notifications_0.create(bool_0, bool_0, bool_0, liveness=bool_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 2801
    set_0 = {int_0, int_0, int_0}
    int_1 = 4
    notifications_0 = module_0.Notifications(int_1)
    notifications_0.get(set_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    str_0 = 't]{h}mh/I\t-\t>1Cbtn8&'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    int_0 = 1162
    notifications_0 = module_0.Notifications(int_0)
    notifications_0.update(bool_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    bool_1 = True
    notifications_0 = module_0.Notifications(bool_1)
    notifications_0.delete(set_0)