# Automatically generated by Pynguin.
import pytest
import examples as module_0
import datetime as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    var_0 = module_0.update_notifications()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_0.env_var(var_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    var_0 = module_0.sources_list()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_0.env_var(var_0)

def test_case_2():
    var_0 = module_0.sources_get()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.utility_customer()
    time_0 = module_1.time()

@pytest.mark.xfail(strict=True)
def test_case_3():
    var_0 = module_0.users_update_token()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.update_token()
    var_2 = module_0.sources_create()
    var_2.env_var(var_2)

@pytest.mark.xfail(strict=True)
def test_case_4():
    var_0 = module_0.sources_update()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    module_0.users_get_token()

@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 2831
    var_0 = module_0.persons_create(int_0)
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.sources_delete()
    var_2 = module_0.list_notifications()
    var_0.env_var(var_2)

@pytest.mark.xfail(strict=True)
def test_case_6():
    var_0 = module_0.create_token()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.get_token()
    list_0 = [var_1, var_1, var_1]
    var_2 = module_0.utility_asm(list_0)
    var_3 = module_0.persons_delete()
    var_4 = module_0.get_token()
    var_1.env_var(var_1)

@pytest.mark.xfail(strict=True)
def test_case_7():
    var_0 = module_0.users_list_tokens()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    tuple_0 = (var_0, var_0, var_0)
    var_1 = module_0.utility_liveness(tuple_0)
    module_0.users_get_token()

def test_case_8():
    int_0 = 2043
    none_type_0 = None
    var_0 = module_0.utility_compare(int_0, none_type_0)
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'

@pytest.mark.xfail(strict=True)
def test_case_9():
    var_0 = module_0.delete_token()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.persons_create(var_0)
    var_0.dynamic_import(var_1, var_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    var_0 = module_0.list_notifications()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.users_delete_token()
    var_2 = module_0.auth_create_token()
    var_3 = module_0.users_delete_token()
    var_4 = module_0.persons_search(var_1)
    bytes_0 = b'{\\\xefQ\x15\xe1\xf0'
    var_5 = module_0.sources_list()
    var_1.dynamic_import(bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    var_0 = module_0.persons_entry()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    int_0 = 1698
    var_1 = module_0.users_me()
    var_2 = module_0.persons_reinit_image(int_0)
    var_3 = module_0.update_notifications()
    var_4 = module_0.bulk_delete_temporary_tokens()
    var_4.env_var(var_3)

@pytest.mark.xfail(strict=True)
def test_case_12():
    var_0 = module_0.list_notifications()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.bulk_delete_tokens()
    var_2 = module_0.bulk_delete_temporary_tokens()
    var_3 = module_0.users_me()
    var_4 = module_0.persons_reinit_id()
    var_1.dynamic_import(var_2, var_3)

@pytest.mark.xfail(strict=True)
def test_case_13():
    var_0 = module_0.update_token()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_0.dynamic_import(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    bytes_0 = b'\xa1\x1f\xc0\x87d\xc8a6\xff\x03\xe2\xaeH\x8f\x1e*Z\x81]'
    var_0 = module_0.persons_reinit_image(bytes_0)
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.bulk_delete_permanent_tokens()
    var_1.dynamic_import(var_1, var_1)

@pytest.mark.xfail(strict=True)
def test_case_15():
    none_type_0 = None
    var_0 = module_0.persons_create(none_type_0)
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.auth_create_token()
    var_0.env_var(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    var_0 = module_0.update_notifications()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    module_0.auth_create_permanent_token()

@pytest.mark.xfail(strict=True)
def test_case_17():
    var_0 = module_0.delete_notifications()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    module_0.users_get_token()

@pytest.mark.xfail(strict=True)
def test_case_18():
    var_0 = module_0.list_notifications()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.auth_create_token()
    var_2 = module_0.create_notifications()
    var_3 = module_0.sources_create()
    var_2.dynamic_import(var_2, var_2)

@pytest.mark.xfail(strict=True)
def test_case_19():
    var_0 = module_0.create_token()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    str_0 = '6G`F*B-urL`m>bv['
    var_0.env_var(str_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    module_0.users_change_password()

@pytest.mark.xfail(strict=True)
def test_case_21():
    var_0 = module_0.sources_list()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    str_0 = 'OAQ\x0b'
    var_1 = module_0.persons_create(str_0)
    var_2 = module_0.users_delete_token()
    var_3 = module_0.users_list_tokens()
    var_4 = module_0.list_notifications()
    var_3.env_var(var_3)

@pytest.mark.xfail(strict=True)
def test_case_22():
    var_0 = module_0.update_token()
    assert module_0.token == 'token'
    assert module_0.client.token == 'token'
    var_1 = module_0.users_update_token()
    var_2 = module_0.update_token()
    var_0.dynamic_import(var_0, var_1)