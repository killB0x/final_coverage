# Automatically generated by Pynguin.
import pytest
import bottle_neck.plugins as module_0
import bottle as module_1

def test_case_0():
    str_0 = 'BN>*O/_<G'
    wrap_error_plugin_0 = module_0.WrapErrorPlugin(str_0, str_0)
    assert f'{type(wrap_error_plugin_0).__module__}.{type(wrap_error_plugin_0).__qualname__}' == 'bottle_neck.plugins.WrapErrorPlugin'
    assert wrap_error_plugin_0.error_wrapper == 'BN>*O/_<G'
    assert wrap_error_plugin_0.keyword == 'BN>*O/_<G'

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'kFT'
    wrap_error_plugin_0 = module_0.WrapErrorPlugin(str_0, str_0)
    assert f'{type(wrap_error_plugin_0).__module__}.{type(wrap_error_plugin_0).__qualname__}' == 'bottle_neck.plugins.WrapErrorPlugin'
    assert wrap_error_plugin_0.error_wrapper == 'kFT'
    assert wrap_error_plugin_0.keyword == 'kFT'
    var_0 = wrap_error_plugin_0.apply(wrap_error_plugin_0, wrap_error_plugin_0)
    var_0.__call__(str_0, wrap_error_plugin_0, qualname=wrap_error_plugin_0, type=str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    wrap_error_plugin_0 = module_0.WrapErrorPlugin(none_type_0, none_type_0)
    assert f'{type(wrap_error_plugin_0).__module__}.{type(wrap_error_plugin_0).__qualname__}' == 'bottle_neck.plugins.WrapErrorPlugin'
    assert wrap_error_plugin_0.error_wrapper is None
    assert wrap_error_plugin_0.keyword is None
    module_1.install(wrap_error_plugin_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    wrap_error_plugin_0 = module_0.WrapErrorPlugin(none_type_0, none_type_0)
    assert f'{type(wrap_error_plugin_0).__module__}.{type(wrap_error_plugin_0).__qualname__}' == 'bottle_neck.plugins.WrapErrorPlugin'
    assert wrap_error_plugin_0.error_wrapper is None
    assert wrap_error_plugin_0.keyword is None
    module_1.install(wrap_error_plugin_0)
    var_1 = var_0.lower()

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'kF'
    wrap_error_plugin_0 = module_0.WrapErrorPlugin(str_0, str_0)
    assert f'{type(wrap_error_plugin_0).__module__}.{type(wrap_error_plugin_0).__qualname__}' == 'bottle_neck.plugins.WrapErrorPlugin'
    assert wrap_error_plugin_0.error_wrapper == 'kF'
    assert wrap_error_plugin_0.keyword == 'kF'
    module_1.install(wrap_error_plugin_0)
    var_1 = var_0.render(**var_0)