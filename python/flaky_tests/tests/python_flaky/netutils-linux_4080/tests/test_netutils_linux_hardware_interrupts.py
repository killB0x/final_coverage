# Automatically generated by Pynguin.
import pytest
import netutils_linux_hardware.interrupts as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    n_i_c_queues_0 = module_0.NICQueues()
    assert n_i_c_queues_0.queues == {'own': [], 'rx': [], 'tx': [], 'rxtx': [], 'shared': [], 'unknown': []}
    str_0 = '%Ml0{,WH-vSA'
    var_0 = n_i_c_queues_0.netdev_queue_relationship(str_0, str_0)
    assert var_0 == 'own'
    var_0.parse(var_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    n_i_c_queues_0 = module_0.NICQueues()
    assert n_i_c_queues_0.queues == {'own': [], 'rx': [], 'tx': [], 'rxtx': [], 'shared': [], 'unknown': []}
    str_0 = '%Ml0{,WH-vSA'
    var_0 = n_i_c_queues_0.netdev_queue_relationship(str_0, str_0)
    assert var_0 == 'own'
    n_i_c_queues_0.parse(str_0, n_i_c_queues_0)

def test_case_2():
    n_i_c_queues_0 = module_0.NICQueues()
    assert n_i_c_queues_0.queues == {'own': [], 'rx': [], 'tx': [], 'rxtx': [], 'shared': [], 'unknown': []}
    str_0 = ''
    str_1 = ',6fs-Tr'
    var_0 = n_i_c_queues_0.parse(str_1, str_0)
    assert n_i_c_queues_0.queues == {'own': [], 'rx': [], 'tx': [], 'rxtx': [], 'shared': [','], 'unknown': ['6', 'f', 's', '-', 'T', 'r']}

@pytest.mark.xfail(strict=True)
def test_case_3():
    i_r_q_queue_counter_0 = module_0.IRQQueueCounter()
    str_0 = "'"
    i_r_q_queue_counter_0.irq2queues(str_0, i_r_q_queue_counter_0, str_0)

def test_case_4():
    n_i_c_queues_0 = module_0.NICQueues()
    assert n_i_c_queues_0.queues == {'own': [], 'rx': [], 'tx': [], 'rxtx': [], 'shared': [], 'unknown': []}

@pytest.mark.xfail(strict=True)
def test_case_5():
    i_r_q_queue_counter_0 = module_0.IRQQueueCounter()
    i_r_q_queue_counter_1 = module_0.IRQQueueCounter()
    i_r_q_queue_counter_1.irq2cpucount(i_r_q_queue_counter_1)

def test_case_6():
    n_i_c_queues_0 = module_0.NICQueues()
    assert n_i_c_queues_0.queues == {'own': [], 'rx': [], 'tx': [], 'rxtx': [], 'shared': [], 'unknown': []}
    str_0 = ''
    str_1 = ',6fs-Tr'
    var_0 = n_i_c_queues_0.parse(str_1, str_1)
    var_1 = n_i_c_queues_0.parse(str_1, str_0)
    assert n_i_c_queues_0.queues == {'own': [], 'rx': [], 'tx': [], 'rxtx': [], 'shared': [','], 'unknown': ['6', 'f', 's', '-', 'T', 'r']}

@pytest.mark.xfail(strict=True)
def test_case_7():
    i_r_q_queue_counter_0 = module_0.IRQQueueCounter()
    str_0 = ''
    var_0 = i_r_q_queue_counter_0.irq2cpucount(str_0)
    assert var_0 == 0
    str_1 = ''
    i_r_q_queue_counter_1 = module_0.IRQQueueCounter()
    list_0 = []
    var_1 = i_r_q_queue_counter_1.irq2queues(str_1, var_0, list_0)
    i_r_q_queue_counter_2 = module_0.IRQQueueCounter()
    var_0.parse(i_r_q_queue_counter_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    n_i_c_queues_0 = module_0.NICQueues()
    assert n_i_c_queues_0.queues == {'own': [], 'rx': [], 'tx': [], 'rxtx': [], 'shared': [], 'unknown': []}
    str_0 = '6*zt6Jx2@_}s=#hU'
    i_r_q_queue_counter_0 = module_0.IRQQueueCounter()
    str_1 = '>(\re?-<Ew8"'
    var_0 = i_r_q_queue_counter_0.irq2queues(str_1, n_i_c_queues_0, str_0)
    var_1 = n_i_c_queues_0.parse(str_1, str_0)
    var_1.parse_file(str_0)