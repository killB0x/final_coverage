# Automatically generated by Pynguin.
import pytest
import importmagic.index as module_0
import ast as module_1
import distutils.sysconfig as module_2
import importmagic.util as module_3
import platform as module_4
import sysconfig as module_5

def test_case_0():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'

@pytest.mark.xfail(strict=True)
def test_case_1():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.serialize()
    assert var_0 == '{"os": {"path": {".score": 1.2, ".location": "S"}, ".score": 1.2, ".location": "S"}, "__future__": {".score": 1.0, ".location": "F"}, "__builtin__": {".score": 1.0, ".location": "S"}, ".score": 1.0, ".location": "L", ".lib_locations": [["/usr/local/lib/python3.10/site-packages", "3"], ["/usr/local/lib/python3.10", "S"]]}'
    symbol_index_0.get_or_create_index(name=symbol_index_0)

def test_case_2():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.serialize()
    assert var_0 == '{"os": {"path": {".score": 1.2, ".location": "S"}, ".score": 1.2, ".location": "S"}, "__future__": {".score": 1.0, ".location": "F"}, "__builtin__": {".score": 1.0, ".location": "S"}, ".score": 1.0, ".location": "L", ".lib_locations": [["/usr/local/lib/python3.10/site-packages", "3"], ["/usr/local/lib/python3.10", "S"]]}'
    var_1 = var_0.rstrip()
    assert var_1 == '{"os": {"path": {".score": 1.2, ".location": "S"}, ".score": 1.2, ".location": "S"}, "__future__": {".score": 1.0, ".location": "F"}, "__builtin__": {".score": 1.0, ".location": "S"}, ".score": 1.0, ".location": "L", ".lib_locations": [["/usr/local/lib/python3.10/site-packages", "3"], ["/usr/local/lib/python3.10", "S"]]}'
    var_2 = symbol_index_0.location_for(var_1)
    assert var_2 == 'L'
    var_3 = symbol_index_0.index_source(var_1, var_1)
    assert var_3 is True
    var_4 = symbol_index_0.depth()
    assert var_4 == 0
    var_5 = symbol_index_0.build_index(var_2)

def test_case_3():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.depth()
    assert var_0 == 0

@pytest.mark.xfail(strict=True)
def test_case_4():
    var_0 = module_1._Precedence.CMP
    module_0.SymbolIndex(var_0, score=var_0, blacklist_re=var_0)

def test_case_5():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.index_source(symbol_index_0, symbol_index_0)
    assert var_0 is False

@pytest.mark.xfail(strict=True)
def test_case_6():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    symbol_index_0.build_index(symbol_index_0)

def test_case_7():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.get_or_create_index(symbol_index_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert var_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert var_0.location == 'L'
    var_1 = var_0.depth()
    assert var_1 == 0
    var_2 = symbol_index_0.index_source(var_1, var_1)
    assert var_2 is False

@pytest.mark.xfail(strict=True)
def test_case_8():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    symbol_index_0.get_or_create_index(symbol_index_0, refresh=symbol_index_0)

def test_case_9():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.__repr__()
    assert var_0 == "<L:1.0 {'os': <S:1.2 {'path': <S:1.2 {}>}>, '__future__': <F:1.0 {}>, '__builtin__': <S:1.0 {}>}>"
    var_1 = symbol_index_0.index_builtin(var_0, var_0)

def test_case_10():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.__repr__()
    assert var_0 == "<L:1.0 {'os': <S:1.2 {'path': <S:1.2 {}>}>, '__future__': <F:1.0 {}>, '__builtin__': <S:1.0 {}>}>"
    var_1 = symbol_index_0.build_index(var_0)
    var_2 = symbol_index_0.boost()
    assert var_2 == pytest.approx(1.5, abs=0.01, rel=0.01)

def test_case_11():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.__repr__()
    assert var_0 == "<L:1.0 {'os': <S:1.2 {'path': <S:1.2 {}>}>, '__future__': <F:1.0 {}>, '__builtin__': <S:1.0 {}>}>"
    var_1 = symbol_index_0.build_index(var_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = module_2.get_python_lib(symbol_index_0)
    var_1 = symbol_index_0.symbol_scores(var_0)
    symbol_index_0.index_file(symbol_index_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.serialize()
    assert var_0 == '{"os": {"path": {".score": 1.2, ".location": "S"}, ".score": 1.2, ".location": "S"}, "__future__": {".score": 1.0, ".location": "F"}, "__builtin__": {".score": 1.0, ".location": "S"}, ".score": 1.0, ".location": "L", ".lib_locations": [["/usr/local/lib/python3.10/site-packages", "3"], ["/usr/local/lib/python3.10", "S"]]}'
    var_1 = symbol_index_0.build_index(var_0)
    symbol_index_0.build_index(var_1)

@pytest.mark.xfail(strict=True)
def test_case_14():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.depth()
    assert var_0 == 0
    symbol_index_0.add_explicit_export(var_0, symbol_index_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = module_2.get_config_h_filename()
    symbol_index_0.index_file(symbol_index_0, var_0)

def test_case_16():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = module_2.get_python_lib(symbol_index_0)
    var_1 = symbol_index_0.build_index(var_0)
    var_2 = symbol_index_0.symbol_scores(var_0)

def test_case_17():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.serialize()
    assert var_0 == '{"os": {"path": {".score": 1.2, ".location": "S"}, ".score": 1.2, ".location": "S"}, "__future__": {".score": 1.0, ".location": "F"}, "__builtin__": {".score": 1.0, ".location": "S"}, ".score": 1.0, ".location": "L", ".lib_locations": [["/usr/local/lib/python3.10/site-packages", "3"], ["/usr/local/lib/python3.10", "S"]]}'
    var_1 = var_0.rstrip()
    assert var_1 == '{"os": {"path": {".score": 1.2, ".location": "S"}, ".score": 1.2, ".location": "S"}, "__future__": {".score": 1.0, ".location": "F"}, "__builtin__": {".score": 1.0, ".location": "S"}, ".score": 1.0, ".location": "L", ".lib_locations": [["/usr/local/lib/python3.10/site-packages", "3"], ["/usr/local/lib/python3.10", "S"]]}'
    var_2 = symbol_index_0.location_for(var_1)
    assert var_2 == 'L'
    var_3 = symbol_index_0.serialize()
    assert var_3 == '{"os": {"path": {".score": 1.2, ".location": "S"}, ".score": 1.2, ".location": "S"}, "__future__": {".score": 1.0, ".location": "F"}, "__builtin__": {".score": 1.0, ".location": "S"}, ".score": 1.0, ".location": "L", ".lib_locations": [["/usr/local/lib/python3.10/site-packages", "3"], ["/usr/local/lib/python3.10", "S"]]}'
    var_4 = symbol_index_0.index_source(var_0, var_0)
    assert var_4 is True
    var_5 = symbol_index_0.index_builtin(var_3, symbol_index_0)
    var_6 = module_2.get_python_lib(symbol_index_0)
    var_7 = symbol_index_0.build_index(var_6)
    var_8 = symbol_index_0.index_source(var_6, var_6)
    assert var_8 is False
    var_9 = symbol_index_0.get_or_create_index(var_0, var_8, var_3)
    assert f'{type(var_9).__module__}.{type(var_9).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert var_9.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert var_9.location == 'L'

@pytest.mark.xfail(strict=True)
def test_case_18():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = module_2.get_python_lib(symbol_index_0)
    var_1 = symbol_index_0.build_index(var_0)
    symbol_index_0.index_file(symbol_index_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = module_3.get_cache_dir()
    var_1 = symbol_index_0.find(var_0)
    var_1.find(var_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.serialize()
    assert var_0 == '{"os": {"path": {".score": 1.2, ".location": "S"}, ".score": 1.2, ".location": "S"}, "__future__": {".score": 1.0, ".location": "F"}, "__builtin__": {".score": 1.0, ".location": "S"}, ".score": 1.0, ".location": "L", ".lib_locations": [["/usr/local/lib/python3.10/site-packages", "3"], ["/usr/local/lib/python3.10", "S"]]}'
    var_1 = symbol_index_0.index_path(var_0)
    var_2 = symbol_index_0.__repr__()
    assert var_2 == "<L:1.0 {'os': <S:1.2 {'path': <S:1.2 {}>}>, '__future__': <F:1.0 {}>, '__builtin__': <S:1.0 {}>}>"
    var_3 = symbol_index_0.boost()
    assert var_3 == pytest.approx(1.5, abs=0.01, rel=0.01)
    var_4 = symbol_index_0.symbol_scores(var_2)
    symbol_index_0.index_file(symbol_index_0, var_2)

def test_case_21():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    none_type_0 = None
    var_0 = symbol_index_0.boost()
    assert var_0 == pytest.approx(1.5, abs=0.01, rel=0.01)
    j_s_o_n_encoder_0 = module_0.JSONEncoder(skipkeys=symbol_index_0, ensure_ascii=none_type_0)
    with pytest.raises(TypeError):
        j_s_o_n_encoder_0.default(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_22():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = symbol_index_0.serialize()
    assert var_0 == '{"os": {"path": {".score": 1.2, ".location": "S"}, ".score": 1.2, ".location": "S"}, "__future__": {".score": 1.0, ".location": "F"}, "__builtin__": {".score": 1.0, ".location": "S"}, ".score": 1.0, ".location": "L", ".lib_locations": [["/usr/local/lib/python3.10/site-packages", "3"], ["/usr/local/lib/python3.10", "S"]]}'
    var_1 = symbol_index_0.index_builtin(var_0, symbol_index_0)
    var_2 = module_2.get_python_lib(symbol_index_0)
    var_3 = symbol_index_0.build_index(var_2)
    var_4 = symbol_index_0.symbol_scores(var_2)
    var_5 = symbol_index_0.index_path(var_2)
    symbol_index_0.index_file(symbol_index_0, var_2)

@pytest.mark.xfail(strict=True)
def test_case_23():
    none_type_0 = None
    symbol_visitor_0 = module_0.SymbolVisitor(none_type_0)
    assert f'{type(symbol_visitor_0).__module__}.{type(symbol_visitor_0).__qualname__}' == 'importmagic.index.SymbolVisitor'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    var_0 = symbol_visitor_0.visit_If(none_type_0)
    var_0.visit_If(symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_24():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    symbol_index_0.get_or_create_index(symbol_index_0, refresh=symbol_index_0)

@pytest.mark.xfail(strict=True)
def test_case_25():
    symbol_index_0 = module_0.SymbolIndex()
    assert f'{type(symbol_index_0).__module__}.{type(symbol_index_0).__qualname__}' == 'importmagic.index.SymbolIndex'
    assert symbol_index_0.score == pytest.approx(1.0, abs=0.01, rel=0.01)
    assert symbol_index_0.location == 'L'
    assert module_0.LIB_LOCATIONS == [('/usr/local/lib/python3.10/site-packages', '3'), ('/usr/local/lib/python3.10', 'S')]
    assert module_0.BUILTIN_MODULES == ('_abc', '_ast', '_codecs', '_collections', '_functools', '_imp', '_io', '_locale', '_operator', '_signal', '_sre', '_stat', '_string', '_symtable', '_thread', '_tracemalloc', '_warnings', '_weakref', 'atexit', 'builtins', 'errno', 'faulthandler', 'gc', 'itertools', 'marshal', 'posix', 'pwd', 'sys', 'time', 'xxsubtype', 'os', 'typing')
    assert module_0.SymbolIndex.LOCATIONS == {'F': 'Future', '3': 'Third party', 'S': 'System', 'L': 'Local'}
    assert f'{type(module_0.SymbolIndex.lib_locations).__module__}.{type(module_0.SymbolIndex.lib_locations).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.SymbolIndex.deserialize).__module__}.{type(module_0.SymbolIndex.deserialize).__qualname__}' == 'builtins.method'
    var_0 = module_4.uname()
    var_1 = symbol_index_0.build_index(var_0)
    module_5.get_path(symbol_index_0, expand=var_1)