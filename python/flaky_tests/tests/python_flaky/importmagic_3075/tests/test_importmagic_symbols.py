# Automatically generated by Pynguin.
import pytest
import importmagic.symbols as module_0
import importmagic.util as module_1
import ast as module_2

def test_case_0():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'

@pytest.mark.xfail(strict=True)
def test_case_1():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    var_0 = scope_0.extend_symbol(scope_0, scope_0)
    var_0.visit_Lambda(var_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_Return(unknown_symbol_visitor_0)

def test_case_3():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    str_0 = 'di9|l6:.LAG+Afta'
    var_0 = scope_0.define(str_0)
    var_1 = scope_0.find_unresolved_and_unreferenced_symbols()

def test_case_4():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    var_0 = scope_0.find_unresolved_and_unreferenced_symbols()

@pytest.mark.xfail(strict=True)
def test_case_5():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor(scope_0, scope_0)
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_Call(scope_0)

def test_case_6():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'

@pytest.mark.xfail(strict=True)
def test_case_7():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_If(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_Lambda(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_comprehension(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_With(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor(trace=scope_0)
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_While(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_Raise(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_GeneratorExp(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_Subscript(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_Call(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_ExceptHandler(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_18():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_ClassDef(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor(scope_0, scope_0)
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    str_0 = 'importmagic.ymbols'
    var_0 = module_1.parse_ast(str_0)
    var_1 = unknown_symbol_visitor_0.visit(var_0)
    unknown_symbol_visitor_0.visit_FunctionDef(var_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_ListComp(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_21():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_22():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_For(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_23():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    var_0 = scope_0.extend_symbol(scope_0)
    unknown_symbol_visitor_0.visit_Return(var_0)

@pytest.mark.xfail(strict=True)
def test_case_24():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    var_0 = scope_0.flush_symbol()
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    unknown_symbol_visitor_0.visit_ClassDef(scope_0)

def test_case_25():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    str_0 = 'i@mportmagc.ymbols'
    var_0 = module_1.parse_ast(str_0)
    var_1 = unknown_symbol_visitor_0.visit(var_0)

@pytest.mark.xfail(strict=True)
def test_case_26():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    except_handler_0 = module_2.ExceptHandler()
    unknown_symbol_visitor_0.visit_Raise(except_handler_0)

@pytest.mark.xfail(strict=True)
def test_case_27():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    var_0 = scope_0.find_unresolved_and_unreferenced_symbols()
    scope_0.define(var_0)

@pytest.mark.xfail(strict=True)
def test_case_28():
    none_type_0 = None
    scope_0 = module_0.Scope(define_builtins=none_type_0)
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    unknown_symbol_visitor_0.visit_Lambda(unknown_symbol_visitor_0)

def test_case_29():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    str_0 = 'importmagic.ymbols'
    var_0 = module_1.parse_ast(str_0, str_0)
    var_1 = unknown_symbol_visitor_0.visit(var_0)

@pytest.mark.xfail(strict=True)
def test_case_30():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    var_0 = scope_0.extend_symbol(scope_0)
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor(scope_0)
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    unknown_symbol_visitor_0.visit_ExceptHandler(unknown_symbol_visitor_0)

@pytest.mark.xfail(strict=True)
def test_case_31():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    str_0 = 'impQrtag2c.y.B-rsv'
    var_0 = module_1.parse_ast(str_0, str_0)
    unknown_symbol_visitor_0.visit_TryExcept(var_0)

@pytest.mark.xfail(strict=True)
def test_case_32():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    scope_0 = module_0.Scope(is_class=unknown_symbol_visitor_0)
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    var_0 = scope_0.find_unresolved_and_unreferenced_symbols()
    unknown_symbol_visitor_0.visit_Lambda(var_0)

@pytest.mark.xfail(strict=True)
def test_case_33():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    assign_0 = module_2.Assign()
    unknown_symbol_visitor_0.visit(assign_0)

@pytest.mark.xfail(strict=True)
def test_case_34():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    list_0 = []
    var_0 = unknown_symbol_visitor_0.visit(list_0)
    unknown_symbol_visitor_0.visit_Raise(var_0)

@pytest.mark.xfail(strict=True)
def test_case_35():
    none_type_0 = None
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    scope_0 = module_0.Scope(none_type_0)
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    list_0 = [none_type_0, unknown_symbol_visitor_0, unknown_symbol_visitor_0]
    unknown_symbol_visitor_0.visit(list_0)

@pytest.mark.xfail(strict=True)
def test_case_36():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    dict_0 = {}
    unknown_symbol_visitor_0.visit_With(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_37():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor(scope_0, scope_0)
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    var_0 = scope_0.find_unresolved_and_unreferenced_symbols()
    list_0 = [var_0, var_0, var_0]
    assign_0 = module_2.Assign(*list_0)
    unknown_symbol_visitor_0.visit(assign_0)

@pytest.mark.xfail(strict=True)
def test_case_38():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor(scope_0, scope_0)
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    var_0 = scope_0.find_unresolved_and_unreferenced_symbols()
    assign_0 = module_2.Assign(*var_0)
    unknown_symbol_visitor_0.visit(assign_0)

@pytest.mark.xfail(strict=True)
def test_case_39():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    str_0 = 'importmagic.ymbols'
    var_0 = module_1.parse_ast(str_0, str_0)
    unknown_symbol_visitor_0.visit_TryExcept(var_0)

@pytest.mark.xfail(strict=True)
def test_case_40():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    list_0 = [unknown_symbol_visitor_0, unknown_symbol_visitor_0, unknown_symbol_visitor_0]
    except_handler_0 = module_2.ExceptHandler(*list_0)
    unknown_symbol_visitor_0.visit_Raise(except_handler_0)

@pytest.mark.xfail(strict=True)
def test_case_41():
    scope_0 = module_0.Scope()
    assert f'{type(scope_0).__module__}.{type(scope_0).__qualname__}' == 'importmagic.symbols.Scope'
    assert module_0.Scope.GLOBALS == ['__name__', '__file__', '__loader__', '__package__', '__path__']
    assert module_0.Scope.PYTHON3_BUILTINS == ['PermissionError']
    assert module_0.Scope.ALL_BUILTINS == {'UnicodeWarning', 'memoryview', 'reversed', 'KeyError', 'abs', 'ResourceWarning', 'SyntaxWarning', 'any', 'filter', 'min', 'InterruptedError', 'tuple', 'EncodingWarning', 'ConnectionRefusedError', 'staticmethod', 'zip', 'quit', 'SyntaxError', 'Warning', 'SystemError', 'len', 'int', 'StopIteration', 'AssertionError', '__build_class__', 'sorted', 'float', 'getattr', 'frozenset', 'UserWarning', 'ascii', 'bytes', 'help', 'slice', 'locals', 'FileExistsError', 'BytesWarning', 'open', 'AttributeError', 'MemoryError', '__package__', 'chr', 'ZeroDivisionError', 'IndentationError', 'repr', 'ConnectionError', 'NotImplementedError', 'input', 'BufferError', 'issubclass', 'range', 'round', 'all', 'bin', 'iter', 'map', 'license', 'ModuleNotFoundError', 'ValueError', 'sum', 'TypeError', 'PendingDeprecationWarning', 'property', 'list', 'delattr', 'BlockingIOError', 'anext', 'set', 'False', 'RecursionError', '__spec__', 'Exception', 'print', 'max', 'DeprecationWarning', 'LookupError', '__import__', 'ArithmeticError', '__loader__', 'EnvironmentError', 'None', 'object', 'StopAsyncIteration', 'exec', 'ord', 'super', 'UnicodeEncodeError', 'UnicodeTranslateError', 'divmod', 'EOFError', 'IOError', 'hash', 'classmethod', 'UnicodeError', 'setattr', 'complex', 'RuntimeWarning', 'ProcessLookupError', 'ReferenceError', 'NameError', 'compile', 'hasattr', 'IsADirectoryError', 'ImportError', 'FloatingPointError', 'SystemExit', 'dir', 'oct', 'ImportWarning', 'copyright', 'hex', 'id', 'isinstance', 'ConnectionResetError', 'NotImplemented', 'TimeoutError', 'credits', 'vars', '__file__', 'str', 'IndexError', 'globals', '__debug__', 'format', 'callable', 'NotADirectoryError', 'RuntimeError', 'type', 'enumerate', '__doc__', 'ChildProcessError', 'UnicodeDecodeError', '__path__', 'FileNotFoundError', 'TabError', 'OverflowError', 'breakpoint', '__name__', 'GeneratorExit', 'dict', 'BaseException', 'exit', 'bytearray', 'pow', 'ConnectionAbortedError', 'True', 'Ellipsis', 'next', 'UnboundLocalError', 'KeyboardInterrupt', 'OSError', 'PermissionError', 'BrokenPipeError', 'FutureWarning', 'bool', 'aiter', 'eval'}
    assert f'{type(module_0.Scope.from_source).__module__}.{type(module_0.Scope.from_source).__qualname__}' == 'builtins.method'
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor(scope_0, scope_0)
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    var_0 = scope_0.find_unresolved_and_unreferenced_symbols()
    assign_0 = module_2.Assign(*var_0)
    unknown_symbol_visitor_0.visit_Attribute(assign_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_42():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    except_handler_0 = module_2.ExceptHandler()
    unknown_symbol_visitor_0.visit(except_handler_0)

@pytest.mark.xfail(strict=True)
def test_case_43():
    unknown_symbol_visitor_0 = module_0.UnknownSymbolVisitor()
    assert f'{type(unknown_symbol_visitor_0).__module__}.{type(unknown_symbol_visitor_0).__qualname__}' == 'importmagic.symbols.UnknownSymbolVisitor'
    str_0 = '\r['
    var_0 = module_2.AsyncWith(*str_0)
    unknown_symbol_visitor_0.visit_TryExcept(var_0)