# Automatically generated by Pynguin.
import bitcoinutils.setup as module_0

def test_case_0():
    var_0 = module_0.is_regtest()
    assert var_0 is False
    assert module_0.networks == {'mainnet', 'testnet', 'regtest'}
    var_1 = module_0.is_mainnet()

def test_case_1():
    var_0 = module_0.is_mainnet()
    assert module_0.networks == {'mainnet', 'testnet', 'regtest'}
    var_1 = module_0.is_mainnet()
    var_2 = module_0.setup(var_1)
    var_3 = module_0.is_regtest()
    assert var_3 is False
    var_4 = module_0.is_testnet()
    assert var_4 is False
    var_5 = module_0.get_network()
    var_6 = module_0.is_testnet()
    assert var_6 is False
    var_7 = module_0.is_mainnet()
    assert var_7 is False
    var_8 = module_0.is_testnet()
    assert var_8 is False
    var_9 = module_0.setup()
    assert var_9 == 'mainnet'
    assert module_0.NETWORK == 'mainnet'
    var_10 = module_0.is_mainnet()
    assert var_10 is True
    var_11 = module_0.is_mainnet()
    assert var_11 is True
    var_12 = module_0.is_testnet()
    assert var_12 is False
    var_13 = module_0.get_network()
    assert var_13 == 'mainnet'
    var_14 = module_0.get_network()
    assert var_14 == 'mainnet'

def test_case_2():
    var_0 = module_0.is_testnet()
    assert var_0 is False
    assert module_0.NETWORK == 'mainnet'
    assert module_0.networks == {'mainnet', 'testnet', 'regtest'}
    var_1 = module_0.get_network()
    assert var_1 == 'mainnet'

def test_case_3():
    var_0 = module_0.get_network()
    assert var_0 == 'mainnet'
    assert module_0.NETWORK == 'mainnet'
    assert module_0.networks == {'mainnet', 'testnet', 'regtest'}
    var_1 = module_0.get_network()
    assert var_1 == 'mainnet'

def test_case_4():
    var_0 = module_0.is_mainnet()
    assert module_0.networks == {'mainnet', 'testnet', 'regtest'}
    var_1 = module_0.is_regtest()
    assert var_1 is False
    var_2 = module_0.is_regtest()
    assert var_2 is False
    var_3 = module_0.is_regtest()
    assert var_3 is False
    var_4 = module_0.get_network()
    var_5 = module_0.is_mainnet()
    var_6 = module_0.setup(var_3)
    assert var_6 is False
    assert module_0.NETWORK is False

def test_case_5():
    var_0 = module_0.get_network()
    assert var_0 is False
    assert module_0.NETWORK is False
    assert module_0.networks == {'mainnet', 'testnet', 'regtest'}
    var_1 = module_0.get_network()
    assert var_1 is False
    var_2 = module_0.is_testnet()
    assert var_2 is False
    var_3 = module_0.get_network()
    assert var_3 is False
    var_4 = module_0.is_mainnet()
    assert var_4 is False
    var_5 = module_0.is_mainnet()
    assert var_5 is False
    var_6 = module_0.setup()
    assert var_6 == 'mainnet'
    assert module_0.NETWORK == 'mainnet'
    str_0 = 'testnet'
    var_7 = module_0.setup(str_0)
    var_8 = module_0.is_testnet()
    assert var_8 is True
    var_9 = module_0.is_regtest()
    assert var_9 is False
    var_10 = module_0.setup()
    assert var_10 == 'mainnet'
    assert module_0.NETWORK == 'mainnet'
    var_11 = module_0.get_network()
    assert var_11 == 'mainnet'
    var_12 = module_0.setup()
    assert var_12 == 'mainnet'
    var_13 = module_0.is_mainnet()
    assert var_13 is True
    var_14 = module_0.is_mainnet()
    assert var_14 is True
    var_15 = module_0.is_regtest()
    assert var_15 is False
    var_16 = module_0.is_testnet()
    assert var_16 is False
    var_17 = module_0.get_network()
    assert var_17 == 'mainnet'
    var_18 = module_0.is_regtest()
    assert var_18 is False
    var_19 = module_0.is_regtest()
    assert var_19 is False

def test_case_6():
    var_0 = module_0.is_regtest()
    assert var_0 is False
    assert module_0.NETWORK == 'mainnet'
    assert module_0.networks == {'mainnet', 'testnet', 'regtest'}
    var_1 = module_0.setup(var_0)
    assert var_1 is False
    assert module_0.NETWORK is False
    var_2 = module_0.get_network()
    assert var_2 is False
    var_3 = module_0.get_network()
    assert var_3 is False
    var_4 = module_0.is_testnet()
    assert var_4 is False
    var_5 = module_0.get_network()
    assert var_5 is False
    var_6 = module_0.is_mainnet()
    assert var_6 is False
    var_7 = module_0.is_mainnet()
    assert var_7 is False
    var_8 = module_0.setup()
    assert var_8 == 'mainnet'
    assert module_0.NETWORK == 'mainnet'
    str_0 = 'regtest'
    var_9 = module_0.setup(str_0)
    var_10 = module_0.is_testnet()
    assert var_10 is False
    var_11 = module_0.is_regtest()
    assert var_11 is True
    var_12 = module_0.is_mainnet()
    assert var_12 is False
    var_13 = module_0.setup()
    assert var_13 == 'mainnet'
    assert module_0.NETWORK == 'mainnet'
    var_14 = module_0.setup()
    assert var_14 == 'mainnet'
    var_15 = module_0.is_mainnet()
    assert var_15 is True
    var_16 = module_0.setup()
    assert var_16 == 'mainnet'
    var_17 = module_0.is_mainnet()
    assert var_17 is True
    var_18 = module_0.is_mainnet()
    assert var_18 is True
    var_19 = module_0.is_testnet()
    assert var_19 is False
    var_20 = module_0.is_mainnet()
    assert var_20 is True
    var_21 = module_0.get_network()
    assert var_21 == 'mainnet'
    var_22 = module_0.is_regtest()
    assert var_22 is False
    var_23 = module_0.setup()
    assert var_23 == 'mainnet'
    var_24 = module_0.is_testnet()
    assert var_24 is False
    var_25 = module_0.setup()
    assert var_25 == 'mainnet'
    var_26 = module_0.is_testnet()
    assert var_26 is False
    var_27 = module_0.is_testnet()
    assert var_27 is False
    var_28 = module_0.setup(var_24)
    assert var_28 is False
    assert module_0.NETWORK is False
    var_29 = module_0.is_regtest()
    assert var_29 is False
    var_30 = module_0.is_regtest()
    assert var_30 is False