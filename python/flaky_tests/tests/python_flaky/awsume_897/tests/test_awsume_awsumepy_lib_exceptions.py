# Automatically generated by Pynguin.
import pytest
import awsume.awsumepy.lib.exceptions as module_0
import builtins as module_1

def test_case_0():
    s_a_m_l_assertion_not_found_error_0 = module_0.SAMLAssertionNotFoundError()
    assert f'{type(s_a_m_l_assertion_not_found_error_0).__module__}.{type(s_a_m_l_assertion_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionNotFoundError'
    assert s_a_m_l_assertion_not_found_error_0.message == ''
    int_0 = 527
    invalid_profile_error_0 = module_0.InvalidProfileError(int_0)
    assert f'{type(invalid_profile_error_0).__module__}.{type(invalid_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.InvalidProfileError'
    assert invalid_profile_error_0.profile_name == 527
    assert invalid_profile_error_0.message == ''
    s_a_m_l_role_not_found_error_0 = module_0.SAMLRoleNotFoundError(invalid_profile_error_0, invalid_profile_error_0)
    assert f'{type(s_a_m_l_role_not_found_error_0).__module__}.{type(s_a_m_l_role_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLRoleNotFoundError'
    assert f'{type(s_a_m_l_role_not_found_error_0.role_arn).__module__}.{type(s_a_m_l_role_not_found_error_0.role_arn).__qualname__}' == 'awsume.awsumepy.lib.exceptions.InvalidProfileError'
    assert f'{type(s_a_m_l_role_not_found_error_0.principal_arn).__module__}.{type(s_a_m_l_role_not_found_error_0.principal_arn).__qualname__}' == 'awsume.awsumepy.lib.exceptions.InvalidProfileError'
    assert s_a_m_l_role_not_found_error_0.message == ''
    list_0 = [invalid_profile_error_0, int_0, invalid_profile_error_0, int_0]
    base_exception_0 = module_1.BaseException(*list_0)
    validation_exception_0 = module_0.ValidationException(base_exception_0)
    assert f'{type(validation_exception_0).__module__}.{type(validation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ValidationException'
    assert f'{type(validation_exception_0.message).__module__}.{type(validation_exception_0.message).__qualname__}' == 'builtins.BaseException'
    config_operation_exception_0 = module_0.ConfigOperationException()
    assert f'{type(config_operation_exception_0).__module__}.{type(config_operation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigOperationException'
    assert config_operation_exception_0.message == 'no message'
    config_operation_exception_1 = module_0.ConfigOperationException()
    assert config_operation_exception_1.message == 'no message'
    var_0 = config_operation_exception_1.__str__()
    assert var_0 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    s_a_m_l_assertion_missing_role_error_0 = module_0.SAMLAssertionMissingRoleError()
    assert f'{type(s_a_m_l_assertion_missing_role_error_0).__module__}.{type(s_a_m_l_assertion_missing_role_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionMissingRoleError'
    assert s_a_m_l_assertion_missing_role_error_0.message == ''
    var_1 = var_0.__str__()
    assert var_1 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    user_authentication_error_0 = module_0.UserAuthenticationError()
    assert f'{type(user_authentication_error_0).__module__}.{type(user_authentication_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.UserAuthenticationError'
    assert user_authentication_error_0.message == ''
    s_a_m_l_role_not_found_error_1 = module_0.SAMLRoleNotFoundError(list_0, var_0)
    assert s_a_m_l_role_not_found_error_1.role_arn == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    assert f'{type(s_a_m_l_role_not_found_error_1.principal_arn).__module__}.{type(s_a_m_l_role_not_found_error_1.principal_arn).__qualname__}' == 'builtins.list'
    assert len(s_a_m_l_role_not_found_error_1.principal_arn) == 4
    assert s_a_m_l_role_not_found_error_1.message == ''
    early_exit_0 = module_0.EarlyExit()
    profile_not_found_error_0 = module_0.ProfileNotFoundError(s_a_m_l_assertion_missing_role_error_0, s_a_m_l_assertion_missing_role_error_0)
    assert f'{type(profile_not_found_error_0).__module__}.{type(profile_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ProfileNotFoundError'
    assert f'{type(profile_not_found_error_0.profile_name).__module__}.{type(profile_not_found_error_0.profile_name).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionMissingRoleError'
    assert f'{type(profile_not_found_error_0.message).__module__}.{type(profile_not_found_error_0.message).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionMissingRoleError'
    var_2 = config_operation_exception_1.__str__()
    assert var_2 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_3 = validation_exception_0.__str__()
    assert var_3 == 'Validation Exception - (InvalidProfileError(527), 527, InvalidProfileError(527), 527)'
    var_4 = profile_not_found_error_0.__str__()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionMissingRoleError'
    assert var_4.message == ''
    var_5 = profile_not_found_error_0.__str__()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionMissingRoleError'
    assert var_5.message == ''

def test_case_1():
    profile_not_found_error_0 = module_0.ProfileNotFoundError()
    assert f'{type(profile_not_found_error_0).__module__}.{type(profile_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ProfileNotFoundError'
    assert profile_not_found_error_0.profile_name == ''
    assert profile_not_found_error_0.message == ''
    var_0 = profile_not_found_error_0.__str__()
    assert var_0 == 'Profile  not found.'
    var_1 = var_0.__str__()
    assert var_1 == 'Profile  not found.'
    var_2 = profile_not_found_error_0.__str__()
    assert var_2 == 'Profile  not found.'

def test_case_2():
    str_0 = 'Listing profiles'
    s_a_m_l_assertion_parse_error_0 = module_0.SAMLAssertionParseError(str_0)
    assert f'{type(s_a_m_l_assertion_parse_error_0).__module__}.{type(s_a_m_l_assertion_parse_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionParseError'
    assert s_a_m_l_assertion_parse_error_0.message == 'Listing profiles'
    user_authentication_error_0 = module_0.UserAuthenticationError(str_0)
    assert f'{type(user_authentication_error_0).__module__}.{type(user_authentication_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.UserAuthenticationError'
    assert user_authentication_error_0.message == 'Listing profiles'
    var_0 = s_a_m_l_assertion_parse_error_0.__str__()
    assert var_0 == 'Listing profiles'
    var_1 = user_authentication_error_0.__str__()
    assert var_1 == 'Listing profiles'

def test_case_3():
    user_authentication_error_0 = module_0.UserAuthenticationError()
    assert f'{type(user_authentication_error_0).__module__}.{type(user_authentication_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.UserAuthenticationError'
    assert user_authentication_error_0.message == ''
    var_0 = user_authentication_error_0.__str__()
    assert var_0 == 'Unable to get session token'
    var_1 = var_0.__str__()
    assert var_1 == 'Unable to get session token'
    var_2 = var_1.__str__()
    assert var_2 == 'Unable to get session token'
    var_3 = var_2.__str__()
    assert var_3 == 'Unable to get session token'
    var_4 = var_3.__str__()
    assert var_4 == 'Unable to get session token'
    var_5 = var_4.__str__()
    assert var_5 == 'Unable to get session token'
    var_6 = var_5.__str__()
    assert var_6 == 'Unable to get session token'
    var_7 = var_6.__str__()
    assert var_7 == 'Unable to get session token'
    var_8 = var_7.__str__()
    assert var_8 == 'Unable to get session token'
    var_9 = var_8.__str__()
    assert var_9 == 'Unable to get session token'

def test_case_4():
    role_authentication_error_0 = module_0.RoleAuthenticationError()
    assert f'{type(role_authentication_error_0).__module__}.{type(role_authentication_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.RoleAuthenticationError'
    assert role_authentication_error_0.message == ''
    var_0 = role_authentication_error_0.__str__()
    assert var_0 == 'Unable to assume role'
    s_a_m_l_assertion_parse_error_0 = module_0.SAMLAssertionParseError(var_0)
    assert f'{type(s_a_m_l_assertion_parse_error_0).__module__}.{type(s_a_m_l_assertion_parse_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionParseError'
    assert s_a_m_l_assertion_parse_error_0.message == 'Unable to assume role'

def test_case_5():
    list_0 = []
    config_parse_exception_0 = module_0.ConfigParseException(list_0, list_0)
    assert f'{type(config_parse_exception_0).__module__}.{type(config_parse_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigParseException'
    assert config_parse_exception_0.file_name == []
    assert config_parse_exception_0.message == []
    assert config_parse_exception_0.error is None
    var_0 = config_parse_exception_0.__str__()
    assert var_0 == 'ConfigParseException - ([]) [] None'
    early_exit_0 = module_0.EarlyExit()
    s_a_m_l_assertion_parse_error_0 = module_0.SAMLAssertionParseError()
    assert f'{type(s_a_m_l_assertion_parse_error_0).__module__}.{type(s_a_m_l_assertion_parse_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionParseError'
    assert s_a_m_l_assertion_parse_error_0.message == ''
    invalid_profile_error_0 = module_0.InvalidProfileError(s_a_m_l_assertion_parse_error_0)
    assert f'{type(invalid_profile_error_0).__module__}.{type(invalid_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.InvalidProfileError'
    assert f'{type(invalid_profile_error_0.profile_name).__module__}.{type(invalid_profile_error_0.profile_name).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionParseError'
    assert invalid_profile_error_0.message == ''
    config_operation_exception_0 = module_0.ConfigOperationException()
    assert f'{type(config_operation_exception_0).__module__}.{type(config_operation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigOperationException'
    assert config_operation_exception_0.message == 'no message'
    s_a_m_l_assertion_not_found_error_0 = module_0.SAMLAssertionNotFoundError(config_operation_exception_0)
    assert f'{type(s_a_m_l_assertion_not_found_error_0).__module__}.{type(s_a_m_l_assertion_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionNotFoundError'
    assert f'{type(s_a_m_l_assertion_not_found_error_0.message).__module__}.{type(s_a_m_l_assertion_not_found_error_0.message).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigOperationException'
    var_1 = early_exit_0.__str__()
    assert var_1 == 'Early exit exception, nothing left to do'
    var_2 = invalid_profile_error_0.__str__()
    assert var_2 == 'Invalid profile [Cannot parse SAML assertion] '
    var_3 = invalid_profile_error_0.__str__()
    assert var_3 == 'Invalid profile [Cannot parse SAML assertion] '
    awsume_exception_0 = module_0.AwsumeException()
    var_4 = invalid_profile_error_0.__str__()
    assert var_4 == 'Invalid profile [Cannot parse SAML assertion] '
    s_a_m_l_assertion_parse_error_1 = module_0.SAMLAssertionParseError()
    assert s_a_m_l_assertion_parse_error_1.message == ''
    var_5 = var_4.__str__()
    assert var_5 == 'Invalid profile [Cannot parse SAML assertion] '
    role_authentication_error_0 = module_0.RoleAuthenticationError(var_4)
    assert f'{type(role_authentication_error_0).__module__}.{type(role_authentication_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.RoleAuthenticationError'
    assert role_authentication_error_0.message == 'Invalid profile [Cannot parse SAML assertion] '
    var_6 = var_4.__str__()
    assert var_6 == 'Invalid profile [Cannot parse SAML assertion] '
    var_7 = var_3.__str__()
    assert var_7 == 'Invalid profile [Cannot parse SAML assertion] '
    immutable_profile_error_0 = module_0.ImmutableProfileError(list_0, list_0)
    assert f'{type(immutable_profile_error_0).__module__}.{type(immutable_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ImmutableProfileError'
    assert immutable_profile_error_0.profile_name == []
    assert immutable_profile_error_0.message == []
    no_credentials_error_0 = module_0.NoCredentialsError()
    assert f'{type(no_credentials_error_0).__module__}.{type(no_credentials_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    assert no_credentials_error_0.message == ''
    var_8 = s_a_m_l_assertion_not_found_error_0.__str__()
    assert f'{type(var_8).__module__}.{type(var_8).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigOperationException'
    assert var_8.message == 'no message'
    var_9 = s_a_m_l_assertion_parse_error_0.__str__()
    assert var_9 == 'Cannot parse SAML assertion'
    var_10 = immutable_profile_error_0.__str__()
    assert var_10 == 'Immutable profile [[]] []'
    invalid_profile_error_1 = module_0.InvalidProfileError(list_0)
    assert invalid_profile_error_1.message == ''
    var_11 = var_1.__str__()
    assert var_11 == 'Early exit exception, nothing left to do'
    var_12 = var_10.__str__()
    assert var_12 == 'Immutable profile [[]] []'
    var_13 = var_12.__str__()
    assert var_13 == 'Immutable profile [[]] []'
    var_14 = immutable_profile_error_0.__str__()
    assert var_14 == 'Immutable profile [[]] []'

def test_case_6():
    early_exit_0 = module_0.EarlyExit()
    var_0 = early_exit_0.__str__()
    assert var_0 == 'Early exit exception, nothing left to do'
    var_1 = early_exit_0.__str__()
    assert var_1 == 'Early exit exception, nothing left to do'
    validation_exception_0 = module_0.ValidationException()
    assert f'{type(validation_exception_0).__module__}.{type(validation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ValidationException'
    assert validation_exception_0.message == 'no message'
    s_a_m_l_assertion_not_found_error_0 = module_0.SAMLAssertionNotFoundError()
    assert f'{type(s_a_m_l_assertion_not_found_error_0).__module__}.{type(s_a_m_l_assertion_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionNotFoundError'
    assert s_a_m_l_assertion_not_found_error_0.message == ''
    var_2 = s_a_m_l_assertion_not_found_error_0.__str__()
    assert var_2 == 'No SAML assertion'
    config_operation_exception_0 = module_0.ConfigOperationException(s_a_m_l_assertion_not_found_error_0)
    assert f'{type(config_operation_exception_0).__module__}.{type(config_operation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigOperationException'
    assert f'{type(config_operation_exception_0.message).__module__}.{type(config_operation_exception_0.message).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionNotFoundError'
    var_3 = var_2.__str__()
    assert var_3 == 'No SAML assertion'
    var_4 = var_3.__str__()
    assert var_4 == 'No SAML assertion'
    var_5 = var_4.__str__()
    assert var_5 == 'No SAML assertion'
    var_6 = var_5.__str__()
    assert var_6 == 'No SAML assertion'
    var_7 = var_1.__str__()
    assert var_7 == 'Early exit exception, nothing left to do'
    var_8 = var_6.__str__()
    assert var_8 == 'No SAML assertion'
    var_9 = var_6.__str__()
    assert var_9 == 'No SAML assertion'
    var_10 = var_8.__str__()
    assert var_10 == 'No SAML assertion'
    var_11 = var_10.__str__()
    assert var_11 == 'No SAML assertion'
    var_12 = var_10.__str__()
    assert var_12 == 'No SAML assertion'
    immutable_profile_error_0 = module_0.ImmutableProfileError(var_3)
    assert f'{type(immutable_profile_error_0).__module__}.{type(immutable_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ImmutableProfileError'
    assert immutable_profile_error_0.profile_name == 'No SAML assertion'
    assert immutable_profile_error_0.message == ''
    var_13 = var_4.__str__()
    assert var_13 == 'No SAML assertion'
    s_a_m_l_role_not_found_error_0 = module_0.SAMLRoleNotFoundError(var_5, var_3, var_2)
    assert f'{type(s_a_m_l_role_not_found_error_0).__module__}.{type(s_a_m_l_role_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLRoleNotFoundError'
    assert s_a_m_l_role_not_found_error_0.role_arn == 'No SAML assertion'
    assert s_a_m_l_role_not_found_error_0.principal_arn == 'No SAML assertion'
    assert s_a_m_l_role_not_found_error_0.message == 'No SAML assertion'
    var_14 = var_11.__str__()
    assert var_14 == 'No SAML assertion'

def test_case_7():
    float_0 = 1148.4
    s_a_m_l_assertion_missing_role_error_0 = module_0.SAMLAssertionMissingRoleError(float_0)
    assert f'{type(s_a_m_l_assertion_missing_role_error_0).__module__}.{type(s_a_m_l_assertion_missing_role_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionMissingRoleError'
    assert s_a_m_l_assertion_missing_role_error_0.message == pytest.approx(1148.4, abs=0.01, rel=0.01)
    var_0 = s_a_m_l_assertion_missing_role_error_0.__str__()
    assert var_0 == pytest.approx(1148.4, abs=0.01, rel=0.01)
    var_1 = s_a_m_l_assertion_missing_role_error_0.__str__()
    assert var_1 == pytest.approx(1148.4, abs=0.01, rel=0.01)
    var_2 = var_0.__str__()
    var_3 = var_2.__str__()
    var_4 = var_1.__str__()
    var_5 = var_0.__str__()
    var_6 = var_3.__str__()
    var_7 = var_5.__str__()
    var_8 = s_a_m_l_assertion_missing_role_error_0.__str__()
    assert var_8 == pytest.approx(1148.4, abs=0.01, rel=0.01)
    var_9 = var_7.__str__()
    var_10 = s_a_m_l_assertion_missing_role_error_0.__str__()
    assert var_10 == pytest.approx(1148.4, abs=0.01, rel=0.01)
    var_11 = var_9.__str__()
    var_12 = var_11.__str__()
    no_credentials_error_0 = module_0.NoCredentialsError(float_0)
    assert f'{type(no_credentials_error_0).__module__}.{type(no_credentials_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    assert no_credentials_error_0.message == pytest.approx(1148.4, abs=0.01, rel=0.01)
    var_13 = no_credentials_error_0.__str__()
    assert var_13 == pytest.approx(1148.4, abs=0.01, rel=0.01)
    profile_not_found_error_0 = module_0.ProfileNotFoundError()
    assert f'{type(profile_not_found_error_0).__module__}.{type(profile_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ProfileNotFoundError'
    assert profile_not_found_error_0.profile_name == ''
    assert profile_not_found_error_0.message == ''
    var_14 = var_13.__str__()
    var_15 = var_14.__str__()
    var_16 = var_15.__str__()
    var_17 = var_16.__str__()
    complex_0 = (1231.04797+542.5j)
    var_18 = var_9.__str__()
    none_type_0 = None
    immutable_profile_error_0 = module_0.ImmutableProfileError(none_type_0, var_16)
    assert f'{type(immutable_profile_error_0).__module__}.{type(immutable_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ImmutableProfileError'
    assert immutable_profile_error_0.profile_name is None
    assert immutable_profile_error_0.message == '1148.4'
    immutable_profile_error_1 = module_0.ImmutableProfileError(var_9, var_4)
    assert immutable_profile_error_1.profile_name == '1148.4'
    assert immutable_profile_error_1.message == '1148.4'
    var_19 = var_9.__str__()
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    var_20 = var_16.__str__()
    no_credentials_error_1 = module_0.NoCredentialsError()
    assert no_credentials_error_1.message == ''
    invalid_profile_error_0 = module_0.InvalidProfileError(set_0, complex_0)
    assert f'{type(invalid_profile_error_0).__module__}.{type(invalid_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.InvalidProfileError'
    assert invalid_profile_error_0.profile_name == {(1231.04797+542.5j)}
    assert invalid_profile_error_0.message == (1231.04797+542.5j)

def test_case_8():
    s_a_m_l_assertion_missing_role_error_0 = module_0.SAMLAssertionMissingRoleError()
    assert f'{type(s_a_m_l_assertion_missing_role_error_0).__module__}.{type(s_a_m_l_assertion_missing_role_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionMissingRoleError'
    assert s_a_m_l_assertion_missing_role_error_0.message == ''
    var_0 = s_a_m_l_assertion_missing_role_error_0.__str__()
    assert var_0 == 'No role in the SAML assertion'
    no_credentials_error_0 = module_0.NoCredentialsError()
    assert f'{type(no_credentials_error_0).__module__}.{type(no_credentials_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    assert no_credentials_error_0.message == ''
    validation_exception_0 = module_0.ValidationException()
    assert f'{type(validation_exception_0).__module__}.{type(validation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ValidationException'
    assert validation_exception_0.message == 'no message'

def test_case_9():
    bool_0 = True
    profile_not_found_error_0 = module_0.ProfileNotFoundError()
    assert f'{type(profile_not_found_error_0).__module__}.{type(profile_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ProfileNotFoundError'
    assert profile_not_found_error_0.profile_name == ''
    assert profile_not_found_error_0.message == ''
    s_a_m_l_role_not_found_error_0 = module_0.SAMLRoleNotFoundError(bool_0, bool_0, bool_0)
    assert f'{type(s_a_m_l_role_not_found_error_0).__module__}.{type(s_a_m_l_role_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLRoleNotFoundError'
    assert s_a_m_l_role_not_found_error_0.role_arn is True
    assert s_a_m_l_role_not_found_error_0.principal_arn is True
    assert s_a_m_l_role_not_found_error_0.message is True
    var_0 = s_a_m_l_role_not_found_error_0.__str__()
    assert var_0 is True
    var_1 = var_0.__str__()
    assert var_1 == 'True'
    var_2 = var_0.__str__()
    assert var_2 == 'True'
    var_3 = var_2.__str__()
    assert var_3 == 'True'
    var_4 = var_2.__str__()
    assert var_4 == 'True'
    var_5 = var_4.__str__()
    assert var_5 == 'True'
    profile_not_found_error_1 = module_0.ProfileNotFoundError()
    assert profile_not_found_error_1.profile_name == ''
    assert profile_not_found_error_1.message == ''
    no_credentials_error_0 = module_0.NoCredentialsError(var_5)
    assert f'{type(no_credentials_error_0).__module__}.{type(no_credentials_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    assert no_credentials_error_0.message == 'True'

def test_case_10():
    s_a_m_l_assertion_parse_error_0 = module_0.SAMLAssertionParseError()
    assert f'{type(s_a_m_l_assertion_parse_error_0).__module__}.{type(s_a_m_l_assertion_parse_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionParseError'
    assert s_a_m_l_assertion_parse_error_0.message == ''
    var_0 = s_a_m_l_assertion_parse_error_0.__str__()
    assert var_0 == 'Cannot parse SAML assertion'
    var_1 = var_0.__str__()
    assert var_1 == 'Cannot parse SAML assertion'
    var_2 = var_1.__str__()
    assert var_2 == 'Cannot parse SAML assertion'
    var_3 = var_0.__str__()
    assert var_3 == 'Cannot parse SAML assertion'

def test_case_11():
    profile_not_found_error_0 = module_0.ProfileNotFoundError()
    assert f'{type(profile_not_found_error_0).__module__}.{type(profile_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ProfileNotFoundError'
    assert profile_not_found_error_0.profile_name == ''
    assert profile_not_found_error_0.message == ''
    no_credentials_error_0 = module_0.NoCredentialsError()
    assert f'{type(no_credentials_error_0).__module__}.{type(no_credentials_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    assert no_credentials_error_0.message == ''
    var_0 = no_credentials_error_0.__str__()
    assert var_0 == 'No credentials'
    no_credentials_error_1 = module_0.NoCredentialsError()
    assert no_credentials_error_1.message == ''
    var_1 = no_credentials_error_1.__str__()
    assert var_1 == 'No credentials'
    var_2 = var_1.__str__()
    assert var_2 == 'No credentials'
    var_3 = var_1.__str__()
    assert var_3 == 'No credentials'
    var_4 = var_3.__str__()
    assert var_4 == 'No credentials'
    var_5 = var_3.__str__()
    assert var_5 == 'No credentials'
    var_6 = var_5.__str__()
    assert var_6 == 'No credentials'
    invalid_profile_error_0 = module_0.InvalidProfileError(var_1)
    assert f'{type(invalid_profile_error_0).__module__}.{type(invalid_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.InvalidProfileError'
    assert invalid_profile_error_0.profile_name == 'No credentials'
    assert invalid_profile_error_0.message == ''
    dict_0 = {var_6: var_3, var_6: var_5}
    s_a_m_l_assertion_missing_role_error_0 = module_0.SAMLAssertionMissingRoleError(dict_0)
    assert f'{type(s_a_m_l_assertion_missing_role_error_0).__module__}.{type(s_a_m_l_assertion_missing_role_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionMissingRoleError'
    assert s_a_m_l_assertion_missing_role_error_0.message == {'No credentials': 'No credentials'}

def test_case_12():
    no_credentials_error_0 = module_0.NoCredentialsError()
    assert f'{type(no_credentials_error_0).__module__}.{type(no_credentials_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    assert no_credentials_error_0.message == ''
    var_0 = no_credentials_error_0.__str__()
    assert var_0 == 'No credentials'
    immutable_profile_error_0 = module_0.ImmutableProfileError(no_credentials_error_0, no_credentials_error_0)
    assert f'{type(immutable_profile_error_0).__module__}.{type(immutable_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ImmutableProfileError'
    assert f'{type(immutable_profile_error_0.profile_name).__module__}.{type(immutable_profile_error_0.profile_name).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    assert f'{type(immutable_profile_error_0.message).__module__}.{type(immutable_profile_error_0.message).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    awsume_exception_0 = module_0.AwsumeException()
    var_1 = immutable_profile_error_0.__str__()
    assert var_1 == 'Immutable profile [No credentials] No credentials'
    var_2 = no_credentials_error_0.__str__()
    assert var_2 == 'No credentials'
    var_3 = no_credentials_error_0.__str__()
    assert var_3 == 'No credentials'
    config_parse_exception_0 = module_0.ConfigParseException(var_3, error=no_credentials_error_0)
    assert f'{type(config_parse_exception_0).__module__}.{type(config_parse_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigParseException'
    assert config_parse_exception_0.file_name == 'No credentials'
    assert config_parse_exception_0.message == 'no message'
    assert f'{type(config_parse_exception_0.error).__module__}.{type(config_parse_exception_0.error).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    var_4 = config_parse_exception_0.__str__()
    assert var_4 == 'ConfigParseException - (No credentials) no message No credentials'
    var_5 = no_credentials_error_0.__str__()
    assert var_5 == 'No credentials'
    profile_not_found_error_0 = module_0.ProfileNotFoundError(message=var_4)
    assert f'{type(profile_not_found_error_0).__module__}.{type(profile_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ProfileNotFoundError'
    assert profile_not_found_error_0.profile_name == ''
    assert profile_not_found_error_0.message == 'ConfigParseException - (No credentials) no message No credentials'
    var_6 = no_credentials_error_0.__str__()
    assert var_6 == 'No credentials'
    var_7 = var_3.__str__()
    assert var_7 == 'No credentials'

def test_case_13():
    int_0 = -2642
    user_authentication_error_0 = module_0.UserAuthenticationError(int_0)
    assert f'{type(user_authentication_error_0).__module__}.{type(user_authentication_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.UserAuthenticationError'
    assert user_authentication_error_0.message == -2642
    immutable_profile_error_0 = module_0.ImmutableProfileError(int_0)
    assert f'{type(immutable_profile_error_0).__module__}.{type(immutable_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ImmutableProfileError'
    assert immutable_profile_error_0.profile_name == -2642
    assert immutable_profile_error_0.message == ''
    var_0 = immutable_profile_error_0.__str__()
    assert var_0 == 'Immutable profile [-2642] '
    var_1 = var_0.__str__()
    assert var_1 == 'Immutable profile [-2642] '
    var_2 = var_1.__str__()
    assert var_2 == 'Immutable profile [-2642] '
    invalid_profile_error_0 = module_0.InvalidProfileError(user_authentication_error_0)
    assert f'{type(invalid_profile_error_0).__module__}.{type(invalid_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.InvalidProfileError'
    assert f'{type(invalid_profile_error_0.profile_name).__module__}.{type(invalid_profile_error_0.profile_name).__qualname__}' == 'awsume.awsumepy.lib.exceptions.UserAuthenticationError'
    assert invalid_profile_error_0.message == ''

def test_case_14():
    bool_0 = True
    invalid_profile_error_0 = module_0.InvalidProfileError(bool_0)
    assert f'{type(invalid_profile_error_0).__module__}.{type(invalid_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.InvalidProfileError'
    assert invalid_profile_error_0.profile_name is True
    assert invalid_profile_error_0.message == ''
    var_0 = invalid_profile_error_0.__str__()
    assert var_0 == 'Invalid profile [True] '
    var_1 = var_0.__str__()
    assert var_1 == 'Invalid profile [True] '
    config_operation_exception_0 = module_0.ConfigOperationException(var_1)
    assert f'{type(config_operation_exception_0).__module__}.{type(config_operation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigOperationException'
    assert config_operation_exception_0.message == 'Invalid profile [True] '
    none_type_0 = None
    config_operation_exception_1 = module_0.ConfigOperationException(none_type_0)
    assert config_operation_exception_1.message is None
    var_2 = config_operation_exception_1.__str__()
    assert var_2 == 'None\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_3 = var_2.__str__()
    assert var_3 == 'None\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_4 = config_operation_exception_1.__str__()
    assert var_4 == 'None\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_5 = var_3.__str__()
    assert var_5 == 'None\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_6 = var_5.__str__()
    assert var_6 == 'None\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'

def test_case_15():
    role_authentication_error_0 = module_0.RoleAuthenticationError()
    assert f'{type(role_authentication_error_0).__module__}.{type(role_authentication_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.RoleAuthenticationError'
    assert role_authentication_error_0.message == ''
    bool_0 = False
    var_0 = role_authentication_error_0.__str__()
    assert var_0 == 'Unable to assume role'
    immutable_profile_error_0 = module_0.ImmutableProfileError(bool_0)
    assert f'{type(immutable_profile_error_0).__module__}.{type(immutable_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ImmutableProfileError'
    assert immutable_profile_error_0.profile_name is False
    assert immutable_profile_error_0.message == ''
    var_1 = var_0.__str__()
    assert var_1 == 'Unable to assume role'

def test_case_16():
    no_credentials_error_0 = module_0.NoCredentialsError()
    assert f'{type(no_credentials_error_0).__module__}.{type(no_credentials_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    assert no_credentials_error_0.message == ''
    early_exit_0 = module_0.EarlyExit()
    config_operation_exception_0 = module_0.ConfigOperationException(early_exit_0)
    assert f'{type(config_operation_exception_0).__module__}.{type(config_operation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigOperationException'
    assert f'{type(config_operation_exception_0.message).__module__}.{type(config_operation_exception_0.message).__qualname__}' == 'awsume.awsumepy.lib.exceptions.EarlyExit'

def test_case_17():
    profile_not_found_error_0 = module_0.ProfileNotFoundError()
    assert f'{type(profile_not_found_error_0).__module__}.{type(profile_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ProfileNotFoundError'
    assert profile_not_found_error_0.profile_name == ''
    assert profile_not_found_error_0.message == ''
    config_operation_exception_0 = module_0.ConfigOperationException()
    assert f'{type(config_operation_exception_0).__module__}.{type(config_operation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigOperationException'
    assert config_operation_exception_0.message == 'no message'
    var_0 = config_operation_exception_0.__str__()
    assert var_0 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_1 = var_0.__str__()
    assert var_1 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_2 = var_1.__str__()
    assert var_2 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_3 = var_2.__str__()
    assert var_3 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_4 = var_3.__str__()
    assert var_4 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_5 = var_4.__str__()
    assert var_5 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_6 = var_5.__str__()
    assert var_6 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_7 = var_6.__str__()
    assert var_7 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_8 = var_7.__str__()
    assert var_8 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'
    var_9 = var_8.__str__()
    assert var_9 == 'no message\n\nusage: --config operation [operands]\noperations:\n  - help\n  - list\n  - get [config_key]\n  - set [config_key] [config_value]\n'

def test_case_18():
    role_authentication_error_0 = module_0.RoleAuthenticationError()
    assert f'{type(role_authentication_error_0).__module__}.{type(role_authentication_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.RoleAuthenticationError'
    assert role_authentication_error_0.message == ''
    var_0 = role_authentication_error_0.__str__()
    assert var_0 == 'Unable to assume role'
    var_1 = role_authentication_error_0.__str__()
    assert var_1 == 'Unable to assume role'
    var_2 = var_1.__str__()
    assert var_2 == 'Unable to assume role'
    var_3 = var_0.__str__()
    assert var_3 == 'Unable to assume role'
    var_4 = var_2.__str__()
    assert var_4 == 'Unable to assume role'
    early_exit_0 = module_0.EarlyExit()
    var_5 = var_4.__str__()
    assert var_5 == 'Unable to assume role'
    profile_not_found_error_0 = module_0.ProfileNotFoundError()
    assert f'{type(profile_not_found_error_0).__module__}.{type(profile_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ProfileNotFoundError'
    assert profile_not_found_error_0.profile_name == ''
    assert profile_not_found_error_0.message == ''
    var_6 = early_exit_0.__str__()
    assert var_6 == 'Early exit exception, nothing left to do'
    var_7 = var_5.__str__()
    assert var_7 == 'Unable to assume role'
    var_8 = var_4.__str__()
    assert var_8 == 'Unable to assume role'
    var_9 = var_5.__str__()
    assert var_9 == 'Unable to assume role'
    var_10 = var_9.__str__()
    assert var_10 == 'Unable to assume role'
    list_0 = [var_10]
    invalid_profile_error_0 = module_0.InvalidProfileError(list_0)
    assert f'{type(invalid_profile_error_0).__module__}.{type(invalid_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.InvalidProfileError'
    assert invalid_profile_error_0.profile_name == ['Unable to assume role']
    assert invalid_profile_error_0.message == ''

def test_case_19():
    int_0 = 426
    config_parse_exception_0 = module_0.ConfigParseException(int_0)
    assert f'{type(config_parse_exception_0).__module__}.{type(config_parse_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigParseException'
    assert config_parse_exception_0.file_name == 426
    assert config_parse_exception_0.message == 'no message'
    assert config_parse_exception_0.error is None
    float_0 = -1880.0
    validation_exception_0 = module_0.ValidationException()
    assert f'{type(validation_exception_0).__module__}.{type(validation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ValidationException'
    assert validation_exception_0.message == 'no message'
    var_0 = validation_exception_0.__str__()
    assert var_0 == 'Validation Exception - no message'
    var_1 = var_0.__str__()
    assert var_1 == 'Validation Exception - no message'
    var_2 = var_1.__str__()
    assert var_2 == 'Validation Exception - no message'
    s_a_m_l_assertion_missing_role_error_0 = module_0.SAMLAssertionMissingRoleError()
    assert f'{type(s_a_m_l_assertion_missing_role_error_0).__module__}.{type(s_a_m_l_assertion_missing_role_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionMissingRoleError'
    assert s_a_m_l_assertion_missing_role_error_0.message == ''
    config_operation_exception_0 = module_0.ConfigOperationException()
    assert f'{type(config_operation_exception_0).__module__}.{type(config_operation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigOperationException'
    assert config_operation_exception_0.message == 'no message'
    none_type_0 = None
    var_3 = validation_exception_0.__str__()
    assert var_3 == 'Validation Exception - no message'
    role_authentication_error_0 = module_0.RoleAuthenticationError()
    assert f'{type(role_authentication_error_0).__module__}.{type(role_authentication_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.RoleAuthenticationError'
    assert role_authentication_error_0.message == ''
    var_4 = var_2.__str__()
    assert var_4 == 'Validation Exception - no message'
    no_credentials_error_0 = module_0.NoCredentialsError(var_1)
    assert f'{type(no_credentials_error_0).__module__}.{type(no_credentials_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    assert no_credentials_error_0.message == 'Validation Exception - no message'
    var_5 = role_authentication_error_0.__str__()
    assert var_5 == 'Unable to assume role'
    var_6 = var_5.__str__()
    assert var_6 == 'Unable to assume role'
    var_7 = var_6.__str__()
    assert var_7 == 'Unable to assume role'
    profile_not_found_error_0 = module_0.ProfileNotFoundError(var_6, var_6)
    assert f'{type(profile_not_found_error_0).__module__}.{type(profile_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ProfileNotFoundError'
    assert profile_not_found_error_0.profile_name == 'Unable to assume role'
    assert profile_not_found_error_0.message == 'Unable to assume role'
    var_8 = var_7.__str__()
    assert var_8 == 'Unable to assume role'
    var_9 = var_8.__str__()
    assert var_9 == 'Unable to assume role'
    awsume_exception_0 = module_0.AwsumeException(*var_7)
    var_10 = var_8.__str__()
    assert var_10 == 'Unable to assume role'
    var_11 = var_10.__str__()
    assert var_11 == 'Unable to assume role'
    s_a_m_l_role_not_found_error_0 = module_0.SAMLRoleNotFoundError(float_0, none_type_0)
    assert f'{type(s_a_m_l_role_not_found_error_0).__module__}.{type(s_a_m_l_role_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLRoleNotFoundError'
    assert s_a_m_l_role_not_found_error_0.role_arn is None
    assert s_a_m_l_role_not_found_error_0.principal_arn == pytest.approx(-1880.0, abs=0.01, rel=0.01)
    assert s_a_m_l_role_not_found_error_0.message == ''
    var_12 = s_a_m_l_role_not_found_error_0.__str__()
    assert var_12 == 'No match for SAML principal and role: -1880.0,None'
    config_parse_exception_1 = module_0.ConfigParseException(float_0, error=float_0)
    assert f'{type(config_parse_exception_1).__module__}.{type(config_parse_exception_1).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigParseException'
    assert config_parse_exception_1.file_name == pytest.approx(-1880.0, abs=0.01, rel=0.01)
    assert config_parse_exception_1.message == 'no message'
    assert config_parse_exception_1.error == pytest.approx(-1880.0, abs=0.01, rel=0.01)
    var_13 = var_6.__str__()
    assert var_13 == 'Unable to assume role'
    var_14 = s_a_m_l_role_not_found_error_0.__str__()
    assert var_14 == 'No match for SAML principal and role: -1880.0,None'
    var_15 = var_6.__str__()
    assert var_15 == 'Unable to assume role'

def test_case_20():
    list_0 = []
    config_parse_exception_0 = module_0.ConfigParseException(list_0, list_0)
    assert f'{type(config_parse_exception_0).__module__}.{type(config_parse_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigParseException'
    assert config_parse_exception_0.file_name == []
    assert config_parse_exception_0.message == []
    assert config_parse_exception_0.error is None
    var_0 = config_parse_exception_0.__str__()
    assert var_0 == 'ConfigParseException - ([]) [] None'
    early_exit_0 = module_0.EarlyExit()
    s_a_m_l_assertion_parse_error_0 = module_0.SAMLAssertionParseError()
    assert f'{type(s_a_m_l_assertion_parse_error_0).__module__}.{type(s_a_m_l_assertion_parse_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionParseError'
    assert s_a_m_l_assertion_parse_error_0.message == ''
    invalid_profile_error_0 = module_0.InvalidProfileError(s_a_m_l_assertion_parse_error_0)
    assert f'{type(invalid_profile_error_0).__module__}.{type(invalid_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.InvalidProfileError'
    assert f'{type(invalid_profile_error_0.profile_name).__module__}.{type(invalid_profile_error_0.profile_name).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionParseError'
    assert invalid_profile_error_0.message == ''
    config_operation_exception_0 = module_0.ConfigOperationException(list_0)
    assert f'{type(config_operation_exception_0).__module__}.{type(config_operation_exception_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ConfigOperationException'
    assert config_operation_exception_0.message == []
    s_a_m_l_assertion_not_found_error_0 = module_0.SAMLAssertionNotFoundError()
    assert f'{type(s_a_m_l_assertion_not_found_error_0).__module__}.{type(s_a_m_l_assertion_not_found_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionNotFoundError'
    assert s_a_m_l_assertion_not_found_error_0.message == ''
    var_1 = var_0.__str__()
    assert var_1 == 'ConfigParseException - ([]) [] None'
    var_2 = var_0.__str__()
    assert var_2 == 'ConfigParseException - ([]) [] None'
    var_3 = var_2.__str__()
    assert var_3 == 'ConfigParseException - ([]) [] None'
    var_4 = var_2.__str__()
    assert var_4 == 'ConfigParseException - ([]) [] None'
    var_5 = var_3.__str__()
    assert var_5 == 'ConfigParseException - ([]) [] None'
    awsume_exception_0 = module_0.AwsumeException()
    var_6 = var_5.__str__()
    assert var_6 == 'ConfigParseException - ([]) [] None'
    s_a_m_l_assertion_parse_error_1 = module_0.SAMLAssertionParseError()
    assert s_a_m_l_assertion_parse_error_1.message == ''
    var_7 = var_5.__str__()
    assert var_7 == 'ConfigParseException - ([]) [] None'
    role_authentication_error_0 = module_0.RoleAuthenticationError()
    assert f'{type(role_authentication_error_0).__module__}.{type(role_authentication_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.RoleAuthenticationError'
    assert role_authentication_error_0.message == ''
    var_8 = var_7.__str__()
    assert var_8 == 'ConfigParseException - ([]) [] None'
    var_9 = var_8.__str__()
    assert var_9 == 'ConfigParseException - ([]) [] None'
    var_10 = var_9.__str__()
    assert var_10 == 'ConfigParseException - ([]) [] None'
    immutable_profile_error_0 = module_0.ImmutableProfileError(s_a_m_l_assertion_not_found_error_0)
    assert f'{type(immutable_profile_error_0).__module__}.{type(immutable_profile_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.ImmutableProfileError'
    assert f'{type(immutable_profile_error_0.profile_name).__module__}.{type(immutable_profile_error_0.profile_name).__qualname__}' == 'awsume.awsumepy.lib.exceptions.SAMLAssertionNotFoundError'
    assert immutable_profile_error_0.message == ''
    no_credentials_error_0 = module_0.NoCredentialsError()
    assert f'{type(no_credentials_error_0).__module__}.{type(no_credentials_error_0).__qualname__}' == 'awsume.awsumepy.lib.exceptions.NoCredentialsError'
    assert no_credentials_error_0.message == ''
    var_11 = var_7.__str__()
    assert var_11 == 'ConfigParseException - ([]) [] None'
    var_12 = var_11.__str__()
    assert var_12 == 'ConfigParseException - ([]) [] None'
    var_13 = var_0.__str__()
    assert var_13 == 'ConfigParseException - ([]) [] None'
    var_14 = var_0.__str__()
    assert var_14 == 'ConfigParseException - ([]) [] None'
    var_15 = var_6.__str__()
    assert var_15 == 'ConfigParseException - ([]) [] None'
    invalid_profile_error_1 = module_0.InvalidProfileError(var_15)
    assert invalid_profile_error_1.profile_name == 'ConfigParseException - ([]) [] None'
    assert invalid_profile_error_1.message == ''
    var_16 = var_11.__str__()
    assert var_16 == 'ConfigParseException - ([]) [] None'
    role_authentication_error_1 = module_0.RoleAuthenticationError(var_6)
    assert role_authentication_error_1.message == 'ConfigParseException - ([]) [] None'
    var_17 = role_authentication_error_1.__str__()
    assert var_17 == 'ConfigParseException - ([]) [] None'
    var_18 = var_11.__str__()
    assert var_18 == 'ConfigParseException - ([]) [] None'
    var_19 = immutable_profile_error_0.__str__()
    assert var_19 == 'Immutable profile [No SAML assertion] '