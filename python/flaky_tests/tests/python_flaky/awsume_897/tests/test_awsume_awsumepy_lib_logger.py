# Automatically generated by Pynguin.
import pytest
import awsume.awsumepy.lib.logger as module_0

def test_case_0():
    log_formatter_0 = module_0.LogFormatter()
    assert f'{type(module_0.logger).__module__}.{type(module_0.logger).__qualname__}' == 'logging.Logger'
    assert module_0.logger.name == 'awsume'
    assert module_0.logger.level == 0
    assert f'{type(module_0.logger.parent).__module__}.{type(module_0.logger.parent).__qualname__}' == 'logging.RootLogger'
    assert len(module_0.logger.handlers) == 13

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'\xbf'
    none_type_0 = None
    log_formatter_0 = module_0.LogFormatter(validate=none_type_0)
    assert f'{type(module_0.logger).__module__}.{type(module_0.logger).__qualname__}' == 'logging.Logger'
    assert module_0.logger.name == 'awsume'
    assert module_0.logger.level == 0
    assert f'{type(module_0.logger.parent).__module__}.{type(module_0.logger.parent).__qualname__}' == 'logging.RootLogger'
    assert len(module_0.logger.handlers) == 13
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0, bytes_0: bytes_0}
    none_type_1 = None
    log_formatter_1 = module_0.LogFormatter(datefmt=dict_0, defaults=none_type_1)
    log_formatter_1.format(bytes_0)