# Automatically generated by Pynguin.
import pytest
import posixpath as module_0
import awsume.awsumepy.hookspec as module_1
import textwrap as module_2
import inspect as module_3
import email.base64mime as module_4
import base64 as module_5
import urllib.parse as module_6
import email._header_value_parser as module_7
import urllib.request as module_8

@pytest.mark.xfail(strict=True)
def test_case_0():
    dict_0 = {}
    module_0.isabs(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    var_0 = module_1.pre_add_arguments(dict_0)
    module_2.wrap(var_0, **var_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    dict_0 = {}
    var_0 = module_3.unwrap(dict_0)
    var_1 = module_1.add_arguments(dict_0, var_0)
    var_0.add_related()

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    var_0 = module_1.add_arguments(dict_0, none_type_0)
    dict_1 = {none_type_0: none_type_0, none_type_0: none_type_0, none_type_0: none_type_0, none_type_0: none_type_0}
    var_1 = module_1.post_add_arguments(var_0, var_0, var_0)
    module_4.decode(dict_1)

def test_case_4():
    dict_0 = {}
    var_0 = module_3.currentframe()
    var_1 = module_1.get_credentials(dict_0, var_0, dict_0)
    var_2 = module_1.post_collect_aws_profiles(dict_0, dict_0, dict_0)
    str_0 = 'Wrote alias to '
    var_3 = module_1.collect_aws_profiles(dict_0, dict_0, dict_0, str_0)
    var_4 = module_1.post_get_credentials(dict_0, dict_0, dict_0, dict_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    var_0 = module_1.pre_get_credentials(none_type_0, none_type_0, none_type_0)
    var_1 = module_1.pre_add_arguments(none_type_0)
    module_5.b16encode(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    dict_0 = {}
    none_type_0 = None
    var_0 = module_1.get_credentials_with_saml(dict_0, none_type_0)
    none_type_1 = None
    module_6.splitpasswd(none_type_1)

@pytest.mark.xfail(strict=True)
def test_case_7():
    dict_0 = {}
    var_0 = module_6.clear_cache()
    dict_1 = {var_0: var_0}
    var_1 = module_1.get_credentials_with_web_identity(dict_1, var_0)
    var_2 = module_1.post_get_credentials(dict_0, var_0, dict_1, dict_0)
    module_2.fill(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    var_0 = module_7.quote_string(none_type_0)
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0, none_type_0: var_0}
    var_1 = module_1.catch_role_authentication_error(none_type_0, none_type_0, dict_0, dict_0)
    var_0.zfill(var_0)

def test_case_9():
    var_0 = module_8.build_opener()
    dict_0 = {var_0: var_0}
    var_1 = module_1.catch_profile_not_found_exception(dict_0, var_0, dict_0, var_0)

def test_case_10():
    dict_0 = {}
    str_0 = 'rMR"?\n1^:^Gv[H6;\r'
    var_0 = module_1.pre_collect_aws_profiles(dict_0, dict_0, dict_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    dict_0 = {}
    none_type_0 = None
    var_0 = module_1.get_credentials(dict_0, none_type_0, dict_0)
    var_1 = module_1.pre_add_arguments(dict_0)
    str_0 = '--region'
    var_2 = module_1.collect_aws_profiles(var_0, var_0, dict_0, str_0)
    var_3 = module_1.pre_add_arguments(dict_0)
    var_4 = module_1.get_profile_names(var_1, var_0)
    var_5 = module_1.catch_user_authentication_error(none_type_0, var_1, dict_0, var_3)
    none_type_0.setdefault(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    var_0 = module_1.add_arguments(dict_0, none_type_0)
    dict_1 = {none_type_0: none_type_0, none_type_0: none_type_0, none_type_0: none_type_0, none_type_0: none_type_0}
    var_1 = module_1.catch_invalid_profile_exception(var_0, var_0, var_0, var_0)
    var_2 = module_1.post_add_arguments(var_0, var_0, var_0)
    module_4.decode(dict_1)