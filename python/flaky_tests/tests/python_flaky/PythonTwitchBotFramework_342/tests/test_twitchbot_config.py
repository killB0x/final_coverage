# Automatically generated by Pynguin.
import pytest
import twitchbot.config as module_0
import re as module_1
import codecs as module_2

def test_case_0():
    str_0 = module_0.get_oauth()
    assert str_0 == 'oauth:'
    assert module_0.DEFAULT_OAUTH == 'oauth:'
    assert module_0.DEFAULT_NICK == 'nick'
    assert module_0.DEFAULT_CLIENT_ID == 'CLIENT_ID'
    assert module_0.cfg.defaults == {'nick': 'nick', 'oauth': 'oauth:', 'client_id': 'CLIENT_ID', 'prefix': '!', 'default_balance': 200, 'loyalty_interval': 60, 'loyalty_amount': 2, 'owner': 'BOT_OWNER_NAME', 'channels': ['channel'], 'mods_folder': 'mods', 'commands_folder': 'commands', 'command_server_enabled': True, 'command_server_port': 1337, 'command_server_host': 'localhost', 'disable_whispers': False, 'use_command_whitelist': False, 'send_message_on_command_whitelist_deny': True, 'command_whitelist': ['help', 'commands', 'reloadcmdwhitelist', 'reloadmod', 'reloadperms', 'disablemod', 'enablemod', 'disablecmdglobal', 'disablecmd', 'enablecmdglobal', 'enablecmd', 'addcmd', 'delcmd', 'updatecmd', 'cmd']}
    assert module_0.mysql_cfg.data == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    assert module_0.mysql_cfg.defaults == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}

@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.generate_config()

def test_case_2():
    str_0 = module_0.get_client_id()
    assert str_0 == 'CLIENT_ID'
    assert module_0.DEFAULT_OAUTH == 'oauth:'
    assert module_0.DEFAULT_NICK == 'nick'
    assert module_0.DEFAULT_CLIENT_ID == 'CLIENT_ID'
    assert module_0.cfg.defaults == {'nick': 'nick', 'oauth': 'oauth:', 'client_id': 'CLIENT_ID', 'prefix': '!', 'default_balance': 200, 'loyalty_interval': 60, 'loyalty_amount': 2, 'owner': 'BOT_OWNER_NAME', 'channels': ['channel'], 'mods_folder': 'mods', 'commands_folder': 'commands', 'command_server_enabled': True, 'command_server_port': 1337, 'command_server_host': 'localhost', 'disable_whispers': False, 'use_command_whitelist': False, 'send_message_on_command_whitelist_deny': True, 'command_whitelist': ['help', 'commands', 'reloadcmdwhitelist', 'reloadmod', 'reloadperms', 'disablemod', 'enablemod', 'disablecmdglobal', 'disablecmd', 'enablecmdglobal', 'enablecmd', 'addcmd', 'delcmd', 'updatecmd', 'cmd']}
    assert module_0.mysql_cfg.data == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    assert module_0.mysql_cfg.defaults == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}

def test_case_3():
    str_0 = module_0.get_command_prefix()
    assert str_0 == '!'
    assert module_0.DEFAULT_OAUTH == 'oauth:'
    assert module_0.DEFAULT_NICK == 'nick'
    assert module_0.DEFAULT_CLIENT_ID == 'CLIENT_ID'
    assert module_0.cfg.defaults == {'nick': 'nick', 'oauth': 'oauth:', 'client_id': 'CLIENT_ID', 'prefix': '!', 'default_balance': 200, 'loyalty_interval': 60, 'loyalty_amount': 2, 'owner': 'BOT_OWNER_NAME', 'channels': ['channel'], 'mods_folder': 'mods', 'commands_folder': 'commands', 'command_server_enabled': True, 'command_server_port': 1337, 'command_server_host': 'localhost', 'disable_whispers': False, 'use_command_whitelist': False, 'send_message_on_command_whitelist_deny': True, 'command_whitelist': ['help', 'commands', 'reloadcmdwhitelist', 'reloadmod', 'reloadperms', 'disablemod', 'enablemod', 'disablecmdglobal', 'disablecmd', 'enablecmdglobal', 'enablecmd', 'addcmd', 'delcmd', 'updatecmd', 'cmd']}
    assert module_0.mysql_cfg.data == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    assert module_0.mysql_cfg.defaults == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}

@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'\xeb\xcatwrO\\\xa8\x82\x8e\x96'
    module_0.Config(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = module_0.get_client_id()
    assert str_0 == 'CLIENT_ID'
    assert module_0.DEFAULT_OAUTH == 'oauth:'
    assert module_0.DEFAULT_NICK == 'nick'
    assert module_0.DEFAULT_CLIENT_ID == 'CLIENT_ID'
    assert module_0.cfg.defaults == {'nick': 'nick', 'oauth': 'oauth:', 'client_id': 'CLIENT_ID', 'prefix': '!', 'default_balance': 200, 'loyalty_interval': 60, 'loyalty_amount': 2, 'owner': 'BOT_OWNER_NAME', 'channels': ['channel'], 'mods_folder': 'mods', 'commands_folder': 'commands', 'command_server_enabled': True, 'command_server_port': 1337, 'command_server_host': 'localhost', 'disable_whispers': False, 'use_command_whitelist': False, 'send_message_on_command_whitelist_deny': True, 'command_whitelist': ['help', 'commands', 'reloadcmdwhitelist', 'reloadmod', 'reloadperms', 'disablemod', 'enablemod', 'disablecmdglobal', 'disablecmd', 'enablecmdglobal', 'enablecmd', 'addcmd', 'delcmd', 'updatecmd', 'cmd']}
    assert module_0.mysql_cfg.data == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    assert module_0.mysql_cfg.defaults == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    str_1 = module_0.get_oauth(str_0)
    assert str_1 == ''
    module_0.generate_config()

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = module_0.get_client_id()
    assert str_0 == 'CLIENT_ID'
    assert module_0.DEFAULT_OAUTH == 'oauth:'
    assert module_0.DEFAULT_NICK == 'nick'
    assert module_0.DEFAULT_CLIENT_ID == 'CLIENT_ID'
    assert module_0.cfg.defaults == {'nick': 'nick', 'oauth': 'oauth:', 'client_id': 'CLIENT_ID', 'prefix': '!', 'default_balance': 200, 'loyalty_interval': 60, 'loyalty_amount': 2, 'owner': 'BOT_OWNER_NAME', 'channels': ['channel'], 'mods_folder': 'mods', 'commands_folder': 'commands', 'command_server_enabled': True, 'command_server_port': 1337, 'command_server_host': 'localhost', 'disable_whispers': False, 'use_command_whitelist': False, 'send_message_on_command_whitelist_deny': True, 'command_whitelist': ['help', 'commands', 'reloadcmdwhitelist', 'reloadmod', 'reloadperms', 'disablemod', 'enablemod', 'disablecmdglobal', 'disablecmd', 'enablecmdglobal', 'enablecmd', 'addcmd', 'delcmd', 'updatecmd', 'cmd']}
    assert module_0.mysql_cfg.data == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    assert module_0.mysql_cfg.defaults == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    config_0 = module_0.Config(str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'twitchbot.config.Config'
    assert config_0.file_path == 'CLIENT_ID'
    assert config_0.data == {}
    assert config_0.defaults == {}
    assert f'{type(module_0.Config.exist).__module__}.{type(module_0.Config.exist).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Config.in_folder).__module__}.{type(module_0.Config.in_folder).__qualname__}' == 'builtins.property'
    config_0.__setitem__(config_0, config_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    module_0.generate_config()

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = module_0.get_nick()
    assert str_0 == 'nick'
    assert module_0.DEFAULT_OAUTH == 'oauth:'
    assert module_0.DEFAULT_NICK == 'nick'
    assert module_0.DEFAULT_CLIENT_ID == 'CLIENT_ID'
    assert module_0.cfg.defaults == {'nick': 'nick', 'oauth': 'oauth:', 'client_id': 'CLIENT_ID', 'prefix': '!', 'default_balance': 200, 'loyalty_interval': 60, 'loyalty_amount': 2, 'owner': 'BOT_OWNER_NAME', 'channels': ['channel'], 'mods_folder': 'mods', 'commands_folder': 'commands', 'command_server_enabled': True, 'command_server_port': 1337, 'command_server_host': 'localhost', 'disable_whispers': False, 'use_command_whitelist': False, 'send_message_on_command_whitelist_deny': True, 'command_whitelist': ['help', 'commands', 'reloadcmdwhitelist', 'reloadmod', 'reloadperms', 'disablemod', 'enablemod', 'disablecmdglobal', 'disablecmd', 'enablecmdglobal', 'enablecmd', 'addcmd', 'delcmd', 'updatecmd', 'cmd']}
    assert module_0.mysql_cfg.data == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    assert module_0.mysql_cfg.defaults == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    str_1 = module_0.get_oauth()
    assert str_1 == 'oauth:'
    str_2 = module_0.get_client_id()
    assert str_2 == 'CLIENT_ID'
    config_0 = module_0.Config(str_1)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'twitchbot.config.Config'
    assert config_0.file_path == 'oauth:'
    assert config_0.data == {}
    assert config_0.defaults == {}
    assert f'{type(module_0.Config.exist).__module__}.{type(module_0.Config.exist).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Config.in_folder).__module__}.{type(module_0.Config.in_folder).__qualname__}' == 'builtins.property'
    bool_0 = False
    var_0 = config_0.__getitem__(config_0)
    var_1 = config_0.create()
    module_0.Config(bool_0, **bool_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = module_0.get_client_id()
    assert str_0 == 'CLIENT_ID'
    assert module_0.DEFAULT_OAUTH == 'oauth:'
    assert module_0.DEFAULT_NICK == 'nick'
    assert module_0.DEFAULT_CLIENT_ID == 'CLIENT_ID'
    assert module_0.cfg.defaults == {'nick': 'nick', 'oauth': 'oauth:', 'client_id': 'CLIENT_ID', 'prefix': '!', 'default_balance': 200, 'loyalty_interval': 60, 'loyalty_amount': 2, 'owner': 'BOT_OWNER_NAME', 'channels': ['channel'], 'mods_folder': 'mods', 'commands_folder': 'commands', 'command_server_enabled': True, 'command_server_port': 1337, 'command_server_host': 'localhost', 'disable_whispers': False, 'use_command_whitelist': False, 'send_message_on_command_whitelist_deny': True, 'command_whitelist': ['help', 'commands', 'reloadcmdwhitelist', 'reloadmod', 'reloadperms', 'disablemod', 'enablemod', 'disablecmdglobal', 'disablecmd', 'enablecmdglobal', 'enablecmd', 'addcmd', 'delcmd', 'updatecmd', 'cmd']}
    assert module_0.mysql_cfg.data == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    assert module_0.mysql_cfg.defaults == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    var_0 = module_0.is_config_valid()
    assert var_0 is False
    var_1 = module_1.template(str_0)
    config_0 = module_0.Config(str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'twitchbot.config.Config'
    assert config_0.file_path == 'CLIENT_ID'
    assert config_0.data == {}
    assert config_0.defaults == {}
    assert f'{type(module_0.Config.exist).__module__}.{type(module_0.Config.exist).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Config.in_folder).__module__}.{type(module_0.Config.in_folder).__qualname__}' == 'builtins.property'
    var_2 = config_0.__contains__(var_0)
    assert var_2 is False
    config_0.__setitem__(var_1, var_1)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = module_0.get_oauth()
    assert str_0 == 'oauth:'
    assert module_0.DEFAULT_OAUTH == 'oauth:'
    assert module_0.DEFAULT_NICK == 'nick'
    assert module_0.DEFAULT_CLIENT_ID == 'CLIENT_ID'
    assert module_0.cfg.defaults == {'nick': 'nick', 'oauth': 'oauth:', 'client_id': 'CLIENT_ID', 'prefix': '!', 'default_balance': 200, 'loyalty_interval': 60, 'loyalty_amount': 2, 'owner': 'BOT_OWNER_NAME', 'channels': ['channel'], 'mods_folder': 'mods', 'commands_folder': 'commands', 'command_server_enabled': True, 'command_server_port': 1337, 'command_server_host': 'localhost', 'disable_whispers': False, 'use_command_whitelist': False, 'send_message_on_command_whitelist_deny': True, 'command_whitelist': ['help', 'commands', 'reloadcmdwhitelist', 'reloadmod', 'reloadperms', 'disablemod', 'enablemod', 'disablecmdglobal', 'disablecmd', 'enablecmdglobal', 'enablecmd', 'addcmd', 'delcmd', 'updatecmd', 'cmd']}
    assert module_0.mysql_cfg.data == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    assert module_0.mysql_cfg.defaults == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    config_0 = module_0.Config(str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'twitchbot.config.Config'
    assert config_0.file_path == 'oauth:'
    assert config_0.data == {}
    assert config_0.defaults == {}
    assert f'{type(module_0.Config.exist).__module__}.{type(module_0.Config.exist).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Config.in_folder).__module__}.{type(module_0.Config.in_folder).__qualname__}' == 'builtins.property'
    var_0 = config_0.prompt_edit_oauth()
    config_0.__setitem__(config_0, config_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = module_0.get_client_id()
    assert str_0 == 'CLIENT_ID'
    assert module_0.DEFAULT_OAUTH == 'oauth:'
    assert module_0.DEFAULT_NICK == 'nick'
    assert module_0.DEFAULT_CLIENT_ID == 'CLIENT_ID'
    assert module_0.cfg.defaults == {'nick': 'nick', 'oauth': 'oauth:', 'client_id': 'CLIENT_ID', 'prefix': '!', 'default_balance': 200, 'loyalty_interval': 60, 'loyalty_amount': 2, 'owner': 'BOT_OWNER_NAME', 'channels': ['channel'], 'mods_folder': 'mods', 'commands_folder': 'commands', 'command_server_enabled': True, 'command_server_port': 1337, 'command_server_host': 'localhost', 'disable_whispers': False, 'use_command_whitelist': False, 'send_message_on_command_whitelist_deny': True, 'command_whitelist': ['help', 'commands', 'reloadcmdwhitelist', 'reloadmod', 'reloadperms', 'disablemod', 'enablemod', 'disablecmdglobal', 'disablecmd', 'enablecmdglobal', 'enablecmd', 'addcmd', 'delcmd', 'updatecmd', 'cmd']}
    assert module_0.mysql_cfg.data == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    assert module_0.mysql_cfg.defaults == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    str_1 = module_0.get_oauth()
    assert str_1 == 'oauth:'
    var_0 = module_0.is_config_valid()
    assert var_0 is False
    var_1 = module_1.match(str_0, str_0)
    config_0 = module_0.Config(str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'twitchbot.config.Config'
    assert config_0.file_path == 'CLIENT_ID'
    assert config_0.data == {}
    assert config_0.defaults == {}
    assert f'{type(module_0.Config.exist).__module__}.{type(module_0.Config.exist).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Config.in_folder).__module__}.{type(module_0.Config.in_folder).__qualname__}' == 'builtins.property'
    var_2 = config_0.regen()
    config_0.__setitem__(var_1, var_1)

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = module_0.get_client_id()
    assert str_0 == 'CLIENT_ID'
    assert module_0.DEFAULT_OAUTH == 'oauth:'
    assert module_0.DEFAULT_NICK == 'nick'
    assert module_0.DEFAULT_CLIENT_ID == 'CLIENT_ID'
    assert module_0.cfg.defaults == {'nick': 'nick', 'oauth': 'oauth:', 'client_id': 'CLIENT_ID', 'prefix': '!', 'default_balance': 200, 'loyalty_interval': 60, 'loyalty_amount': 2, 'owner': 'BOT_OWNER_NAME', 'channels': ['channel'], 'mods_folder': 'mods', 'commands_folder': 'commands', 'command_server_enabled': True, 'command_server_port': 1337, 'command_server_host': 'localhost', 'disable_whispers': False, 'use_command_whitelist': False, 'send_message_on_command_whitelist_deny': True, 'command_whitelist': ['help', 'commands', 'reloadcmdwhitelist', 'reloadmod', 'reloadperms', 'disablemod', 'enablemod', 'disablecmdglobal', 'disablecmd', 'enablecmdglobal', 'enablecmd', 'addcmd', 'delcmd', 'updatecmd', 'cmd']}
    assert module_0.mysql_cfg.data == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    assert module_0.mysql_cfg.defaults == {'enabled': False, 'address': 'localhost', 'port': '3306', 'username': 'root', 'password': 'password', 'database': 'twitchbot'}
    str_1 = module_0.get_oauth()
    assert str_1 == 'oauth:'
    var_0 = module_0.is_config_valid()
    assert var_0 is False
    var_1 = module_1.match(str_0, str_0)
    config_0 = module_0.Config(str_0)
    assert f'{type(config_0).__module__}.{type(config_0).__qualname__}' == 'twitchbot.config.Config'
    assert config_0.file_path == 'CLIENT_ID'
    assert config_0.data == {}
    assert config_0.defaults == {}
    assert f'{type(module_0.Config.exist).__module__}.{type(module_0.Config.exist).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Config.in_folder).__module__}.{type(module_0.Config.in_folder).__qualname__}' == 'builtins.property'
    var_2 = module_2.make_identity_dict(config_0)
    module_1.findall(var_2, var_2)