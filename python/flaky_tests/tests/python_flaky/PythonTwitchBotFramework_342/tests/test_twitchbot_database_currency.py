# Automatically generated by Pynguin.
import pytest
import twitchbot.database.currency as module_0

def test_case_0():
    str_0 = ' is not a valid number'
    int_0 = -319
    module_0.add_balance(str_0, str_0, int_0, str_0)
    assert len(module_0.currency_name_cache) == 233

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'add_custom_command'
    bool_0 = False
    module_0.add_balance(str_0, str_0, bool_0)
    assert len(module_0.currency_name_cache) == 233
    str_1 = '68K9#"U'
    balance_0 = module_0.get_balance(str_1, str_1)
    assert f'{type(balance_0).__module__}.{type(balance_0).__qualname__}' == 'twitchbot.database.models.Balance'
    var_0 = module_0.subtract_balance(str_0, str_0, str_0)

def test_case_2():
    str_0 = '0tx(z3Bz \x0bO]*"N'
    bool_0 = module_0.set_currency_name(str_0, str_0)
    assert bool_0 is True
    assert len(module_0.currency_name_cache) == 233

def test_case_3():
    str_0 = "v@OEA^W 'YL%_"
    currency_name_0 = module_0.get_currency_name(str_0)
    assert f'{type(currency_name_0).__module__}.{type(currency_name_0).__qualname__}' == 'twitchbot.database.models.CurrencyName'
    assert len(module_0.currency_name_cache) == 233

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = '}#2R|]G{'
    bool_0 = True
    var_0 = module_0.subtract_balance(str_0, str_0, bool_0)
    assert len(module_0.currency_name_cache) == 233
    str_1 = 'J"k;dzv`$%j!daI'
    str_2 = 'b{Im'
    bool_1 = False
    str_3 = ''
    bool_2 = module_0.set_currency_name(str_1, str_3)
    assert bool_2 is False
    bool_3 = True
    var_1 = module_0.add_balance_to_all(str_2, bool_3)
    var_2 = module_0.add_balance(str_2, str_2, bool_1)
    str_4 = 'rs\nqd<nO$z|q>'
    none_type_0 = None
    module_0.set_balance(str_4, str_3, none_type_0)

def test_case_5():
    str_0 = '7;e88NCkb,\t\\R{'
    var_0 = module_0.subtract_balance_from_all(str_0, str_0)
    assert len(module_0.currency_name_cache) == 233

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'channel-points-channel-v1.'
    str_1 = 'Oh'
    module_0.get_balance(str_0, str_1)
    assert f'{type(balance_0).__module__}.{type(balance_0).__qualname__}' == 'twitchbot.database.models.Balance'
    assert balance_0.channel == 'channel-points-channel-v1.'
    assert balance_0.user == 'oh'
    assert balance_0.id == 13
    assert balance_0.balance == 200
    assert len(module_0.currency_name_cache) == 233
    var_0 = module_0.add_balance_to_all(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    none_type_0 = None
    str_0 = ' to a duel for '
    module_0.get_currency_name(str_0)
    assert f'{type(currency_name_0).__module__}.{type(currency_name_0).__qualname__}' == 'twitchbot.database.models.CurrencyName'
    assert len(module_0.currency_name_cache) == 233
    str_1 = "Tf'/"
    var_0 = module_0.set_balance(str_1, none_type_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b'Connected to the command server!\n'
    module_0.get_balance_from_msg(bytes_0)

def test_case_9():
    str_0 = 'Z|rdbXat=r4fM@I<!'
    var_0 = module_0.add_balance_to_all(str_0, str_0)
    str_1 = '2$|T(jC.4ZRnmL@wyJK'
    str_2 = 'qECPEq)A_Zlb`ih.'
    currency_name_0 = module_0.get_currency_name(str_2)
    int_0 = 1036
    var_1 = module_0.subtract_balance_from_all(str_1, int_0)
    currency_name_1 = module_0.get_currency_name(str_2)
    str_3 = '7,M+&&S?qb[h\\\\L'
    int_1 = 1345
    var_2 = module_0.subtract_balance_from_all(str_3, int_1)
    str_4 = ' instance does not support item assignment for caching '
    str_5 = 'B^%k'
    module_0.add_balance(str_4, str_5, int_1, var_0)
    str_6 = "\tC`'x-"
    str_7 = 'Z5\n\r+T|'
    bool_0 = module_0.set_currency_name(str_6, str_7)
    str_8 = '?fy_Vw|{J>FaH)Lz'
    var_3 = module_0.set_balance(str_2, str_8, currency_name_1)