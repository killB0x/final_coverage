# Automatically generated by Pynguin.
import pytest
import twitchbot.pubsub.models as module_0
import json.encoder as module_1

def test_case_0():
    dict_0 = {}
    pub_sub_data_0 = module_0.PubSubData(dict_0)
    assert module_0.PubSubData.MESSAGE_TYPE == 'MESSAGE'
    assert module_0.PubSubData.RESPONSE_TYPE == 'RESPONSE'
    assert module_0.PubSubData.REWARD_REDEEMED_TYPE == 'reward-redeemed'
    assert module_0.PubSubData.WHISPER_MESSAGE_TYPE == 'thread'
    assert module_0.PubSubData.BITS_MESSAGE_TYPE == 'bits_event'
    assert module_0.PubSubData.SUBSCRIPTION_MESSAGE_TYPE == 'channel-subscribe-events-v1'
    assert f'{type(module_0.PubSubData.is_message).__module__}.{type(module_0.PubSubData.is_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_pong).__module__}.{type(module_0.PubSubData.is_pong).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_pong.attrname == 'is_pong'
    assert f'{type(module_0.PubSubData.is_pong.lock).__module__}.{type(module_0.PubSubData.is_pong.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_whisper).__module__}.{type(module_0.PubSubData.is_whisper).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_response).__module__}.{type(module_0.PubSubData.is_response).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_moderation_action).__module__}.{type(module_0.PubSubData.is_moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_moderation_action.attrname == 'is_moderation_action'
    assert f'{type(module_0.PubSubData.is_moderation_action.lock).__module__}.{type(module_0.PubSubData.is_moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_channel_points_redeemed).__module__}.{type(module_0.PubSubData.is_channel_points_redeemed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_bits).__module__}.{type(module_0.PubSubData.is_bits).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_subscription).__module__}.{type(module_0.PubSubData.is_subscription).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_message).__module__}.{type(module_0.PubSubData.has_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.channel_point_redemption_dict.attrname == 'channel_point_redemption_dict'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict.lock).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.error).__module__}.{type(module_0.PubSubData.error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_error).__module__}.{type(module_0.PubSubData.has_error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.nonce).__module__}.{type(module_0.PubSubData.nonce).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.topic).__module__}.{type(module_0.PubSubData.topic).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.topic.attrname == 'topic'
    assert f'{type(module_0.PubSubData.topic.lock).__module__}.{type(module_0.PubSubData.topic.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_dict).__module__}.{type(module_0.PubSubData.message_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_dict.attrname == 'message_dict'
    assert f'{type(module_0.PubSubData.message_dict.lock).__module__}.{type(module_0.PubSubData.message_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_data).__module__}.{type(module_0.PubSubData.message_data).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_data.attrname == 'message_data'
    assert f'{type(module_0.PubSubData.message_data.lock).__module__}.{type(module_0.PubSubData.message_data.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_type).__module__}.{type(module_0.PubSubData.message_type).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_type.attrname == 'message_type'
    assert f'{type(module_0.PubSubData.message_type.lock).__module__}.{type(module_0.PubSubData.message_type.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.moderation_action).__module__}.{type(module_0.PubSubData.moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.moderation_action.attrname == 'moderation_action'
    assert f'{type(module_0.PubSubData.moderation_action.lock).__module__}.{type(module_0.PubSubData.moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.args).__module__}.{type(module_0.PubSubData.args).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.args.attrname == 'args'
    assert f'{type(module_0.PubSubData.args.lock).__module__}.{type(module_0.PubSubData.args.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by).__module__}.{type(module_0.PubSubData.created_by).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by.attrname == 'created_by'
    assert f'{type(module_0.PubSubData.created_by.lock).__module__}.{type(module_0.PubSubData.created_by.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by_user_id).__module__}.{type(module_0.PubSubData.created_by_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by_user_id.attrname == 'created_by_user_id'
    assert f'{type(module_0.PubSubData.created_by_user_id.lock).__module__}.{type(module_0.PubSubData.created_by_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.msg_id).__module__}.{type(module_0.PubSubData.msg_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.msg_id.attrname == 'msg_id'
    assert f'{type(module_0.PubSubData.msg_id.lock).__module__}.{type(module_0.PubSubData.msg_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_id).__module__}.{type(module_0.PubSubData.target_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_id.attrname == 'target_user_id'
    assert f'{type(module_0.PubSubData.target_user_id.lock).__module__}.{type(module_0.PubSubData.target_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_login).__module__}.{type(module_0.PubSubData.target_user_login).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_login.attrname == 'target_user_login'
    assert f'{type(module_0.PubSubData.target_user_login.lock).__module__}.{type(module_0.PubSubData.target_user_login.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.from_automod).__module__}.{type(module_0.PubSubData.from_automod).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.from_automod.attrname == 'from_automod'
    assert f'{type(module_0.PubSubData.from_automod.lock).__module__}.{type(module_0.PubSubData.from_automod.lock).__qualname__}' == '_thread.RLock'

@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = 0.3
    dict_0 = {float_0: float_0, float_0: float_0}
    pub_sub_data_0 = module_0.PubSubData(dict_0)
    assert module_0.PubSubData.MESSAGE_TYPE == 'MESSAGE'
    assert module_0.PubSubData.RESPONSE_TYPE == 'RESPONSE'
    assert module_0.PubSubData.REWARD_REDEEMED_TYPE == 'reward-redeemed'
    assert module_0.PubSubData.WHISPER_MESSAGE_TYPE == 'thread'
    assert module_0.PubSubData.BITS_MESSAGE_TYPE == 'bits_event'
    assert module_0.PubSubData.SUBSCRIPTION_MESSAGE_TYPE == 'channel-subscribe-events-v1'
    assert f'{type(module_0.PubSubData.is_message).__module__}.{type(module_0.PubSubData.is_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_pong).__module__}.{type(module_0.PubSubData.is_pong).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_pong.attrname == 'is_pong'
    assert f'{type(module_0.PubSubData.is_pong.lock).__module__}.{type(module_0.PubSubData.is_pong.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_whisper).__module__}.{type(module_0.PubSubData.is_whisper).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_response).__module__}.{type(module_0.PubSubData.is_response).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_moderation_action).__module__}.{type(module_0.PubSubData.is_moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_moderation_action.attrname == 'is_moderation_action'
    assert f'{type(module_0.PubSubData.is_moderation_action.lock).__module__}.{type(module_0.PubSubData.is_moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_channel_points_redeemed).__module__}.{type(module_0.PubSubData.is_channel_points_redeemed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_bits).__module__}.{type(module_0.PubSubData.is_bits).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_subscription).__module__}.{type(module_0.PubSubData.is_subscription).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_message).__module__}.{type(module_0.PubSubData.has_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.channel_point_redemption_dict.attrname == 'channel_point_redemption_dict'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict.lock).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.error).__module__}.{type(module_0.PubSubData.error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_error).__module__}.{type(module_0.PubSubData.has_error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.nonce).__module__}.{type(module_0.PubSubData.nonce).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.topic).__module__}.{type(module_0.PubSubData.topic).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.topic.attrname == 'topic'
    assert f'{type(module_0.PubSubData.topic.lock).__module__}.{type(module_0.PubSubData.topic.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_dict).__module__}.{type(module_0.PubSubData.message_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_dict.attrname == 'message_dict'
    assert f'{type(module_0.PubSubData.message_dict.lock).__module__}.{type(module_0.PubSubData.message_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_data).__module__}.{type(module_0.PubSubData.message_data).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_data.attrname == 'message_data'
    assert f'{type(module_0.PubSubData.message_data.lock).__module__}.{type(module_0.PubSubData.message_data.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_type).__module__}.{type(module_0.PubSubData.message_type).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_type.attrname == 'message_type'
    assert f'{type(module_0.PubSubData.message_type.lock).__module__}.{type(module_0.PubSubData.message_type.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.moderation_action).__module__}.{type(module_0.PubSubData.moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.moderation_action.attrname == 'moderation_action'
    assert f'{type(module_0.PubSubData.moderation_action.lock).__module__}.{type(module_0.PubSubData.moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.args).__module__}.{type(module_0.PubSubData.args).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.args.attrname == 'args'
    assert f'{type(module_0.PubSubData.args.lock).__module__}.{type(module_0.PubSubData.args.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by).__module__}.{type(module_0.PubSubData.created_by).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by.attrname == 'created_by'
    assert f'{type(module_0.PubSubData.created_by.lock).__module__}.{type(module_0.PubSubData.created_by.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by_user_id).__module__}.{type(module_0.PubSubData.created_by_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by_user_id.attrname == 'created_by_user_id'
    assert f'{type(module_0.PubSubData.created_by_user_id.lock).__module__}.{type(module_0.PubSubData.created_by_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.msg_id).__module__}.{type(module_0.PubSubData.msg_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.msg_id.attrname == 'msg_id'
    assert f'{type(module_0.PubSubData.msg_id.lock).__module__}.{type(module_0.PubSubData.msg_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_id).__module__}.{type(module_0.PubSubData.target_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_id.attrname == 'target_user_id'
    assert f'{type(module_0.PubSubData.target_user_id.lock).__module__}.{type(module_0.PubSubData.target_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_login).__module__}.{type(module_0.PubSubData.target_user_login).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_login.attrname == 'target_user_login'
    assert f'{type(module_0.PubSubData.target_user_login.lock).__module__}.{type(module_0.PubSubData.target_user_login.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.from_automod).__module__}.{type(module_0.PubSubData.from_automod).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.from_automod.attrname == 'from_automod'
    assert f'{type(module_0.PubSubData.from_automod.lock).__module__}.{type(module_0.PubSubData.from_automod.lock).__qualname__}' == '_thread.RLock'
    var_0 = pub_sub_data_0.as_bits()
    module_1.py_encode_basestring(float_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -546
    pub_sub_data_0 = module_0.PubSubData(int_0)
    assert module_0.PubSubData.MESSAGE_TYPE == 'MESSAGE'
    assert module_0.PubSubData.RESPONSE_TYPE == 'RESPONSE'
    assert module_0.PubSubData.REWARD_REDEEMED_TYPE == 'reward-redeemed'
    assert module_0.PubSubData.WHISPER_MESSAGE_TYPE == 'thread'
    assert module_0.PubSubData.BITS_MESSAGE_TYPE == 'bits_event'
    assert module_0.PubSubData.SUBSCRIPTION_MESSAGE_TYPE == 'channel-subscribe-events-v1'
    assert f'{type(module_0.PubSubData.is_message).__module__}.{type(module_0.PubSubData.is_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_pong).__module__}.{type(module_0.PubSubData.is_pong).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_pong.attrname == 'is_pong'
    assert f'{type(module_0.PubSubData.is_pong.lock).__module__}.{type(module_0.PubSubData.is_pong.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_whisper).__module__}.{type(module_0.PubSubData.is_whisper).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_response).__module__}.{type(module_0.PubSubData.is_response).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_moderation_action).__module__}.{type(module_0.PubSubData.is_moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_moderation_action.attrname == 'is_moderation_action'
    assert f'{type(module_0.PubSubData.is_moderation_action.lock).__module__}.{type(module_0.PubSubData.is_moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_channel_points_redeemed).__module__}.{type(module_0.PubSubData.is_channel_points_redeemed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_bits).__module__}.{type(module_0.PubSubData.is_bits).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_subscription).__module__}.{type(module_0.PubSubData.is_subscription).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_message).__module__}.{type(module_0.PubSubData.has_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.channel_point_redemption_dict.attrname == 'channel_point_redemption_dict'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict.lock).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.error).__module__}.{type(module_0.PubSubData.error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_error).__module__}.{type(module_0.PubSubData.has_error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.nonce).__module__}.{type(module_0.PubSubData.nonce).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.topic).__module__}.{type(module_0.PubSubData.topic).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.topic.attrname == 'topic'
    assert f'{type(module_0.PubSubData.topic.lock).__module__}.{type(module_0.PubSubData.topic.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_dict).__module__}.{type(module_0.PubSubData.message_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_dict.attrname == 'message_dict'
    assert f'{type(module_0.PubSubData.message_dict.lock).__module__}.{type(module_0.PubSubData.message_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_data).__module__}.{type(module_0.PubSubData.message_data).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_data.attrname == 'message_data'
    assert f'{type(module_0.PubSubData.message_data.lock).__module__}.{type(module_0.PubSubData.message_data.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_type).__module__}.{type(module_0.PubSubData.message_type).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_type.attrname == 'message_type'
    assert f'{type(module_0.PubSubData.message_type.lock).__module__}.{type(module_0.PubSubData.message_type.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.moderation_action).__module__}.{type(module_0.PubSubData.moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.moderation_action.attrname == 'moderation_action'
    assert f'{type(module_0.PubSubData.moderation_action.lock).__module__}.{type(module_0.PubSubData.moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.args).__module__}.{type(module_0.PubSubData.args).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.args.attrname == 'args'
    assert f'{type(module_0.PubSubData.args.lock).__module__}.{type(module_0.PubSubData.args.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by).__module__}.{type(module_0.PubSubData.created_by).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by.attrname == 'created_by'
    assert f'{type(module_0.PubSubData.created_by.lock).__module__}.{type(module_0.PubSubData.created_by.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by_user_id).__module__}.{type(module_0.PubSubData.created_by_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by_user_id.attrname == 'created_by_user_id'
    assert f'{type(module_0.PubSubData.created_by_user_id.lock).__module__}.{type(module_0.PubSubData.created_by_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.msg_id).__module__}.{type(module_0.PubSubData.msg_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.msg_id.attrname == 'msg_id'
    assert f'{type(module_0.PubSubData.msg_id.lock).__module__}.{type(module_0.PubSubData.msg_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_id).__module__}.{type(module_0.PubSubData.target_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_id.attrname == 'target_user_id'
    assert f'{type(module_0.PubSubData.target_user_id.lock).__module__}.{type(module_0.PubSubData.target_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_login).__module__}.{type(module_0.PubSubData.target_user_login).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_login.attrname == 'target_user_login'
    assert f'{type(module_0.PubSubData.target_user_login.lock).__module__}.{type(module_0.PubSubData.target_user_login.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.from_automod).__module__}.{type(module_0.PubSubData.from_automod).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.from_automod.attrname == 'from_automod'
    assert f'{type(module_0.PubSubData.from_automod.lock).__module__}.{type(module_0.PubSubData.from_automod.lock).__qualname__}' == '_thread.RLock'
    none_type_0 = None
    dict_0 = {}
    pub_sub_data_1 = module_0.PubSubData(dict_0)
    pub_sub_data_2 = module_0.PubSubData(none_type_0)
    str_0 = 'h&<'
    var_0 = pub_sub_data_2.as_bits()
    pub_sub_data_1.is_type(str_0)

def test_case_3():
    dict_0 = {}
    pub_sub_data_0 = module_0.PubSubData(dict_0)
    assert module_0.PubSubData.MESSAGE_TYPE == 'MESSAGE'
    assert module_0.PubSubData.RESPONSE_TYPE == 'RESPONSE'
    assert module_0.PubSubData.REWARD_REDEEMED_TYPE == 'reward-redeemed'
    assert module_0.PubSubData.WHISPER_MESSAGE_TYPE == 'thread'
    assert module_0.PubSubData.BITS_MESSAGE_TYPE == 'bits_event'
    assert module_0.PubSubData.SUBSCRIPTION_MESSAGE_TYPE == 'channel-subscribe-events-v1'
    assert f'{type(module_0.PubSubData.is_message).__module__}.{type(module_0.PubSubData.is_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_pong).__module__}.{type(module_0.PubSubData.is_pong).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_pong.attrname == 'is_pong'
    assert f'{type(module_0.PubSubData.is_pong.lock).__module__}.{type(module_0.PubSubData.is_pong.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_whisper).__module__}.{type(module_0.PubSubData.is_whisper).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_response).__module__}.{type(module_0.PubSubData.is_response).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_moderation_action).__module__}.{type(module_0.PubSubData.is_moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_moderation_action.attrname == 'is_moderation_action'
    assert f'{type(module_0.PubSubData.is_moderation_action.lock).__module__}.{type(module_0.PubSubData.is_moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_channel_points_redeemed).__module__}.{type(module_0.PubSubData.is_channel_points_redeemed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_bits).__module__}.{type(module_0.PubSubData.is_bits).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_subscription).__module__}.{type(module_0.PubSubData.is_subscription).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_message).__module__}.{type(module_0.PubSubData.has_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.channel_point_redemption_dict.attrname == 'channel_point_redemption_dict'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict.lock).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.error).__module__}.{type(module_0.PubSubData.error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_error).__module__}.{type(module_0.PubSubData.has_error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.nonce).__module__}.{type(module_0.PubSubData.nonce).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.topic).__module__}.{type(module_0.PubSubData.topic).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.topic.attrname == 'topic'
    assert f'{type(module_0.PubSubData.topic.lock).__module__}.{type(module_0.PubSubData.topic.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_dict).__module__}.{type(module_0.PubSubData.message_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_dict.attrname == 'message_dict'
    assert f'{type(module_0.PubSubData.message_dict.lock).__module__}.{type(module_0.PubSubData.message_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_data).__module__}.{type(module_0.PubSubData.message_data).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_data.attrname == 'message_data'
    assert f'{type(module_0.PubSubData.message_data.lock).__module__}.{type(module_0.PubSubData.message_data.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_type).__module__}.{type(module_0.PubSubData.message_type).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_type.attrname == 'message_type'
    assert f'{type(module_0.PubSubData.message_type.lock).__module__}.{type(module_0.PubSubData.message_type.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.moderation_action).__module__}.{type(module_0.PubSubData.moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.moderation_action.attrname == 'moderation_action'
    assert f'{type(module_0.PubSubData.moderation_action.lock).__module__}.{type(module_0.PubSubData.moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.args).__module__}.{type(module_0.PubSubData.args).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.args.attrname == 'args'
    assert f'{type(module_0.PubSubData.args.lock).__module__}.{type(module_0.PubSubData.args.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by).__module__}.{type(module_0.PubSubData.created_by).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by.attrname == 'created_by'
    assert f'{type(module_0.PubSubData.created_by.lock).__module__}.{type(module_0.PubSubData.created_by.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by_user_id).__module__}.{type(module_0.PubSubData.created_by_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by_user_id.attrname == 'created_by_user_id'
    assert f'{type(module_0.PubSubData.created_by_user_id.lock).__module__}.{type(module_0.PubSubData.created_by_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.msg_id).__module__}.{type(module_0.PubSubData.msg_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.msg_id.attrname == 'msg_id'
    assert f'{type(module_0.PubSubData.msg_id.lock).__module__}.{type(module_0.PubSubData.msg_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_id).__module__}.{type(module_0.PubSubData.target_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_id.attrname == 'target_user_id'
    assert f'{type(module_0.PubSubData.target_user_id.lock).__module__}.{type(module_0.PubSubData.target_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_login).__module__}.{type(module_0.PubSubData.target_user_login).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_login.attrname == 'target_user_login'
    assert f'{type(module_0.PubSubData.target_user_login.lock).__module__}.{type(module_0.PubSubData.target_user_login.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.from_automod).__module__}.{type(module_0.PubSubData.from_automod).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.from_automod.attrname == 'from_automod'
    assert f'{type(module_0.PubSubData.from_automod.lock).__module__}.{type(module_0.PubSubData.from_automod.lock).__qualname__}' == '_thread.RLock'
    var_0 = pub_sub_data_0.as_whisper()
    var_1 = pub_sub_data_0.as_point_redemption()

def test_case_4():
    dict_0 = {}
    pub_sub_data_0 = module_0.PubSubData(dict_0)
    assert module_0.PubSubData.MESSAGE_TYPE == 'MESSAGE'
    assert module_0.PubSubData.RESPONSE_TYPE == 'RESPONSE'
    assert module_0.PubSubData.REWARD_REDEEMED_TYPE == 'reward-redeemed'
    assert module_0.PubSubData.WHISPER_MESSAGE_TYPE == 'thread'
    assert module_0.PubSubData.BITS_MESSAGE_TYPE == 'bits_event'
    assert module_0.PubSubData.SUBSCRIPTION_MESSAGE_TYPE == 'channel-subscribe-events-v1'
    assert f'{type(module_0.PubSubData.is_message).__module__}.{type(module_0.PubSubData.is_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_pong).__module__}.{type(module_0.PubSubData.is_pong).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_pong.attrname == 'is_pong'
    assert f'{type(module_0.PubSubData.is_pong.lock).__module__}.{type(module_0.PubSubData.is_pong.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_whisper).__module__}.{type(module_0.PubSubData.is_whisper).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_response).__module__}.{type(module_0.PubSubData.is_response).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_moderation_action).__module__}.{type(module_0.PubSubData.is_moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_moderation_action.attrname == 'is_moderation_action'
    assert f'{type(module_0.PubSubData.is_moderation_action.lock).__module__}.{type(module_0.PubSubData.is_moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_channel_points_redeemed).__module__}.{type(module_0.PubSubData.is_channel_points_redeemed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_bits).__module__}.{type(module_0.PubSubData.is_bits).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_subscription).__module__}.{type(module_0.PubSubData.is_subscription).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_message).__module__}.{type(module_0.PubSubData.has_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.channel_point_redemption_dict.attrname == 'channel_point_redemption_dict'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict.lock).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.error).__module__}.{type(module_0.PubSubData.error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_error).__module__}.{type(module_0.PubSubData.has_error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.nonce).__module__}.{type(module_0.PubSubData.nonce).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.topic).__module__}.{type(module_0.PubSubData.topic).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.topic.attrname == 'topic'
    assert f'{type(module_0.PubSubData.topic.lock).__module__}.{type(module_0.PubSubData.topic.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_dict).__module__}.{type(module_0.PubSubData.message_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_dict.attrname == 'message_dict'
    assert f'{type(module_0.PubSubData.message_dict.lock).__module__}.{type(module_0.PubSubData.message_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_data).__module__}.{type(module_0.PubSubData.message_data).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_data.attrname == 'message_data'
    assert f'{type(module_0.PubSubData.message_data.lock).__module__}.{type(module_0.PubSubData.message_data.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_type).__module__}.{type(module_0.PubSubData.message_type).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_type.attrname == 'message_type'
    assert f'{type(module_0.PubSubData.message_type.lock).__module__}.{type(module_0.PubSubData.message_type.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.moderation_action).__module__}.{type(module_0.PubSubData.moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.moderation_action.attrname == 'moderation_action'
    assert f'{type(module_0.PubSubData.moderation_action.lock).__module__}.{type(module_0.PubSubData.moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.args).__module__}.{type(module_0.PubSubData.args).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.args.attrname == 'args'
    assert f'{type(module_0.PubSubData.args.lock).__module__}.{type(module_0.PubSubData.args.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by).__module__}.{type(module_0.PubSubData.created_by).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by.attrname == 'created_by'
    assert f'{type(module_0.PubSubData.created_by.lock).__module__}.{type(module_0.PubSubData.created_by.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by_user_id).__module__}.{type(module_0.PubSubData.created_by_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by_user_id.attrname == 'created_by_user_id'
    assert f'{type(module_0.PubSubData.created_by_user_id.lock).__module__}.{type(module_0.PubSubData.created_by_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.msg_id).__module__}.{type(module_0.PubSubData.msg_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.msg_id.attrname == 'msg_id'
    assert f'{type(module_0.PubSubData.msg_id.lock).__module__}.{type(module_0.PubSubData.msg_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_id).__module__}.{type(module_0.PubSubData.target_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_id.attrname == 'target_user_id'
    assert f'{type(module_0.PubSubData.target_user_id.lock).__module__}.{type(module_0.PubSubData.target_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_login).__module__}.{type(module_0.PubSubData.target_user_login).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_login.attrname == 'target_user_login'
    assert f'{type(module_0.PubSubData.target_user_login.lock).__module__}.{type(module_0.PubSubData.target_user_login.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.from_automod).__module__}.{type(module_0.PubSubData.from_automod).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.from_automod.attrname == 'from_automod'
    assert f'{type(module_0.PubSubData.from_automod.lock).__module__}.{type(module_0.PubSubData.from_automod.lock).__qualname__}' == '_thread.RLock'
    var_0 = pub_sub_data_0.as_whisper()

@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = 0.3
    dict_0 = {float_0: float_0, float_0: float_0}
    pub_sub_data_0 = module_0.PubSubData(dict_0)
    assert module_0.PubSubData.MESSAGE_TYPE == 'MESSAGE'
    assert module_0.PubSubData.RESPONSE_TYPE == 'RESPONSE'
    assert module_0.PubSubData.REWARD_REDEEMED_TYPE == 'reward-redeemed'
    assert module_0.PubSubData.WHISPER_MESSAGE_TYPE == 'thread'
    assert module_0.PubSubData.BITS_MESSAGE_TYPE == 'bits_event'
    assert module_0.PubSubData.SUBSCRIPTION_MESSAGE_TYPE == 'channel-subscribe-events-v1'
    assert f'{type(module_0.PubSubData.is_message).__module__}.{type(module_0.PubSubData.is_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_pong).__module__}.{type(module_0.PubSubData.is_pong).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_pong.attrname == 'is_pong'
    assert f'{type(module_0.PubSubData.is_pong.lock).__module__}.{type(module_0.PubSubData.is_pong.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_whisper).__module__}.{type(module_0.PubSubData.is_whisper).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_response).__module__}.{type(module_0.PubSubData.is_response).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_moderation_action).__module__}.{type(module_0.PubSubData.is_moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_moderation_action.attrname == 'is_moderation_action'
    assert f'{type(module_0.PubSubData.is_moderation_action.lock).__module__}.{type(module_0.PubSubData.is_moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_channel_points_redeemed).__module__}.{type(module_0.PubSubData.is_channel_points_redeemed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_bits).__module__}.{type(module_0.PubSubData.is_bits).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_subscription).__module__}.{type(module_0.PubSubData.is_subscription).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_message).__module__}.{type(module_0.PubSubData.has_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.channel_point_redemption_dict.attrname == 'channel_point_redemption_dict'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict.lock).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.error).__module__}.{type(module_0.PubSubData.error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_error).__module__}.{type(module_0.PubSubData.has_error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.nonce).__module__}.{type(module_0.PubSubData.nonce).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.topic).__module__}.{type(module_0.PubSubData.topic).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.topic.attrname == 'topic'
    assert f'{type(module_0.PubSubData.topic.lock).__module__}.{type(module_0.PubSubData.topic.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_dict).__module__}.{type(module_0.PubSubData.message_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_dict.attrname == 'message_dict'
    assert f'{type(module_0.PubSubData.message_dict.lock).__module__}.{type(module_0.PubSubData.message_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_data).__module__}.{type(module_0.PubSubData.message_data).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_data.attrname == 'message_data'
    assert f'{type(module_0.PubSubData.message_data.lock).__module__}.{type(module_0.PubSubData.message_data.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_type).__module__}.{type(module_0.PubSubData.message_type).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_type.attrname == 'message_type'
    assert f'{type(module_0.PubSubData.message_type.lock).__module__}.{type(module_0.PubSubData.message_type.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.moderation_action).__module__}.{type(module_0.PubSubData.moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.moderation_action.attrname == 'moderation_action'
    assert f'{type(module_0.PubSubData.moderation_action.lock).__module__}.{type(module_0.PubSubData.moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.args).__module__}.{type(module_0.PubSubData.args).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.args.attrname == 'args'
    assert f'{type(module_0.PubSubData.args.lock).__module__}.{type(module_0.PubSubData.args.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by).__module__}.{type(module_0.PubSubData.created_by).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by.attrname == 'created_by'
    assert f'{type(module_0.PubSubData.created_by.lock).__module__}.{type(module_0.PubSubData.created_by.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by_user_id).__module__}.{type(module_0.PubSubData.created_by_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by_user_id.attrname == 'created_by_user_id'
    assert f'{type(module_0.PubSubData.created_by_user_id.lock).__module__}.{type(module_0.PubSubData.created_by_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.msg_id).__module__}.{type(module_0.PubSubData.msg_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.msg_id.attrname == 'msg_id'
    assert f'{type(module_0.PubSubData.msg_id.lock).__module__}.{type(module_0.PubSubData.msg_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_id).__module__}.{type(module_0.PubSubData.target_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_id.attrname == 'target_user_id'
    assert f'{type(module_0.PubSubData.target_user_id.lock).__module__}.{type(module_0.PubSubData.target_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_login).__module__}.{type(module_0.PubSubData.target_user_login).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_login.attrname == 'target_user_login'
    assert f'{type(module_0.PubSubData.target_user_login.lock).__module__}.{type(module_0.PubSubData.target_user_login.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.from_automod).__module__}.{type(module_0.PubSubData.from_automod).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.from_automod.attrname == 'from_automod'
    assert f'{type(module_0.PubSubData.from_automod.lock).__module__}.{type(module_0.PubSubData.from_automod.lock).__qualname__}' == '_thread.RLock'
    var_0 = pub_sub_data_0.as_bits()
    var_1 = pub_sub_data_0.as_subscription()
    module_1.py_encode_basestring(float_0)

def test_case_6():
    dict_0 = {}
    pub_sub_data_0 = module_0.PubSubData(dict_0)
    assert module_0.PubSubData.MESSAGE_TYPE == 'MESSAGE'
    assert module_0.PubSubData.RESPONSE_TYPE == 'RESPONSE'
    assert module_0.PubSubData.REWARD_REDEEMED_TYPE == 'reward-redeemed'
    assert module_0.PubSubData.WHISPER_MESSAGE_TYPE == 'thread'
    assert module_0.PubSubData.BITS_MESSAGE_TYPE == 'bits_event'
    assert module_0.PubSubData.SUBSCRIPTION_MESSAGE_TYPE == 'channel-subscribe-events-v1'
    assert f'{type(module_0.PubSubData.is_message).__module__}.{type(module_0.PubSubData.is_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_pong).__module__}.{type(module_0.PubSubData.is_pong).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_pong.attrname == 'is_pong'
    assert f'{type(module_0.PubSubData.is_pong.lock).__module__}.{type(module_0.PubSubData.is_pong.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_whisper).__module__}.{type(module_0.PubSubData.is_whisper).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_response).__module__}.{type(module_0.PubSubData.is_response).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_moderation_action).__module__}.{type(module_0.PubSubData.is_moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.is_moderation_action.attrname == 'is_moderation_action'
    assert f'{type(module_0.PubSubData.is_moderation_action.lock).__module__}.{type(module_0.PubSubData.is_moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.is_channel_points_redeemed).__module__}.{type(module_0.PubSubData.is_channel_points_redeemed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_bits).__module__}.{type(module_0.PubSubData.is_bits).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.is_subscription).__module__}.{type(module_0.PubSubData.is_subscription).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_message).__module__}.{type(module_0.PubSubData.has_message).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.channel_point_redemption_dict.attrname == 'channel_point_redemption_dict'
    assert f'{type(module_0.PubSubData.channel_point_redemption_dict.lock).__module__}.{type(module_0.PubSubData.channel_point_redemption_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.error).__module__}.{type(module_0.PubSubData.error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.has_error).__module__}.{type(module_0.PubSubData.has_error).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.nonce).__module__}.{type(module_0.PubSubData.nonce).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.PubSubData.topic).__module__}.{type(module_0.PubSubData.topic).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.topic.attrname == 'topic'
    assert f'{type(module_0.PubSubData.topic.lock).__module__}.{type(module_0.PubSubData.topic.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_dict).__module__}.{type(module_0.PubSubData.message_dict).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_dict.attrname == 'message_dict'
    assert f'{type(module_0.PubSubData.message_dict.lock).__module__}.{type(module_0.PubSubData.message_dict.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_data).__module__}.{type(module_0.PubSubData.message_data).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_data.attrname == 'message_data'
    assert f'{type(module_0.PubSubData.message_data.lock).__module__}.{type(module_0.PubSubData.message_data.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.message_type).__module__}.{type(module_0.PubSubData.message_type).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.message_type.attrname == 'message_type'
    assert f'{type(module_0.PubSubData.message_type.lock).__module__}.{type(module_0.PubSubData.message_type.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.moderation_action).__module__}.{type(module_0.PubSubData.moderation_action).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.moderation_action.attrname == 'moderation_action'
    assert f'{type(module_0.PubSubData.moderation_action.lock).__module__}.{type(module_0.PubSubData.moderation_action.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.args).__module__}.{type(module_0.PubSubData.args).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.args.attrname == 'args'
    assert f'{type(module_0.PubSubData.args.lock).__module__}.{type(module_0.PubSubData.args.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by).__module__}.{type(module_0.PubSubData.created_by).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by.attrname == 'created_by'
    assert f'{type(module_0.PubSubData.created_by.lock).__module__}.{type(module_0.PubSubData.created_by.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.created_by_user_id).__module__}.{type(module_0.PubSubData.created_by_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.created_by_user_id.attrname == 'created_by_user_id'
    assert f'{type(module_0.PubSubData.created_by_user_id.lock).__module__}.{type(module_0.PubSubData.created_by_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.msg_id).__module__}.{type(module_0.PubSubData.msg_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.msg_id.attrname == 'msg_id'
    assert f'{type(module_0.PubSubData.msg_id.lock).__module__}.{type(module_0.PubSubData.msg_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_id).__module__}.{type(module_0.PubSubData.target_user_id).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_id.attrname == 'target_user_id'
    assert f'{type(module_0.PubSubData.target_user_id.lock).__module__}.{type(module_0.PubSubData.target_user_id.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.target_user_login).__module__}.{type(module_0.PubSubData.target_user_login).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.target_user_login.attrname == 'target_user_login'
    assert f'{type(module_0.PubSubData.target_user_login.lock).__module__}.{type(module_0.PubSubData.target_user_login.lock).__qualname__}' == '_thread.RLock'
    assert f'{type(module_0.PubSubData.from_automod).__module__}.{type(module_0.PubSubData.from_automod).__qualname__}' == 'twitchbot.cached_property.cached_property'
    assert module_0.PubSubData.from_automod.attrname == 'from_automod'
    assert f'{type(module_0.PubSubData.from_automod.lock).__module__}.{type(module_0.PubSubData.from_automod.lock).__qualname__}' == '_thread.RLock'
    var_0 = pub_sub_data_0.as_moderation_action()
    var_1 = pub_sub_data_0.as_whisper()
    var_2 = pub_sub_data_0.as_point_redemption()