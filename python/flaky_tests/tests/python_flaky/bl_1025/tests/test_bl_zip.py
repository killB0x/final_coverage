# Automatically generated by Pynguin.
import pytest
import bl.zip as module_0

def test_case_0():
    z_i_p_0 = module_0.ZIP()
    assert f'{type(z_i_p_0).__module__}.{type(z_i_p_0).__qualname__}' == 'bl.zip.ZIP'
    assert len(z_i_p_0) == 3
    assert f'{type(module_0.ZIP.zip_path).__module__}.{type(module_0.ZIP.zip_path).__qualname__}' == 'builtins.method'

@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 3
    module_0.ZIP(int_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = '9A@H@'
    z_i_p_0 = module_0.ZIP(mode=str_0)
    assert f'{type(z_i_p_0).__module__}.{type(z_i_p_0).__qualname__}' == 'bl.zip.ZIP'
    assert len(z_i_p_0) == 3
    assert f'{type(module_0.ZIP.zip_path).__module__}.{type(module_0.ZIP.zip_path).__qualname__}' == 'builtins.method'
    z_i_p_0.write(str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    z_i_p_0 = module_0.ZIP()
    assert f'{type(z_i_p_0).__module__}.{type(z_i_p_0).__qualname__}' == 'bl.zip.ZIP'
    assert len(z_i_p_0) == 3
    assert f'{type(module_0.ZIP.zip_path).__module__}.{type(module_0.ZIP.zip_path).__qualname__}' == 'builtins.method'
    z_i_p_0.write()

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'host'
    set_0 = {str_0, str_0, str_0}
    z_i_p_0 = module_0.ZIP(mode=set_0)
    assert f'{type(z_i_p_0).__module__}.{type(z_i_p_0).__qualname__}' == 'bl.zip.ZIP'
    assert len(z_i_p_0) == 3
    assert f'{type(module_0.ZIP.zip_path).__module__}.{type(module_0.ZIP.zip_path).__qualname__}' == 'builtins.method'
    z_i_p_1 = module_0.ZIP()
    assert len(z_i_p_1) == 3
    var_0 = z_i_p_1.json()
    assert var_0 == '{"fn": null, "mode": "r", "compression": 8}'
    z_i_p_2 = module_0.ZIP()
    assert len(z_i_p_2) == 3
    z_i_p_2.unzip()

@pytest.mark.xfail(strict=True)
def test_case_5():
    set_0 = set()
    z_i_p_0 = module_0.ZIP(compression=set_0)
    assert f'{type(z_i_p_0).__module__}.{type(z_i_p_0).__qualname__}' == 'bl.zip.ZIP'
    assert len(z_i_p_0) == 3
    assert f'{type(module_0.ZIP.zip_path).__module__}.{type(module_0.ZIP.zip_path).__qualname__}' == 'builtins.method'
    z_i_p_0.read(z_i_p_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b'\x9a<\xed\xf4\xf3S\xd7\x0e\xc7l\xd1L\x80l\xad8\x13\xe7]\xef'
    str_0 = 'P(u\njnRtL;o#a:dk\x0b\x0c'
    str_1 = 'ZJY\rG9hW'
    dict_0 = {str_0: bytes_0, str_1: bytes_0}
    z_i_p_0 = module_0.ZIP(**dict_0)
    assert f'{type(z_i_p_0).__module__}.{type(z_i_p_0).__qualname__}' == 'bl.zip.ZIP'
    assert len(z_i_p_0) == 5
    assert f'{type(module_0.ZIP.zip_path).__module__}.{type(module_0.ZIP.zip_path).__qualname__}' == 'builtins.method'
    z_i_p_0.close()

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '9A@H@f'
    int_0 = 26
    dict_0 = {str_0: int_0, str_0: int_0}
    z_i_p_0 = module_0.ZIP(**dict_0)
    assert f'{type(z_i_p_0).__module__}.{type(z_i_p_0).__qualname__}' == 'bl.zip.ZIP'
    assert len(z_i_p_0) == 4
    assert f'{type(module_0.ZIP.zip_path).__module__}.{type(module_0.ZIP.zip_path).__qualname__}' == 'builtins.method'
    z_i_p_0.unzip(int_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = True
    str_0 = 'n@9A@H@f'
    z_i_p_0 = module_0.ZIP(mode=bool_0)
    assert f'{type(z_i_p_0).__module__}.{type(z_i_p_0).__qualname__}' == 'bl.zip.ZIP'
    assert len(z_i_p_0) == 3
    assert f'{type(module_0.ZIP.zip_path).__module__}.{type(module_0.ZIP.zip_path).__qualname__}' == 'builtins.method'
    dict_0 = {str_0: bool_0, str_0: bool_0}
    z_i_p_1 = module_0.ZIP(**dict_0)
    assert len(z_i_p_1) == 4
    z_i_p_1.unzip(bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = False
    str_0 = '/)l9^K]ku'
    z_i_p_0 = module_0.ZIP(mode=bool_0)
    assert f'{type(z_i_p_0).__module__}.{type(z_i_p_0).__qualname__}' == 'bl.zip.ZIP'
    assert len(z_i_p_0) == 3
    assert f'{type(module_0.ZIP.zip_path).__module__}.{type(module_0.ZIP.zip_path).__qualname__}' == 'builtins.method'
    z_i_p_0.write(str_0)