# Automatically generated by Pynguin.
import pytest
import bl.json as module_0
import json as module_1

def test_case_0():
    tuple_0 = ()
    j_s_o_n_0 = module_0.JSON(tuple_0, tuple_0)
    assert f'{type(j_s_o_n_0).__module__}.{type(j_s_o_n_0).__qualname__}' == 'bl.json.JSON'
    assert len(j_s_o_n_0) == 2

def test_case_1():
    j_s_o_n_0 = module_0.JSON()
    assert len(j_s_o_n_0) == 2

@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    j_s_o_n_0 = module_0.JSON(tuple_0, tuple_0)
    assert f'{type(j_s_o_n_0).__module__}.{type(j_s_o_n_0).__qualname__}' == 'bl.json.JSON'
    assert len(j_s_o_n_0) == 2
    j_s_o_n_1 = module_0.JSON(data=tuple_0)
    assert len(j_s_o_n_1) == 2
    j_s_o_n_2 = module_0.JSON(j_s_o_n_0, j_s_o_n_1)
    assert len(j_s_o_n_2) == 2
    j_s_o_n_0.write(data=j_s_o_n_1)

@pytest.mark.xfail(strict=True)
def test_case_3():
    j_s_o_n_0 = module_0.JSON()
    assert len(j_s_o_n_0) == 2
    j_s_o_n_0.write()

@pytest.mark.xfail(strict=True)
def test_case_4():
    j_s_o_n_0 = module_0.JSON()
    assert len(j_s_o_n_0) == 2
    module_1.dump(j_s_o_n_0, j_s_o_n_0, ensure_ascii=j_s_o_n_0, allow_nan=j_s_o_n_0, default=j_s_o_n_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '%s(%r)'
    module_0.JSON(str_0)
    j_s_o_n_1 = module_0.JSON(str_0, j_s_o_n_0)
    var_0 = j_s_o_n_1.hash()

def test_case_6():
    str_0 = '\x0b/ku||6H'
    module_0.JSON(str_0)
    assert f'{type(j_s_o_n_0).__module__}.{type(j_s_o_n_0).__qualname__}' == 'bl.json.JSON'
    assert len(j_s_o_n_0) == 2
    j_s_o_n_1 = module_0.JSON(str_0, j_s_o_n_0)
    assert f'{type(j_s_o_n_1).__module__}.{type(j_s_o_n_1).__qualname__}' == 'bl.json.JSON'
    assert len(j_s_o_n_1) == 2
    none_type_0 = None
    var_0 = j_s_o_n_1.write(indent=none_type_0)
    var_1 = j_s_o_n_1.copy(j_s_o_n_1)
    j_s_o_n_2 = module_0.JSON()
    var_2 = j_s_o_n_2.keys()
    var_3 = var_1.write()

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '%s(%r)'
    module_0.JSON(str_0)
    var_0 = j_s_o_n_0.__str__()
    int_0 = -1683
    j_s_o_n_1 = module_0.JSON(j_s_o_n_0, int_0)
    var_1 = j_s_o_n_1.hash()
    var_2 = j_s_o_n_1.write(data=var_0)