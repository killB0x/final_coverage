# Automatically generated by Pynguin.
import pytest
import inspect as module_0
import authnzerver.actions.apikey as module_1
import platform as module_2

def test_case_0():
    var_0 = module_0.stack()
    var_1 = module_1.issue_apikey(var_0, var_0, config=var_0)

def test_case_1():
    var_0 = module_2.python_revision()
    var_1 = module_1.verify_apikey(var_0, override_authdb_path=var_0, config=var_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_1.revoke_apikey(none_type_0)

def test_case_3():
    var_0 = module_2.machine()
    var_1 = module_1.revoke_apikey(var_0)
    var_2 = module_1.issue_apikey(var_0, config=var_0)
    var_3 = module_1.verify_apikey(var_0, override_permissions_json=var_2)
    var_4 = module_1.issue_apikey(var_1, var_2)

@pytest.mark.xfail(strict=True)
def test_case_4():
    var_0 = module_2.version()
    var_1 = module_1.verify_apikey(var_0, override_authdb_path=var_0)
    var_2 = module_1.verify_apikey(var_0, override_authdb_path=var_0)
    var_3 = module_1.issue_apikey(var_0, config=var_0)
    none_type_0 = None
    var_4 = var_2.__str__()
    assert var_4 == '{\'success\': False, \'apikey\': None, \'expires\': None, \'failure_reason\': "invalid request: missing \'reqid\' from request", \'messages\': [\'Invalid API key request.\']}'
    var_5 = module_1.revoke_apikey(var_4, override_authdb_path=var_1, override_permissions_json=var_3)
    var_6 = var_0.__str__()
    var_0.fold(none_type_0, var_6)