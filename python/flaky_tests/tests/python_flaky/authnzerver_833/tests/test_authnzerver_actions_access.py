# Automatically generated by Pynguin.
import pytest
import locale as module_0
import authnzerver.actions.access as module_1
import platform as module_2
import email.headerregistry as module_3
import quopri as module_4
import email._header_value_parser as module_5

def test_case_0():
    var_0 = module_0.getpreferredencoding()
    var_1 = module_1.check_user_access(var_0, var_0, var_0, config=var_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_1.check_user_limit(none_type_0, override_permissions_json=none_type_0)

def test_case_2():
    var_0 = module_0.getpreferredencoding()
    var_1 = module_1.check_user_limit(var_0, var_0, config=var_0)

def test_case_3():
    var_0 = module_2.system()
    var_1 = module_1.check_user_limit(var_0, var_0, override_authdb_path=var_0, config=var_0)
    single_address_header_0 = module_3.SingleAddressHeader()
    var_2 = module_1.check_user_limit(var_0, override_permissions_json=var_0)
    var_3 = module_1.check_user_access(var_0)
    var_4 = var_2.__str__()
    assert var_4 == '{\'success\': False, \'failure_reason\': "invalid request: missing \'reqid\' from request", \'messages\': [\'Invalid access grant request.\']}'
    var_5 = module_1.check_user_limit(var_4)
    with pytest.raises(AssertionError):
        module_4.needsquoting(var_1, var_3, var_3)

@pytest.mark.xfail(strict=True)
def test_case_4():
    var_0 = module_2.system()
    var_1 = module_1.check_user_limit(var_0, var_0, override_authdb_path=var_0, config=var_0)
    var_2 = module_1.check_user_access(var_1, override_permissions_json=var_0, override_authdb_path=var_1)
    var_3 = module_1.check_user_access(var_0, config=var_0)
    var_4 = module_1.check_user_limit(var_2, override_permissions_json=var_0)
    var_5 = module_1.check_user_access(var_0)
    var_6 = var_4.__str__()
    assert var_6 == '{\'success\': False, \'failure_reason\': "invalid request: missing \'reqid\' from request", \'messages\': [\'Invalid access grant request.\']}'
    var_7 = module_1.check_user_access(var_6, override_authdb_path=var_2)
    module_5.get_fws(var_5)