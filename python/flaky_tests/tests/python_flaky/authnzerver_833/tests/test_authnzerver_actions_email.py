# Automatically generated by Pynguin.
import pytest
import authnzerver.actions.email as module_0
import platform as module_1
import urllib.request as module_2
import email._header_value_parser as module_3
import urllib.parse as module_4
import ast as module_5
import posixpath as module_6
import locale as module_7
import tempfile as module_8

def test_case_0():
    str_0 = 'K~@Vb'
    var_0 = module_0.send_email(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0, port=str_0)
    assert var_0 is False

def test_case_1():
    var_0 = module_1.python_compiler()
    var_1 = module_0.send_signup_verification_email(var_0, var_0, var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    h_t_t_p_redirect_handler_0 = module_2.HTTPRedirectHandler()
    module_0.set_user_emailaddr_verified(h_t_t_p_redirect_handler_0, override_authdb_path=h_t_t_p_redirect_handler_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.set_user_email_sent(none_type_0, config=none_type_0)

def test_case_4():
    obs_local_part_0 = module_3.ObsLocalPart()
    var_0 = module_0.send_forgotpass_verification_email(obs_local_part_0)

def test_case_5():
    obs_local_part_0 = module_3.ObsLocalPart()
    var_0 = module_0.set_user_email_sent(obs_local_part_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'K~@Vb'
    var_0 = module_0.set_user_emailaddr_verified(str_0)
    var_1 = module_4.splitpasswd(str_0)
    var_2 = module_0.send_signup_verification_email(str_0, override_authdb_path=str_0)
    var_3 = var_0.__repr__()
    assert var_3 == '{\'success\': False, \'failure_reason\': "invalid request: missing \'reqid\' in request", \'user_id\': None, \'is_active\': False, \'user_role\': \'locked\', \'messages\': [\'Invalid email verification toggle request.\']}'
    var_4 = module_0.send_forgotpass_verification_email(var_2, var_1)
    var_5 = module_0.send_email(str_0, str_0, var_2, var_2, var_2, str_0, var_2, str_0, port=var_2)
    assert var_5 is False
    list_0 = [str_0]
    var_6 = module_0.set_user_email_sent(var_3, override_authdb_path=list_0, config=var_1)
    var_6.getaddrlist()

def test_case_7():
    str_0 = '\t@V'
    var_0 = module_0.send_email(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0, port=str_0)

def test_case_8():
    h_t_t_p_redirect_handler_0 = module_1.system()
    var_0 = module_0.set_user_emailaddr_verified(h_t_t_p_redirect_handler_0, override_authdb_path=h_t_t_p_redirect_handler_0, config=h_t_t_p_redirect_handler_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'max-age'
    var_0 = module_0.set_user_email_sent(str_0, config=str_0)
    var_1 = var_0.__str__()
    assert var_1 == '{\'success\': False, \'failure_reason\': "invalid request: missing \'reqid\' in request", \'messages\': [\'Invalid email sent notification request.\']}'
    var_2 = module_0.send_forgotpass_verification_email(str_0, str_0)
    var_3 = module_0.send_forgotpass_verification_email(var_1, override_authdb_path=var_0)
    var_4 = var_2.__repr__()
    assert var_4 == '{\'success\': False, \'failure_reason\': "invalid request: missing \'reqid\' in request", \'user_id\': None, \'email_address\': None, \'emailforgotpass_sent_datetime\': None, \'messages\': [\'Invalid forgot-password email request.\']}'
    module_0.send_email(var_2, var_1, var_4, var_0, var_0, var_2, var_2, var_0, port=var_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = 'max-age'
    var_0 = module_0.set_user_emailaddr_verified(str_0)
    var_1 = module_0.set_user_email_sent(str_0, config=str_0)
    var_2 = module_0.send_signup_verification_email(str_0, override_authdb_path=str_0)
    var_3 = module_0.send_forgotpass_verification_email(str_0, str_0)
    var_4 = var_3.__repr__()
    assert var_4 == '{\'success\': False, \'failure_reason\': "invalid request: missing \'reqid\' in request", \'user_id\': None, \'email_address\': None, \'emailforgotpass_sent_datetime\': None, \'messages\': [\'Invalid forgot-password email request.\']}'
    var_5 = var_4.__repr__()
    assert var_5 == '\'{\\\'success\\\': False, \\\'failure_reason\\\': "invalid request: missing \\\'reqid\\\' in request", \\\'user_id\\\': None, \\\'email_address\\\': None, \\\'emailforgotpass_sent_datetime\\\': None, \\\'messages\\\': [\\\'Invalid forgot-password email request.\\\']}\''
    var_6 = var_2.__len__()
    var_7 = module_0.send_email(str_0, str_0, var_2, var_2, var_2, str_0, var_6, str_0, port=var_6)
    var_8 = module_0.set_user_email_sent(var_2, config=var_5)
    var_9 = module_0.send_forgotpass_verification_email(str_0, var_0, var_7)
    var_10 = module_0.send_signup_verification_email(var_5, override_authdb_path=var_8, config=var_3)
    var_9.readline(var_1)

def test_case_11():
    break_0 = module_5.Break()
    var_0 = break_0.__repr__()
    var_1 = module_0.send_email(var_0, break_0, var_0, var_0, var_0, var_0, var_0, var_0)
    assert var_1 is False

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = 'm%x<age'
    var_0 = module_0.set_user_emailaddr_verified(str_0)
    var_1 = module_0.send_email(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0, port=str_0)
    var_2 = module_0.send_signup_verification_email(str_0)
    str_0.readline()

def test_case_13():
    str_0 = 'K~@Vb'
    var_0 = module_0.set_user_emailaddr_verified(str_0)
    var_1 = module_0.send_forgotpass_verification_email(str_0, str_0)
    var_2 = var_1.__repr__()
    assert var_2 == '{\'success\': False, \'failure_reason\': "invalid request: missing \'reqid\' in request", \'user_id\': None, \'email_address\': None, \'emailforgotpass_sent_datetime\': None, \'messages\': [\'Invalid forgot-password email request.\']}'
    var_3 = module_0.send_forgotpass_verification_email(var_1, var_2)
    var_4 = module_0.send_email(str_0, str_0, str_0, str_0, str_0, str_0, str_0, str_0, port=str_0)
    assert var_4 is False
    var_5 = module_0.set_user_email_sent(var_0, str_0)
    var_6 = module_0.set_user_emailaddr_verified(var_2)

@pytest.mark.xfail(strict=True)
def test_case_14():
    str_0 = 'K~@Vb'
    var_0 = module_0.set_user_emailaddr_verified(str_0)
    var_1 = module_4.splitpasswd(str_0)
    var_2 = module_6.splitdrive(str_0)
    var_3 = module_0.send_forgotpass_verification_email(str_0, str_0)
    var_4 = var_3.__repr__()
    assert var_4 == '{\'success\': False, \'failure_reason\': "invalid request: missing \'reqid\' in request", \'user_id\': None, \'email_address\': None, \'emailforgotpass_sent_datetime\': None, \'messages\': [\'Invalid forgot-password email request.\']}'
    var_5 = module_7.getdefaultlocale()
    module_0.send_email(str_0, str_0, var_2, var_2, var_2, str_0, var_2, str_0, port=var_2)

def test_case_15():
    str_0 = 'Gz=<M~s}njgb3> \n'
    var_0 = module_8._TemporaryFileWrapper(str_0, str_0)
    var_1 = module_4.splitpasswd(str_0)
    var_2 = module_0.send_signup_verification_email(str_0, override_authdb_path=str_0)
    var_3 = module_0.send_forgotpass_verification_email(str_0, str_0)
    var_4 = var_3.__repr__()
    assert var_4 == '{\'success\': False, \'failure_reason\': "invalid request: missing \'reqid\' in request", \'user_id\': None, \'email_address\': None, \'emailforgotpass_sent_datetime\': None, \'messages\': [\'Invalid forgot-password email request.\']}'
    var_5 = module_0.send_forgotpass_verification_email(var_3, var_1)
    var_6 = module_0.send_email(str_0, str_0, var_2, var_2, var_2, str_0, var_2, str_0, port=var_2)
    assert var_6 is False
    var_7 = var_1.__repr__()
    var_8 = module_0.set_user_email_sent(var_0, str_0)
    list_0 = [str_0]
    var_9 = module_0.set_user_email_sent(var_4, override_authdb_path=list_0, config=var_1)
    var_10 = var_4.__str__()
    assert var_10 == '{\'success\': False, \'failure_reason\': "invalid request: missing \'reqid\' in request", \'user_id\': None, \'email_address\': None, \'emailforgotpass_sent_datetime\': None, \'messages\': [\'Invalid forgot-password email request.\']}'