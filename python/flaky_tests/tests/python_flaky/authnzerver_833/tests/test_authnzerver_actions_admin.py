# Automatically generated by Pynguin.
import pytest
import authnzerver.actions.admin as module_0
import platform as module_1
import calendar as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.list_users(none_type_0, override_permissions_json=none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.get_user_by_email(none_type_0, override_authdb_path=none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.lookup_users(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 1789.708
    module_0.edit_user(float_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    module_0.internal_edit_user(none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    module_0.internal_toggle_user_lock(none_type_0, override_authdb_path=none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    module_0.toggle_user_lock(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    none_type_0 = None
    module_0.user_info_columns(none_type_0)

def test_case_8():
    var_0 = module_1.machine()
    var_1 = var_0.strip(var_0)
    var_2 = module_0.lookup_users(var_0, config=var_1)

def test_case_9():
    untokenizer_0 = module_1.python_version_tuple()
    var_0 = module_0.get_user_by_email(untokenizer_0)

def test_case_10():
    var_0 = module_1.release()
    var_1 = module_0.internal_toggle_user_lock(var_0)
    var_2 = module_0.edit_user(var_1)

@pytest.mark.xfail(strict=True)
def test_case_11():
    var_0 = module_1.release()
    var_1 = var_0.__iter__()
    var_2 = module_0.internal_edit_user(var_0)
    var_3 = module_0.get_user_by_email(var_2, var_0)
    module_2.formatstring(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = '+/|O.\nWfbma9X'
    var_0 = module_0.internal_toggle_user_lock(str_0, str_0, config=str_0)
    var_1 = module_0.get_user_by_email(var_0)
    var_2 = module_0.toggle_user_lock(var_1)
    var_0.get_nowait()

@pytest.mark.xfail(strict=True)
def test_case_13():
    var_0 = module_1.release()
    var_1 = module_0.lookup_users(var_0)
    var_2 = module_0.get_user_by_email(var_0)
    var_3 = module_0.edit_user(var_0)
    var_4 = module_0.list_users(var_2, override_authdb_path=var_1, override_permissions_json=var_2)
    var_5 = module_0.list_users(var_2, var_3)
    var_6 = module_0.toggle_user_lock(var_0)
    var_4.__setstate__(var_4)

@pytest.mark.xfail(strict=True)
def test_case_14():
    var_0 = module_1.release()
    var_1 = module_0.lookup_users(var_0, var_0, config=var_0)
    var_2 = module_0.edit_user(var_0, config=var_0)
    var_3 = module_0.toggle_user_lock(var_0)
    var_4 = var_2.__repr__()
    assert var_4 == '{\'success\': False, \'user_info\': None, \'failure_reason\': "invalid request: missing \'reqid\' in request", \'messages\': [\'Invalid user edit request.\']}'
    var_5 = module_0.internal_edit_user(var_4, override_authdb_path=var_1)
    var_6 = module_0.list_users(var_3)
    var_6.is_dir()