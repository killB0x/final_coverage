# Automatically generated by Pynguin.
import pytest
import authnzerver.validators as module_0
import re as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.validate_confusables(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_0.validate_reserved_name(bool_0)

def test_case_2():
    str_0 = 'H\r:hly^q\'~k"kUb'
    var_0 = module_0.validate_confusables(str_0)
    assert var_0 is True

def test_case_3():
    str_0 = '[%s] User edit request succeeded for user_id: %s, role: %s, sesion_tken: %s, target_userid: %s.'
    var_0 = module_0.normalize_value(str_0)
    assert var_0 == '[%s] user edit request succeeded for user_id: %s, role: %s, sesion_tken: %s, target_userid: %s.'

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    module_0.validate_email_address(none_type_0)

def test_case_5():
    str_0 = '[%s] User edit request succeeded for user_id: %s, role: %s, sesion_tken: %s, target_userid: %s.'
    var_0 = module_0.validate_reserved_name(str_0)
    assert var_0 is True

def test_case_6():
    str_0 = '[%s] User edit request succeeded for user_id: %s, role: %s, sesion_tken: %s, target_userid: %s.'
    var_0 = module_0.validate_unique_value(str_0, str_0)
    assert var_0 is True

def test_case_7():
    str_0 = 'd@fT.Z%}'
    var_0 = module_0.normalize_value(str_0)
    assert var_0 == 'd@ft.z%}'

def test_case_8():
    str_0 = 'lMYl: .RsJ2c1DB3J'
    var_0 = module_0.validate_confusables_email(str_0)
    assert var_0 is False

def test_case_9():
    dict_0 = {}
    var_0 = module_0.normalize_value(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = '8'
    var_0 = module_0.validate_confusables(str_0)
    assert var_0 is True
    var_1 = module_0.validate_unique_value(str_0, str_0)
    var_2 = module_0.normalize_value(str_0)
    var_3 = module_0.validate_reserved_name(str_0)
    var_4 = module_0.validate_confusables_email(str_0)
    module_0.validate_email_address(var_4)

def test_case_11():
    str_0 = 'lV: .RsJ20c1DB@J'
    var_0 = module_0.validate_confusables_email(str_0)
    assert var_0 is True

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = 'terms'
    var_0 = module_0.validate_reserved_name(str_0)
    assert var_0 is False
    var_1 = module_0.normalize_value(str_0)
    bool_0 = False
    module_0.normalize_value(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = 'IT@fT.Z%}'
    str_1 = '[%s] User edit request scceded for user_id: %s, role: %s, sesion_tken: %s, target_userid: %s'
    var_0 = module_1.split(str_1, str_1)
    var_1 = module_0.validate_unique_value(str_0, str_0)
    assert var_1 is True
    var_2 = module_0.normalize_value(str_0)
    var_3 = module_0.validate_email_address(str_0)
    var_4 = module_0.validate_reserved_name(str_0)
    var_5 = module_0.normalize_value(var_2)
    var_6 = module_0.normalize_value(str_0)
    var_7 = module_0.normalize_value(var_2)
    var_8 = module_0.validate_confusables_email(var_5)
    var_9 = module_0.validate_confusables(var_2)
    module_0.normalize_value(var_0)