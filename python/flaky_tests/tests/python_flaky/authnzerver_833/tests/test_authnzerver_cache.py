# Automatically generated by Pynguin.
import pytest
import authnzerver.cache as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b'\xf3|G\x0c\n\xae=j\xef'
    var_0 = module_0.cache_decrement(bytes_0)
    assert var_0 == -1
    module_0.cache_add(bytes_0, bytes_0, timeout_seconds=bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    module_0.cache_get(bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    var_0 = module_0.cache_get(bool_0)
    var_1 = module_0.cache_flush(var_0)
    var_2 = module_0.cache_add(var_1, bool_0)
    assert var_2 is True
    var_0.deque(var_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    module_0.cache_pop(bool_0, timeout_seconds=bool_0, cache_dirname=bool_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 25
    module_0.cache_delete(int_0, int_0)

def test_case_5():
    int_0 = 675
    var_0 = module_0.cache_delete(int_0)
    assert var_0 is False
    var_1 = module_0.cache_flush()
    assert var_1 == 1

@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 1243
    none_type_0 = None
    var_0 = module_0.cache_increment(none_type_0)
    assert var_0 == 1
    var_1 = module_0.cache_decrement(none_type_0, timeout_seconds=int_0)
    assert var_1 == 0
    var_1.get(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 1243
    none_type_0 = None
    var_0 = module_0.cache_increment(none_type_0)
    assert var_0 == 1
    var_1 = module_0.cache_decrement(none_type_0, timeout_seconds=int_0)
    assert var_1 == 0
    var_0.cache(var_1)

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'yu,rTgD(a?i@S'
    list_0 = [str_0, str_0]
    module_0.cache_increment(list_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    int_0 = -125
    module_0.cache_increment(int_0, cache_dirname=int_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    bytes_0 = b'\xe4\xd2\x18e\x85'
    module_0.cache_getrate(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    int_0 = -1783
    module_0.cache_getrate(int_0, int_0, cache_dirname=int_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    module_0.cache_getrate(none_type_0, none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    bytes_0 = b'\xe6\x14\xcfW\x9c\xf9O6+z\xbd\x0b\xf4\x07'
    module_0.cache_flush(bytes_0)

def test_case_14():
    var_0 = module_0.cache_flush()
    var_1 = module_0.cache_decrement(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    none_type_0 = None
    var_0 = module_0.cache_decrement(none_type_0, none_type_0)
    assert var_0 == -1
    bool_0 = True
    var_1 = module_0.cache_pop(var_0)
    module_0.cache_add(var_1, bool_0, bool_0, bool_0, cache_dirname=bool_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    var_0 = module_0.cache_flush()
    bool_0 = True
    module_0.cache_pop(bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    bool_0 = False
    none_type_0 = None
    module_0.cache_getrate(none_type_0)
    var_0 = bool_0.__setitem__(bool_0, bool_0)