# Automatically generated by Pynguin.
import pytest
import testcube_client.settings as module_0
import codecs as module_1
import platform as module_2

def test_case_0():
    none_type_0 = None
    with pytest.raises(ValueError):
        module_0.add_cache(none_type_0, none_type_0)

def test_case_1():
    dict_0 = {}
    var_0 = module_0.get_cache(dict_0)
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'

@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 976.85246
    var_0 = float_0.__lt__(float_0)
    var_1 = module_0.delete_cache(float_0)

def test_case_3():
    var_0 = module_0.load_config()
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'

def test_case_4():
    var_0 = module_0.enable_debug_log()
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'

@pytest.mark.xfail(strict=True)
def test_case_5():
    var_0 = module_0.load_config()
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'
    var_1 = module_0.save_config()
    var_1.__pos__()

def test_case_6():
    dict_0 = {}
    var_0 = module_0.get_cache(dict_0)
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'

@pytest.mark.xfail(strict=True)
def test_case_7():
    var_0 = module_0.save_config()

@pytest.mark.xfail(strict=True)
def test_case_8():
    dict_0 = {}
    var_0 = module_0.get_cache(dict_0)
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'
    var_1 = module_0.get_cache(var_0)
    var_2 = module_0.add_cache(var_1, dict_0)
    var_1.decode(dict_0)

def test_case_9():
    dict_0 = {}
    var_0 = module_0.get_cache(dict_0)
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'
    var_1 = module_0.add_cache(var_0, dict_0)

def test_case_10():
    var_0 = module_0.load_config()
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'
    var_1 = module_0.get_cache(var_0, var_0)
    var_2 = module_1.IncrementalEncoder(var_1)
    module_0.add_cache(var_2, var_1)

def test_case_11():
    dict_0 = {}
    var_0 = module_0.get_cache(dict_0)
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'

def test_case_12():
    var_0 = module_0.load_config()
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'
    dict_0 = {}
    var_1 = module_0.get_cache(dict_0)
    var_2 = module_0.get_cache(var_0)
    module_0.delete_cache(dict_0, **var_2)

def test_case_13():
    var_0 = module_0.load_config()
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'
    var_1 = module_0.get_cache(var_0, var_0)
    var_2 = module_0.get_cache(var_1)
    var_3 = module_2.node()
    module_0.add_cache(var_3, var_1)
    with pytest.raises(ValueError):
        var_4 = module_0.add_cache(var_0, var_2)
    var_5 = var_2.center(var_2, *var_4)

def test_case_14():
    var_0 = module_0.load_config()
    assert len(module_0.config) == 4
    assert module_0.home_dir == '/root'
    assert module_0.config_file == '/root/.testcube_client.json'
    dict_0 = {}
    var_1 = module_0.get_cache(dict_0)