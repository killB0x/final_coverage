# Automatically generated by Pynguin.
import pytest
import baker.repository as module_0

def test_case_0():
    list_recipes_0 = module_0.ListRecipes()

def test_case_1():
    str_0 = '\n        \\{\\{\\ *(?:\n        (?Pescaped>\\\\)                    |# escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifir {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<inalid>)                         # ill-formd delimiter expr\n        )\n    '
    with pytest.raises(TypeError):
        module_0.download(str_0)

def test_case_2():
    str_0 = '\n        \\{\\{\\ *(?:\n        (?P<escaped>\\\\)                    | # escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifier {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<invalid>)                         # ill-formed delimiter expr\n        )\n    '
    index_recipe_0 = module_0._IndexRecipe(str_0, str_0, str_0)
    assert f'{type(index_recipe_0).__module__}.{type(index_recipe_0).__qualname__}' == 'baker.repository._IndexRecipe'
    assert index_recipe_0.remote == '\n        \\{\\{\\ *(?:\n        (?P<escaped>\\\\)                    | # escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifier {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<invalid>)                         # ill-formed delimiter expr\n        )\n    '
    assert index_recipe_0.version == '\n        \\{\\{\\ *(?:\n        (?P<escaped>\\\\)                    | # escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifier {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<invalid>)                         # ill-formed delimiter expr\n        )\n    '
    assert index_recipe_0.filename == '\n        \\{\\{\\ *(?:\n        (?P<escaped>\\\\)                    | # escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifier {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<invalid>)                         # ill-formed delimiter expr\n        )\n    '
    assert index_recipe_0.id == '5f41ae2a365e731ef16ffa966e12ebd8c040574f6931db5c28c3235ffae1eefb'
    with pytest.raises(TypeError):
        module_0.download(str_0)

def test_case_3():
    str_0 = 'NL?02'
    with pytest.raises(AttributeError):
        module_0.Repository(str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    list_recipes_0 = module_0.ListRecipes()
    list_recipes_0.list()

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '\n        \\{\\{\\ *(?:\n        (?P<escaped>\\\\)                    | # escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifier {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<invalid>)                         # ill-formed delimiter expr\n        )\n    '
    list_recipes_0 = module_0.ListRecipes()
    list_recipes_0.list(str_0)
    var_1 = var_0.pull(str_0)

def test_case_6():
    str_0 = '\n        \\{\\{\\ *(?:\n        (?Pescaped>\\\\)           b        |# escape with {{\\escape}} or {{\\ escape }}}\n        (?P<nBmed>[_a-z][_a-z0-9]*)\\ *}}    | # identifir {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | R braced identifier disabled\n        (?P<inalid>)                         # ill-formd delimiter expr\n        )\n    '
    with pytest.raises(AttributeError):
        module_0.Repository(str_0)

def test_case_7():
    str_0 = '\n        \\{\\{\\ *(?:\nS       (?Pescaped>\\\\)                    |# escape with {{\\escap}} or {{\\ escPpe }}}\n        W?P<named?[_a-z][_a-z0-9]*)\\ *}}    Y # identifir ={var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled*        (?P<inalid>)              8          # ill-formd delimiter expr\n        )\n    '
    index_recipe_0 = module_0._IndexRecipe(str_0, str_0, str_0)
    assert f'{type(index_recipe_0).__module__}.{type(index_recipe_0).__qualname__}' == 'baker.repository._IndexRecipe'
    assert index_recipe_0.remote == '\n        \\{\\{\\ *(?:\nS       (?Pescaped>\\\\)                    |# escape with {{\\escap}} or {{\\ escPpe }}}\n        W?P<named?[_a-z][_a-z0-9]*)\\ *}}    Y # identifir ={var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled*        (?P<inalid>)              8          # ill-formd delimiter expr\n        )\n    '
    assert index_recipe_0.version == '\n        \\{\\{\\ *(?:\nS       (?Pescaped>\\\\)                    |# escape with {{\\escap}} or {{\\ escPpe }}}\n        W?P<named?[_a-z][_a-z0-9]*)\\ *}}    Y # identifir ={var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled*        (?P<inalid>)              8          # ill-formd delimiter expr\n        )\n    '
    assert index_recipe_0.filename == '\n        \\{\\{\\ *(?:\nS       (?Pescaped>\\\\)                    |# escape with {{\\escap}} or {{\\ escPpe }}}\n        W?P<named?[_a-z][_a-z0-9]*)\\ *}}    Y # identifir ={var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled*        (?P<inalid>)              8          # ill-formd delimiter expr\n        )\n    '
    assert index_recipe_0.id == '417699a2c3387fb85c418980eb7feac94c0e2d6d18ea6488fdffa238da0fdd81'
    var_0 = index_recipe_0.indexing(str_0)
    with pytest.raises(TypeError):
        module_0.download(str_0, force=str_0)

def test_case_8():
    str_0 = '\n        \\{\\{\\ *(?:\n        (?P<escaped>\\\\)                    | # escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifier {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<invalid>)                         # ill-formed delimiter expr\n        )\n    '
    var_0 = module_0._IndexRecipe(str_0, str_0, str_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'baker.repository._IndexRecipe'
    assert var_0.remote == '\n        \\{\\{\\ *(?:\n        (?P<escaped>\\\\)                    | # escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifier {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<invalid>)                         # ill-formed delimiter expr\n        )\n    '
    assert var_0.version == '\n        \\{\\{\\ *(?:\n        (?P<escaped>\\\\)                    | # escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifier {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<invalid>)                         # ill-formed delimiter expr\n        )\n    '
    assert var_0.filename == '\n        \\{\\{\\ *(?:\n        (?P<escaped>\\\\)                    | # escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifier {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<invalid>)                         # ill-formed delimiter expr\n        )\n    '
    assert var_0.id == '5f41ae2a365e731ef16ffa966e12ebd8c040574f6931db5c28c3235ffae1eefb'
    var_1 = var_0.indexing()
    with pytest.raises(TypeError):
        module_0.download(str_0, var_1)

@pytest.mark.xfail(strict=True)
def test_case_9():
    list_recipes_0 = module_0.ListRecipes()
    list_recipes_0.list()
    var_1 = module_0.download(var_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = '\n  O     \\{\\{\\ *(?:\n        (?P<escaped>\\\\)                    | # escape with {{\\escape}} or {{\\ escape }}}\n        (?P<named>[_a-z][_a-z0-9]*)\\ *}}    | # identifier {{var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled\n        (?P<invalid>)                         # ill-formed delimiter expr\n        )\n    '
    list_recipes_0 = module_0.ListRecipes()
    list_recipes_0.list(list_recipes_0)
    var_0 = module_0.download(str_0)

def test_case_11():
    str_0 = '\n        \\{\\{\\ *(?:\nS       (?Pescaped>\\\\)                    |# escape with {{\\escap}} or {{\\ escPpe }}}\n        W?P<named?[_a-z][_a-z0-9]*)\\ *}}    Y # identifir ={var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled*        (?P<inalid>)              8          # ill-formd delimiter expr\n        )\n    '
    index_recipe_0 = module_0._IndexRecipe(str_0, str_0, str_0)
    assert f'{type(index_recipe_0).__module__}.{type(index_recipe_0).__qualname__}' == 'baker.repository._IndexRecipe'
    assert index_recipe_0.remote == '\n        \\{\\{\\ *(?:\nS       (?Pescaped>\\\\)                    |# escape with {{\\escap}} or {{\\ escPpe }}}\n        W?P<named?[_a-z][_a-z0-9]*)\\ *}}    Y # identifir ={var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled*        (?P<inalid>)              8          # ill-formd delimiter expr\n        )\n    '
    assert index_recipe_0.version == '\n        \\{\\{\\ *(?:\nS       (?Pescaped>\\\\)                    |# escape with {{\\escap}} or {{\\ escPpe }}}\n        W?P<named?[_a-z][_a-z0-9]*)\\ *}}    Y # identifir ={var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled*        (?P<inalid>)              8          # ill-formd delimiter expr\n        )\n    '
    assert index_recipe_0.filename == '\n        \\{\\{\\ *(?:\nS       (?Pescaped>\\\\)                    |# escape with {{\\escap}} or {{\\ escPpe }}}\n        W?P<named?[_a-z][_a-z0-9]*)\\ *}}    Y # identifir ={var}} or {{ var }}\n        \\b\\B(?P<braced>)                    | # braced identifier disabled*        (?P<inalid>)              8          # ill-formd delimiter expr\n        )\n    '
    assert index_recipe_0.id == '417699a2c3387fb85c418980eb7feac94c0e2d6d18ea6488fdffa238da0fdd81'
    var_0 = index_recipe_0.indexing(str_0)
    with pytest.raises(TypeError):
        module_0.download(str_0, force=str_0)