# Automatically generated by Pynguin.
import pytest
import mock.tests.support as module_0

def test_case_0():
    var_0 = module_0.uncache()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'contextlib._GeneratorContextManager'
    assert f'{type(var_0.gen).__module__}.{type(var_0.gen).__qualname__}' == 'builtins.generator'
    assert var_0.args == ()
    assert var_0.kwds == {}
    assert module_0.target == {'foo': 'FOO'}

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'\xd8\xf7\x9d\x1c\xa3I*\x08\x85\xe7\xe7\xe8\x13\xca\xc3'
    list_0 = [bytes_0, bytes_0, bytes_0]
    none_type_0 = None
    module_0.is_instance(list_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    some_class_0 = module_0.SomeClass()
    assert module_0.target == {'foo': 'FOO'}
    var_0 = some_class_0.wibble()
    module_0.SomeClass(**some_class_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b''
    a_l_w_a_y_s__e_q_0 = module_0._ALWAYS_EQ()
    assert module_0.target == {'foo': 'FOO'}
    var_0 = a_l_w_a_y_s__e_q_0.__eq__(bytes_0)
    var_1 = var_0.__ne__(a_l_w_a_y_s__e_q_0)
    bool_0 = True
    var_2 = var_0.__eq__(bytes_0)
    var_3 = a_l_w_a_y_s__e_q_0.__ne__(bool_0)
    var_3.wibble()