# Automatically generated by Pynguin.
import pytest
import rambutan3.check_args.file.RUncheckedRestrictedUnixFilePathMatcher as module_0
import rambutan3.check_args.file.RFilePathTypeEnum as module_1
import rambutan3.check_args.RCheckArgsError as module_2
import re as module_3

@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.RUncheckedRestrictedUnixFilePathMatcher()

@pytest.mark.xfail(strict=True)
def test_case_1():
    r_file_path_type_enum_0 = module_1.RFilePathTypeEnum.RELATIVE
    list_0 = [r_file_path_type_enum_0, r_file_path_type_enum_0, r_file_path_type_enum_0]
    r_unchecked_restricted_unix_file_path_matcher_0 = module_0.RUncheckedRestrictedUnixFilePathMatcher(*list_0)
    assert f'{type(r_unchecked_restricted_unix_file_path_matcher_0).__module__}.{type(r_unchecked_restricted_unix_file_path_matcher_0).__qualname__}' == 'rambutan3.check_args.file.RUncheckedRestrictedUnixFilePathMatcher.RUncheckedRestrictedUnixFilePathMatcher'
    r_unchecked_restricted_unix_file_path_matcher_0.check_arg(r_file_path_type_enum_0, r_file_path_type_enum_0)

def test_case_2():
    r_file_path_type_enum_0 = module_1.RFilePathTypeEnum.ABSOLUTE
    list_0 = [r_file_path_type_enum_0, r_file_path_type_enum_0, r_file_path_type_enum_0]
    r_unchecked_restricted_unix_file_path_matcher_0 = module_0.RUncheckedRestrictedUnixFilePathMatcher(*list_0)
    assert f'{type(r_unchecked_restricted_unix_file_path_matcher_0).__module__}.{type(r_unchecked_restricted_unix_file_path_matcher_0).__qualname__}' == 'rambutan3.check_args.file.RUncheckedRestrictedUnixFilePathMatcher.RUncheckedRestrictedUnixFilePathMatcher'
    var_0 = r_file_path_type_enum_0.__str__()
    with pytest.raises(module_2.RCheckArgsError):
        r_unchecked_restricted_unix_file_path_matcher_0.check_arg(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    r_file_path_type_enum_0 = module_1.RFilePathTypeEnum.RELATIVE
    list_0 = [r_file_path_type_enum_0, r_file_path_type_enum_0, r_file_path_type_enum_0]
    r_unchecked_restricted_unix_file_path_matcher_0 = module_0.RUncheckedRestrictedUnixFilePathMatcher(*list_0)
    assert f'{type(r_unchecked_restricted_unix_file_path_matcher_0).__module__}.{type(r_unchecked_restricted_unix_file_path_matcher_0).__qualname__}' == 'rambutan3.check_args.file.RUncheckedRestrictedUnixFilePathMatcher.RUncheckedRestrictedUnixFilePathMatcher'
    var_0 = r_file_path_type_enum_0.__str__()
    var_1 = r_unchecked_restricted_unix_file_path_matcher_0.check_arg(var_0, var_0)
    assert var_1 == 'RFilePathTypeEnum.RELATIVE'
    list_0.__hash__()

@pytest.mark.xfail(strict=True)
def test_case_4():
    r_file_path_type_enum_0 = module_1.RFilePathTypeEnum.RELATIVE
    list_0 = [r_file_path_type_enum_0, r_file_path_type_enum_0, r_file_path_type_enum_0]
    r_unchecked_restricted_unix_file_path_matcher_0 = module_0.RUncheckedRestrictedUnixFilePathMatcher(*list_0)
    assert f'{type(r_unchecked_restricted_unix_file_path_matcher_0).__module__}.{type(r_unchecked_restricted_unix_file_path_matcher_0).__qualname__}' == 'rambutan3.check_args.file.RUncheckedRestrictedUnixFilePathMatcher.RUncheckedRestrictedUnixFilePathMatcher'
    bool_0 = r_unchecked_restricted_unix_file_path_matcher_0.__eq__(list_0)
    assert bool_0 is False
    bool_1 = r_unchecked_restricted_unix_file_path_matcher_0.__eq__(r_unchecked_restricted_unix_file_path_matcher_0)
    assert bool_1 is True
    r_unchecked_restricted_unix_file_path_matcher_0.check_arg(r_unchecked_restricted_unix_file_path_matcher_0, r_unchecked_restricted_unix_file_path_matcher_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    r_file_path_type_enum_0 = module_1.RFilePathTypeEnum.RELATIVE
    list_0 = [r_file_path_type_enum_0, r_file_path_type_enum_0, r_file_path_type_enum_0]
    r_unchecked_restricted_unix_file_path_matcher_0 = module_0.RUncheckedRestrictedUnixFilePathMatcher(*list_0)
    assert f'{type(r_unchecked_restricted_unix_file_path_matcher_0).__module__}.{type(r_unchecked_restricted_unix_file_path_matcher_0).__qualname__}' == 'rambutan3.check_args.file.RUncheckedRestrictedUnixFilePathMatcher.RUncheckedRestrictedUnixFilePathMatcher'
    none_type_0 = None
    module_3.findall(none_type_0, none_type_0, r_unchecked_restricted_unix_file_path_matcher_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    r_file_path_type_enum_0 = module_1.RFilePathTypeEnum.ABSOLUTE
    list_0 = [r_file_path_type_enum_0, r_file_path_type_enum_0, r_file_path_type_enum_0]
    r_unchecked_restricted_unix_file_path_matcher_0 = module_0.RUncheckedRestrictedUnixFilePathMatcher(*list_0)
    assert f'{type(r_unchecked_restricted_unix_file_path_matcher_0).__module__}.{type(r_unchecked_restricted_unix_file_path_matcher_0).__qualname__}' == 'rambutan3.check_args.file.RUncheckedRestrictedUnixFilePathMatcher.RUncheckedRestrictedUnixFilePathMatcher'
    str_0 = '//'
    none_type_0 = None
    bool_0 = r_unchecked_restricted_unix_file_path_matcher_0.matches(str_0, none_type_0)
    assert bool_0 is False
    r_unchecked_restricted_unix_file_path_matcher_0.check_arg(r_unchecked_restricted_unix_file_path_matcher_0, r_unchecked_restricted_unix_file_path_matcher_0)

def test_case_7():
    r_file_path_type_enum_0 = module_1.RFilePathTypeEnum.ABSOLUTE
    list_0 = [r_file_path_type_enum_0, r_file_path_type_enum_0, r_file_path_type_enum_0]
    r_unchecked_restricted_unix_file_path_matcher_0 = module_0.RUncheckedRestrictedUnixFilePathMatcher(*list_0)
    assert f'{type(r_unchecked_restricted_unix_file_path_matcher_0).__module__}.{type(r_unchecked_restricted_unix_file_path_matcher_0).__qualname__}' == 'rambutan3.check_args.file.RUncheckedRestrictedUnixFilePathMatcher.RUncheckedRestrictedUnixFilePathMatcher'
    str_0 = '//'
    none_type_0 = None
    bool_0 = r_unchecked_restricted_unix_file_path_matcher_0.matches(str_0, none_type_0)
    assert bool_0 is False
    with pytest.raises(module_2.RCheckArgsError):
        r_unchecked_restricted_unix_file_path_matcher_0.check_arg(str_0, str_0)