# Automatically generated by Pynguin.
import pytest
import rambutan3.check_args.dict.RDictEnum as module_0
import rambutan3.check_args.dict.RDictWhereMatcher as module_1
import rambutan3.check_args.base.traverse.RTypeMatcherError as module_2
import rambutan3.RArgs as module_3

def test_case_0():
    none_type_0 = None
    int_0 = none_type_0.__hash__()

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'FaJ"TfVZ?v4}oOS`[Y'
    r_dict_enum_0 = module_0.RDictEnum.DICT
    dict_0 = {str_0: str_0, r_dict_enum_0: r_dict_enum_0}
    bool_0 = True
    module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)

def test_case_2():
    r_dict_enum_0 = module_0.RDictEnum.DICT
    bool_0 = True
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    bool_1 = r_dict_where_matcher_0.__eq__(r_dict_where_matcher_0)
    assert bool_1 is True

def test_case_3():
    r_dict_enum_0 = module_0.RDictEnum.DICT
    bool_0 = True
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    int_0 = r_dict_where_matcher_0.__hash__()
    assert int_0 == 6767117532091878975
    bool_1 = r_dict_where_matcher_0.__eq__(r_dict_enum_0)

def test_case_4():
    r_dict_enum_0 = module_0.RDictEnum.DICT
    bool_0 = True
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    var_0 = r_dict_where_matcher_0.__str__()
    assert var_0 == 'dict | hashabledict | frozendict | Mapping | MutableMapping where EXACTLY {}'

def test_case_5():
    r_dict_enum_0 = module_0.RDictEnum.DICT
    bool_0 = True
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    bool_1 = r_dict_where_matcher_0.matches(dict_0)
    assert bool_1 is True

def test_case_6():
    r_dict_enum_0 = module_0.RDictEnum.DICT
    bool_0 = True
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    bool_1 = r_dict_where_matcher_0.__eq__(dict_0)
    bool_2 = r_dict_where_matcher_0.__eq__(r_dict_where_matcher_0)
    assert bool_2 is True

@pytest.mark.xfail(strict=True)
def test_case_7():
    r_dict_enum_0 = module_0.RDictEnum.DICT
    bool_0 = False
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    dict_1 = {bool_0: r_dict_where_matcher_0}
    r_dict_where_matcher_1 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_1, is_exact=bool_0)
    none_type_0 = None
    bool_1 = r_dict_where_matcher_1.matches(dict_1, none_type_0)
    assert bool_1 is False
    str_0 = r_dict_where_matcher_1.__str__()
    assert str_0 == 'dict | hashabledict | frozendict | Mapping | MutableMapping where AT LEAST {False: dict | hashabledict | frozendict | Mapping | MutableMapping where AT LEAST {}}'
    str_0.matches(str_0)

def test_case_8():
    r_dict_enum_0 = module_0.RDictEnum.DICT
    bool_0 = False
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    bool_1 = r_dict_where_matcher_0.matches(dict_0)
    assert bool_1 is True

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'FaJ"TfVZ?v4}oOS`[Y'
    r_dict_enum_0 = module_0.RDictEnum.BUILTIN_DICT
    dict_0 = {str_0: str_0, r_dict_enum_0: r_dict_enum_0}
    bool_0 = True
    dict_1 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_1, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    r_dict_where_matcher_0.matches(dict_0, r_dict_where_matcher_0)

def test_case_10():
    str_0 = 'FaJ"ufVZ?v4}oOS`[Y'
    r_dict_enum_0 = module_0.RDictEnum.DICT
    dict_0 = {str_0: str_0, r_dict_enum_0: r_dict_enum_0}
    bool_0 = True
    dict_1 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_1, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    bool_1 = r_dict_where_matcher_0.matches(dict_0)
    assert bool_1 is False

def test_case_11():
    r_dict_enum_0 = module_0.RDictEnum.DICT
    bool_0 = True
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    dict_1 = {bool_0: r_dict_where_matcher_0}
    r_dict_where_matcher_1 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_1, is_exact=bool_0)
    none_type_0 = None
    bool_1 = r_dict_where_matcher_1.matches(dict_1, none_type_0)
    assert bool_1 is False

def test_case_12():
    str_0 = 'FaJ"ufVZ?v4}oOS`[Y'
    r_dict_enum_0 = module_0.RDictEnum.DICT
    dict_0 = {str_0: str_0, r_dict_enum_0: r_dict_enum_0}
    bool_0 = True
    dict_1 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_1, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    none_type_0 = None
    bool_1 = r_dict_where_matcher_0.__eq__(dict_1)
    bool_2 = r_dict_where_matcher_0.matches(dict_0, none_type_0)
    assert bool_2 is False
    bool_3 = r_dict_where_matcher_0.matches(dict_1)
    assert bool_3 is True

def test_case_13():
    r_dict_enum_0 = module_0.RDictEnum.BUILTIN_DICT
    bool_0 = True
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    bool_1 = False
    r_dict_where_matcher_1 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_1)
    bool_2 = r_dict_where_matcher_1.__eq__(r_dict_where_matcher_1)
    assert bool_2 is True
    var_0 = r_dict_where_matcher_1.__str__()
    assert var_0 == 'dict where AT LEAST {}'
    bool_3 = r_dict_where_matcher_1.__eq__(r_dict_where_matcher_0)
    assert bool_3 is False
    var_1 = var_0.__iter__()
    str_0 = r_dict_where_matcher_0.__str__()
    assert str_0 == 'dict where EXACTLY {}'
    bool_4 = r_dict_where_matcher_0.matches(var_1)
    assert bool_4 is False

def test_case_14():
    str_0 = 'FaJ"TfVZ?v4}oOS`[Y'
    r_dict_enum_0 = module_0.RDictEnum.BUILTIN_DICT
    dict_0 = {r_dict_enum_0: str_0, str_0: str_0, r_dict_enum_0: r_dict_enum_0, str_0: r_dict_enum_0, str_0: str_0}
    bool_0 = True
    dict_1 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_1, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    int_0 = r_dict_where_matcher_0.__hash__()
    assert int_0 == -9193911015565786103
    dict_2 = {bool_0: r_dict_where_matcher_0}
    r_dict_where_matcher_1 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_2, is_exact=bool_0)
    bool_1 = bool_0.__eq__(bool_0)
    bool_2 = r_dict_where_matcher_1.matches(dict_0)
    assert bool_2 is False

@pytest.mark.xfail(strict=True)
def test_case_15():
    str_0 = 'Fa"Tf`Z?v}oOS`[Y'
    r_dict_enum_0 = module_0.RDictEnum.BUILTIN_DICT
    bool_0 = True
    var_0 = module_2.RTypeMatcherError()
    bool_1 = var_0.__eq__(str_0)
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    dict_1 = {bool_0: r_dict_where_matcher_0}
    r_dict_where_matcher_1 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_1, is_exact=bool_0)
    bool_2 = r_dict_where_matcher_1.matches(dict_1, var_0)
    assert bool_2 is False
    var_1 = r_dict_where_matcher_1.__str__()
    assert var_1 == 'dict where EXACTLY {True: dict where EXACTLY {}}'
    none_type_0 = None
    bool_3 = r_dict_where_matcher_1.__eq__(none_type_0)
    var_1.add_traverse_path_step(var_1, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    r_dict_enum_0 = module_0.RDictEnum.BUILTIN_DICT
    bool_0 = True
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_0)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    dict_1 = {bool_0: r_dict_where_matcher_0}
    r_dict_where_matcher_1 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_1, is_exact=bool_0)
    list_0 = [bool_0, dict_0, dict_1]
    r_dict_where_matcher_1.matches(dict_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    str_0 = '{'
    r_dict_enum_0 = module_0.RDictEnum.DICT
    bool_0 = False
    bool_1 = True
    str_1 = '^l)~ -&ln00O7B87zy'
    var_0 = module_3.check_not_none(bool_0, str_1)
    bool_2 = var_0.__eq__(str_0)
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_1)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    dict_1 = {bool_1: r_dict_where_matcher_0}
    r_dict_where_matcher_1 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_1, is_exact=bool_1)
    bool_3 = r_dict_where_matcher_1.matches(dict_1, var_0)
    assert bool_3 is False
    var_1 = r_dict_where_matcher_1.__str__()
    assert var_1 == 'dict | hashabledict | frozendict | Mapping | MutableMapping where EXACTLY {True: dict | hashabledict | frozendict | Mapping | MutableMapping where EXACTLY {}}'
    var_2 = r_dict_where_matcher_1.__str__()
    assert var_2 == 'dict | hashabledict | frozendict | Mapping | MutableMapping where EXACTLY {True: dict | hashabledict | frozendict | Mapping | MutableMapping where EXACTLY {}}'
    bool_4 = r_dict_where_matcher_0.__eq__(r_dict_where_matcher_1)
    assert bool_4 is False
    bool_5 = r_dict_where_matcher_0.__eq__(str_0)
    bool_6 = r_dict_where_matcher_1.__eq__(var_0)
    none_type_0 = None
    str_2 = str_0.__str__()
    int_0 = r_dict_where_matcher_0.__hash__()
    assert int_0 == 6767117532091878975
    dict_2 = {r_dict_where_matcher_1: none_type_0}
    r_dict_where_matcher_1.matches(dict_2, str_0)

@pytest.mark.xfail(strict=True)
def test_case_18():
    str_0 = 'h'
    r_dict_enum_0 = module_0.RDictEnum.BUILTIN_DICT
    bool_0 = False
    bool_1 = True
    str_1 = 'K1'
    var_0 = module_3.check_not_none(bool_0, str_1)
    dict_0 = {}
    r_dict_where_matcher_0 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_0, is_exact=bool_1)
    assert f'{type(r_dict_where_matcher_0).__module__}.{type(r_dict_where_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictWhereMatcher.RDictWhereMatcher'
    int_0 = var_0.__hash__()
    bool_2 = r_dict_where_matcher_0.matches(dict_0, var_0)
    assert bool_2 is True
    dict_1 = {bool_1: r_dict_where_matcher_0, str_1: r_dict_where_matcher_0, r_dict_enum_0: r_dict_enum_0, r_dict_enum_0: r_dict_where_matcher_0}
    r_dict_where_matcher_1 = module_1.RDictWhereMatcher(r_dict_enum_0, dict_1, is_exact=bool_1)
    bool_3 = r_dict_where_matcher_1.matches(dict_1, var_0)
    assert bool_3 is False
    bool_4 = r_dict_where_matcher_0.__eq__(bool_1)
    var_1 = r_dict_where_matcher_1.__str__()
    assert var_1 == "dict where EXACTLY {True: dict where EXACTLY {}, 'K1': dict where EXACTLY {}, RDictEnum.BUILTIN_DICT: dict where EXACTLY {}}"
    bool_5 = r_dict_where_matcher_0.__eq__(r_dict_where_matcher_1)
    assert bool_5 is False
    bool_6 = r_dict_where_matcher_1.__eq__(var_0)
    none_type_0 = None
    str_2 = str_0.__str__()
    int_1 = r_dict_where_matcher_0.__hash__()
    assert int_1 == -9193911015565786103
    dict_2 = {r_dict_where_matcher_1: none_type_0}
    r_dict_where_matcher_0.matches(dict_2, str_0)