# Automatically generated by Pynguin.
import pytest
import rambutan3.container.frozendict as module_0

def test_case_0():
    frozendict_0 = module_0.frozendict()
    assert f'{type(frozendict_0).__module__}.{type(frozendict_0).__qualname__}' == 'rambutan3.container.frozendict.frozendict'
    assert len(frozendict_0) == 0
    assert f'{type(module_0.frozendict.clear).__module__}.{type(module_0.frozendict.clear).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.pop).__module__}.{type(module_0.frozendict.pop).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.popitem).__module__}.{type(module_0.frozendict.popitem).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.setdefault).__module__}.{type(module_0.frozendict.setdefault).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.update).__module__}.{type(module_0.frozendict.update).__qualname__}' == 'builtins.property'
    var_0 = frozendict_0.__hash__()
    assert var_0 == 133146708735736

def test_case_1():
    frozendict_0 = module_0.frozendict()
    assert f'{type(frozendict_0).__module__}.{type(frozendict_0).__qualname__}' == 'rambutan3.container.frozendict.frozendict'
    assert len(frozendict_0) == 0
    assert f'{type(module_0.frozendict.clear).__module__}.{type(module_0.frozendict.clear).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.pop).__module__}.{type(module_0.frozendict.pop).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.popitem).__module__}.{type(module_0.frozendict.popitem).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.setdefault).__module__}.{type(module_0.frozendict.setdefault).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.update).__module__}.{type(module_0.frozendict.update).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_2():
    frozendict_0 = module_0.frozendict()
    assert f'{type(frozendict_0).__module__}.{type(frozendict_0).__qualname__}' == 'rambutan3.container.frozendict.frozendict'
    assert len(frozendict_0) == 0
    assert f'{type(module_0.frozendict.clear).__module__}.{type(module_0.frozendict.clear).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.pop).__module__}.{type(module_0.frozendict.pop).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.popitem).__module__}.{type(module_0.frozendict.popitem).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.setdefault).__module__}.{type(module_0.frozendict.setdefault).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.frozendict.update).__module__}.{type(module_0.frozendict.update).__qualname__}' == 'builtins.property'
    var_0 = frozendict_0.__repr__()
    assert var_0 == 'frozendict({})'
    var_0.__new__(frozendict_0)