# Automatically generated by Pynguin.
import pytest
import rambutan3.check_args.dict.RDictOfMatcher as module_0
import rambutan3.check_args.dict.RDictEnum as module_1
import rambutan3.check_args.dict.RDictMatcher as module_2
import rambutan3.RArgs as module_3

def test_case_0():
    none_type_0 = None
    var_0 = none_type_0.__str__()

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'auh,r]od'
    module_0.RDictOfMatcher(str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    r_dict_enum_0 = module_1.RDictEnum.DICT
    module_0.RDictOfMatcher(r_dict_enum_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    module_0.RDictOfMatcher(r_dict_enum_0, value_matcher=r_dict_enum_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_enum_0)

def test_case_5():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_matcher_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    bool_0 = r_dict_of_matcher_0.__eq__(r_dict_matcher_0)
    assert bool_0 is False

def test_case_6():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_matcher_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    bool_0 = r_dict_of_matcher_0.__or__(r_dict_of_matcher_0)
    assert f'{type(bool_0).__module__}.{type(bool_0).__qualname__}' == 'rambutan3.check_args.base.RAbstractTypeMatcher.RLogicalOrTypeMatcher'

def test_case_7():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_matcher_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    var_0 = r_dict_of_matcher_0.__str__()
    assert var_0 == 'dict of [keys: dict, values: dict]'

def test_case_8():
    r_dict_enum_0 = module_1.RDictEnum.DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    var_0 = r_dict_of_matcher_0.__str__()
    assert var_0 == 'dict | hashabledict | frozendict | Mapping | MutableMapping of [keys: dict | hashabledict | frozendict | Mapping | MutableMapping]'

def test_case_9():
    r_dict_enum_0 = module_1.RDictEnum.DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    bool_0 = r_dict_of_matcher_0.__eq__(r_dict_of_matcher_0)
    assert bool_0 is True

def test_case_10():
    r_dict_enum_0 = module_1.RDictEnum.DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    var_0 = r_dict_of_matcher_0.__str__()
    assert var_0 == 'dict | hashabledict | frozendict | Mapping | MutableMapping of [values: dict | hashabledict | frozendict | Mapping | MutableMapping]'

def test_case_11():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_matcher_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    dict_0 = {r_dict_matcher_0: r_dict_enum_0}
    bool_0 = r_dict_of_matcher_0.matches(dict_0)
    assert bool_0 is False

def test_case_12():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_matcher_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    dict_0 = {}
    bool_0 = r_dict_of_matcher_0.matches(dict_0)
    assert bool_0 is True

def test_case_13():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_matcher_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    none_type_0 = None
    bool_0 = r_dict_of_matcher_0.matches(r_dict_enum_0, none_type_0)
    assert bool_0 is False

def test_case_14():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    dict_0 = {r_dict_matcher_0: r_dict_enum_0}
    bool_0 = r_dict_of_matcher_0.matches(dict_0)
    assert bool_0 is False

@pytest.mark.xfail(strict=True)
def test_case_15():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    none_type_0 = None
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=none_type_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    bool_0 = True
    bool_1 = r_dict_of_matcher_0.__eq__(bool_0)
    dict_0 = {r_dict_matcher_0: r_dict_of_matcher_0}
    str_0 = 'human-readable message'
    var_0 = module_3.check_not_none(r_dict_of_matcher_0, str_0)
    var_1 = var_0.__or__(r_dict_of_matcher_0)
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'rambutan3.check_args.base.RAbstractTypeMatcher.RLogicalOrTypeMatcher'
    dict_1 = {bool_0: dict_0, var_1: r_dict_enum_0}
    bool_2 = var_0.matches(dict_1)
    assert bool_2 is False
    r_dict_matcher_0.__or__(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_matcher_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    dict_0 = {r_dict_matcher_0: r_dict_enum_0}
    r_dict_of_matcher_0.check_arg(dict_0, dict_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    r_dict_enum_0 = module_1.RDictEnum.BUILTIN_DICT
    r_dict_matcher_0 = module_2.RDictMatcher(r_dict_enum_0)
    none_type_0 = None
    r_dict_of_matcher_0 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=none_type_0, value_matcher=r_dict_matcher_0)
    assert f'{type(r_dict_of_matcher_0).__module__}.{type(r_dict_of_matcher_0).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    assert f'{type(module_0.RDictOfMatcher.check_init_args).__module__}.{type(module_0.RDictOfMatcher.check_init_args).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.RDictOfMatcher.core_matches).__module__}.{type(module_0.RDictOfMatcher.core_matches).__qualname__}' == 'builtins.method'
    dict_0 = {r_dict_matcher_0: r_dict_of_matcher_0}
    bool_0 = r_dict_of_matcher_0.__eq__(r_dict_of_matcher_0)
    assert bool_0 is True
    r_dict_of_matcher_1 = module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=r_dict_matcher_0, value_matcher=none_type_0)
    assert f'{type(r_dict_of_matcher_1).__module__}.{type(r_dict_of_matcher_1).__qualname__}' == 'rambutan3.check_args.dict.RDictOfMatcher.RDictOfMatcher'
    bool_1 = r_dict_of_matcher_0.__eq__(r_dict_of_matcher_1)
    assert bool_1 is False
    int_0 = r_dict_of_matcher_1.__hash__()
    assert int_0 == 3926649266753030428
    bool_2 = r_dict_of_matcher_0.matches(dict_0)
    assert bool_2 is False
    bool_3 = r_dict_of_matcher_1.__eq__(dict_0)
    bool_4 = r_dict_matcher_0.__eq__(bool_3)
    module_0.RDictOfMatcher(r_dict_enum_0, key_matcher=bool_3)