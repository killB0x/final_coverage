# Automatically generated by Pynguin.
import pytest
import rambutan3.check_args.base.RInstanceByTypeNameMatcher as module_0
import rambutan3.check_args.RCheckArgsError as module_1
import rambutan3.string.RStr as module_2

def test_case_0():
    str_0 = 'zwz'
    r_instance_by_type_name_matcher_0 = module_0.RInstanceByTypeNameMatcher(str_0)
    assert f'{type(r_instance_by_type_name_matcher_0).__module__}.{type(r_instance_by_type_name_matcher_0).__qualname__}' == 'rambutan3.check_args.base.RInstanceByTypeNameMatcher.RInstanceByTypeNameMatcher'
    with pytest.raises(module_1.RCheckArgsError):
        r_instance_by_type_name_matcher_0.check_arg(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'b5/'
    module_0.RInstanceByTypeNameMatcher(str_0)

def test_case_2():
    str_0 = 'd'
    r_instance_by_type_name_matcher_0 = module_0.RInstanceByTypeNameMatcher(str_0)
    assert f'{type(r_instance_by_type_name_matcher_0).__module__}.{type(r_instance_by_type_name_matcher_0).__qualname__}' == 'rambutan3.check_args.base.RInstanceByTypeNameMatcher.RInstanceByTypeNameMatcher'
    r_str_0 = module_2.RStr()
    none_type_0 = None
    bool_0 = r_instance_by_type_name_matcher_0.__eq__(none_type_0)
    assert bool_0 is False
    with pytest.raises(TypeError):
        r_str_0.__iter__()

def test_case_3():
    str_0 = 'd'
    r_instance_by_type_name_matcher_0 = module_0.RInstanceByTypeNameMatcher(str_0)
    assert f'{type(r_instance_by_type_name_matcher_0).__module__}.{type(r_instance_by_type_name_matcher_0).__qualname__}' == 'rambutan3.check_args.base.RInstanceByTypeNameMatcher.RInstanceByTypeNameMatcher'
    bool_0 = r_instance_by_type_name_matcher_0.__eq__(r_instance_by_type_name_matcher_0)
    assert bool_0 is True
    r_str_0 = module_2.RStr()
    with pytest.raises(TypeError):
        r_str_0.__iter__()