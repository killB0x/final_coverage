# Automatically generated by Pynguin.
import pytest
import test_lab.log as module_0

def test_case_0():
    log_0 = module_0.Log()
    assert module_0.DEBUG == 0
    assert module_0.INFO == 1
    assert module_0.WARNING == 2
    assert module_0.ERROR == 3
    assert module_0.RESULT == 9
    assert module_0.Log.LEVEL == 2

def test_case_1():
    str_0 = 'XT!'
    log_0 = module_0.Log()
    assert module_0.DEBUG == 0
    assert module_0.INFO == 1
    assert module_0.WARNING == 2
    assert module_0.ERROR == 3
    assert module_0.RESULT == 9
    assert module_0.Log.LEVEL == 2
    var_0 = log_0.debug(str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    log_0 = module_0.Log()
    assert module_0.DEBUG == 0
    assert module_0.INFO == 1
    assert module_0.WARNING == 2
    assert module_0.ERROR == 3
    assert module_0.RESULT == 9
    assert module_0.Log.LEVEL == 2
    log_0.warning(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    log_0 = module_0.Log()
    assert module_0.DEBUG == 0
    assert module_0.INFO == 1
    assert module_0.WARNING == 2
    assert module_0.ERROR == 3
    assert module_0.RESULT == 9
    assert module_0.Log.LEVEL == 2
    var_0 = log_0.info(list_0)
    var_0.debug(list_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 3229
    log_0 = module_0.Log()
    assert module_0.DEBUG == 0
    assert module_0.INFO == 1
    assert module_0.WARNING == 2
    assert module_0.ERROR == 3
    assert module_0.RESULT == 9
    assert module_0.Log.LEVEL == 2
    log_0.error(int_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    log_0 = module_0.Log()
    assert module_0.DEBUG == 0
    assert module_0.INFO == 1
    assert module_0.WARNING == 2
    assert module_0.ERROR == 3
    assert module_0.RESULT == 9
    assert module_0.Log.LEVEL == 2
    list_0 = [none_type_0, log_0]
    log_0.result(log_0, *list_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    float_0 = -103.03
    log_0 = module_0.Log()
    assert module_0.DEBUG == 0
    assert module_0.INFO == 1
    assert module_0.WARNING == 2
    assert module_0.ERROR == 3
    assert module_0.RESULT == 9
    assert module_0.Log.LEVEL == 2
    var_0 = log_0.whitespace()
    var_0.info(float_0)