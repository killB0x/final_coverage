# Automatically generated by Pynguin.
import pytest
import flata.middlewares as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    caching_middleware_0 = module_0.CachingMiddleware()
    assert caching_middleware_0.storage is None
    assert caching_middleware_0.cache is None
    assert module_0.CachingMiddleware.WRITE_CACHE_SIZE == 1000
    caching_middleware_0.read()

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    middleware_0 = module_0.Middleware(bool_0)
    caching_middleware_0 = module_0.CachingMiddleware()
    assert caching_middleware_0.storage is None
    assert caching_middleware_0.cache is None
    assert module_0.CachingMiddleware.WRITE_CACHE_SIZE == 1000
    var_0 = caching_middleware_0.flush()
    none_type_0 = None
    var_1 = caching_middleware_0.write(none_type_0)
    middleware_1 = module_0.Middleware(var_1)
    var_2 = caching_middleware_0.write(middleware_1)
    var_3 = caching_middleware_0.write(middleware_1)
    var_4 = caching_middleware_0.write(var_1)
    var_5 = caching_middleware_0.write(var_3)
    var_4.close()

@pytest.mark.xfail(strict=True)
def test_case_2():
    caching_middleware_0 = module_0.CachingMiddleware()
    assert caching_middleware_0.storage is None
    assert caching_middleware_0.cache is None
    assert module_0.CachingMiddleware.WRITE_CACHE_SIZE == 1000
    var_0 = caching_middleware_0.write(caching_middleware_0)
    caching_middleware_0.flush()

@pytest.mark.xfail(strict=True)
def test_case_3():
    caching_middleware_0 = module_0.CachingMiddleware()
    assert caching_middleware_0.storage is None
    assert caching_middleware_0.cache is None
    assert module_0.CachingMiddleware.WRITE_CACHE_SIZE == 1000
    var_0 = caching_middleware_0.flush()
    caching_middleware_1 = module_0.CachingMiddleware(caching_middleware_0)
    assert caching_middleware_1.storage is None
    float_0 = 674.47
    caching_middleware_1.__getattr__(float_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    middleware_0 = module_0.Middleware()
    none_type_0 = None
    middleware_0.__getattr__(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    caching_middleware_0 = module_0.CachingMiddleware()
    assert caching_middleware_0.storage is None
    assert caching_middleware_0.cache is None
    assert module_0.CachingMiddleware.WRITE_CACHE_SIZE == 1000
    int_0 = 4303
    middleware_0 = module_0.Middleware(int_0)
    caching_middleware_1 = module_0.CachingMiddleware()
    assert caching_middleware_1.storage is None
    assert caching_middleware_1.cache is None
    caching_middleware_0.__call__()

@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    middleware_0 = module_0.Middleware(bool_0)
    caching_middleware_0 = module_0.CachingMiddleware()
    assert caching_middleware_0.storage is None
    assert caching_middleware_0.cache is None
    assert module_0.CachingMiddleware.WRITE_CACHE_SIZE == 1000
    var_0 = caching_middleware_0.flush()
    none_type_0 = None
    var_1 = caching_middleware_0.write(none_type_0)
    middleware_1 = module_0.Middleware(var_1)
    var_2 = caching_middleware_0.write(middleware_1)
    caching_middleware_1 = module_0.CachingMiddleware()
    assert caching_middleware_1.storage is None
    var_3 = caching_middleware_0.write(middleware_1)
    var_4 = caching_middleware_0.write(var_1)
    var_5 = caching_middleware_0.write(var_3)
    caching_middleware_1.close()

@pytest.mark.xfail(strict=True)
def test_case_7():
    caching_middleware_0 = module_0.CachingMiddleware()
    assert caching_middleware_0.storage is None
    assert caching_middleware_0.cache is None
    assert module_0.CachingMiddleware.WRITE_CACHE_SIZE == 1000
    none_type_0 = None
    var_0 = caching_middleware_0.write(caching_middleware_0)
    var_1 = caching_middleware_0.write(none_type_0)
    int_0 = 4303
    dict_0 = {none_type_0: var_0, none_type_0: var_1}
    var_2 = caching_middleware_0.write(dict_0)
    var_3 = caching_middleware_0.write(int_0)
    var_4 = caching_middleware_0.write(caching_middleware_0)
    none_type_1 = None
    var_5 = caching_middleware_0.read()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'flata.middlewares.CachingMiddleware'
    assert var_5.storage is None
    var_6 = caching_middleware_0.write(int_0)
    var_7 = caching_middleware_0.write(none_type_1)
    var_8 = caching_middleware_0.write(none_type_1)
    var_9 = caching_middleware_0.write(var_7)
    str_0 = '.8'
    var_10 = caching_middleware_0.write(str_0)
    var_11 = caching_middleware_0.write(var_6)
    middleware_0 = module_0.Middleware(int_0)
    var_12 = caching_middleware_0.write(middleware_0)
    var_13 = caching_middleware_0.write(var_11)
    var_14 = caching_middleware_0.write(var_12)
    var_10.close()