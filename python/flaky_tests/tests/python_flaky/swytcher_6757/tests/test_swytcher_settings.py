# Automatically generated by Pynguin.
import pytest
import swytcher.settings as module_0

def test_case_0():
    none_type_0 = module_0.load_configs()
    assert f'{type(module_0.CONFIG_INI).__module__}.{type(module_0.CONFIG_INI).__qualname__}' == 'configparser.ConfigParser'
    assert len(module_0.CONFIG_INI) == 4
    assert module_0.NOTIFY is True
    assert module_0.PATH_TEMPLATES == ('{home}/.config/swytcher/{filename}',)

@pytest.mark.xfail(strict=True)
def test_case_1():
    complex_0 = (2720.291+1180.582j)
    module_0.copy_config(complex_0)

def test_case_2():
    int_0 = 0
    str_0 = 'm|+^'
    str_1 = module_0.get_config(str_0)
    assert str_1 == ''
    assert f'{type(module_0.CONFIG_INI).__module__}.{type(module_0.CONFIG_INI).__qualname__}' == 'configparser.ConfigParser'
    assert len(module_0.CONFIG_INI) == 4
    assert module_0.NOTIFY is True
    assert module_0.PATH_TEMPLATES == ('{home}/.config/swytcher/{filename}',)
    list_0 = module_0.conf_paths(str_1)
    str_2 = 'k'
    tuple_0 = (int_0, str_2)
    none_type_0 = module_0.load_configs()
    list_1 = module_0.conf_paths(tuple_0)
    none_type_1 = module_0.load_configs()

@pytest.mark.xfail(strict=True)
def test_case_3():
    complex_0 = (2720.291+1180.582j)
    module_0.setup_layouts(complex_0, complex_0)

def test_case_4():
    list_0 = []
    with pytest.raises(AssertionError):
        module_0.setup_layouts(list_0, list_0)

def test_case_5():
    int_0 = 0
    str_0 = 'm|+^'
    str_1 = module_0.get_config(str_0)
    assert str_1 == ''
    assert f'{type(module_0.CONFIG_INI).__module__}.{type(module_0.CONFIG_INI).__qualname__}' == 'configparser.ConfigParser'
    assert len(module_0.CONFIG_INI) == 4
    assert module_0.NOTIFY is True
    assert module_0.PATH_TEMPLATES == ('{home}/.config/swytcher/{filename}',)
    list_0 = module_0.conf_paths(str_1)
    tuple_0 = (int_0, str_1)
    none_type_0 = module_0.load_configs()
    list_1 = module_0.conf_paths(tuple_0)
    none_type_1 = module_0.load_configs()

def test_case_6():
    none_type_0 = module_0.load_configs()
    assert f'{type(module_0.CONFIG_INI).__module__}.{type(module_0.CONFIG_INI).__qualname__}' == 'configparser.ConfigParser'
    assert len(module_0.CONFIG_INI) == 4
    assert module_0.NOTIFY is True
    assert module_0.PATH_TEMPLATES == ('{home}/.config/swytcher/{filename}',)
    list_0 = module_0.conf_paths(none_type_0)
    none_type_1 = module_0.load_configs()
    str_0 = 'config.ini'
    with pytest.raises(FileExistsError):
        module_0.copy_config(str_0)

def test_case_7():
    str_0 = ''
    dict_0 = {str_0: str_0}
    var_0 = module_0.setup_layouts(str_0, dict_0)
    assert f'{type(module_0.CONFIG_INI).__module__}.{type(module_0.CONFIG_INI).__qualname__}' == 'configparser.ConfigParser'
    assert len(module_0.CONFIG_INI) == 4
    assert module_0.NOTIFY is True
    assert module_0.PATH_TEMPLATES == ('{home}/.config/swytcher/{filename}',)

def test_case_8():
    none_type_0 = module_0.load_configs()
    assert f'{type(module_0.CONFIG_INI).__module__}.{type(module_0.CONFIG_INI).__qualname__}' == 'configparser.ConfigParser'
    assert len(module_0.CONFIG_INI) == 4
    assert module_0.NOTIFY is True
    assert module_0.PATH_TEMPLATES == ('{home}/.config/swytcher/{filename}',)