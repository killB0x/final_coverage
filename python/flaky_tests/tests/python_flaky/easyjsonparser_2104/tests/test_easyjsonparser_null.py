# Automatically generated by Pynguin.
import pytest
import easyjsonparser.null as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.Null()

@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0._NullInstance()

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.Null(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    null_instance_0 = module_0._NullInstance(none_type_0)
    assert f'{type(null_instance_0).__module__}.{type(null_instance_0).__qualname__}' == 'easyjsonparser.null._NullInstance'
    module_0._NullInstance()

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    null_instance_0 = module_0._NullInstance(none_type_0)
    assert f'{type(null_instance_0).__module__}.{type(null_instance_0).__qualname__}' == 'easyjsonparser.null._NullInstance'
    null_instance_1 = null_instance_0.compute_to_json()
    assert null_instance_1 == 'null'
    var_0 = null_instance_1.__repr__()
    assert var_0 == "'null'"
    var_1 = null_instance_1.__repr__()
    assert var_1 == "'null'"
    null_instance_1.find_all(var_1)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    null_instance_0 = module_0._NullInstance(none_type_0)
    assert f'{type(null_instance_0).__module__}.{type(null_instance_0).__qualname__}' == 'easyjsonparser.null._NullInstance'
    var_0 = null_instance_0.__repr__()
    var_1 = null_instance_0.find(null_instance_0)
    var_2 = null_instance_0.check_and_sanitize_input(null_instance_0)
    var_3 = null_instance_0.__repr__()
    var_3.find_all(var_3)