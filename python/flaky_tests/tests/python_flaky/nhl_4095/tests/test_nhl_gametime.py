# Automatically generated by Pynguin.
import pytest
import nhl.gametime as module_0
import nhl.flyweight as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    none_type_0 = None
    int_0 = 852
    gametime_0 = module_0.Gametime(bool_0, int_0)
    assert f'{type(gametime_0).__module__}.{type(gametime_0).__qualname__}' == 'nhl.gametime.Gametime'
    assert f'{type(module_0.Gametime.has_key).__module__}.{type(module_0.Gametime.has_key).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Gametime.from_key).__module__}.{type(module_0.Gametime.from_key).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Gametime.s).__module__}.{type(module_0.Gametime.s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.m_s).__module__}.{type(module_0.Gametime.m_s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period_str).__module__}.{type(module_0.Gametime.period_str).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period_m_s).__module__}.{type(module_0.Gametime.period_m_s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period).__module__}.{type(module_0.Gametime.period).__qualname__}' == 'builtins.member_descriptor'
    assert f'{type(module_0.Gametime.period_s).__module__}.{type(module_0.Gametime.period_s).__qualname__}' == 'builtins.member_descriptor'
    int_1 = 2110
    gametime_1 = module_0.Gametime(bool_0, int_1)
    var_0 = gametime_0.__repr__()
    assert var_0 == '<nhl.Gametime: 1st 14:12>'
    var_1 = var_0.__eq__(none_type_0)
    var_2 = var_1.__eq__(bool_0)
    gametime_2 = module_0.Gametime(int_1, bool_0)
    module_1.Flyweight()

def test_case_1():
    bool_0 = False
    gametime_0 = module_0.Gametime(bool_0, bool_0)
    assert f'{type(gametime_0).__module__}.{type(gametime_0).__qualname__}' == 'nhl.gametime.Gametime'
    assert f'{type(module_0.Gametime.has_key).__module__}.{type(module_0.Gametime.has_key).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Gametime.from_key).__module__}.{type(module_0.Gametime.from_key).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Gametime.s).__module__}.{type(module_0.Gametime.s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.m_s).__module__}.{type(module_0.Gametime.m_s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period_str).__module__}.{type(module_0.Gametime.period_str).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period_m_s).__module__}.{type(module_0.Gametime.period_m_s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period).__module__}.{type(module_0.Gametime.period).__qualname__}' == 'builtins.member_descriptor'
    assert f'{type(module_0.Gametime.period_s).__module__}.{type(module_0.Gametime.period_s).__qualname__}' == 'builtins.member_descriptor'
    var_0 = gametime_0.__repr__()
    assert var_0 == '<nhl.Gametime: Falseth 00:00>'

def test_case_2():
    int_0 = 12
    gametime_0 = module_0.Gametime(int_0, int_0)
    assert f'{type(gametime_0).__module__}.{type(gametime_0).__qualname__}' == 'nhl.gametime.Gametime'
    assert f'{type(module_0.Gametime.has_key).__module__}.{type(module_0.Gametime.has_key).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Gametime.from_key).__module__}.{type(module_0.Gametime.from_key).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Gametime.s).__module__}.{type(module_0.Gametime.s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.m_s).__module__}.{type(module_0.Gametime.m_s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period_str).__module__}.{type(module_0.Gametime.period_str).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period_m_s).__module__}.{type(module_0.Gametime.period_m_s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period).__module__}.{type(module_0.Gametime.period).__qualname__}' == 'builtins.member_descriptor'
    assert f'{type(module_0.Gametime.period_s).__module__}.{type(module_0.Gametime.period_s).__qualname__}' == 'builtins.member_descriptor'

def test_case_3():
    int_0 = 3
    gametime_0 = module_0.Gametime(int_0, int_0)
    assert f'{type(gametime_0).__module__}.{type(gametime_0).__qualname__}' == 'nhl.gametime.Gametime'
    assert f'{type(module_0.Gametime.has_key).__module__}.{type(module_0.Gametime.has_key).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Gametime.from_key).__module__}.{type(module_0.Gametime.from_key).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Gametime.s).__module__}.{type(module_0.Gametime.s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.m_s).__module__}.{type(module_0.Gametime.m_s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period_str).__module__}.{type(module_0.Gametime.period_str).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period_m_s).__module__}.{type(module_0.Gametime.period_m_s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period).__module__}.{type(module_0.Gametime.period).__qualname__}' == 'builtins.member_descriptor'
    assert f'{type(module_0.Gametime.period_s).__module__}.{type(module_0.Gametime.period_s).__qualname__}' == 'builtins.member_descriptor'
    var_0 = gametime_0.__repr__()
    assert var_0 == '<nhl.Gametime: 3rd 00:03>'

@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    int_0 = 2
    gametime_0 = module_0.Gametime(int_0, bool_0)
    assert f'{type(gametime_0).__module__}.{type(gametime_0).__qualname__}' == 'nhl.gametime.Gametime'
    assert f'{type(module_0.Gametime.has_key).__module__}.{type(module_0.Gametime.has_key).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Gametime.from_key).__module__}.{type(module_0.Gametime.from_key).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.Gametime.s).__module__}.{type(module_0.Gametime.s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.m_s).__module__}.{type(module_0.Gametime.m_s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period_str).__module__}.{type(module_0.Gametime.period_str).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period_m_s).__module__}.{type(module_0.Gametime.period_m_s).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Gametime.period).__module__}.{type(module_0.Gametime.period).__qualname__}' == 'builtins.member_descriptor'
    assert f'{type(module_0.Gametime.period_s).__module__}.{type(module_0.Gametime.period_s).__qualname__}' == 'builtins.member_descriptor'
    var_0 = gametime_0.__repr__()
    assert var_0 == '<nhl.Gametime: 2nd 00:01>'
    var_1 = gametime_0.__hash__()
    gametime_0.__new__(bool_0)