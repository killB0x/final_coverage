# Automatically generated by Pynguin.
import pytest
import nhl.list as module_0

def test_case_0():
    str_0 = '\nModule containing NHL game objects\n'
    list_0 = [str_0]
    dict_0 = {str_0: str_0, str_0: str_0}
    list_1 = module_0.List(*list_0, **dict_0)
    assert f'{type(module_0.List.len).__module__}.{type(module_0.List.len).__qualname__}' == 'builtins.property'
    var_0 = list_1.select(str_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'nhl.list.List'
    assert len(var_0) == 36
    var_1 = var_0.filter(str_0, list_1)
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'nhl.list.List'
    assert len(var_1) == 0

def test_case_1():
    none_type_0 = None
    list_0 = module_0.List()
    assert f'{type(module_0.List.len).__module__}.{type(module_0.List.len).__qualname__}' == 'builtins.property'
    var_0 = list_0.select(none_type_0)

def test_case_2():
    list_0 = module_0.List()
    assert f'{type(module_0.List.len).__module__}.{type(module_0.List.len).__qualname__}' == 'builtins.property'
    none_type_0 = None
    var_0 = list_0.filter(list_0, none_type_0)

def test_case_3():
    list_0 = module_0.List()
    assert f'{type(module_0.List.len).__module__}.{type(module_0.List.len).__qualname__}' == 'builtins.property'

def test_case_4():
    str_0 = '\nModule containing NHL game objects\n'
    list_0 = [str_0]
    dict_0 = {}
    list_1 = module_0.List(*list_0, **dict_0)
    assert f'{type(module_0.List.len).__module__}.{type(module_0.List.len).__qualname__}' == 'builtins.property'
    var_0 = list_1.filter(str_0, list_1)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'nhl.list.List'
    assert len(var_0) == 0
    var_1 = var_0.unique()

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'Q"h"E.9Ce4%D8\tEN:'
    list_0 = [str_0]
    list_1 = module_0.List(*list_0)
    assert f'{type(module_0.List.len).__module__}.{type(module_0.List.len).__qualname__}' == 'builtins.property'
    list_1.filter(str_0, list_0, str_0)

def test_case_6():
    str_0 = 'Q8h9E.Ceze\nD8\tEN:'
    list_0 = [str_0]
    list_1 = module_0.List(*list_0)
    assert f'{type(module_0.List.len).__module__}.{type(module_0.List.len).__qualname__}' == 'builtins.property'
    var_0 = list_1.filter(str_0, list_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'nhl.list.List'
    assert len(var_0) == 0

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '\nModule containing NHL game objects\n'
    list_0 = [str_0]
    none_type_0 = None
    none_type_1 = None
    list_1 = module_0.List(*list_0)
    assert f'{type(module_0.List.len).__module__}.{type(module_0.List.len).__qualname__}' == 'builtins.property'
    var_0 = list_1.unique()
    var_1 = var_0.unique()
    var_2 = var_1.filter(str_0, none_type_1)
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'nhl.list.List'
    assert len(var_2) == 21
    var_2.select(list_0, none_type_0)