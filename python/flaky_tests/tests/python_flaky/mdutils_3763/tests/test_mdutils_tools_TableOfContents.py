# Automatically generated by Pynguin.
import pytest
import mdutils.tools.TableOfContents as module_0

def test_case_0():
    table_of_contents_0 = module_0.TableOfContents()

@pytest.mark.xfail(strict=True)
def test_case_1():
    table_of_contents_0 = module_0.TableOfContents()
    table_of_contents_0.create_table_of_contents(table_of_contents_0)

def test_case_2():
    table_of_contents_0 = module_0.TableOfContents()
    str_0 = 'T\\mC0dW\\-a9&G%kKaAen'
    list_0 = [str_0, str_0]
    tuple_0 = (list_0,)
    var_0 = table_of_contents_0.create_table_of_contents(tuple_0)
    assert var_0 == '\n'
    with pytest.raises(ValueError):
        table_of_contents_0.create_table_of_contents(var_0, table_of_contents_0)

def test_case_3():
    table_of_contents_0 = module_0.TableOfContents()
    str_0 = 'T\\mC0dW\\-a&G%kaAen'
    var_0 = table_of_contents_0.create_table_of_contents(str_0)
    assert var_0 == '\n* [T](#t)\n* [\\](#)\n* [m](#m)\n* [C](#c)\n* [0](#0)\n* [d](#d)\n* [W](#w)\n* [\\](#)\n* [-](#-)\n* [a](#a)\n* [&](#)\n* [G](#g)\n* [%](#)\n* [k](#k)\n* [a](#a)\n* [A](#a)\n* [e](#e)\n* [n](#n)\n'

def test_case_4():
    table_of_contents_0 = module_0.TableOfContents()
    list_0 = [table_of_contents_0]
    tuple_0 = (list_0,)
    var_0 = table_of_contents_0.create_table_of_contents(tuple_0)
    assert var_0 == '\n'

@pytest.mark.xfail(strict=True)
def test_case_5():
    table_of_contents_0 = module_0.TableOfContents()
    str_0 = 'T\\C0dW\\-a9&G%kKaAen'
    list_0 = []
    tuple_0 = (list_0,)
    var_0 = table_of_contents_0.create_table_of_contents(str_0)
    assert var_0 == '\n* [T](#t)\n* [\\](#)\n* [C](#c)\n* [0](#0)\n* [d](#d)\n* [W](#w)\n* [\\](#)\n* [-](#-)\n* [a](#a)\n* [9](#9)\n* [&](#)\n* [G](#g)\n* [%](#)\n* [k](#k)\n* [K](#k)\n* [a](#a)\n* [A](#a)\n* [e](#e)\n* [n](#n)\n'
    var_1 = table_of_contents_0.create_table_of_contents(tuple_0)
    assert var_1 == '\n'
    table_of_contents_0.create_table_of_contents(table_of_contents_0)

def test_case_6():
    table_of_contents_0 = module_0.TableOfContents()
    str_0 = 'T\\+0d\\-q9&:%;aA)n'
    list_0 = [str_0]
    tuple_0 = (list_0,)
    int_0 = 2
    var_0 = table_of_contents_0.create_table_of_contents(tuple_0, int_0)
    assert var_0 == '\n\t* [T\\+0d\\-q9&:%;aA)n](#t0d-q9aan)\n'