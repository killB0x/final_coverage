# Automatically generated by Pynguin.
import pytest
import mdutils.tools.TextUtils as module_0

def test_case_0():
    text_utils_0 = module_0.TextUtils()

def test_case_1():
    str_0 = 'i'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.insert_code(str_0)
    assert var_0 == '```\ni\n```'
    var_1 = text_utils_0.text_format(str_0, str_0, str_0)
    assert var_1 == '*<font color="i">i</font>*'

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'i'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.insert_code(str_0, str_0)
    assert var_0 == '```i\ni\n```'
    text_utils_0.text_format(text_utils_0, str_0, align=str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.text_format(text_utils_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'mdutils.tools.TextUtils.TextUtils'
    text_utils_0.inline_code(var_0)

def test_case_4():
    str_0 = 'ieBte'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.text_format(str_0, str_0, str_0, str_0)
    assert var_0 == '*<font color="ieBte">ieBte</font>*'
    var_1 = text_utils_0.bold(var_0)
    assert var_1 == '***<font color="ieBte">ieBte</font>***'

def test_case_5():
    str_0 = ')i.s_}s<2XR'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.text_format(str_0, str_0)
    assert var_0 == '*)i.s_}s<2XR*'

def test_case_6():
    str_0 = 'iKJj'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.center_text(str_0)
    assert var_0 == '<center>iKJj</center>'
    var_1 = text_utils_0.text_format(str_0, str_0, str_0)
    assert var_1 == '*<font color="iKJj">iKJj</font>*'

def test_case_7():
    str_0 = ')i.s}|<2mR'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.text_format(str_0, str_0, str_0)
    assert var_0 == '*<font color=")i.s}|<2mR">)i.s}|<2mR</font>*'

def test_case_8():
    str_0 = ')i.}<2R'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.text_format(str_0, str_0)
    assert var_0 == '*)i.}<2R*'
    var_1 = text_utils_0.text_external_link(str_0)
    assert var_1 == '[)i.}<2R]()'

def test_case_9():
    str_0 = ')i.}<2R'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.text_format(str_0, str_0, str_0)
    assert var_0 == '*<font color=")i.}<2R">)i.}<2R</font>*'
    var_1 = text_utils_0.add_tooltip(var_0, var_0)
    assert var_1 == '*<font color=")i.}<2R">)i.}<2R</font>* \'*<font color=")i.}<2R">)i.}<2R</font>*\''

def test_case_10():
    str_0 = '96)i.C)s_}s<M*XR'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.text_format(str_0, align=str_0)
    assert var_0 == '96)i.C)s_}s<M*XR'
    text_utils_1 = module_0.TextUtils()
    var_1 = text_utils_1.center_text(str_0)
    assert var_1 == '<center>96)i.C)s_}s<M*XR</center>'
    text_utils_2 = module_0.TextUtils()
    str_1 = 'Bm0/->U\ry[)'
    var_2 = text_utils_0.text_color(str_1)
    assert var_2 == '<font color="black">Bm0/->U\ry[)</font>'
    with pytest.raises(ValueError):
        text_utils_1.text_format(var_0, str_1, str_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = 'ite'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.text_format(str_0, str_0, str_0, str_0)
    assert var_0 == '*<font color="ite">ite</font>*'
    var_1 = text_utils_0.text_color(str_0, var_0)
    assert var_1 == '<font color="*<font color="ite">ite</font>*">ite</font>'
    text_utils_0.text_format(text_utils_0, var_1)

def test_case_12():
    str_0 = 'ite'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.text_format(str_0, str_0, str_0, str_0)
    assert var_0 == '*<font color="ite">ite</font>*'
    var_1 = text_utils_0.inline_code(var_0)
    assert var_1 == '``*<font color="ite">ite</font>*``'
    var_2 = text_utils_0.insert_code(var_0)
    assert var_2 == '```\n*<font color="ite">ite</font>*\n```'
    var_3 = text_utils_0.text_format(var_1, var_2)
    assert var_3 == '*````*<font color="ite">ite</font>*````*'

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = 'center'
    text_utils_0 = module_0.TextUtils()
    var_0 = text_utils_0.text_format(str_0, str_0, str_0, str_0)
    assert var_0 == '<center><font color="center">``center``</font></center>'
    var_1 = text_utils_0.text_format(text_utils_0)
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'mdutils.tools.TextUtils.TextUtils'
    module_0.TextUtils(*str_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    str_0 = 'b^mbH"D\x0buAqu{\'y;Ua#8'
    text_utils_0 = module_0.TextUtils()
    text_utils_1 = module_0.TextUtils()
    var_0 = text_utils_1.center_text(str_0)
    assert var_0 == '<center>b^mbH"D\x0buAqu{\'y;Ua#8</center>'
    var_1 = text_utils_0.text_format(str_0, str_0, str_0)
    assert var_1 == '**<font color="b^mbH"D\x0buAqu{\'y;Ua#8">b^mbH"D\x0buAqu{\'y;Ua#8</font>**'
    var_1.italics(var_1)