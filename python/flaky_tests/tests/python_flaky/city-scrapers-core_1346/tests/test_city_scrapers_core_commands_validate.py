# Automatically generated by Pynguin.
import pytest
import city_scrapers_core.commands.validate as module_0

def test_case_0():
    command_0 = module_0.Command()
    assert module_0.Command.requires_project is True
    assert f'{type(module_0.Command.spiders_dir).__module__}.{type(module_0.Command.spiders_dir).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_1():
    command_0 = module_0.Command()
    assert module_0.Command.requires_project is True
    assert f'{type(module_0.Command.spiders_dir).__module__}.{type(module_0.Command.spiders_dir).__qualname__}' == 'builtins.property'
    var_0 = command_0.long_desc()
    assert var_0 == 'Run a spider with validations, or validate all changed spiders in a PR'
    var_1 = command_0.long_desc()
    assert var_1 == 'Run a spider with validations, or validate all changed spiders in a PR'
    var_2 = command_0.short_desc()
    assert var_2 == 'Run a spider with validations, or validate all changed spiders in a PR'
    var_3 = command_0.syntax()
    assert var_3 == '[options] <spider>'
    var_4 = command_0.syntax()
    assert var_4 == '[options] <spider>'
    var_5 = command_0.long_desc()
    assert var_5 == 'Run a spider with validations, or validate all changed spiders in a PR'
    var_5.add_options(var_0)

def test_case_2():
    command_0 = module_0.Command()
    assert module_0.Command.requires_project is True
    assert f'{type(module_0.Command.spiders_dir).__module__}.{type(module_0.Command.spiders_dir).__qualname__}' == 'builtins.property'
    command_1 = module_0.Command()
    var_0 = command_1.short_desc()
    assert var_0 == 'Run a spider with validations, or validate all changed spiders in a PR'

@pytest.mark.xfail(strict=True)
def test_case_3():
    command_0 = module_0.Command()
    assert module_0.Command.requires_project is True
    assert f'{type(module_0.Command.spiders_dir).__module__}.{type(module_0.Command.spiders_dir).__qualname__}' == 'builtins.property'
    command_0.add_options(command_0)