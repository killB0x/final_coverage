# Automatically generated by Pynguin.
import pytest
import cabrillo.cabrillo as module_0
import cabrillo.errors as module_1

def test_case_0():
    cabrillo_0 = module_0.Cabrillo()
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False

@pytest.mark.xfail(strict=True)
def test_case_1():
    cabrillo_0 = module_0.Cabrillo()
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    var_0 = cabrillo_0.append_qso(cabrillo_0, cabrillo_0)
    assert len(cabrillo_0.qso) == 1
    cabrillo_0.append_qso(cabrillo_0, var_0)

def test_case_2():
    cabrillo_0 = module_0.Cabrillo()
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    var_0 = cabrillo_0.text()
    assert var_0 == 'START-OF-LOG: 3.0\nCREATED-BY: cabrillo (Python)\nEND-OF-LOG:\n'

def test_case_3():
    cabrillo_0 = module_0.Cabrillo()
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    var_0 = cabrillo_0.__str__()
    assert var_0 == '<Cabrillo for None>'
    var_1 = cabrillo_0.text()
    assert var_1 == 'START-OF-LOG: 3.0\nCREATED-BY: cabrillo (Python)\nEND-OF-LOG:\n'

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'contest'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    none_type_0 = None
    cabrillo_0 = module_0.Cabrillo(none_type_0)
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    cabrillo_1 = module_0.Cabrillo(**dict_0)
    assert f'{type(cabrillo_1).__module__}.{type(cabrillo_1).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_1.callsign is None
    assert cabrillo_1.operators is None
    assert cabrillo_1.contest == 'contest'
    assert cabrillo_1.claimed_score is None
    assert cabrillo_1.certificate is None
    assert cabrillo_1.category_operator is None
    assert cabrillo_1.category_assisted is None
    assert cabrillo_1.category_band is None
    assert cabrillo_1.category_power is None
    assert cabrillo_1.category_mode is None
    assert cabrillo_1.category_station is None
    assert cabrillo_1.category_time is None
    assert cabrillo_1.category_transmitter is None
    assert cabrillo_1.category_overlay is None
    assert cabrillo_1.offtime is None
    assert cabrillo_1.club is None
    assert cabrillo_1.name is None
    assert cabrillo_1.email is None
    assert cabrillo_1.location is None
    assert cabrillo_1.address is None
    assert cabrillo_1.address_city is None
    assert cabrillo_1.address_state_province is None
    assert cabrillo_1.address_postalcode is None
    assert cabrillo_1.address_country is None
    assert cabrillo_1.created_by == 'cabrillo (Python)'
    assert cabrillo_1.soapbox is None
    assert f'{type(cabrillo_1.x_anything).__module__}.{type(cabrillo_1.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_1.x_anything) == 0
    assert cabrillo_1.version == '3.0'
    assert cabrillo_1.qso == []
    assert cabrillo_1.ignore_order is False
    var_0 = cabrillo_1.append_qso(cabrillo_1, dict_0)
    assert len(cabrillo_1.qso) == 1
    var_1 = cabrillo_1.text()
    assert var_1 == 'START-OF-LOG: 3.0\nCONTEST: contest\nCREATED-BY: cabrillo (Python)\n<Cabrillo for None>\nEND-OF-LOG:\n'
    cabrillo_1.append_qso(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    cabrillo_0 = module_0.Cabrillo(ignore_order=bool_0)
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is True
    cabrillo_0.text()

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'contest'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    cabrillo_0 = module_0.Cabrillo(**dict_0)
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest == 'contest'
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    var_0 = cabrillo_0.append_qso(cabrillo_0, dict_0)
    assert len(cabrillo_0.qso) == 1
    var_1 = cabrillo_0.text()
    assert var_1 == 'START-OF-LOG: 3.0\nCONTEST: contest\nCREATED-BY: cabrillo (Python)\n<Cabrillo for None>\nEND-OF-LOG:\n'
    cabrillo_0.append_qso(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = 'certificate'
    str_1 = 'p2'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: str_0, str_0: str_0}
    cabrillo_0 = module_0.Cabrillo(**dict_0)
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate == 'certificate'
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    str_2 = 'So*E93ec'
    bool_0 = False
    var_0 = cabrillo_0.text()
    assert var_0 == 'START-OF-LOG: 3.0\nCERTIFICATE: YES\nCREATED-BY: cabrillo (Python)\nEND-OF-LOG:\n'
    var_1 = str_2.__len__()
    var_2 = var_0.__contains__(var_0)
    var_2.append(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'certificate'
    str_1 = ''
    dict_0 = {str_1: str_0, str_0: str_1, str_0: str_0, str_1: str_0, str_0: str_1}
    cabrillo_0 = module_0.Cabrillo(**dict_0)
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate == ''
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    var_0 = cabrillo_0.text()
    assert var_0 == 'START-OF-LOG: 3.0\nCERTIFICATE: NO\nCREATED-BY: cabrillo (Python)\nEND-OF-LOG:\n'
    var_1 = cabrillo_0.append_qso(str_0, str_1)
    assert cabrillo_0.qso == ['certificate']
    var_2 = var_0.__str__()
    assert var_2 == 'START-OF-LOG: 3.0\nCERTIFICATE: NO\nCREATED-BY: cabrillo (Python)\nEND-OF-LOG:\n'
    cabrillo_1 = module_0.Cabrillo()
    assert cabrillo_1.callsign is None
    assert cabrillo_1.operators is None
    assert cabrillo_1.contest is None
    assert cabrillo_1.claimed_score is None
    assert cabrillo_1.certificate is None
    assert cabrillo_1.category_operator is None
    assert cabrillo_1.category_assisted is None
    assert cabrillo_1.category_band is None
    assert cabrillo_1.category_power is None
    assert cabrillo_1.category_mode is None
    assert cabrillo_1.category_station is None
    assert cabrillo_1.category_time is None
    assert cabrillo_1.category_transmitter is None
    assert cabrillo_1.category_overlay is None
    assert cabrillo_1.offtime is None
    assert cabrillo_1.club is None
    assert cabrillo_1.name is None
    assert cabrillo_1.email is None
    assert cabrillo_1.location is None
    assert cabrillo_1.address is None
    assert cabrillo_1.address_city is None
    assert cabrillo_1.address_state_province is None
    assert cabrillo_1.address_postalcode is None
    assert cabrillo_1.address_country is None
    assert cabrillo_1.created_by == 'cabrillo (Python)'
    assert cabrillo_1.soapbox is None
    var_3 = cabrillo_1.append_qso(var_0, var_0)
    assert cabrillo_1.qso == ['START-OF-LOG: 3.0\nCERTIFICATE: NO\nCREATED-BY: cabrillo (Python)\nEND-OF-LOG:\n']
    cabrillo_1.append_qso(str_0, str_1)

def test_case_9():
    str_0 = 'version'
    str_1 = 'p2'
    dict_0 = {str_1: str_0, str_0: str_1, str_0: str_0, str_1: str_0, str_0: str_1}
    with pytest.raises(module_1.InvalidLogException):
        module_0.Cabrillo(**dict_0)

def test_case_10():
    str_0 = 'iO%)v:\t?7VA\t;71`hz'
    str_1 = '-'
    str_2 = 'category_operator'
    cabrillo_0 = module_0.Cabrillo(ignore_order=str_0)
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order == 'iO%)v:\t?7VA\t;71`hz'
    dict_0 = {str_0: str_0, str_1: str_0, str_2: str_1}
    with pytest.raises(module_1.InvalidLogException):
        module_0.Cabrillo(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = 'created_by'
    str_1 = ''
    dict_0 = {str_1: str_0, str_0: str_1, str_0: str_0, str_1: str_0, str_0: str_1}
    cabrillo_0 = module_0.Cabrillo(**dict_0)
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == ''
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    var_0 = cabrillo_0.append_qso(str_0, str_1)
    assert cabrillo_0.qso == ['created_by']
    none_type_0 = None
    var_1 = cabrillo_0.write(none_type_0)
    cabrillo_1 = module_0.Cabrillo()
    assert cabrillo_1.callsign is None
    assert cabrillo_1.operators is None
    assert cabrillo_1.contest is None
    assert cabrillo_1.claimed_score is None
    assert cabrillo_1.certificate is None
    assert cabrillo_1.category_operator is None
    assert cabrillo_1.category_assisted is None
    assert cabrillo_1.category_band is None
    assert cabrillo_1.category_power is None
    assert cabrillo_1.category_mode is None
    assert cabrillo_1.category_station is None
    assert cabrillo_1.category_time is None
    assert cabrillo_1.category_transmitter is None
    assert cabrillo_1.category_overlay is None
    assert cabrillo_1.offtime is None
    assert cabrillo_1.club is None
    assert cabrillo_1.name is None
    assert cabrillo_1.email is None
    assert cabrillo_1.location is None
    assert cabrillo_1.address is None
    assert cabrillo_1.address_city is None
    assert cabrillo_1.address_state_province is None
    assert cabrillo_1.address_postalcode is None
    assert cabrillo_1.address_country is None
    assert cabrillo_1.created_by == 'cabrillo (Python)'
    assert cabrillo_1.soapbox is None
    str_2 = 'So*E3ec'
    var_2 = cabrillo_1.append_qso(str_0, var_1)
    cabrillo_1.append_qso(str_2, str_1)

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = 'offtime'
    str_1 = 'p2'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_1, str_1: str_0, str_0: str_0}
    cabrillo_0 = module_0.Cabrillo(**dict_0)
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime == 'offtime'
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    none_type_0 = None
    cabrillo_0.write(none_type_0)

def test_case_13():
    str_0 = 'operators'
    str_1 = 'contest'
    dict_0 = {str_1: str_0, str_0: str_1, str_0: str_0, str_1: str_0, str_0: str_1}
    cabrillo_0 = module_0.Cabrillo(**dict_0)
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators == 'contest'
    assert cabrillo_0.contest == 'operators'
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime is None
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    var_0 = cabrillo_0.text()
    assert var_0 == 'START-OF-LOG: 3.0\nOPERATORS: c o n t e s t\nCONTEST: operators\nCREATED-BY: cabrillo (Python)\nEND-OF-LOG:\n'

@pytest.mark.xfail(strict=True)
def test_case_14():
    str_0 = 'qso'
    str_1 = '4c*0kw(jJ\r5pC4>4AE'
    dict_0 = {str_1: str_0, str_0: str_1, str_0: str_0, str_1: str_0, str_0: str_1}
    module_0.Cabrillo(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    str_0 = 'offtime'
    str_1 = ''
    str_2 = '+)YKpFZ2$'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_1, str_1: str_0, str_2: str_0}
    cabrillo_0 = module_0.Cabrillo(**dict_0)
    assert f'{type(cabrillo_0).__module__}.{type(cabrillo_0).__qualname__}' == 'cabrillo.cabrillo.Cabrillo'
    assert cabrillo_0.callsign is None
    assert cabrillo_0.operators is None
    assert cabrillo_0.contest is None
    assert cabrillo_0.claimed_score is None
    assert cabrillo_0.certificate is None
    assert cabrillo_0.category_operator is None
    assert cabrillo_0.category_assisted is None
    assert cabrillo_0.category_band is None
    assert cabrillo_0.category_power is None
    assert cabrillo_0.category_mode is None
    assert cabrillo_0.category_station is None
    assert cabrillo_0.category_time is None
    assert cabrillo_0.category_transmitter is None
    assert cabrillo_0.category_overlay is None
    assert cabrillo_0.offtime == ''
    assert cabrillo_0.club is None
    assert cabrillo_0.name is None
    assert cabrillo_0.email is None
    assert cabrillo_0.location is None
    assert cabrillo_0.address is None
    assert cabrillo_0.address_city is None
    assert cabrillo_0.address_state_province is None
    assert cabrillo_0.address_postalcode is None
    assert cabrillo_0.address_country is None
    assert cabrillo_0.created_by == 'cabrillo (Python)'
    assert cabrillo_0.soapbox is None
    assert f'{type(cabrillo_0.x_anything).__module__}.{type(cabrillo_0.x_anything).__qualname__}' == 'collections.OrderedDict'
    assert len(cabrillo_0.x_anything) == 0
    assert cabrillo_0.version == '3.0'
    assert cabrillo_0.qso == []
    assert cabrillo_0.ignore_order is False
    var_0 = cabrillo_0.append_qso(dict_0, str_0)
    assert cabrillo_0.qso == [{'offtime': '', '': 'offtime', '+)YKpFZ2$': 'offtime'}]
    var_1 = cabrillo_0.__str__()
    assert var_1 == '<Cabrillo for None>'
    none_type_0 = None
    var_2 = cabrillo_0.text()
    assert var_2 == "START-OF-LOG: 3.0\nOFFTIME: \nCREATED-BY: cabrillo (Python)\n{'offtime': '', '': 'offtime', '+)YKpFZ2$': 'offtime'}\nEND-OF-LOG:\n"
    var_3 = cabrillo_0.write(none_type_0)
    var_4 = var_3.__str__()
    var_3.append_qso(str_0, dict_0)