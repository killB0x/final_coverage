# Automatically generated by Pynguin.
import pytest
import securenative.config.configuration_builder as module_0
import securenative.enums.failover_strategy as module_1
import builtins as module_2

def test_case_0():
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    str_0 = 'fail-loed'
    var_0 = configuration_builder_0.with_fail_over_strategy(str_0)
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.interval == 1000
    assert var_0.max_events == 1000
    assert var_0.timeout == 1500
    assert var_0.log_level == 'CRITICAL'
    assert var_0.fail_over_strategy == 'fail-open'

def test_case_1():
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'

def test_case_2():
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    var_0 = configuration_builder_0.with_fail_over_strategy(configuration_builder_0)
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.interval == 1000
    assert var_0.max_events == 1000
    assert var_0.timeout == 1500
    assert var_0.log_level == 'CRITICAL'
    assert var_0.fail_over_strategy == 'fail-open'
    fail_over_strategy_0 = module_1.FailOverStrategy.FAIL_CLOSED
    var_1 = configuration_builder_0.build()
    assert var_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_1.interval == 1000
    assert var_1.max_events == 1000
    assert var_1.timeout == 1500
    assert var_1.log_level == 'CRITICAL'
    assert var_1.fail_over_strategy == 'fail-open'
    var_2 = configuration_builder_0.with_interval(fail_over_strategy_0)
    assert var_2.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_2.max_events == 1000
    assert var_2.timeout == 1500
    assert var_2.log_level == 'CRITICAL'
    assert var_2.fail_over_strategy == 'fail-open'
    var_3 = configuration_builder_0.build()
    assert var_3.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_3.max_events == 1000
    assert var_3.timeout == 1500
    assert var_3.log_level == 'CRITICAL'
    assert var_3.fail_over_strategy == 'fail-open'
    configuration_builder_1 = module_0.ConfigurationBuilder()
    assert configuration_builder_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_1.interval == 1000
    assert configuration_builder_1.max_events == 1000
    assert configuration_builder_1.timeout == 1500
    assert configuration_builder_1.log_level == 'CRITICAL'
    var_4 = configuration_builder_0.default_config_builder()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'securenative.config.configuration_builder.ConfigurationBuilder'
    assert var_4.api_key is None
    assert var_4.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_4.interval == 1000
    assert var_4.max_events == 1000
    assert var_4.timeout == 1500
    assert var_4.auto_send is True
    assert var_4.disable is False
    assert var_4.log_level == 'CRITICAL'
    assert var_4.fail_over_strategy == 'fail-open'

def test_case_3():
    bytes_0 = b'\xaa\x03\x12\x0b\x7f\x82]\xfb>\xdb\xec\xb9P\xad4'
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    var_0 = configuration_builder_0.build()
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.interval == 1000
    assert var_0.max_events == 1000
    assert var_0.timeout == 1500
    assert var_0.log_level == 'CRITICAL'
    var_1 = var_0.with_fail_over_strategy(bytes_0)
    assert var_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_1.interval == 1000
    assert var_1.max_events == 1000
    assert var_1.timeout == 1500
    assert var_1.log_level == 'CRITICAL'
    assert var_1.fail_over_strategy == 'fail-open'
    var_2 = var_1.with_fail_over_strategy(bytes_0)
    assert var_2.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_2.interval == 1000
    assert var_2.max_events == 1000
    assert var_2.timeout == 1500
    assert var_2.log_level == 'CRITICAL'
    assert var_2.fail_over_strategy == 'fail-open'
    var_3 = var_2.with_api_key(bytes_0)
    assert var_3.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_3.interval == 1000
    assert var_3.max_events == 1000
    assert var_3.timeout == 1500
    assert var_3.log_level == 'CRITICAL'
    assert var_3.fail_over_strategy == 'fail-open'
    var_4 = configuration_builder_0.with_log_level(bytes_0)
    assert var_4.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_4.interval == 1000
    assert var_4.max_events == 1000
    assert var_4.timeout == 1500
    assert var_4.fail_over_strategy == 'fail-open'
    var_5 = var_2.build()
    assert var_5.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_5.interval == 1000
    assert var_5.max_events == 1000
    assert var_5.timeout == 1500
    assert var_5.fail_over_strategy == 'fail-open'
    var_6 = var_3.with_interval(var_0)
    assert var_6.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_6.max_events == 1000
    assert var_6.timeout == 1500
    assert var_6.fail_over_strategy == 'fail-open'

def test_case_4():
    object_0 = module_2.object()
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    str_0 = "'~\tf8V"
    str_1 = 'fail-loed'
    var_0 = configuration_builder_0.with_fail_over_strategy(str_1)
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.interval == 1000
    assert var_0.max_events == 1000
    assert var_0.timeout == 1500
    assert var_0.log_level == 'CRITICAL'
    assert var_0.fail_over_strategy == 'fail-open'
    var_1 = configuration_builder_0.with_api_url(str_0)
    assert var_1.interval == 1000
    assert var_1.max_events == 1000
    assert var_1.timeout == 1500
    assert var_1.log_level == 'CRITICAL'
    assert var_1.fail_over_strategy == 'fail-open'

def test_case_5():
    int_0 = 345
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    var_0 = configuration_builder_0.with_fail_over_strategy(int_0)
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.interval == 1000
    assert var_0.max_events == 1000
    assert var_0.timeout == 1500
    assert var_0.log_level == 'CRITICAL'
    assert var_0.fail_over_strategy == 'fail-open'
    var_1 = var_0.with_api_key(int_0)
    assert var_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_1.interval == 1000
    assert var_1.max_events == 1000
    assert var_1.timeout == 1500
    assert var_1.log_level == 'CRITICAL'
    assert var_1.fail_over_strategy == 'fail-open'
    var_2 = var_1.with_max_events(int_0)
    assert var_2.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_2.interval == 1000
    assert var_2.timeout == 1500
    assert var_2.log_level == 'CRITICAL'
    assert var_2.fail_over_strategy == 'fail-open'
    bool_0 = False
    configuration_builder_1 = module_0.ConfigurationBuilder()
    assert configuration_builder_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_1.interval == 1000
    assert configuration_builder_1.max_events == 1000
    assert configuration_builder_1.timeout == 1500
    assert configuration_builder_1.log_level == 'CRITICAL'
    var_3 = configuration_builder_1.with_fail_over_strategy(bool_0)
    assert var_3.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_3.interval == 1000
    assert var_3.max_events == 1000
    assert var_3.timeout == 1500
    assert var_3.log_level == 'CRITICAL'
    assert var_3.fail_over_strategy == 'fail-open'
    var_4 = configuration_builder_1.with_log_level(configuration_builder_1)
    assert var_4.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_4.interval == 1000
    assert var_4.max_events == 1000
    assert var_4.timeout == 1500
    assert var_4.fail_over_strategy == 'fail-open'
    var_5 = configuration_builder_1.with_fail_over_strategy(int_0)
    assert var_5.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_5.interval == 1000
    assert var_5.max_events == 1000
    assert var_5.timeout == 1500
    assert var_5.fail_over_strategy == 'fail-open'
    var_6 = var_4.build()
    assert var_6.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_6.interval == 1000
    assert var_6.max_events == 1000
    assert var_6.timeout == 1500
    assert var_6.fail_over_strategy == 'fail-open'
    var_7 = var_3.with_max_events(int_0)
    assert var_7.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_7.interval == 1000
    assert var_7.timeout == 1500
    assert var_7.fail_over_strategy == 'fail-open'
    var_8 = configuration_builder_1.with_log_level(var_7)
    assert var_8.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_8.interval == 1000
    assert var_8.timeout == 1500
    assert var_8.fail_over_strategy == 'fail-open'

def test_case_6():
    set_0 = set()
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    var_0 = configuration_builder_0.with_timeout(set_0)
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.interval == 1000
    assert var_0.max_events == 1000
    assert var_0.log_level == 'CRITICAL'

def test_case_7():
    bool_0 = True
    bool_1 = False
    float_0 = -680.96655
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    var_0 = configuration_builder_0.default_config_builder()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'securenative.config.configuration_builder.ConfigurationBuilder'
    assert var_0.api_key is None
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.interval == 1000
    assert var_0.max_events == 1000
    assert var_0.timeout == 1500
    assert var_0.auto_send is True
    assert var_0.disable is False
    assert var_0.log_level == 'CRITICAL'
    assert var_0.fail_over_strategy == 'fail-open'
    var_1 = var_0.with_auto_send(float_0)
    assert var_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_1.interval == 1000
    assert var_1.max_events == 1000
    assert var_1.timeout == 1500
    assert var_1.log_level == 'CRITICAL'
    var_2 = var_1.with_timeout(bool_1)
    assert var_2.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_2.interval == 1000
    assert var_2.max_events == 1000
    assert var_2.log_level == 'CRITICAL'
    var_3 = var_2.build()
    assert var_3.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_3.interval == 1000
    assert var_3.max_events == 1000
    assert var_3.log_level == 'CRITICAL'
    var_4 = var_3.build()
    assert var_4.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_4.interval == 1000
    assert var_4.max_events == 1000
    assert var_4.log_level == 'CRITICAL'
    var_5 = var_4.with_fail_over_strategy(bool_0)
    assert var_5.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_5.interval == 1000
    assert var_5.max_events == 1000
    assert var_5.log_level == 'CRITICAL'
    assert var_5.fail_over_strategy == 'fail-open'

def test_case_8():
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    var_0 = configuration_builder_0.with_interval(configuration_builder_0)
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.max_events == 1000
    assert var_0.timeout == 1500
    assert var_0.log_level == 'CRITICAL'
    none_type_0 = None
    var_1 = configuration_builder_0.with_fail_over_strategy(none_type_0)
    assert var_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_1.max_events == 1000
    assert var_1.timeout == 1500
    assert var_1.log_level == 'CRITICAL'
    assert var_1.fail_over_strategy == 'fail-open'
    var_2 = configuration_builder_0.with_timeout(configuration_builder_0)
    assert var_2.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_2.max_events == 1000
    assert var_2.log_level == 'CRITICAL'
    assert var_2.fail_over_strategy == 'fail-open'
    none_type_1 = None
    var_3 = configuration_builder_0.with_api_key(none_type_1)
    assert var_3.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_3.max_events == 1000
    assert var_3.log_level == 'CRITICAL'
    assert var_3.fail_over_strategy == 'fail-open'
    var_4 = configuration_builder_0.with_timeout(none_type_1)
    assert var_4.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_4.max_events == 1000
    assert var_4.log_level == 'CRITICAL'
    assert var_4.fail_over_strategy == 'fail-open'
    var_5 = configuration_builder_0.with_disable(configuration_builder_0)
    assert var_5.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_5.max_events == 1000
    assert var_5.log_level == 'CRITICAL'
    assert var_5.fail_over_strategy == 'fail-open'
    var_6 = configuration_builder_0.with_api_url(var_5)
    assert var_6.max_events == 1000
    assert var_6.log_level == 'CRITICAL'
    assert var_6.fail_over_strategy == 'fail-open'
    var_7 = configuration_builder_0.with_fail_over_strategy(var_5)
    assert var_7.max_events == 1000
    assert var_7.log_level == 'CRITICAL'
    assert var_7.fail_over_strategy == 'fail-open'

def test_case_9():
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    configuration_builder_1 = module_0.ConfigurationBuilder()
    assert configuration_builder_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_1.interval == 1000
    assert configuration_builder_1.max_events == 1000
    assert configuration_builder_1.timeout == 1500
    assert configuration_builder_1.log_level == 'CRITICAL'
    var_0 = configuration_builder_0.get_default_securenative_options()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'securenative.config.securenative_options.SecureNativeOptions'
    assert var_0.api_key is None
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.interval == 1000
    assert var_0.max_events == 1000
    assert var_0.timeout == 1500
    assert var_0.auto_send is True
    assert var_0.disable is False
    assert var_0.log_level == 'CRITICAL'
    assert var_0.fail_over_strategy == 'fail-open'

def test_case_10():
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    var_0 = configuration_builder_0.with_interval(configuration_builder_0)
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.max_events == 1000
    assert var_0.timeout == 1500
    assert var_0.log_level == 'CRITICAL'
    var_1 = var_0.with_auto_send(var_0)
    assert var_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_1.max_events == 1000
    assert var_1.timeout == 1500
    assert var_1.log_level == 'CRITICAL'
    var_2 = var_0.build()
    assert var_2.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_2.max_events == 1000
    assert var_2.timeout == 1500
    assert var_2.log_level == 'CRITICAL'
    var_3 = var_0.with_fail_over_strategy(var_1)
    assert var_3.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_3.max_events == 1000
    assert var_3.timeout == 1500
    assert var_3.log_level == 'CRITICAL'
    assert var_3.fail_over_strategy == 'fail-open'
    var_4 = var_2.with_api_url(configuration_builder_0)
    assert var_4.max_events == 1000
    assert var_4.timeout == 1500
    assert var_4.log_level == 'CRITICAL'
    assert var_4.fail_over_strategy == 'fail-open'
    var_5 = configuration_builder_0.with_timeout(var_2)
    assert var_5.max_events == 1000
    assert var_5.log_level == 'CRITICAL'
    assert var_5.fail_over_strategy == 'fail-open'
    var_6 = var_0.with_disable(var_5)
    assert var_6.max_events == 1000
    assert var_6.log_level == 'CRITICAL'
    assert var_6.fail_over_strategy == 'fail-open'
    var_7 = var_0.with_max_events(var_1)
    assert var_7.log_level == 'CRITICAL'
    assert var_7.fail_over_strategy == 'fail-open'
    var_8 = var_6.with_auto_send(var_4)
    assert var_8.log_level == 'CRITICAL'
    assert var_8.fail_over_strategy == 'fail-open'
    var_9 = var_2.with_timeout(var_3)
    assert var_9.log_level == 'CRITICAL'
    assert var_9.fail_over_strategy == 'fail-open'
    var_10 = var_5.build()
    assert var_10.log_level == 'CRITICAL'
    assert var_10.fail_over_strategy == 'fail-open'
    var_11 = var_1.build()
    assert var_11.log_level == 'CRITICAL'
    assert var_11.fail_over_strategy == 'fail-open'
    var_12 = var_8.with_interval(var_10)
    assert var_12.log_level == 'CRITICAL'
    assert var_12.fail_over_strategy == 'fail-open'
    var_13 = var_10.with_api_url(var_3)
    assert var_13.log_level == 'CRITICAL'
    assert var_13.fail_over_strategy == 'fail-open'
    str_0 = 'fail-closed'
    var_14 = var_9.with_fail_over_strategy(str_0)
    assert configuration_builder_0.fail_over_strategy == 'fail-closed'
    assert var_0.fail_over_strategy == 'fail-closed'
    assert var_1.fail_over_strategy == 'fail-closed'
    assert var_2.fail_over_strategy == 'fail-closed'
    assert var_3.fail_over_strategy == 'fail-closed'
    assert var_4.fail_over_strategy == 'fail-closed'
    assert var_5.fail_over_strategy == 'fail-closed'
    assert var_6.fail_over_strategy == 'fail-closed'
    assert var_7.fail_over_strategy == 'fail-closed'
    assert var_8.fail_over_strategy == 'fail-closed'
    assert var_9.fail_over_strategy == 'fail-closed'
    assert var_10.fail_over_strategy == 'fail-closed'
    assert var_11.fail_over_strategy == 'fail-closed'
    assert var_12.fail_over_strategy == 'fail-closed'
    assert var_13.fail_over_strategy == 'fail-closed'
    assert var_14.log_level == 'CRITICAL'
    assert var_14.fail_over_strategy == 'fail-closed'
    var_15 = var_11.default_config_builder()
    assert f'{type(var_15).__module__}.{type(var_15).__qualname__}' == 'securenative.config.configuration_builder.ConfigurationBuilder'
    assert var_15.api_key is None
    assert var_15.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_15.interval == 1000
    assert var_15.max_events == 1000
    assert var_15.timeout == 1500
    assert var_15.auto_send is True
    assert var_15.disable is False
    assert var_15.log_level == 'CRITICAL'
    assert var_15.fail_over_strategy == 'fail-open'
    var_16 = var_8.with_api_key(var_0)
    assert var_16.log_level == 'CRITICAL'
    assert var_16.fail_over_strategy == 'fail-closed'

@pytest.mark.xfail(strict=True)
def test_case_11():
    configuration_builder_0 = module_0.ConfigurationBuilder()
    assert configuration_builder_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_0.interval == 1000
    assert configuration_builder_0.max_events == 1000
    assert configuration_builder_0.timeout == 1500
    assert configuration_builder_0.log_level == 'CRITICAL'
    var_0 = configuration_builder_0.with_interval(configuration_builder_0)
    assert var_0.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_0.max_events == 1000
    assert var_0.timeout == 1500
    assert var_0.log_level == 'CRITICAL'
    var_1 = configuration_builder_0.with_log_level(configuration_builder_0)
    assert var_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_1.max_events == 1000
    assert var_1.timeout == 1500
    var_2 = var_0.with_auto_send(var_1)
    assert var_2.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_2.max_events == 1000
    assert var_2.timeout == 1500
    var_3 = var_1.with_auto_send(var_2)
    assert var_3.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_3.max_events == 1000
    assert var_3.timeout == 1500
    var_4 = var_0.with_api_url(var_1)
    assert var_4.max_events == 1000
    assert var_4.timeout == 1500
    var_5 = var_0.build()
    assert var_5.max_events == 1000
    assert var_5.timeout == 1500
    var_6 = var_5.build()
    assert var_6.max_events == 1000
    assert var_6.timeout == 1500
    int_0 = 203
    int_1 = 1369
    var_7 = var_0.with_fail_over_strategy(int_1)
    assert var_7.max_events == 1000
    assert var_7.timeout == 1500
    assert var_7.fail_over_strategy == 'fail-open'
    var_8 = configuration_builder_0.with_api_url(var_2)
    assert var_8.max_events == 1000
    assert var_8.timeout == 1500
    assert var_8.fail_over_strategy == 'fail-open'
    str_0 = 'fail-open'
    var_9 = var_0.with_timeout(str_0)
    assert var_9.max_events == 1000
    assert var_9.fail_over_strategy == 'fail-open'
    var_10 = var_7.with_disable(var_3)
    assert var_10.max_events == 1000
    assert var_10.fail_over_strategy == 'fail-open'
    var_11 = var_5.with_disable(str_0)
    assert var_11.max_events == 1000
    assert var_11.fail_over_strategy == 'fail-open'
    var_12 = var_0.get_default_securenative_options()
    assert f'{type(var_12).__module__}.{type(var_12).__qualname__}' == 'securenative.config.securenative_options.SecureNativeOptions'
    assert var_12.api_key is None
    assert var_12.api_url == 'https://api.securenative.com/collector/api/v1'
    assert var_12.interval == 1000
    assert var_12.max_events == 1000
    assert var_12.timeout == 1500
    assert var_12.auto_send is True
    assert var_12.disable is False
    assert var_12.log_level == 'CRITICAL'
    assert var_12.fail_over_strategy == 'fail-open'
    var_13 = var_8.with_max_events(var_8)
    assert var_13.fail_over_strategy == 'fail-open'
    var_14 = var_1.with_api_url(var_10)
    assert var_14.fail_over_strategy == 'fail-open'
    var_15 = configuration_builder_0.with_interval(int_0)
    assert var_15.fail_over_strategy == 'fail-open'
    configuration_builder_1 = module_0.ConfigurationBuilder()
    assert configuration_builder_1.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_1.interval == 1000
    assert configuration_builder_1.max_events == 1000
    assert configuration_builder_1.timeout == 1500
    assert configuration_builder_1.log_level == 'CRITICAL'
    var_16 = var_7.build()
    assert var_16.fail_over_strategy == 'fail-open'
    var_17 = var_6.with_max_events(var_15)
    assert var_17.fail_over_strategy == 'fail-open'
    var_18 = var_17.build()
    assert var_18.fail_over_strategy == 'fail-open'
    var_19 = var_18.with_timeout(var_1)
    assert var_19.fail_over_strategy == 'fail-open'
    var_20 = var_10.with_interval(var_17)
    assert var_20.fail_over_strategy == 'fail-open'
    var_21 = configuration_builder_1.with_api_url(var_19)
    assert var_21.interval == 1000
    assert var_21.max_events == 1000
    assert var_21.timeout == 1500
    assert var_21.log_level == 'CRITICAL'
    var_22 = var_21.build()
    assert var_22.interval == 1000
    assert var_22.max_events == 1000
    assert var_22.timeout == 1500
    assert var_22.log_level == 'CRITICAL'
    var_23 = var_1.with_fail_over_strategy(str_0)
    configuration_builder_2 = module_0.ConfigurationBuilder()
    assert configuration_builder_2.api_url == 'https://api.securenative.com/collector/api/v1'
    assert configuration_builder_2.interval == 1000
    assert configuration_builder_2.max_events == 1000
    assert configuration_builder_2.timeout == 1500
    assert configuration_builder_2.log_level == 'CRITICAL'
    var_24 = var_16.with_max_events(int_0)
    var_12.with_api_url(var_8)