# Automatically generated by Pynguin.
import pytest
import securenative.utils.ip_utils as module_0
import ipaddress as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    ip_utils_0 = module_0.IpUtils()
    ip_utils_0.is_valid_public_ip(ip_utils_0)

def test_case_1():
    ip_utils_0 = module_0.IpUtils()

@pytest.mark.xfail(strict=True)
def test_case_2():
    ip_utils_0 = module_0.IpUtils()
    ip_utils_0.is_loop_back(ip_utils_0)

def test_case_3():
    ip_utils_0 = module_0.IpUtils()
    str_0 = 'i'
    var_0 = ip_utils_0.is_ip_address(str_0)
    assert var_0 is False

def test_case_4():
    ip_utils_0 = module_0.IpUtils()
    str_0 = 'i'
    var_0 = ip_utils_0.is_ip_address(str_0)
    assert var_0 is False
    var_1 = ip_utils_0.is_valid_public_ip(str_0)
    assert var_1 is False

def test_case_5():
    ip_utils_0 = module_0.IpUtils()
    str_0 = 'P7+bU/Pbw'
    bool_0 = True
    var_0 = module_1.ip_network(bool_0, str_0)
    var_1 = var_0.__str__()
    var_2 = ip_utils_0.is_ip_address(var_1)
    assert var_2 is True