# Automatically generated by Pynguin.
import pytest
import securenative.context.context_builder as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    context_builder_0 = module_0.ContextBuilder()
    context_builder_0.from_http_request(context_builder_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    context_builder_0 = module_0.ContextBuilder()
    var_0 = context_builder_0.with_client_token(context_builder_0)
    var_1 = var_0.default_context_builder()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'securenative.context.context_builder.ContextBuilder'
    assert f'{type(var_1.context).__module__}.{type(var_1.context).__qualname__}' == 'securenative.context.securenative_context.SecureNativeContext'
    var_2 = var_0.build()
    var_3 = context_builder_0.with_ip(context_builder_0)
    var_4 = context_builder_0.default_context_builder()
    var_0.get_remote_ip_from_request(context_builder_0)

def test_case_2():
    context_builder_0 = module_0.ContextBuilder()
    var_0 = context_builder_0.with_ip(context_builder_0)
    context_builder_1 = module_0.ContextBuilder()

@pytest.mark.xfail(strict=True)
def test_case_3():
    context_builder_0 = module_0.ContextBuilder()
    var_0 = context_builder_0.with_remote_ip(context_builder_0)
    context_builder_0.from_http_request(var_0)

def test_case_4():
    bool_0 = True
    context_builder_0 = module_0.ContextBuilder()
    var_0 = context_builder_0.build()
    none_type_0 = None
    context_builder_1 = module_0.ContextBuilder()
    var_1 = context_builder_1.with_body(bool_0)
    var_2 = context_builder_1.with_headers(none_type_0)
    var_3 = var_2.with_remote_ip(bool_0)
    var_4 = var_3.build()
    var_5 = var_3.build()
    var_6 = context_builder_1.with_headers(var_5)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = 'email'
    context_builder_0 = module_0.ContextBuilder()
    var_0 = context_builder_0.with_url(str_0)
    var_1 = var_0.build()
    var_1.with_url(list_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    context_builder_0 = module_0.ContextBuilder()
    var_0 = context_builder_0.with_method(context_builder_0)
    var_1 = var_0.with_remote_ip(var_0)
    none_type_0 = None
    var_0.get_secure_header_from_request(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    context_builder_0 = module_0.ContextBuilder()
    var_0 = context_builder_0.default_context_builder()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'securenative.context.context_builder.ContextBuilder'
    assert f'{type(var_0.context).__module__}.{type(var_0.context).__qualname__}' == 'securenative.context.securenative_context.SecureNativeContext'
    context_builder_0.from_http_request(context_builder_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    context_builder_0 = module_0.ContextBuilder()
    var_0 = context_builder_0.build()
    context_builder_0.from_http_request(context_builder_0)