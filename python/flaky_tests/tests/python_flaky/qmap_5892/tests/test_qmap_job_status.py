# Automatically generated by Pynguin.
import pytest
import qmap.job.status as module_0
import qmap.globals as module_1

def test_case_0():
    list_0 = []
    var_0 = module_0.parse(list_0)
    assert module_0.VALUES == ['COMPLETED', 'FAILED', 'OTHER', 'PENDING', 'RUNNING', 'UNSUBMITTED']
    assert module_0.OPTIONS == ['completed', 'failed', 'other', 'pending', 'running', 'unsubmitted', 'all', 'c', 'f', 'o', 'p', 'r', 'u', 'a']

def test_case_1():
    str_0 = 'l+fvgR^\t^qoJ'
    with pytest.raises(module_1.QMapError):
        module_0.parse(str_0)

def test_case_2():
    str_0 = 'ra'
    var_0 = module_0.parse(str_0)
    assert module_0.VALUES == ['COMPLETED', 'FAILED', 'OTHER', 'PENDING', 'RUNNING', 'UNSUBMITTED']
    assert module_0.OPTIONS == ['completed', 'failed', 'other', 'pending', 'running', 'unsubmitted', 'all', 'c', 'f', 'o', 'p', 'r', 'u', 'a']

def test_case_3():
    str_0 = 'o=Xp[.LR;YD'
    with pytest.raises(module_1.QMapError):
        module_0.parse(str_0)

def test_case_4():
    str_0 = 'ruaning'
    with pytest.raises(module_1.QMapError):
        module_0.parse(str_0)

def test_case_5():
    dict_0 = {}
    var_0 = module_0.parse(dict_0)
    assert module_0.VALUES == ['COMPLETED', 'FAILED', 'OTHER', 'PENDING', 'RUNNING', 'UNSUBMITTED']
    assert module_0.OPTIONS == ['completed', 'failed', 'other', 'pending', 'running', 'unsubmitted', 'all', 'c', 'f', 'o', 'p', 'r', 'u', 'a']
    var_1 = module_0.parse(dict_0)
    str_0 = 'ura'
    var_2 = module_0.parse(str_0)
    list_0 = []
    str_1 = 'all'
    dict_1 = {str_1: list_0}
    var_3 = module_0.parse(dict_1)
    status_0 = module_0.Status()
    assert module_0.Status.DONE == 'COMPLETED'
    assert module_0.Status.PENDING == 'PENDING'
    assert module_0.Status.FAILED == 'FAILED'
    assert module_0.Status.OTHER == 'OTHER'
    with pytest.raises(module_1.QMapError):
        module_0.parse(str_1)