# Automatically generated by Pynguin.
import pytest
import qmap.file.jobs as module_0
import qmap.globals as module_1
import enum as module_2
import collections as module_3

def test_case_0():
    str_0 = 'RUN'
    with pytest.raises(FileNotFoundError):
        module_0.get(str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'M5m|YJ5oWY'
    module_0.parse_inline_parameters(str_0)

def test_case_2():
    str_0 = '3#1h"s=gcDJ4?F}lf4'
    var_0 = module_0.parse_inline_parameters(str_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'qmap.job.parameters.Parameters'
    assert len(var_0) == 1
    assert module_0.NAME == 'qmap_input'

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.filter_commands(none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    module_0.parse(bool_0)
    var_0 = module_0.parse_inline_parameters(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    module_0.get(list_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    module_0.save(bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    none_type_0 = None
    module_0.parse_inline_parameters(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    module_0.parse(none_type_0)

def test_case_9():
    str_0 = ''
    with pytest.raises(module_1.QMapError):
        module_0.filter_commands(str_0, str_0, str_0)

def test_case_10():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.stringify(dict_0)
    assert module_0.NAME == 'qmap_input'
    var_1 = var_0.__next__()
    assert var_1 == '[True]'

def test_case_11():
    bool_0 = True
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.stringify_parameters(dict_0)
    assert module_0.NAME == 'qmap_input'
    var_1 = var_0.__next__()
    assert var_1 == 'True=True'

@pytest.mark.xfail(strict=True)
def test_case_12():
    dict_0 = module_2._EnumDict()
    var_0 = module_0.stringify(dict_0)
    assert module_0.NAME == 'qmap_input'
    var_0.__next__()

@pytest.mark.xfail(strict=True)
def test_case_13():
    dict_0 = module_3.defaultdict()
    var_0 = module_0.stringify_parameters(dict_0)
    assert module_0.NAME == 'qmap_input'
    var_0.__next__()