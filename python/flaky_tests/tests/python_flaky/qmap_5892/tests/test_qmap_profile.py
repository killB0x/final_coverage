# Automatically generated by Pynguin.
import pytest
import qmap.profile as module_0

def test_case_0():
    profile_0 = module_0.Profile()
    assert f'{type(profile_0).__module__}.{type(profile_0).__qualname__}' == 'qmap.profile.Profile'
    assert len(profile_0) == 3
    profile_1 = module_0.Profile()
    assert len(profile_1) == 3
    profile_2 = module_0.Profile(profile_1)
    assert len(profile_2) == 3
    profile_error_0 = module_0.ProfileError()
    list_0 = []
    profile_error_1 = module_0.ProfileError()
    profile_error_2 = module_0.ProfileError(*list_0)
    profile_error_3 = module_0.ProfileError()
    profile_error_4 = module_0.ProfileError()
    profile_3 = module_0.Profile()
    assert len(profile_3) == 3
    profile_error_5 = module_0.ProfileError(*list_0)
    profile_4 = module_0.Profile(profile_2)
    assert len(profile_4) == 3

def test_case_1():
    profile_0 = module_0.Profile()
    assert f'{type(profile_0).__module__}.{type(profile_0).__qualname__}' == 'qmap.profile.Profile'
    assert len(profile_0) == 3

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = '}$3`'
    dict_0 = {str_0: str_0}
    profile_error_0 = module_0.ProfileError()
    profile_0 = module_0.Profile()
    assert f'{type(profile_0).__module__}.{type(profile_0).__qualname__}' == 'qmap.profile.Profile'
    assert len(profile_0) == 3
    profile_1 = module_0.Profile()
    assert len(profile_1) == 3
    profile_2 = module_0.Profile()
    assert len(profile_2) == 3
    module_0.Profile(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '&>'
    module_0.Profile(str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    module_0.Profile(bool_0)