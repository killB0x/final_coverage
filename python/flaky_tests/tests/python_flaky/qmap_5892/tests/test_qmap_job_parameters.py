# Automatically generated by Pynguin.
import pytest
import qmap.job.parameters as module_0

def test_case_0():
    parameters_0 = module_0.Parameters()
    assert module_0.MEMORY_UNITS == ['', 'K', 'M', 'G', 'T', 'P']
    var_0 = parameters_0.__str__()
    assert var_0 == ''

def test_case_1():
    parameters_0 = module_0.Parameters()
    assert module_0.MEMORY_UNITS == ['', 'K', 'M', 'G', 'T', 'P']

@pytest.mark.xfail(strict=True)
def test_case_2():
    parameters_0 = module_0.Parameters()
    assert module_0.MEMORY_UNITS == ['', 'K', 'M', 'G', 'T', 'P']
    var_0 = parameters_0.update()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'qmap.job.parameters.Parameters'
    assert len(var_0) == 0
    var_1 = var_0.__str__()
    assert var_1 == ''
    var_2 = var_0.copy()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'qmap.job.parameters.Parameters'
    assert len(var_2) == 0
    module_0.memory_convert(var_2, var_1, var_1)

def test_case_3():
    parameters_0 = module_0.Parameters()
    assert module_0.MEMORY_UNITS == ['', 'K', 'M', 'G', 'T', 'P']
    var_0 = parameters_0.update(*parameters_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'qmap.job.parameters.Parameters'
    assert len(var_0) == 0
    var_1 = parameters_0.__str__()
    assert var_1 == ''
    var_2 = var_1.__str__()
    assert var_2 == ''
    parameters_1 = module_0.Parameters(*var_2)
    assert f'{type(parameters_1).__module__}.{type(parameters_1).__qualname__}' == 'qmap.job.parameters.Parameters'
    assert len(parameters_1) == 0

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = ''
    module_0.memory_convert(str_0, str_0, str_0)