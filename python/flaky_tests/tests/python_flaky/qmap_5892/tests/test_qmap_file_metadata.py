# Automatically generated by Pynguin.
import pytest
import qmap.file.metadata as module_0
import qmap.globals as module_1
import posixpath as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b'\xef'
    module_0.save(bytes_0, bytes_0)

def test_case_1():
    bool_0 = False
    var_0 = module_0.load(bool_0)
    assert var_0 is False
    assert module_0.EXTENSION == 'info'

def test_case_2():
    bytes_0 = b''
    var_0 = module_0.get_fields(bytes_0, bytes_0, bytes_0)
    assert module_0.EXTENSION == 'info'

def test_case_3():
    str_0 = '%Y%m%d'
    var_0 = module_0.find(str_0)
    assert module_0.EXTENSION == 'info'

def test_case_4():
    bytes_0 = b'\x91\x82\x13D\xd2\xe6'
    var_0 = module_0.load(bytes_0)
    assert module_0.EXTENSION == 'info'

def test_case_5():
    bytes_0 = b'W\\/*dc0\xb4E'
    with pytest.raises(module_1.QMapError):
        module_0.save(bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b''
    var_0 = module_0.get_fields(bytes_0, bytes_0, bytes_0)
    assert module_0.EXTENSION == 'info'
    var_0.__next__()

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '-'
    var_0 = module_0.find_and_load(str_0)
    assert module_0.EXTENSION == 'info'
    var_0.__next__()

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = '/'
    var_0 = module_0.get_fields(str_0, str_0, str_0)
    assert module_0.EXTENSION == 'info'
    var_0.__next__()

def test_case_9():
    str_0 = ''
    var_0 = module_0.find_and_load(str_0)
    assert module_0.EXTENSION == 'info'
    var_1 = var_0.__next__()

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = '/'
    var_0 = module_0.find_and_load(str_0)
    assert module_0.EXTENSION == 'info'
    module_2.join(var_0, *var_0)