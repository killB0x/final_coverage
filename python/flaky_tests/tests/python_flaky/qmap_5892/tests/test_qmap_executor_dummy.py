# Automatically generated by Pynguin.
import pytest
import qmap.executor.dummy as module_0
import qmap.executor.executor as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    executor_0 = module_0.Executor()
    assert module_0.SCRIPT_FILE_EXTENSION == 'sh'
    executor_0.create_script(executor_0, executor_0, executor_0, executor_0)

def test_case_1():
    executor_0 = module_0.Executor()
    assert module_0.SCRIPT_FILE_EXTENSION == 'sh'

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    executor_0 = module_0.Executor()
    assert module_0.SCRIPT_FILE_EXTENSION == 'sh'
    var_0 = executor_0.run_job(none_type_0, none_type_0, err=none_type_0)
    list_0 = executor_0.generate_jobs_status(var_0)
    dict_0 = {}
    i_executor_0 = module_1.IExecutor(**dict_0)
    executor_1 = module_0.Executor()
    executor_1.create_script(none_type_0, list_0, list_0, dict_0)

def test_case_3():
    executor_0 = module_0.Executor()
    assert module_0.SCRIPT_FILE_EXTENSION == 'sh'
    var_0 = executor_0.get_usage()

def test_case_4():
    executor_0 = module_0.Executor()
    none_type_0 = None
    executor_1 = executor_0.run(executor_0, none_type_0, executor_0)
    var_0 = executor_0.get_usage()
    var_1 = executor_1.get_usage()

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    executor_0 = module_0.Executor()
    assert module_0.SCRIPT_FILE_EXTENSION == 'sh'
    var_0 = executor_0.run_job(none_type_0, none_type_0, err=none_type_0)
    dict_0 = {}
    var_1 = executor_0.terminate_jobs(var_0)
    var_2 = executor_0.generate_jobs_status(dict_0, var_1)
    var_0.terminate_jobs(var_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    executor_0 = module_0.Executor()
    assert module_0.SCRIPT_FILE_EXTENSION == 'sh'
    var_0 = executor_0.run_job(none_type_0, none_type_0, err=none_type_0)
    var_1 = executor_0.generate_jobs_status(var_0)
    dict_0 = {}
    executor_1 = module_0.Executor()
    executor_1.create_script(none_type_0, var_1, var_1, dict_0)