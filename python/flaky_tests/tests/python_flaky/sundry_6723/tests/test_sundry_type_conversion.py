# Automatically generated by Pynguin.
import pytest
import sundry.type_conversion as module_0
import zipfile as module_1
import sysconfig as module_2
import decimal as module_3

def test_case_0():
    bool_0 = True
    var_0 = module_0.to_bool(bool_0)
    assert var_0 is True

def test_case_1():
    int_0 = 1317
    with pytest.raises(ValueError):
        module_0.to_bool(int_0)

def test_case_2():
    str_0 = 'M\r'
    none_type_0 = None
    var_0 = module_0.to_bool(none_type_0)
    with pytest.raises(ValueError):
        module_0.to_bool(str_0)

def test_case_3():
    complex_0 = (-1196.2523+1141.7167j)
    with pytest.raises(ValueError):
        module_0.to_bool(complex_0)

def test_case_4():
    int_0 = -1222
    with pytest.raises(ValueError):
        module_0.to_bool(int_0)

def test_case_5():
    str_0 = ' ,IH tD'
    with pytest.raises(ValueError):
        module_0.to_bool(str_0)

def test_case_6():
    none_type_0 = None
    var_0 = module_0.to_bool(none_type_0)
    str_0 = 'null'
    var_1 = module_0.to_bool(none_type_0)
    var_2 = module_0.to_bool(str_0)

def test_case_7():
    none_type_0 = None
    var_0 = module_0.to_bool(none_type_0)
    l_z_m_a_compressor_0 = module_1.LZMACompressor()
    var_1 = module_0.to_bool(none_type_0)
    var_2 = var_1.__repr__()
    var_3 = module_0.to_bool(none_type_0)
    str_0 = 'NNA'
    var_4 = module_0.to_bool(var_2)
    with pytest.raises(ValueError):
        module_0.to_bool(str_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = True
    none_type_0 = None
    var_0 = module_2.is_python_build()
    var_1 = var_0.__mul__(bool_0)
    var_2 = module_0.to_bool(var_1)
    assert var_2 is False
    var_3 = var_1.__mul__(none_type_0)
    var_4 = var_0.__add__(var_0)
    var_3.get_maintainer_email()

def test_case_9():
    decimal_0 = module_3.Decimal()
    var_0 = module_0.to_bool(decimal_0)
    assert var_0 is False