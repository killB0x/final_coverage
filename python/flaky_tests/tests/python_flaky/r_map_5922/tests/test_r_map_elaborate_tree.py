# Automatically generated by Pynguin.
import pytest
import r_map.elaborate_tree as module_0

def test_case_0():
    bytes_0 = b'K%\xb4\xcdy\x8f\xb2GK'
    var_0 = module_0.convert_to_fixed_node(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'Class to represent a reference to a bitfield. This is useful\n    as a register may only have access to a portion of bitfield. The "portion"\n    is modelled with this class'
    module_0.elaborate_nodes(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    var_0 = module_0.elaborate_nodes(tuple_0)
    module_0.FixedAddressedNode(local_address=tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    module_0.FixedRegister()

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = '>B\n~C@'
    var_0 = module_0.convert_to_fixed_node(str_0)
    dict_0 = {}
    var_1 = module_0.elaborate_nodes(dict_0, str_0)
    var_2 = module_0.elaborate_nodes(str_0, var_0)
    module_0.elaborate_nodes(var_2, var_0)