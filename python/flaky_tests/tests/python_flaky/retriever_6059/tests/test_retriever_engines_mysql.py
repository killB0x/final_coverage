# Automatically generated by Pynguin.
import pytest
import retriever.engines.mysql as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    engine_0 = module_0.engine()
    assert module_0.engine.name == 'MySQL'
    assert module_0.engine.abbreviation == 'mysql'
    assert module_0.engine.datatypes == {'auto': 'INT(5) NOT NULL AUTO_INCREMENT', 'int': 'INT', 'bigint': 'BIGINT', 'double': 'DOUBLE', 'decimal': 'DECIMAL', 'char': ('TEXT', 'VARCHAR'), 'bool': 'BOOL'}
    assert module_0.engine.max_int == 4294967295
    assert module_0.engine.placeholder == '%s'
    assert module_0.engine.insert_limit == 1000
    assert module_0.engine.required_opts == [('user', 'Enter your MySQL username', 'root'), ('password', 'Enter your password', ''), ('host', 'Enter your MySQL host', 'localhost'), ('port', 'Enter your MySQL port', 3306), ('database_name', 'Format of database name', '{db}'), ('table_name', 'Format of table name', '{db}.{table}')]
    engine_0.table_exists(engine_0, engine_0)

def test_case_1():
    engine_0 = module_0.engine()
    assert module_0.engine.name == 'MySQL'
    assert module_0.engine.abbreviation == 'mysql'
    assert module_0.engine.datatypes == {'auto': 'INT(5) NOT NULL AUTO_INCREMENT', 'int': 'INT', 'bigint': 'BIGINT', 'double': 'DOUBLE', 'decimal': 'DECIMAL', 'char': ('TEXT', 'VARCHAR'), 'bool': 'BOOL'}
    assert module_0.engine.max_int == 4294967295
    assert module_0.engine.placeholder == '%s'
    assert module_0.engine.insert_limit == 1000
    assert module_0.engine.required_opts == [('user', 'Enter your MySQL username', 'root'), ('password', 'Enter your password', ''), ('host', 'Enter your MySQL host', 'localhost'), ('port', 'Enter your MySQL port', 3306), ('database_name', 'Format of database name', '{db}'), ('table_name', 'Format of table name', '{db}.{table}')]

@pytest.mark.xfail(strict=True)
def test_case_2():
    engine_0 = module_0.engine()
    assert module_0.engine.name == 'MySQL'
    assert module_0.engine.abbreviation == 'mysql'
    assert module_0.engine.datatypes == {'auto': 'INT(5) NOT NULL AUTO_INCREMENT', 'int': 'INT', 'bigint': 'BIGINT', 'double': 'DOUBLE', 'decimal': 'DECIMAL', 'char': ('TEXT', 'VARCHAR'), 'bool': 'BOOL'}
    assert module_0.engine.max_int == 4294967295
    assert module_0.engine.placeholder == '%s'
    assert module_0.engine.insert_limit == 1000
    assert module_0.engine.required_opts == [('user', 'Enter your MySQL username', 'root'), ('password', 'Enter your password', ''), ('host', 'Enter your MySQL host', 'localhost'), ('port', 'Enter your MySQL port', 3306), ('database_name', 'Format of database name', '{db}'), ('table_name', 'Format of table name', '{db}.{table}')]
    engine_0.create_db_statement()

@pytest.mark.xfail(strict=True)
def test_case_3():
    engine_0 = module_0.engine()
    assert module_0.engine.name == 'MySQL'
    assert module_0.engine.abbreviation == 'mysql'
    assert module_0.engine.datatypes == {'auto': 'INT(5) NOT NULL AUTO_INCREMENT', 'int': 'INT', 'bigint': 'BIGINT', 'double': 'DOUBLE', 'decimal': 'DECIMAL', 'char': ('TEXT', 'VARCHAR'), 'bool': 'BOOL'}
    assert module_0.engine.max_int == 4294967295
    assert module_0.engine.placeholder == '%s'
    assert module_0.engine.insert_limit == 1000
    assert module_0.engine.required_opts == [('user', 'Enter your MySQL username', 'root'), ('password', 'Enter your password', ''), ('host', 'Enter your MySQL host', 'localhost'), ('port', 'Enter your MySQL port', 3306), ('database_name', 'Format of database name', '{db}'), ('table_name', 'Format of table name', '{db}.{table}')]
    engine_0.set_engine_encoding()