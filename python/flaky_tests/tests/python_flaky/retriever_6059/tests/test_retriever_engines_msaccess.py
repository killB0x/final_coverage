# Automatically generated by Pynguin.
import pytest
import retriever.engines.msaccess as module_0
import platform as module_1

def test_case_0():
    engine_0 = module_0.engine()
    assert module_0.engine.name == 'Microsoft Access'
    assert module_0.engine.instructions == 'Create a database in Microsoft Access, close Access.\nThen select your database file using this dialog.'
    assert module_0.engine.abbreviation == 'msaccess'
    assert module_0.engine.datatypes == {'auto': 'AUTOINCREMENT', 'int': 'INTEGER', 'bigint': 'INTEGER', 'double': 'NUMERIC', 'decimal': 'NUMERIC', 'char': 'VARCHAR', 'bool': 'BIT'}
    assert module_0.engine.insert_limit == 1000
    assert module_0.engine.required_opts == [('file', 'Enter the filename of your Access database', 'access.mdb', 'Access databases (*.mdb, *.accdb)|*.mdb;*.accdb'), ('table_name', 'Format of table name', '[{db} {table}]'), ('data_dir', 'Install directory', '.')]
    assert module_0.engine.placeholder == '?'
    var_0 = module_1.python_build()
    var_1 = engine_0.convert_data_type(var_0)
    assert var_1 == ''

@pytest.mark.xfail(strict=True)
def test_case_1():
    engine_0 = module_0.engine()
    assert module_0.engine.name == 'Microsoft Access'
    assert module_0.engine.instructions == 'Create a database in Microsoft Access, close Access.\nThen select your database file using this dialog.'
    assert module_0.engine.abbreviation == 'msaccess'
    assert module_0.engine.datatypes == {'auto': 'AUTOINCREMENT', 'int': 'INTEGER', 'bigint': 'INTEGER', 'double': 'NUMERIC', 'decimal': 'NUMERIC', 'char': 'VARCHAR', 'bool': 'BIT'}
    assert module_0.engine.insert_limit == 1000
    assert module_0.engine.required_opts == [('file', 'Enter the filename of your Access database', 'access.mdb', 'Access databases (*.mdb, *.accdb)|*.mdb;*.accdb'), ('table_name', 'Format of table name', '[{db} {table}]'), ('data_dir', 'Install directory', '.')]
    assert module_0.engine.placeholder == '?'
    engine_0.insert_data_from_file(engine_0)

def test_case_2():
    engine_0 = module_0.engine()
    assert module_0.engine.name == 'Microsoft Access'
    assert module_0.engine.instructions == 'Create a database in Microsoft Access, close Access.\nThen select your database file using this dialog.'
    assert module_0.engine.abbreviation == 'msaccess'
    assert module_0.engine.datatypes == {'auto': 'AUTOINCREMENT', 'int': 'INTEGER', 'bigint': 'INTEGER', 'double': 'NUMERIC', 'decimal': 'NUMERIC', 'char': 'VARCHAR', 'bool': 'BIT'}
    assert module_0.engine.insert_limit == 1000
    assert module_0.engine.required_opts == [('file', 'Enter the filename of your Access database', 'access.mdb', 'Access databases (*.mdb, *.accdb)|*.mdb;*.accdb'), ('table_name', 'Format of table name', '[{db} {table}]'), ('data_dir', 'Install directory', '.')]
    assert module_0.engine.placeholder == '?'

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    engine_0 = module_0.engine()
    assert module_0.engine.name == 'Microsoft Access'
    assert module_0.engine.instructions == 'Create a database in Microsoft Access, close Access.\nThen select your database file using this dialog.'
    assert module_0.engine.abbreviation == 'msaccess'
    assert module_0.engine.datatypes == {'auto': 'AUTOINCREMENT', 'int': 'INTEGER', 'bigint': 'INTEGER', 'double': 'NUMERIC', 'decimal': 'NUMERIC', 'char': 'VARCHAR', 'bool': 'BIT'}
    assert module_0.engine.insert_limit == 1000
    assert module_0.engine.required_opts == [('file', 'Enter the filename of your Access database', 'access.mdb', 'Access databases (*.mdb, *.accdb)|*.mdb;*.accdb'), ('table_name', 'Format of table name', '[{db} {table}]'), ('data_dir', 'Install directory', '.')]
    assert module_0.engine.placeholder == '?'
    var_0 = engine_0.create_db()
    var_1 = module_1.version()
    var_1.convert_data_type(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    engine_0 = module_0.engine()
    assert module_0.engine.name == 'Microsoft Access'
    assert module_0.engine.instructions == 'Create a database in Microsoft Access, close Access.\nThen select your database file using this dialog.'
    assert module_0.engine.abbreviation == 'msaccess'
    assert module_0.engine.datatypes == {'auto': 'AUTOINCREMENT', 'int': 'INTEGER', 'bigint': 'INTEGER', 'double': 'NUMERIC', 'decimal': 'NUMERIC', 'char': 'VARCHAR', 'bool': 'BIT'}
    assert module_0.engine.insert_limit == 1000
    assert module_0.engine.required_opts == [('file', 'Enter the filename of your Access database', 'access.mdb', 'Access databases (*.mdb, *.accdb)|*.mdb;*.accdb'), ('table_name', 'Format of table name', '[{db} {table}]'), ('data_dir', 'Install directory', '.')]
    assert module_0.engine.placeholder == '?'
    var_0 = engine_0.drop_statement(engine_0, engine_0)
    engine_0.insert_data_from_file(engine_0)