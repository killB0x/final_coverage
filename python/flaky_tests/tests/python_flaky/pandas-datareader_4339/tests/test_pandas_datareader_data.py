# Automatically generated by Pynguin.
import pytest
import pandas_datareader.data as module_0
import pandas_datareader.exceptions as module_1

def test_case_0():
    str_0 = 'PXCN48%\x0b'
    with pytest.raises(module_1.ImmediateDeprecationError):
        module_0.Options(str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.get_quote_yahoo()

@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.get_data_alphavantage()

@pytest.mark.xfail(strict=True)
def test_case_3():
    module_0.get_data_fred()

@pytest.mark.xfail(strict=True)
def test_case_4():
    module_0.get_data_famafrench()

@pytest.mark.xfail(strict=True)
def test_case_5():
    module_0.get_quote_av()

@pytest.mark.xfail(strict=True)
def test_case_6():
    module_0.get_data_quandl()

@pytest.mark.xfail(strict=True)
def test_case_7():
    module_0.get_data_stooq()

@pytest.mark.xfail(strict=True)
def test_case_8():
    module_0.get_tops_iex()

@pytest.mark.xfail(strict=True)
def test_case_9():
    module_0.get_last_iex()

@pytest.mark.xfail(strict=True)
def test_case_10():
    module_0.get_iex_data_tiingo()

@pytest.mark.xfail(strict=True)
def test_case_11():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    module_0.get_quotes_tiingo(*list_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    module_0.get_exchange_rate_av()

@pytest.mark.xfail(strict=True)
def test_case_13():
    module_0.get_sector_performance_av()

@pytest.mark.xfail(strict=True)
def test_case_14():
    module_0.get_dailysummary_iex()

@pytest.mark.xfail(strict=True)
def test_case_15():
    bool_0 = True
    list_0 = [bool_0]
    module_0.get_summary_iex(*list_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    module_0.get_records_iex()

@pytest.mark.xfail(strict=True)
def test_case_17():
    module_0.get_recent_iex()

@pytest.mark.xfail(strict=True)
def test_case_18():
    module_0.get_iex_symbols()

@pytest.mark.xfail(strict=True)
def test_case_19():
    float_0 = 2.5
    str_0 = 'YQY;|r]?`Of.f?5?+\x0b'
    str_1 = '+o)~$]|\r^;v&S/'
    dict_0 = {str_0: str_0, str_1: float_0}
    module_0.get_iex_book(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    dict_0 = {}
    module_0.get_data_tiingo(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_21():
    module_0.get_data_yahoo()

@pytest.mark.xfail(strict=True)
def test_case_22():
    module_0.get_data_yahoo_actions()

def test_case_23():
    bool_0 = True
    with pytest.raises(NotImplementedError):
        module_0.DataReader(bool_0, retry_count=bool_0)

@pytest.mark.xfail(strict=True)
def test_case_24():
    module_0.get_data_enigma()

@pytest.mark.xfail(strict=True)
def test_case_25():
    module_0.get_markets_iex()

def test_case_26():
    none_type_0 = None
    str_0 = 'jWb1)amya'
    with pytest.raises(NotImplementedError):
        module_0.Options(none_type_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_27():
    int_0 = -1540
    str_0 = 'ZVV~>$n/FSM8o'
    str_1 = ',$[m]rg,?}#~Tt\rtr;.'
    dict_0 = {str_0: int_0, str_1: str_0, str_1: int_0}
    module_0.get_data_moex(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_28():
    str_0 = 'yahoo'
    module_0.DataReader(str_0, str_0, end=str_0, pause=str_0, session=str_0, api_key=str_0)