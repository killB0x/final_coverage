# Automatically generated by Pynguin.
import pytest
import pandas_datareader.quandl as module_0
import re as module_1

def test_case_0():
    str_0 = 'kPy'
    quandl_reader_0 = module_0.QuandlReader(str_0, pause=str_0, api_key=str_0)
    assert f'{type(quandl_reader_0).__module__}.{type(quandl_reader_0).__qualname__}' == 'pandas_datareader.quandl.QuandlReader'
    assert quandl_reader_0.symbols == 'kPy'
    assert f'{type(quandl_reader_0.start).__module__}.{type(quandl_reader_0.start).__qualname__}' == 'pandas._libs.tslibs.timestamps.Timestamp'
    assert f'{type(quandl_reader_0.end).__module__}.{type(quandl_reader_0.end).__qualname__}' == 'pandas._libs.tslibs.timestamps.Timestamp'
    assert quandl_reader_0.retry_count == 3
    assert quandl_reader_0.pause == 'kPy'
    assert quandl_reader_0.timeout == 30
    assert quandl_reader_0.pause_multiplier == 1
    assert f'{type(quandl_reader_0.session).__module__}.{type(quandl_reader_0.session).__qualname__}' == 'requests.sessions.Session'
    assert quandl_reader_0.freq is None
    assert quandl_reader_0.chunksize == 25
    assert quandl_reader_0.api_key == 'kPy'
    assert f'{type(module_0.QuandlReader.url).__module__}.{type(module_0.QuandlReader.url).__qualname__}' == 'builtins.property'

def test_case_1():
    str_0 = 'kPy'
    with pytest.raises(ValueError):
        module_0.QuandlReader(str_0, chunksize=str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    var_0 = module_1.purge()
    var_0.read()

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'kPy'
    quandl_reader_0 = module_0.QuandlReader(str_0, pause=str_0, api_key=str_0)
    assert f'{type(quandl_reader_0).__module__}.{type(quandl_reader_0).__qualname__}' == 'pandas_datareader.quandl.QuandlReader'
    assert quandl_reader_0.symbols == 'kPy'
    assert f'{type(quandl_reader_0.start).__module__}.{type(quandl_reader_0.start).__qualname__}' == 'pandas._libs.tslibs.timestamps.Timestamp'
    assert f'{type(quandl_reader_0.end).__module__}.{type(quandl_reader_0.end).__qualname__}' == 'pandas._libs.tslibs.timestamps.Timestamp'
    assert quandl_reader_0.retry_count == 3
    assert quandl_reader_0.pause == 'kPy'
    assert quandl_reader_0.timeout == 30
    assert quandl_reader_0.pause_multiplier == 1
    assert f'{type(quandl_reader_0.session).__module__}.{type(quandl_reader_0.session).__qualname__}' == 'requests.sessions.Session'
    assert quandl_reader_0.freq is None
    assert quandl_reader_0.chunksize == 25
    assert quandl_reader_0.api_key == 'kPy'
    assert f'{type(module_0.QuandlReader.url).__module__}.{type(module_0.QuandlReader.url).__qualname__}' == 'builtins.property'
    quandl_reader_0.read()

def test_case_4():
    str_0 = 'kPy'
    list_0 = [str_0, str_0, str_0]
    quandl_reader_0 = module_0.QuandlReader(list_0, pause=str_0, session=str_0, chunksize=list_0, api_key=str_0)
    assert f'{type(quandl_reader_0).__module__}.{type(quandl_reader_0).__qualname__}' == 'pandas_datareader.quandl.QuandlReader'
    assert quandl_reader_0.symbols == ['kPy', 'kPy', 'kPy']
    assert f'{type(quandl_reader_0.start).__module__}.{type(quandl_reader_0.start).__qualname__}' == 'pandas._libs.tslibs.timestamps.Timestamp'
    assert f'{type(quandl_reader_0.end).__module__}.{type(quandl_reader_0.end).__qualname__}' == 'pandas._libs.tslibs.timestamps.Timestamp'
    assert quandl_reader_0.retry_count == 3
    assert quandl_reader_0.pause == 'kPy'
    assert quandl_reader_0.timeout == 30
    assert quandl_reader_0.pause_multiplier == 1
    assert quandl_reader_0.session == 'kPy'
    assert quandl_reader_0.freq is None
    assert quandl_reader_0.chunksize == ['kPy', 'kPy', 'kPy']
    assert quandl_reader_0.api_key == 'kPy'
    assert f'{type(module_0.QuandlReader.url).__module__}.{type(module_0.QuandlReader.url).__qualname__}' == 'builtins.property'
    none_type_0 = None
    with pytest.raises(ValueError):
        module_0.QuandlReader(quandl_reader_0, session=none_type_0, api_key=quandl_reader_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'I'
    quandl_reader_0 = module_0.QuandlReader(str_0, pause=str_0, api_key=str_0)
    assert f'{type(quandl_reader_0).__module__}.{type(quandl_reader_0).__qualname__}' == 'pandas_datareader.quandl.QuandlReader'
    assert quandl_reader_0.symbols == 'I'
    assert f'{type(quandl_reader_0.start).__module__}.{type(quandl_reader_0.start).__qualname__}' == 'pandas._libs.tslibs.timestamps.Timestamp'
    assert f'{type(quandl_reader_0.end).__module__}.{type(quandl_reader_0.end).__qualname__}' == 'pandas._libs.tslibs.timestamps.Timestamp'
    assert quandl_reader_0.retry_count == 3
    assert quandl_reader_0.pause == 'I'
    assert quandl_reader_0.timeout == 30
    assert quandl_reader_0.pause_multiplier == 1
    assert f'{type(quandl_reader_0.session).__module__}.{type(quandl_reader_0.session).__qualname__}' == 'requests.sessions.Session'
    assert quandl_reader_0.freq is None
    assert quandl_reader_0.chunksize == 25
    assert quandl_reader_0.api_key == 'I'
    assert f'{type(module_0.QuandlReader.url).__module__}.{type(module_0.QuandlReader.url).__qualname__}' == 'builtins.property'
    quandl_reader_0.read()