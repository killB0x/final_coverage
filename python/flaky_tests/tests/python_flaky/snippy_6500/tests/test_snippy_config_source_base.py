# Automatically generated by Pynguin.
import pytest
import snippy.config.source.base as module_0
import snippy.logger as module_1

def test_case_0():
    float_0 = -673.0
    config_source_base_0 = module_0.ConfigSourceBase(float_0)
    assert f'{type(config_source_base_0).__module__}.{type(config_source_base_0).__qualname__}' == 'snippy.config.source.base.ConfigSourceBase'
    assert config_source_base_0.complete == ''
    assert config_source_base_0.debug is False
    assert config_source_base_0.defaults is False
    assert config_source_base_0.digest is None
    assert config_source_base_0.editor is False
    assert config_source_base_0.failure is False
    assert config_source_base_0.failure_message == ''
    assert config_source_base_0.template_format == 'mkdn'
    assert config_source_base_0.template_format_used is False
    assert config_source_base_0.log_json is False
    assert config_source_base_0.log_msg_max == 80
    assert config_source_base_0.merge is False
    assert config_source_base_0.no_ansi is False
    assert config_source_base_0.no_editor is False
    assert config_source_base_0.only_headers is False
    assert config_source_base_0.operation is None
    assert config_source_base_0.plugin == ''
    assert config_source_base_0.plugins == {}
    assert config_source_base_0.profiler is False
    assert config_source_base_0.quiet is False
    assert config_source_base_0.run_healthcheck is False
    assert config_source_base_0.server_minify_json is False
    assert config_source_base_0.server_readonly is False
    assert config_source_base_0.server_ssl_ca_cert is None
    assert config_source_base_0.server_ssl_cert is None
    assert config_source_base_0.server_ssl_key is None
    assert config_source_base_0.storage_path == ''
    assert config_source_base_0.storage_type == 'sqlite'
    assert config_source_base_0.storage_host == ''
    assert config_source_base_0.storage_user == ''
    assert config_source_base_0.storage_password == ''
    assert config_source_base_0.storage_database == ''
    assert config_source_base_0.storage_ssl_cert is None
    assert config_source_base_0.storage_ssl_key is None
    assert config_source_base_0.storage_ssl_ca_cert is None
    assert config_source_base_0.template is False
    assert config_source_base_0.import_hook is None
    assert config_source_base_0.uuid is None
    assert config_source_base_0.version == '0.12a0'
    assert config_source_base_0.very_verbose is False
    assert module_0.ConfigSourceBase.CREATE == 'create'
    assert module_0.ConfigSourceBase.SEARCH == 'search'
    assert module_0.ConfigSourceBase.UPDATE == 'update'
    assert module_0.ConfigSourceBase.DELETE == 'delete'
    assert module_0.ConfigSourceBase.EXPORT == 'export'
    assert module_0.ConfigSourceBase.IMPORT == 'import'
    assert module_0.ConfigSourceBase.UNIQUE == 'unique'
    assert module_0.ConfigSourceBase.OPERATIONS == ('create', 'search', 'update', 'delete', 'export', 'import')
    assert module_0.ConfigSourceBase.ATTRIBUTES == ('category', 'data', 'brief', 'description', 'name', 'groups', 'tags', 'links', 'source', 'versions', 'languages', 'filename', 'created', 'updated', 'uuid', 'digest')
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_API == 20
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_CLI == 99
    assert module_0.ConfigSourceBase.OFFSET_DEFAULT == 0
    assert module_0.ConfigSourceBase.SERVER_BASE_PATH_REST == '/api/snippy/rest'
    assert f'{type(module_0.ConfigSourceBase.category).__module__}.{type(module_0.ConfigSourceBase.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.data).__module__}.{type(module_0.ConfigSourceBase.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.brief).__module__}.{type(module_0.ConfigSourceBase.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.description).__module__}.{type(module_0.ConfigSourceBase.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.name).__module__}.{type(module_0.ConfigSourceBase.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.groups).__module__}.{type(module_0.ConfigSourceBase.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.tags).__module__}.{type(module_0.ConfigSourceBase.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.links).__module__}.{type(module_0.ConfigSourceBase.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.source).__module__}.{type(module_0.ConfigSourceBase.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.versions).__module__}.{type(module_0.ConfigSourceBase.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.languages).__module__}.{type(module_0.ConfigSourceBase.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.filename).__module__}.{type(module_0.ConfigSourceBase.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.operation_files).__module__}.{type(module_0.ConfigSourceBase.operation_files).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sall).__module__}.{type(module_0.ConfigSourceBase.sall).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.scat).__module__}.{type(module_0.ConfigSourceBase.scat).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.stag).__module__}.{type(module_0.ConfigSourceBase.stag).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sgrp).__module__}.{type(module_0.ConfigSourceBase.sgrp).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_filter).__module__}.{type(module_0.ConfigSourceBase.search_filter).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_limit).__module__}.{type(module_0.ConfigSourceBase.search_limit).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_offset).__module__}.{type(module_0.ConfigSourceBase.search_offset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sort_fields).__module__}.{type(module_0.ConfigSourceBase.sort_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.remove_fields).__module__}.{type(module_0.ConfigSourceBase.remove_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.reset_fields).__module__}.{type(module_0.ConfigSourceBase.reset_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.run_server).__module__}.{type(module_0.ConfigSourceBase.run_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_base_path_rest).__module__}.{type(module_0.ConfigSourceBase.server_base_path_rest).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_host).__module__}.{type(module_0.ConfigSourceBase.server_host).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.identity).__module__}.{type(module_0.ConfigSourceBase.identity).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.read_env).__module__}.{type(module_0.ConfigSourceBase.read_env).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.ConfigSourceBase.read_arg).__module__}.{type(module_0.ConfigSourceBase.read_arg).__qualname__}' == 'builtins.method'
    var_0 = config_source_base_0.__repr__()
    assert var_0 == 'ConfigSourceBase(reset_fields=())'

def test_case_1():
    float_0 = -673.0
    config_source_base_0 = module_0.ConfigSourceBase(float_0)
    assert f'{type(config_source_base_0).__module__}.{type(config_source_base_0).__qualname__}' == 'snippy.config.source.base.ConfigSourceBase'
    assert config_source_base_0.complete == ''
    assert config_source_base_0.debug is False
    assert config_source_base_0.defaults is False
    assert config_source_base_0.digest is None
    assert config_source_base_0.editor is False
    assert config_source_base_0.failure is False
    assert config_source_base_0.failure_message == ''
    assert config_source_base_0.template_format == 'mkdn'
    assert config_source_base_0.template_format_used is False
    assert config_source_base_0.log_json is False
    assert config_source_base_0.log_msg_max == 80
    assert config_source_base_0.merge is False
    assert config_source_base_0.no_ansi is False
    assert config_source_base_0.no_editor is False
    assert config_source_base_0.only_headers is False
    assert config_source_base_0.operation is None
    assert config_source_base_0.plugin == ''
    assert config_source_base_0.plugins == {}
    assert config_source_base_0.profiler is False
    assert config_source_base_0.quiet is False
    assert config_source_base_0.run_healthcheck is False
    assert config_source_base_0.server_minify_json is False
    assert config_source_base_0.server_readonly is False
    assert config_source_base_0.server_ssl_ca_cert is None
    assert config_source_base_0.server_ssl_cert is None
    assert config_source_base_0.server_ssl_key is None
    assert config_source_base_0.storage_path == ''
    assert config_source_base_0.storage_type == 'sqlite'
    assert config_source_base_0.storage_host == ''
    assert config_source_base_0.storage_user == ''
    assert config_source_base_0.storage_password == ''
    assert config_source_base_0.storage_database == ''
    assert config_source_base_0.storage_ssl_cert is None
    assert config_source_base_0.storage_ssl_key is None
    assert config_source_base_0.storage_ssl_ca_cert is None
    assert config_source_base_0.template is False
    assert config_source_base_0.import_hook is None
    assert config_source_base_0.uuid is None
    assert config_source_base_0.version == '0.12a0'
    assert config_source_base_0.very_verbose is False
    assert module_0.ConfigSourceBase.CREATE == 'create'
    assert module_0.ConfigSourceBase.SEARCH == 'search'
    assert module_0.ConfigSourceBase.UPDATE == 'update'
    assert module_0.ConfigSourceBase.DELETE == 'delete'
    assert module_0.ConfigSourceBase.EXPORT == 'export'
    assert module_0.ConfigSourceBase.IMPORT == 'import'
    assert module_0.ConfigSourceBase.UNIQUE == 'unique'
    assert module_0.ConfigSourceBase.OPERATIONS == ('create', 'search', 'update', 'delete', 'export', 'import')
    assert module_0.ConfigSourceBase.ATTRIBUTES == ('category', 'data', 'brief', 'description', 'name', 'groups', 'tags', 'links', 'source', 'versions', 'languages', 'filename', 'created', 'updated', 'uuid', 'digest')
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_API == 20
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_CLI == 99
    assert module_0.ConfigSourceBase.OFFSET_DEFAULT == 0
    assert module_0.ConfigSourceBase.SERVER_BASE_PATH_REST == '/api/snippy/rest'
    assert f'{type(module_0.ConfigSourceBase.category).__module__}.{type(module_0.ConfigSourceBase.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.data).__module__}.{type(module_0.ConfigSourceBase.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.brief).__module__}.{type(module_0.ConfigSourceBase.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.description).__module__}.{type(module_0.ConfigSourceBase.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.name).__module__}.{type(module_0.ConfigSourceBase.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.groups).__module__}.{type(module_0.ConfigSourceBase.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.tags).__module__}.{type(module_0.ConfigSourceBase.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.links).__module__}.{type(module_0.ConfigSourceBase.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.source).__module__}.{type(module_0.ConfigSourceBase.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.versions).__module__}.{type(module_0.ConfigSourceBase.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.languages).__module__}.{type(module_0.ConfigSourceBase.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.filename).__module__}.{type(module_0.ConfigSourceBase.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.operation_files).__module__}.{type(module_0.ConfigSourceBase.operation_files).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sall).__module__}.{type(module_0.ConfigSourceBase.sall).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.scat).__module__}.{type(module_0.ConfigSourceBase.scat).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.stag).__module__}.{type(module_0.ConfigSourceBase.stag).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sgrp).__module__}.{type(module_0.ConfigSourceBase.sgrp).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_filter).__module__}.{type(module_0.ConfigSourceBase.search_filter).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_limit).__module__}.{type(module_0.ConfigSourceBase.search_limit).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_offset).__module__}.{type(module_0.ConfigSourceBase.search_offset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sort_fields).__module__}.{type(module_0.ConfigSourceBase.sort_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.remove_fields).__module__}.{type(module_0.ConfigSourceBase.remove_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.reset_fields).__module__}.{type(module_0.ConfigSourceBase.reset_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.run_server).__module__}.{type(module_0.ConfigSourceBase.run_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_base_path_rest).__module__}.{type(module_0.ConfigSourceBase.server_base_path_rest).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_host).__module__}.{type(module_0.ConfigSourceBase.server_host).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.identity).__module__}.{type(module_0.ConfigSourceBase.identity).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.read_env).__module__}.{type(module_0.ConfigSourceBase.read_env).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.ConfigSourceBase.read_arg).__module__}.{type(module_0.ConfigSourceBase.read_arg).__qualname__}' == 'builtins.method'

def test_case_2():
    float_0 = -673.0
    config_source_base_0 = module_0.ConfigSourceBase(float_0)
    assert f'{type(config_source_base_0).__module__}.{type(config_source_base_0).__qualname__}' == 'snippy.config.source.base.ConfigSourceBase'
    assert config_source_base_0.complete == ''
    assert config_source_base_0.debug is False
    assert config_source_base_0.defaults is False
    assert config_source_base_0.digest is None
    assert config_source_base_0.editor is False
    assert config_source_base_0.failure is False
    assert config_source_base_0.failure_message == ''
    assert config_source_base_0.template_format == 'mkdn'
    assert config_source_base_0.template_format_used is False
    assert config_source_base_0.log_json is False
    assert config_source_base_0.log_msg_max == 80
    assert config_source_base_0.merge is False
    assert config_source_base_0.no_ansi is False
    assert config_source_base_0.no_editor is False
    assert config_source_base_0.only_headers is False
    assert config_source_base_0.operation is None
    assert config_source_base_0.plugin == ''
    assert config_source_base_0.plugins == {}
    assert config_source_base_0.profiler is False
    assert config_source_base_0.quiet is False
    assert config_source_base_0.run_healthcheck is False
    assert config_source_base_0.server_minify_json is False
    assert config_source_base_0.server_readonly is False
    assert config_source_base_0.server_ssl_ca_cert is None
    assert config_source_base_0.server_ssl_cert is None
    assert config_source_base_0.server_ssl_key is None
    assert config_source_base_0.storage_path == ''
    assert config_source_base_0.storage_type == 'sqlite'
    assert config_source_base_0.storage_host == ''
    assert config_source_base_0.storage_user == ''
    assert config_source_base_0.storage_password == ''
    assert config_source_base_0.storage_database == ''
    assert config_source_base_0.storage_ssl_cert is None
    assert config_source_base_0.storage_ssl_key is None
    assert config_source_base_0.storage_ssl_ca_cert is None
    assert config_source_base_0.template is False
    assert config_source_base_0.import_hook is None
    assert config_source_base_0.uuid is None
    assert config_source_base_0.version == '0.12a0'
    assert config_source_base_0.very_verbose is False
    assert module_0.ConfigSourceBase.CREATE == 'create'
    assert module_0.ConfigSourceBase.SEARCH == 'search'
    assert module_0.ConfigSourceBase.UPDATE == 'update'
    assert module_0.ConfigSourceBase.DELETE == 'delete'
    assert module_0.ConfigSourceBase.EXPORT == 'export'
    assert module_0.ConfigSourceBase.IMPORT == 'import'
    assert module_0.ConfigSourceBase.UNIQUE == 'unique'
    assert module_0.ConfigSourceBase.OPERATIONS == ('create', 'search', 'update', 'delete', 'export', 'import')
    assert module_0.ConfigSourceBase.ATTRIBUTES == ('category', 'data', 'brief', 'description', 'name', 'groups', 'tags', 'links', 'source', 'versions', 'languages', 'filename', 'created', 'updated', 'uuid', 'digest')
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_API == 20
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_CLI == 99
    assert module_0.ConfigSourceBase.OFFSET_DEFAULT == 0
    assert module_0.ConfigSourceBase.SERVER_BASE_PATH_REST == '/api/snippy/rest'
    assert f'{type(module_0.ConfigSourceBase.category).__module__}.{type(module_0.ConfigSourceBase.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.data).__module__}.{type(module_0.ConfigSourceBase.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.brief).__module__}.{type(module_0.ConfigSourceBase.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.description).__module__}.{type(module_0.ConfigSourceBase.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.name).__module__}.{type(module_0.ConfigSourceBase.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.groups).__module__}.{type(module_0.ConfigSourceBase.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.tags).__module__}.{type(module_0.ConfigSourceBase.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.links).__module__}.{type(module_0.ConfigSourceBase.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.source).__module__}.{type(module_0.ConfigSourceBase.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.versions).__module__}.{type(module_0.ConfigSourceBase.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.languages).__module__}.{type(module_0.ConfigSourceBase.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.filename).__module__}.{type(module_0.ConfigSourceBase.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.operation_files).__module__}.{type(module_0.ConfigSourceBase.operation_files).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sall).__module__}.{type(module_0.ConfigSourceBase.sall).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.scat).__module__}.{type(module_0.ConfigSourceBase.scat).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.stag).__module__}.{type(module_0.ConfigSourceBase.stag).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sgrp).__module__}.{type(module_0.ConfigSourceBase.sgrp).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_filter).__module__}.{type(module_0.ConfigSourceBase.search_filter).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_limit).__module__}.{type(module_0.ConfigSourceBase.search_limit).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_offset).__module__}.{type(module_0.ConfigSourceBase.search_offset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sort_fields).__module__}.{type(module_0.ConfigSourceBase.sort_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.remove_fields).__module__}.{type(module_0.ConfigSourceBase.remove_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.reset_fields).__module__}.{type(module_0.ConfigSourceBase.reset_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.run_server).__module__}.{type(module_0.ConfigSourceBase.run_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_base_path_rest).__module__}.{type(module_0.ConfigSourceBase.server_base_path_rest).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_host).__module__}.{type(module_0.ConfigSourceBase.server_host).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.identity).__module__}.{type(module_0.ConfigSourceBase.identity).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.read_env).__module__}.{type(module_0.ConfigSourceBase.read_env).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.ConfigSourceBase.read_arg).__module__}.{type(module_0.ConfigSourceBase.read_arg).__qualname__}' == 'builtins.method'
    none_type_0 = None
    var_0 = config_source_base_0.init_conf(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -673.0
    config_source_base_0 = module_0.ConfigSourceBase(float_0)
    assert f'{type(config_source_base_0).__module__}.{type(config_source_base_0).__qualname__}' == 'snippy.config.source.base.ConfigSourceBase'
    assert config_source_base_0.complete == ''
    assert config_source_base_0.debug is False
    assert config_source_base_0.defaults is False
    assert config_source_base_0.digest is None
    assert config_source_base_0.editor is False
    assert config_source_base_0.failure is False
    assert config_source_base_0.failure_message == ''
    assert config_source_base_0.template_format == 'mkdn'
    assert config_source_base_0.template_format_used is False
    assert config_source_base_0.log_json is False
    assert config_source_base_0.log_msg_max == 80
    assert config_source_base_0.merge is False
    assert config_source_base_0.no_ansi is False
    assert config_source_base_0.no_editor is False
    assert config_source_base_0.only_headers is False
    assert config_source_base_0.operation is None
    assert config_source_base_0.plugin == ''
    assert config_source_base_0.plugins == {}
    assert config_source_base_0.profiler is False
    assert config_source_base_0.quiet is False
    assert config_source_base_0.run_healthcheck is False
    assert config_source_base_0.server_minify_json is False
    assert config_source_base_0.server_readonly is False
    assert config_source_base_0.server_ssl_ca_cert is None
    assert config_source_base_0.server_ssl_cert is None
    assert config_source_base_0.server_ssl_key is None
    assert config_source_base_0.storage_path == ''
    assert config_source_base_0.storage_type == 'sqlite'
    assert config_source_base_0.storage_host == ''
    assert config_source_base_0.storage_user == ''
    assert config_source_base_0.storage_password == ''
    assert config_source_base_0.storage_database == ''
    assert config_source_base_0.storage_ssl_cert is None
    assert config_source_base_0.storage_ssl_key is None
    assert config_source_base_0.storage_ssl_ca_cert is None
    assert config_source_base_0.template is False
    assert config_source_base_0.import_hook is None
    assert config_source_base_0.uuid is None
    assert config_source_base_0.version == '0.12a0'
    assert config_source_base_0.very_verbose is False
    assert module_0.ConfigSourceBase.CREATE == 'create'
    assert module_0.ConfigSourceBase.SEARCH == 'search'
    assert module_0.ConfigSourceBase.UPDATE == 'update'
    assert module_0.ConfigSourceBase.DELETE == 'delete'
    assert module_0.ConfigSourceBase.EXPORT == 'export'
    assert module_0.ConfigSourceBase.IMPORT == 'import'
    assert module_0.ConfigSourceBase.UNIQUE == 'unique'
    assert module_0.ConfigSourceBase.OPERATIONS == ('create', 'search', 'update', 'delete', 'export', 'import')
    assert module_0.ConfigSourceBase.ATTRIBUTES == ('category', 'data', 'brief', 'description', 'name', 'groups', 'tags', 'links', 'source', 'versions', 'languages', 'filename', 'created', 'updated', 'uuid', 'digest')
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_API == 20
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_CLI == 99
    assert module_0.ConfigSourceBase.OFFSET_DEFAULT == 0
    assert module_0.ConfigSourceBase.SERVER_BASE_PATH_REST == '/api/snippy/rest'
    assert f'{type(module_0.ConfigSourceBase.category).__module__}.{type(module_0.ConfigSourceBase.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.data).__module__}.{type(module_0.ConfigSourceBase.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.brief).__module__}.{type(module_0.ConfigSourceBase.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.description).__module__}.{type(module_0.ConfigSourceBase.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.name).__module__}.{type(module_0.ConfigSourceBase.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.groups).__module__}.{type(module_0.ConfigSourceBase.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.tags).__module__}.{type(module_0.ConfigSourceBase.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.links).__module__}.{type(module_0.ConfigSourceBase.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.source).__module__}.{type(module_0.ConfigSourceBase.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.versions).__module__}.{type(module_0.ConfigSourceBase.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.languages).__module__}.{type(module_0.ConfigSourceBase.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.filename).__module__}.{type(module_0.ConfigSourceBase.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.operation_files).__module__}.{type(module_0.ConfigSourceBase.operation_files).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sall).__module__}.{type(module_0.ConfigSourceBase.sall).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.scat).__module__}.{type(module_0.ConfigSourceBase.scat).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.stag).__module__}.{type(module_0.ConfigSourceBase.stag).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sgrp).__module__}.{type(module_0.ConfigSourceBase.sgrp).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_filter).__module__}.{type(module_0.ConfigSourceBase.search_filter).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_limit).__module__}.{type(module_0.ConfigSourceBase.search_limit).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_offset).__module__}.{type(module_0.ConfigSourceBase.search_offset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sort_fields).__module__}.{type(module_0.ConfigSourceBase.sort_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.remove_fields).__module__}.{type(module_0.ConfigSourceBase.remove_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.reset_fields).__module__}.{type(module_0.ConfigSourceBase.reset_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.run_server).__module__}.{type(module_0.ConfigSourceBase.run_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_base_path_rest).__module__}.{type(module_0.ConfigSourceBase.server_base_path_rest).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_host).__module__}.{type(module_0.ConfigSourceBase.server_host).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.identity).__module__}.{type(module_0.ConfigSourceBase.identity).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.read_env).__module__}.{type(module_0.ConfigSourceBase.read_env).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.ConfigSourceBase.read_arg).__module__}.{type(module_0.ConfigSourceBase.read_arg).__qualname__}' == 'builtins.method'
    config_source_base_0.__str__()

def test_case_4():
    bool_0 = False
    config_source_base_0 = module_0.ConfigSourceBase(bool_0)
    assert f'{type(config_source_base_0).__module__}.{type(config_source_base_0).__qualname__}' == 'snippy.config.source.base.ConfigSourceBase'
    assert config_source_base_0.complete == ''
    assert config_source_base_0.debug is False
    assert config_source_base_0.defaults is False
    assert config_source_base_0.digest is None
    assert config_source_base_0.editor is False
    assert config_source_base_0.failure is False
    assert config_source_base_0.failure_message == ''
    assert config_source_base_0.template_format == 'mkdn'
    assert config_source_base_0.template_format_used is False
    assert config_source_base_0.log_json is False
    assert config_source_base_0.log_msg_max == 80
    assert config_source_base_0.merge is False
    assert config_source_base_0.no_ansi is False
    assert config_source_base_0.no_editor is False
    assert config_source_base_0.only_headers is False
    assert config_source_base_0.operation is None
    assert config_source_base_0.plugin == ''
    assert config_source_base_0.plugins == {}
    assert config_source_base_0.profiler is False
    assert config_source_base_0.quiet is False
    assert config_source_base_0.run_healthcheck is False
    assert config_source_base_0.server_minify_json is False
    assert config_source_base_0.server_readonly is False
    assert config_source_base_0.server_ssl_ca_cert is None
    assert config_source_base_0.server_ssl_cert is None
    assert config_source_base_0.server_ssl_key is None
    assert config_source_base_0.storage_path == ''
    assert config_source_base_0.storage_type == 'sqlite'
    assert config_source_base_0.storage_host == ''
    assert config_source_base_0.storage_user == ''
    assert config_source_base_0.storage_password == ''
    assert config_source_base_0.storage_database == ''
    assert config_source_base_0.storage_ssl_cert is None
    assert config_source_base_0.storage_ssl_key is None
    assert config_source_base_0.storage_ssl_ca_cert is None
    assert config_source_base_0.template is False
    assert config_source_base_0.import_hook is None
    assert config_source_base_0.uuid is None
    assert config_source_base_0.version == '0.12a0'
    assert config_source_base_0.very_verbose is False
    assert module_0.ConfigSourceBase.CREATE == 'create'
    assert module_0.ConfigSourceBase.SEARCH == 'search'
    assert module_0.ConfigSourceBase.UPDATE == 'update'
    assert module_0.ConfigSourceBase.DELETE == 'delete'
    assert module_0.ConfigSourceBase.EXPORT == 'export'
    assert module_0.ConfigSourceBase.IMPORT == 'import'
    assert module_0.ConfigSourceBase.UNIQUE == 'unique'
    assert module_0.ConfigSourceBase.OPERATIONS == ('create', 'search', 'update', 'delete', 'export', 'import')
    assert module_0.ConfigSourceBase.ATTRIBUTES == ('category', 'data', 'brief', 'description', 'name', 'groups', 'tags', 'links', 'source', 'versions', 'languages', 'filename', 'created', 'updated', 'uuid', 'digest')
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_API == 20
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_CLI == 99
    assert module_0.ConfigSourceBase.OFFSET_DEFAULT == 0
    assert module_0.ConfigSourceBase.SERVER_BASE_PATH_REST == '/api/snippy/rest'
    assert f'{type(module_0.ConfigSourceBase.category).__module__}.{type(module_0.ConfigSourceBase.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.data).__module__}.{type(module_0.ConfigSourceBase.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.brief).__module__}.{type(module_0.ConfigSourceBase.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.description).__module__}.{type(module_0.ConfigSourceBase.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.name).__module__}.{type(module_0.ConfigSourceBase.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.groups).__module__}.{type(module_0.ConfigSourceBase.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.tags).__module__}.{type(module_0.ConfigSourceBase.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.links).__module__}.{type(module_0.ConfigSourceBase.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.source).__module__}.{type(module_0.ConfigSourceBase.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.versions).__module__}.{type(module_0.ConfigSourceBase.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.languages).__module__}.{type(module_0.ConfigSourceBase.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.filename).__module__}.{type(module_0.ConfigSourceBase.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.operation_files).__module__}.{type(module_0.ConfigSourceBase.operation_files).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sall).__module__}.{type(module_0.ConfigSourceBase.sall).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.scat).__module__}.{type(module_0.ConfigSourceBase.scat).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.stag).__module__}.{type(module_0.ConfigSourceBase.stag).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sgrp).__module__}.{type(module_0.ConfigSourceBase.sgrp).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_filter).__module__}.{type(module_0.ConfigSourceBase.search_filter).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_limit).__module__}.{type(module_0.ConfigSourceBase.search_limit).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_offset).__module__}.{type(module_0.ConfigSourceBase.search_offset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sort_fields).__module__}.{type(module_0.ConfigSourceBase.sort_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.remove_fields).__module__}.{type(module_0.ConfigSourceBase.remove_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.reset_fields).__module__}.{type(module_0.ConfigSourceBase.reset_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.run_server).__module__}.{type(module_0.ConfigSourceBase.run_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_base_path_rest).__module__}.{type(module_0.ConfigSourceBase.server_base_path_rest).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_host).__module__}.{type(module_0.ConfigSourceBase.server_host).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.identity).__module__}.{type(module_0.ConfigSourceBase.identity).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.read_env).__module__}.{type(module_0.ConfigSourceBase.read_env).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.ConfigSourceBase.read_arg).__module__}.{type(module_0.ConfigSourceBase.read_arg).__qualname__}' == 'builtins.method'
    var_0 = config_source_base_0.get_plugin_short_names()

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    config_source_base_0 = module_0.ConfigSourceBase(bool_0)
    assert f'{type(config_source_base_0).__module__}.{type(config_source_base_0).__qualname__}' == 'snippy.config.source.base.ConfigSourceBase'
    assert config_source_base_0.complete == ''
    assert config_source_base_0.debug is False
    assert config_source_base_0.defaults is False
    assert config_source_base_0.digest is None
    assert config_source_base_0.editor is False
    assert config_source_base_0.failure is False
    assert config_source_base_0.failure_message == ''
    assert config_source_base_0.template_format == 'mkdn'
    assert config_source_base_0.template_format_used is False
    assert config_source_base_0.log_json is False
    assert config_source_base_0.log_msg_max == 80
    assert config_source_base_0.merge is False
    assert config_source_base_0.no_ansi is False
    assert config_source_base_0.no_editor is False
    assert config_source_base_0.only_headers is False
    assert config_source_base_0.operation is None
    assert config_source_base_0.plugin == ''
    assert config_source_base_0.plugins == {}
    assert config_source_base_0.profiler is False
    assert config_source_base_0.quiet is False
    assert config_source_base_0.run_healthcheck is False
    assert config_source_base_0.server_minify_json is False
    assert config_source_base_0.server_readonly is False
    assert config_source_base_0.server_ssl_ca_cert is None
    assert config_source_base_0.server_ssl_cert is None
    assert config_source_base_0.server_ssl_key is None
    assert config_source_base_0.storage_path == ''
    assert config_source_base_0.storage_type == 'sqlite'
    assert config_source_base_0.storage_host == ''
    assert config_source_base_0.storage_user == ''
    assert config_source_base_0.storage_password == ''
    assert config_source_base_0.storage_database == ''
    assert config_source_base_0.storage_ssl_cert is None
    assert config_source_base_0.storage_ssl_key is None
    assert config_source_base_0.storage_ssl_ca_cert is None
    assert config_source_base_0.template is False
    assert config_source_base_0.import_hook is None
    assert config_source_base_0.uuid is None
    assert config_source_base_0.version == '0.12a0'
    assert config_source_base_0.very_verbose is False
    assert module_0.ConfigSourceBase.CREATE == 'create'
    assert module_0.ConfigSourceBase.SEARCH == 'search'
    assert module_0.ConfigSourceBase.UPDATE == 'update'
    assert module_0.ConfigSourceBase.DELETE == 'delete'
    assert module_0.ConfigSourceBase.EXPORT == 'export'
    assert module_0.ConfigSourceBase.IMPORT == 'import'
    assert module_0.ConfigSourceBase.UNIQUE == 'unique'
    assert module_0.ConfigSourceBase.OPERATIONS == ('create', 'search', 'update', 'delete', 'export', 'import')
    assert module_0.ConfigSourceBase.ATTRIBUTES == ('category', 'data', 'brief', 'description', 'name', 'groups', 'tags', 'links', 'source', 'versions', 'languages', 'filename', 'created', 'updated', 'uuid', 'digest')
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_API == 20
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_CLI == 99
    assert module_0.ConfigSourceBase.OFFSET_DEFAULT == 0
    assert module_0.ConfigSourceBase.SERVER_BASE_PATH_REST == '/api/snippy/rest'
    assert f'{type(module_0.ConfigSourceBase.category).__module__}.{type(module_0.ConfigSourceBase.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.data).__module__}.{type(module_0.ConfigSourceBase.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.brief).__module__}.{type(module_0.ConfigSourceBase.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.description).__module__}.{type(module_0.ConfigSourceBase.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.name).__module__}.{type(module_0.ConfigSourceBase.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.groups).__module__}.{type(module_0.ConfigSourceBase.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.tags).__module__}.{type(module_0.ConfigSourceBase.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.links).__module__}.{type(module_0.ConfigSourceBase.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.source).__module__}.{type(module_0.ConfigSourceBase.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.versions).__module__}.{type(module_0.ConfigSourceBase.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.languages).__module__}.{type(module_0.ConfigSourceBase.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.filename).__module__}.{type(module_0.ConfigSourceBase.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.operation_files).__module__}.{type(module_0.ConfigSourceBase.operation_files).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sall).__module__}.{type(module_0.ConfigSourceBase.sall).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.scat).__module__}.{type(module_0.ConfigSourceBase.scat).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.stag).__module__}.{type(module_0.ConfigSourceBase.stag).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sgrp).__module__}.{type(module_0.ConfigSourceBase.sgrp).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_filter).__module__}.{type(module_0.ConfigSourceBase.search_filter).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_limit).__module__}.{type(module_0.ConfigSourceBase.search_limit).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_offset).__module__}.{type(module_0.ConfigSourceBase.search_offset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sort_fields).__module__}.{type(module_0.ConfigSourceBase.sort_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.remove_fields).__module__}.{type(module_0.ConfigSourceBase.remove_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.reset_fields).__module__}.{type(module_0.ConfigSourceBase.reset_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.run_server).__module__}.{type(module_0.ConfigSourceBase.run_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_base_path_rest).__module__}.{type(module_0.ConfigSourceBase.server_base_path_rest).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_host).__module__}.{type(module_0.ConfigSourceBase.server_host).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.identity).__module__}.{type(module_0.ConfigSourceBase.identity).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.read_env).__module__}.{type(module_0.ConfigSourceBase.read_env).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.ConfigSourceBase.read_arg).__module__}.{type(module_0.ConfigSourceBase.read_arg).__qualname__}' == 'builtins.method'
    config_source_base_0.init_conf(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b'\x9cS\x94tP\x11Er\x05\xed\xb2\xba\xc7\x0f'
    none_type_0 = None
    config_source_base_0 = module_0.ConfigSourceBase(bytes_0)
    assert f'{type(config_source_base_0).__module__}.{type(config_source_base_0).__qualname__}' == 'snippy.config.source.base.ConfigSourceBase'
    assert config_source_base_0.complete == ''
    assert config_source_base_0.debug is False
    assert config_source_base_0.defaults is False
    assert config_source_base_0.digest is None
    assert config_source_base_0.editor is False
    assert config_source_base_0.failure is False
    assert config_source_base_0.failure_message == ''
    assert config_source_base_0.template_format == 'mkdn'
    assert config_source_base_0.template_format_used is False
    assert config_source_base_0.log_json is False
    assert config_source_base_0.log_msg_max == 80
    assert config_source_base_0.merge is False
    assert config_source_base_0.no_ansi is False
    assert config_source_base_0.no_editor is False
    assert config_source_base_0.only_headers is False
    assert config_source_base_0.operation is None
    assert config_source_base_0.plugin == ''
    assert config_source_base_0.plugins == {}
    assert config_source_base_0.profiler is False
    assert config_source_base_0.quiet is False
    assert config_source_base_0.run_healthcheck is False
    assert config_source_base_0.server_minify_json is False
    assert config_source_base_0.server_readonly is False
    assert config_source_base_0.server_ssl_ca_cert is None
    assert config_source_base_0.server_ssl_cert is None
    assert config_source_base_0.server_ssl_key is None
    assert config_source_base_0.storage_path == ''
    assert config_source_base_0.storage_type == 'sqlite'
    assert config_source_base_0.storage_host == ''
    assert config_source_base_0.storage_user == ''
    assert config_source_base_0.storage_password == ''
    assert config_source_base_0.storage_database == ''
    assert config_source_base_0.storage_ssl_cert is None
    assert config_source_base_0.storage_ssl_key is None
    assert config_source_base_0.storage_ssl_ca_cert is None
    assert config_source_base_0.template is False
    assert config_source_base_0.import_hook is None
    assert config_source_base_0.uuid is None
    assert config_source_base_0.version == '0.12a0'
    assert config_source_base_0.very_verbose is False
    assert module_0.ConfigSourceBase.CREATE == 'create'
    assert module_0.ConfigSourceBase.SEARCH == 'search'
    assert module_0.ConfigSourceBase.UPDATE == 'update'
    assert module_0.ConfigSourceBase.DELETE == 'delete'
    assert module_0.ConfigSourceBase.EXPORT == 'export'
    assert module_0.ConfigSourceBase.IMPORT == 'import'
    assert module_0.ConfigSourceBase.UNIQUE == 'unique'
    assert module_0.ConfigSourceBase.OPERATIONS == ('create', 'search', 'update', 'delete', 'export', 'import')
    assert module_0.ConfigSourceBase.ATTRIBUTES == ('category', 'data', 'brief', 'description', 'name', 'groups', 'tags', 'links', 'source', 'versions', 'languages', 'filename', 'created', 'updated', 'uuid', 'digest')
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_API == 20
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_CLI == 99
    assert module_0.ConfigSourceBase.OFFSET_DEFAULT == 0
    assert module_0.ConfigSourceBase.SERVER_BASE_PATH_REST == '/api/snippy/rest'
    assert f'{type(module_0.ConfigSourceBase.category).__module__}.{type(module_0.ConfigSourceBase.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.data).__module__}.{type(module_0.ConfigSourceBase.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.brief).__module__}.{type(module_0.ConfigSourceBase.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.description).__module__}.{type(module_0.ConfigSourceBase.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.name).__module__}.{type(module_0.ConfigSourceBase.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.groups).__module__}.{type(module_0.ConfigSourceBase.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.tags).__module__}.{type(module_0.ConfigSourceBase.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.links).__module__}.{type(module_0.ConfigSourceBase.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.source).__module__}.{type(module_0.ConfigSourceBase.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.versions).__module__}.{type(module_0.ConfigSourceBase.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.languages).__module__}.{type(module_0.ConfigSourceBase.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.filename).__module__}.{type(module_0.ConfigSourceBase.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.operation_files).__module__}.{type(module_0.ConfigSourceBase.operation_files).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sall).__module__}.{type(module_0.ConfigSourceBase.sall).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.scat).__module__}.{type(module_0.ConfigSourceBase.scat).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.stag).__module__}.{type(module_0.ConfigSourceBase.stag).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sgrp).__module__}.{type(module_0.ConfigSourceBase.sgrp).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_filter).__module__}.{type(module_0.ConfigSourceBase.search_filter).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_limit).__module__}.{type(module_0.ConfigSourceBase.search_limit).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_offset).__module__}.{type(module_0.ConfigSourceBase.search_offset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sort_fields).__module__}.{type(module_0.ConfigSourceBase.sort_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.remove_fields).__module__}.{type(module_0.ConfigSourceBase.remove_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.reset_fields).__module__}.{type(module_0.ConfigSourceBase.reset_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.run_server).__module__}.{type(module_0.ConfigSourceBase.run_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_base_path_rest).__module__}.{type(module_0.ConfigSourceBase.server_base_path_rest).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_host).__module__}.{type(module_0.ConfigSourceBase.server_host).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.identity).__module__}.{type(module_0.ConfigSourceBase.identity).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.read_env).__module__}.{type(module_0.ConfigSourceBase.read_env).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.ConfigSourceBase.read_arg).__module__}.{type(module_0.ConfigSourceBase.read_arg).__qualname__}' == 'builtins.method'
    var_0 = config_source_base_0.init_conf(none_type_0)
    var_1 = config_source_base_0.__str__()
    assert var_1 == "b'\\x9cS\\x94tP\\x11Er\\x05\\xed\\xb2\\xba\\xc7\\x0f'(brief=, category=snippet, complete=, data=(), debug=False, defaults=False, description=, digest=None, editor=False, failure=False, failure_message=, filename=, groups=('default',), identity=None, languages=(), links=(), log_json=False, log_msg_max=80, merge=False, name=, no_ansi=False, no_editor=False, only_headers=False, operation=None, operation_files=(), plugin=, plugins={}, profiler=False, quiet=False, remove_fields=(), reset_fields=(), run_healthcheck=False, run_server=False, sall=(), scat=('snippet',), search_filter=None, search_limit=20, search_offset=0, server_base_path_rest=/api/snippy/rest/, server_host=, server_minify_json=False, server_readonly=False, sgrp=(), sort_fields=OrderedDict([('brief', 'ASC')]), source=, stag=(), storage_type=sqlite, tags=(), template=False, uuid=None, version=0.12a0, versions=(), very_verbose=False)"
    bool_0 = False
    bytes_0.read_versions(bool_0, bytes_0)

def test_case_7():
    bytes_0 = b'\x9cS?tP\x11Er\x05\xed\xb2\xba\xc7\x0f'
    config_source_base_0 = module_0.ConfigSourceBase(bytes_0)
    assert f'{type(config_source_base_0).__module__}.{type(config_source_base_0).__qualname__}' == 'snippy.config.source.base.ConfigSourceBase'
    assert config_source_base_0.complete == ''
    assert config_source_base_0.debug is False
    assert config_source_base_0.defaults is False
    assert config_source_base_0.digest is None
    assert config_source_base_0.editor is False
    assert config_source_base_0.failure is False
    assert config_source_base_0.failure_message == ''
    assert config_source_base_0.template_format == 'mkdn'
    assert config_source_base_0.template_format_used is False
    assert config_source_base_0.log_json is False
    assert config_source_base_0.log_msg_max == 80
    assert config_source_base_0.merge is False
    assert config_source_base_0.no_ansi is False
    assert config_source_base_0.no_editor is False
    assert config_source_base_0.only_headers is False
    assert config_source_base_0.operation is None
    assert config_source_base_0.plugin == ''
    assert config_source_base_0.plugins == {}
    assert config_source_base_0.profiler is False
    assert config_source_base_0.quiet is False
    assert config_source_base_0.run_healthcheck is False
    assert config_source_base_0.server_minify_json is False
    assert config_source_base_0.server_readonly is False
    assert config_source_base_0.server_ssl_ca_cert is None
    assert config_source_base_0.server_ssl_cert is None
    assert config_source_base_0.server_ssl_key is None
    assert config_source_base_0.storage_path == ''
    assert config_source_base_0.storage_type == 'sqlite'
    assert config_source_base_0.storage_host == ''
    assert config_source_base_0.storage_user == ''
    assert config_source_base_0.storage_password == ''
    assert config_source_base_0.storage_database == ''
    assert config_source_base_0.storage_ssl_cert is None
    assert config_source_base_0.storage_ssl_key is None
    assert config_source_base_0.storage_ssl_ca_cert is None
    assert config_source_base_0.template is False
    assert config_source_base_0.import_hook is None
    assert config_source_base_0.uuid is None
    assert config_source_base_0.version == '0.12a0'
    assert config_source_base_0.very_verbose is False
    assert module_0.ConfigSourceBase.CREATE == 'create'
    assert module_0.ConfigSourceBase.SEARCH == 'search'
    assert module_0.ConfigSourceBase.UPDATE == 'update'
    assert module_0.ConfigSourceBase.DELETE == 'delete'
    assert module_0.ConfigSourceBase.EXPORT == 'export'
    assert module_0.ConfigSourceBase.IMPORT == 'import'
    assert module_0.ConfigSourceBase.UNIQUE == 'unique'
    assert module_0.ConfigSourceBase.OPERATIONS == ('create', 'search', 'update', 'delete', 'export', 'import')
    assert module_0.ConfigSourceBase.ATTRIBUTES == ('category', 'data', 'brief', 'description', 'name', 'groups', 'tags', 'links', 'source', 'versions', 'languages', 'filename', 'created', 'updated', 'uuid', 'digest')
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_API == 20
    assert module_0.ConfigSourceBase.LIMIT_DEFAULT_CLI == 99
    assert module_0.ConfigSourceBase.OFFSET_DEFAULT == 0
    assert module_0.ConfigSourceBase.SERVER_BASE_PATH_REST == '/api/snippy/rest'
    assert f'{type(module_0.ConfigSourceBase.category).__module__}.{type(module_0.ConfigSourceBase.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.data).__module__}.{type(module_0.ConfigSourceBase.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.brief).__module__}.{type(module_0.ConfigSourceBase.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.description).__module__}.{type(module_0.ConfigSourceBase.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.name).__module__}.{type(module_0.ConfigSourceBase.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.groups).__module__}.{type(module_0.ConfigSourceBase.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.tags).__module__}.{type(module_0.ConfigSourceBase.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.links).__module__}.{type(module_0.ConfigSourceBase.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.source).__module__}.{type(module_0.ConfigSourceBase.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.versions).__module__}.{type(module_0.ConfigSourceBase.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.languages).__module__}.{type(module_0.ConfigSourceBase.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.filename).__module__}.{type(module_0.ConfigSourceBase.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.operation_files).__module__}.{type(module_0.ConfigSourceBase.operation_files).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sall).__module__}.{type(module_0.ConfigSourceBase.sall).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.scat).__module__}.{type(module_0.ConfigSourceBase.scat).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.stag).__module__}.{type(module_0.ConfigSourceBase.stag).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sgrp).__module__}.{type(module_0.ConfigSourceBase.sgrp).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_filter).__module__}.{type(module_0.ConfigSourceBase.search_filter).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_limit).__module__}.{type(module_0.ConfigSourceBase.search_limit).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.search_offset).__module__}.{type(module_0.ConfigSourceBase.search_offset).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.sort_fields).__module__}.{type(module_0.ConfigSourceBase.sort_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.remove_fields).__module__}.{type(module_0.ConfigSourceBase.remove_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.reset_fields).__module__}.{type(module_0.ConfigSourceBase.reset_fields).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.run_server).__module__}.{type(module_0.ConfigSourceBase.run_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_base_path_rest).__module__}.{type(module_0.ConfigSourceBase.server_base_path_rest).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.server_host).__module__}.{type(module_0.ConfigSourceBase.server_host).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.identity).__module__}.{type(module_0.ConfigSourceBase.identity).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ConfigSourceBase.read_env).__module__}.{type(module_0.ConfigSourceBase.read_env).__qualname__}' == 'builtins.method'
    assert f'{type(module_0.ConfigSourceBase.read_arg).__module__}.{type(module_0.ConfigSourceBase.read_arg).__qualname__}' == 'builtins.method'
    none_type_0 = None
    var_0 = config_source_base_0.init_conf(none_type_0)
    var_1 = config_source_base_0.__str__()
    assert var_1 == "b'\\x9cS?tP\\x11Er\\x05\\xed\\xb2\\xba\\xc7\\x0f'(brief=, category=snippet, complete=, data=(), debug=False, defaults=False, description=, digest=None, editor=False, failure=False, failure_message=, filename=, groups=('default',), identity=None, languages=(), links=(), log_json=False, log_msg_max=80, merge=False, name=, no_ansi=False, no_editor=False, only_headers=False, operation=None, operation_files=(), plugin=, plugins={}, profiler=False, quiet=False, remove_fields=(), reset_fields=(), run_healthcheck=False, run_server=False, sall=(), scat=('snippet',), search_filter=None, search_limit=20, search_offset=0, server_base_path_rest=/api/snippy/rest/, server_host=, server_minify_json=False, server_readonly=False, sgrp=(), sort_fields=OrderedDict([('brief', 'ASC')]), source=, stag=(), storage_type=sqlite, tags=(), template=False, uuid=None, version=0.12a0, versions=(), very_verbose=False)"
    var_2 = config_source_base_0.read_plugins(var_1)
    logger_0 = module_1.Logger()
    config_source_base_1 = module_0.ConfigSourceBase(var_0)
    assert config_source_base_1.plugin == ''