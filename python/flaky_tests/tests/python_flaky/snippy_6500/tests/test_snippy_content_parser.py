# Automatically generated by Pynguin.
import pytest
import snippy.content.parser as module_0

def test_case_0():
    none_type_0 = None
    parser_0 = module_0.Parser(none_type_0, none_type_0, none_type_0, none_type_0)
    assert f'{type(parser_0).__module__}.{type(parser_0).__qualname__}' == 'snippy.content.parser.Parser'
    var_0 = parser_0.read()

def test_case_1():
    none_type_0 = None
    parser_0 = module_0.Parser(none_type_0, none_type_0, none_type_0, none_type_0)
    assert f'{type(parser_0).__module__}.{type(parser_0).__qualname__}' == 'snippy.content.parser.Parser'

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'mkdn'
    parser_0 = module_0.Parser(str_0, str_0, str_0, str_0)
    assert f'{type(parser_0).__module__}.{type(parser_0).__qualname__}' == 'snippy.content.parser.Parser'
    parser_0.read()

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'dict'
    parser_0 = module_0.Parser(str_0, str_0, str_0, str_0)
    assert f'{type(parser_0).__module__}.{type(parser_0).__qualname__}' == 'snippy.content.parser.Parser'
    var_0 = parser_0.read()
    var_1 = parser_0.read_description(str_0, str_0)
    parser_1 = module_0.Parser(var_1, var_0, str_0, str_0)
    var_2 = parser_0.read_meta_value(var_1, var_1, parser_1)
    parser_2 = module_0.Parser(var_0, var_0, var_2, parser_0)
    var_3 = parser_1.read_description(var_2, parser_1)
    str_1 = 'AB9B_b-\x0bOTJbd+\t'
    parser_3 = module_0.Parser(str_1, str_0, str_1, parser_2)
    parser_1.read_versions(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'Ext'
    str_1 = 'text'
    parser_0 = module_0.Parser(str_1, str_1, str_0, str_1)
    assert f'{type(parser_0).__module__}.{type(parser_0).__qualname__}' == 'snippy.content.parser.Parser'
    parser_0.read()