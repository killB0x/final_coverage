# Automatically generated by Pynguin.
import pytest
import snippy.content.resource as module_0
import platform as module_1
import uuid as module_2
import datetime as module_3
import collections as module_4

def test_case_0():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'

def test_case_1():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.__eq__(resource_0)
    assert var_0 is True

def test_case_2():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.migrate(resource_0, resource_0)
    assert var_0 is True

def test_case_3():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.merge(resource_0)
    assert var_0 is True

@pytest.mark.xfail(strict=True)
def test_case_4():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.convert()
    var_0.read()

@pytest.mark.xfail(strict=True)
def test_case_5():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.__eq__(resource_0)
    assert var_0 is True
    var_1 = module_1.node()
    var_2 = var_1.__getitem__(var_0)
    assert var_2 == 'e'
    var_3 = resource_0.dump_dict(var_1)
    resource_1 = module_0.Resource(timestamp=var_2, dict_=var_3)
    assert f'{type(resource_1).__module__}.{type(resource_1).__qualname__}' == 'snippy.content.resource.Resource'
    var_4 = var_2.__iter__()
    var_1.keys()

def test_case_6():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.__str__()

def test_case_7():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.is_native_mkdn_solution()

@pytest.mark.xfail(strict=True)
def test_case_8():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.__eq__(resource_0)
    assert var_0 is True
    resource_0.dump_mkdn(resource_0)

def test_case_9():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.get_template(resource_0, resource_0, resource_0)
    assert var_0 == ''

def test_case_10():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.copy()
    var_1 = resource_0.__eq__(resource_0)
    assert var_1 is True

def test_case_11():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.__ne__(resource_0)
    assert var_0 is False

def test_case_12():
    var_0 = module_1.python_compiler()
    resource_0 = module_0.Resource(timestamp=var_0, list_=var_0)
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_13():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    resource_0.dump_dict(resource_0)

def test_case_14():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.merge(resource_0)
    assert var_0 is True
    var_1 = resource_0.dump_qargs()
    var_2 = resource_0.is_native_mkdn_solution()

@pytest.mark.xfail(strict=True)
def test_case_15():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.is_native_mkdn_solution()
    none_type_0 = None
    var_1 = resource_0.merge(none_type_0)
    assert var_1 is False
    var_2 = resource_0.get_template(var_0, var_0, var_0)
    assert var_2 == ''
    var_1.convert()

@pytest.mark.xfail(strict=True)
def test_case_16():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.dump_qargs()
    var_1 = resource_0.get_template(resource_0, resource_0, resource_0)
    assert var_1 == ''
    var_2 = resource_0.convert(var_0)
    var_0.__rsub__(var_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.__ne__(resource_0)
    assert var_0 is False
    var_1 = resource_0.dump_term(var_0, var_0, var_0, var_0)
    assert var_1 == ''
    var_2 = resource_0.get_template(resource_0, resource_0, resource_0)
    assert var_2 == ''
    var_1.is_snippet()

@pytest.mark.xfail(strict=True)
def test_case_18():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.__ne__(resource_0)
    assert var_0 is False
    var_1 = resource_0.get_template(resource_0, resource_0, resource_0)
    assert var_1 == ''
    var_2 = resource_0.merge(var_0)
    assert var_2 is False
    var_3 = resource_0.__str__()
    var_4 = resource_0.convert(var_3)
    resource_1 = module_0.Resource()
    var_5 = resource_0.is_native_mkdn_solution()
    var_6 = resource_1.__ne__(resource_0)
    assert var_6 is True
    var_7 = module_2.getnode()
    var_8 = resource_1.convert(dict_=var_1)
    var_9 = resource_1.seal()
    assert var_9 is True
    var_10 = var_7.__and__(var_9)
    assert var_10 == 1
    var_11 = resource_0.seal()
    assert var_11 is True
    var_7.is_snippet()

@pytest.mark.xfail(strict=True)
def test_case_19():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.__ne__(resource_0)
    assert var_0 is False
    var_1 = resource_0.get_template(resource_0, resource_0, resource_0)
    assert var_1 == ''
    var_2 = resource_0.merge(var_0)
    assert var_2 is False
    var_3 = resource_0.__str__()
    var_4 = var_3.__eq__(var_3)
    resource_1 = module_0.Resource()
    var_5 = resource_0.is_native_mkdn_solution()
    var_6 = resource_0.is_native_mkdn_solution()
    var_7 = resource_1.__ne__(resource_0)
    assert var_7 is True
    var_8 = module_2.getnode()
    var_9 = resource_1.convert(dict_=var_1)
    var_10 = resource_1.seal()
    assert var_10 is True
    var_11 = module_1.mac_ver()
    var_12 = var_6.__repr__()
    var_2.seal()

@pytest.mark.xfail(strict=True)
def test_case_20():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.copy()
    var_1 = resource_0.get_template(resource_0, resource_0, resource_0)
    assert var_1 == ''
    var_2 = resource_0.__str__()
    var_3 = var_2.__eq__(var_2)
    var_4 = resource_0.convert(var_2)
    resource_1 = module_0.Resource()
    var_5 = resource_0.is_native_mkdn_solution()
    var_6 = resource_0.is_native_mkdn_solution()
    var_7 = var_4.__str__()
    var_8 = resource_1.convert(dict_=var_1)
    var_9 = var_5.__gt__(var_8)
    var_10 = module_1.mac_ver(var_9)
    var_11 = var_5.__and__(var_4)
    var_12 = var_0.merge(resource_0)
    assert var_12 is True
    var_13 = var_9.__repr__()
    var_14 = resource_0.seal(var_7)
    assert var_14 is True
    var_7.seal()

@pytest.mark.xfail(strict=True)
def test_case_21():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.__eq__(resource_0)
    assert var_0 is True
    var_1 = module_1.node()
    var_2 = var_1.__getitem__(var_0)
    assert var_2 == 'e'
    var_3 = resource_0.dump_dict(var_1)
    resource_1 = module_0.Resource(timestamp=var_2, dict_=var_3)
    assert f'{type(resource_1).__module__}.{type(resource_1).__qualname__}' == 'snippy.content.resource.Resource'
    var_4 = resource_1.get_template(var_3, var_2, var_2)
    assert var_4 == ''
    var_5 = resource_0.__str__()
    var_6 = resource_0.merge(resource_0, var_1)
    assert var_6 is True
    var_7 = resource_1.is_reference()
    assert var_7 is False
    var_8 = var_5.lstrip()
    var_9 = resource_1.is_native_mkdn_solution()
    var_10 = resource_0.dump_qargs()
    var_11 = resource_1.__ne__(resource_0)
    assert var_11 is True
    var_12 = resource_0.convert()
    module_0.Resource(timestamp=var_12, list_=var_1, dict_=var_12)

@pytest.mark.xfail(strict=True)
def test_case_22():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.__eq__(resource_0)
    assert var_0 is True
    var_1 = module_1.node()
    var_2 = var_1.__getitem__(var_0)
    assert var_2 == 'e'
    var_3 = module_1.freedesktop_os_release()
    resource_1 = module_0.Resource(timestamp=var_2, dict_=var_3)
    assert f'{type(resource_1).__module__}.{type(resource_1).__qualname__}' == 'snippy.content.resource.Resource'
    var_4 = resource_1.get_template(var_3, var_2, var_2)
    assert var_4 == ''
    var_5 = resource_0.__str__()
    var_6 = resource_0.merge(resource_0, var_1)
    assert var_6 is True
    var_7 = resource_0.is_reference()
    assert var_7 is False
    var_8 = var_5.lstrip()
    var_1.reset()

def test_case_23():
    resource_0 = module_0.Resource()
    assert f'{type(resource_0).__module__}.{type(resource_0).__qualname__}' == 'snippy.content.resource.Resource'
    assert module_0.Resource.CATEGORY == 1
    assert module_0.Resource.DATA == 2
    assert module_0.Resource.BRIEF == 3
    assert module_0.Resource.DESCRIPTION == 4
    assert module_0.Resource.NAME == 5
    assert module_0.Resource.GROUPS == 6
    assert module_0.Resource.TAGS == 7
    assert module_0.Resource.LINKS == 8
    assert module_0.Resource.SOURCE == 9
    assert module_0.Resource.VERSIONS == 10
    assert module_0.Resource.LANGUAGES == 11
    assert module_0.Resource.FILENAME == 12
    assert module_0.Resource.CREATED == 13
    assert module_0.Resource.UPDATED == 14
    assert module_0.Resource.UUID == 15
    assert module_0.Resource.DIGEST == 16
    assert module_0.Resource.SNIPPET_TEMPLATE == 'b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc'
    assert module_0.Resource.SOLUTION_TEMPLATE_TEXT == 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d'
    assert module_0.Resource.SOLUTION_TEMPLATE_MKDN == '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4'
    assert module_0.Resource.REFERENCE_TEMPLATE == 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9'
    assert module_0.Resource.TEMPLATES == ('b4bedc2603e3b9ea95bcf53cb7b8aa6efa31eabb788eed60fccf3d8029a6a6cc', 'be2ec3ade0e984463c1d3346910a05625897abd8d3feae4b2e54bfd6aecbde2d', '073ea152d867cf06b2ee993fb1aded4c8ccbc618972db5c18158b5b68a5da6e4', 'e0cd55c650ef936a66633ee29500e47ee60cc497c342212381c40032ea2850d9')
    assert f'{type(module_0.Resource.category).__module__}.{type(module_0.Resource.category).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.data).__module__}.{type(module_0.Resource.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.brief).__module__}.{type(module_0.Resource.brief).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.description).__module__}.{type(module_0.Resource.description).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.name).__module__}.{type(module_0.Resource.name).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.groups).__module__}.{type(module_0.Resource.groups).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.tags).__module__}.{type(module_0.Resource.tags).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.links).__module__}.{type(module_0.Resource.links).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.source).__module__}.{type(module_0.Resource.source).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.versions).__module__}.{type(module_0.Resource.versions).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.languages).__module__}.{type(module_0.Resource.languages).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.filename).__module__}.{type(module_0.Resource.filename).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.created).__module__}.{type(module_0.Resource.created).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.updated).__module__}.{type(module_0.Resource.updated).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.uuid).__module__}.{type(module_0.Resource.uuid).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Resource.digest).__module__}.{type(module_0.Resource.digest).__qualname__}' == 'builtins.property'
    var_0 = resource_0.copy()
    var_1 = resource_0.__eq__(resource_0)
    assert var_1 is True
    var_2 = var_0.__repr__()
    var_3 = resource_0.get_template(resource_0, resource_0, resource_0)
    assert var_3 == ''
    tzinfo_0 = module_3.tzinfo()
    var_4 = resource_0.dump_dict(var_3)
    var_5 = resource_0.get_template(var_0, var_3, var_3)
    var_6 = tzinfo_0.__eq__(tzinfo_0)
    var_7 = var_0.convert()
    var_8 = resource_0.convert(var_2)
    var_9 = resource_0.is_native_mkdn_solution()
    var_10 = resource_0.get_template(var_0, var_0, var_6)
    var_11 = var_5.rsplit()
    var_12 = var_0.is_native_mkdn_solution()
    var_13 = module_2.getnode()
    var_14 = var_0.convert(dict_=var_4)
    var_15 = resource_0.merge(resource_0)
    assert var_15 is True
    var_16 = var_9.__gt__(var_14)
    with pytest.raises(ValueError):
        module_4.namedtuple(var_14, var_2, module=var_1)