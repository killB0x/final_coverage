# Automatically generated by Pynguin.
import pytest
import tests.test_threading as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    test_locked_transitions_0 = module_0.TestLockedTransitions()
    test_locked_transitions_0.test_pickle()

@pytest.mark.xfail(strict=True)
def test_case_1():
    test_locked_hierarchical_transitions_0 = module_0.TestLockedHierarchicalTransitions()
    test_locked_hierarchical_transitions_0.test_pickle()

@pytest.mark.xfail(strict=True)
def test_case_2():
    var_0 = module_0.heavy_processing()
    var_0.tearDown()

def test_case_3():
    var_0 = module_0.heavy_checking()

@pytest.mark.xfail(strict=True)
def test_case_4():
    test_locked_transitions_0 = module_0.TestLockedTransitions()
    test_multiple_contexts_0 = module_0.TestMultipleContexts()
    test_locked_transitions_0.test_parallel_access()

@pytest.mark.xfail(strict=True)
def test_case_5():
    test_multiple_contexts_0 = module_0.TestMultipleContexts()
    var_0 = test_multiple_contexts_0.setUp()
    assert f'{type(test_multiple_contexts_0.event_list).__module__}.{type(test_multiple_contexts_0.event_list).__qualname__}' == 'builtins.list'
    assert len(test_multiple_contexts_0.event_list) == 4
    assert f'{type(test_multiple_contexts_0.s1).__module__}.{type(test_multiple_contexts_0.s1).__qualname__}' == 'tests.utils.DummyModel'
    assert f'{type(test_multiple_contexts_0.c1).__module__}.{type(test_multiple_contexts_0.c1).__qualname__}' == 'tests.utils.SomeContext'
    assert f'{type(test_multiple_contexts_0.c2).__module__}.{type(test_multiple_contexts_0.c2).__qualname__}' == 'tests.utils.SomeContext'
    assert f'{type(test_multiple_contexts_0.c3).__module__}.{type(test_multiple_contexts_0.c3).__qualname__}' == 'tests.utils.SomeContext'
    assert f'{type(test_multiple_contexts_0.c4).__module__}.{type(test_multiple_contexts_0.c4).__qualname__}' == 'tests.utils.SomeContext'
    assert f'{type(test_multiple_contexts_0.stuff).__module__}.{type(test_multiple_contexts_0.stuff).__qualname__}' == 'tests.utils.Stuff'
    var_1 = test_multiple_contexts_0.test_prepare()
    test_locked_transitions_0 = module_0.TestLockedTransitions()
    var_2 = test_locked_transitions_0.test_internal_transition()
    test_locked_transitions_0.test_pickle()

@pytest.mark.xfail(strict=True)
def test_case_6():
    test_multiple_contexts_0 = module_0.TestMultipleContexts()
    test_multiple_contexts_0.tearDown()

@pytest.mark.xfail(strict=True)
def test_case_7():
    test_locked_hierarchical_transitions_0 = module_0.TestLockedHierarchicalTransitions()
    var_0 = module_0.heavy_processing()
    var_1 = test_locked_hierarchical_transitions_0.setUp()
    assert f'{type(test_locked_hierarchical_transitions_0.stuff).__module__}.{type(test_locked_hierarchical_transitions_0.stuff).__qualname__}' == 'tests.utils.Stuff'
    var_2 = module_0.heavy_processing()
    var_1.test_callbacks()

@pytest.mark.xfail(strict=True)
def test_case_8():
    test_locked_hierarchical_transitions_0 = module_0.TestLockedHierarchicalTransitions()
    test_locked_hierarchical_transitions_0.test_parallel_access()

@pytest.mark.xfail(strict=True)
def test_case_9():
    test_multiple_contexts_0 = module_0.TestMultipleContexts()
    test_multiple_contexts_0.test_ordering()

@pytest.mark.xfail(strict=True)
def test_case_10():
    test_multiple_contexts_0 = module_0.TestMultipleContexts()
    test_multiple_contexts_0.test_model_context()

@pytest.mark.xfail(strict=True)
def test_case_11():
    test_locked_transitions_0 = module_0.TestLockedTransitions()
    var_0 = test_locked_transitions_0.setUp()
    test_locked_transitions_0.test_thread_access()

@pytest.mark.xfail(strict=True)
def test_case_12():
    test_locked_hierarchical_transitions_0 = module_0.TestLockedHierarchicalTransitions()
    test_locked_hierarchical_transitions_0.test_callbacks()

@pytest.mark.xfail(strict=True)
def test_case_13():
    test_locked_hierarchical_transitions_0 = module_0.TestLockedHierarchicalTransitions()
    test_locked_hierarchical_transitions_0.test_parallel_deep()

@pytest.mark.xfail(strict=True)
def test_case_14():
    test_locked_hierarchical_transitions_0 = module_0.TestLockedHierarchicalTransitions()
    var_0 = test_locked_hierarchical_transitions_0.tearDown()
    none_type_0 = None
    var_1 = test_locked_hierarchical_transitions_0.assertNotEqual(test_locked_hierarchical_transitions_0, none_type_0)
    test_locked_hierarchical_transitions_0.test_pickle()

@pytest.mark.xfail(strict=True)
def test_case_15():
    test_locked_hierarchical_transitions_0 = module_0.TestLockedHierarchicalTransitions()
    var_0 = test_locked_hierarchical_transitions_0.tearDown()
    var_1 = test_locked_hierarchical_transitions_0.test_context_managers()
    none_type_0 = None
    var_2 = test_locked_hierarchical_transitions_0.assertNotEqual(test_locked_hierarchical_transitions_0, none_type_0)
    test_locked_hierarchical_transitions_0.test_pickle()

@pytest.mark.xfail(strict=True)
def test_case_16():
    test_multiple_contexts_0 = module_0.TestMultipleContexts()
    var_0 = test_multiple_contexts_0.test_state_and_transition_with_underscore()
    test_locked_transitions_0 = module_0.TestLockedTransitions()
    test_locked_transitions_0.test_conditional_access()