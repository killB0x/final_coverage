# Automatically generated by Pynguin.
import pytest
import tests.test_parallel as module_0

def test_case_0():
    test_parallel_0 = module_0.TestParallel()

@pytest.mark.xfail(strict=True)
def test_case_1():
    test_parallel_0 = module_0.TestParallel()
    var_0 = test_parallel_0.setUp()
    assert len(test_parallel_0.states) == 3
    assert f'{type(test_parallel_0.stuff).__module__}.{type(test_parallel_0.stuff).__qualname__}' == 'tests.utils.Stuff'
    assert test_parallel_0.transitions == [['reset', 'C', 'A']]
    var_1 = test_parallel_0.test_exit()
    var_2 = test_parallel_0.setUp()
    var_1.run()

@pytest.mark.xfail(strict=True)
def test_case_2():
    test_parallel_0 = module_0.TestParallel()
    test_parallel_0.test_init()

@pytest.mark.xfail(strict=True)
def test_case_3():
    test_parallel_0 = module_0.TestParallel()
    var_0 = test_parallel_0.setUp()
    assert len(test_parallel_0.states) == 3
    assert f'{type(test_parallel_0.stuff).__module__}.{type(test_parallel_0.stuff).__qualname__}' == 'tests.utils.Stuff'
    assert test_parallel_0.transitions == [['reset', 'C', 'A']]
    var_1 = test_parallel_0.test_multiple_deeper()
    var_2 = test_parallel_0.test_enter()
    var_3 = test_parallel_0.test_model_state_conversion()
    var_4 = test_parallel_0.setUp()
    var_4.test_exit()

@pytest.mark.xfail(strict=True)
def test_case_4():
    test_parallel_0 = module_0.TestParallel()
    test_parallel_0.test_parent_transition()

@pytest.mark.xfail(strict=True)
def test_case_5():
    test_parallel_0 = module_0.TestParallel()
    test_parallel_0.test_shallow_parallel()

@pytest.mark.xfail(strict=True)
def test_case_6():
    test_parallel_0 = module_0.TestParallel()
    test_parallel_0.test_multiple()

@pytest.mark.xfail(strict=True)
def test_case_7():
    test_parallel_0 = module_0.TestParallel()
    test_parallel_1 = module_0.TestParallel()
    test_parallel_1.test_multiple_deeper()

@pytest.mark.xfail(strict=True)
def test_case_8():
    test_parallel_0 = module_0.TestParallel()
    test_parallel_0.test_exit()