# Automatically generated by Pynguin.
import pytest
import pysyncdroid.cli as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.parse_sync_mapping_file(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'Please separate source and destinationwith "==>".\nProblematic line: "{}"'
    module_0.run(str_0)

def test_case_2():
    var_0 = module_0.create_parser()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'argparse.ArgumentParser'
    assert var_0.description is None
    assert var_0.argument_default is None
    assert var_0.prefix_chars == '-'
    assert var_0.conflict_handler == 'error'
    assert var_0.prog == 'pynguin'
    assert var_0.usage is None
    assert var_0.epilog is None
    assert var_0.fromfile_prefix_chars is None
    assert var_0.add_help is True
    assert var_0.allow_abbrev is True
    assert var_0.exit_on_error is True

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    var_0 = module_0.create_parser()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'argparse.ArgumentParser'
    assert var_0.description is None
    assert var_0.argument_default is None
    assert var_0.prefix_chars == '-'
    assert var_0.conflict_handler == 'error'
    assert var_0.prog == 'pynguin'
    assert var_0.usage is None
    assert var_0.epilog is None
    assert var_0.fromfile_prefix_chars is None
    assert var_0.add_help is True
    assert var_0.allow_abbrev is True
    assert var_0.exit_on_error is True
    var_1 = module_0.create_parser()
    module_0.parse_sync_mapping_file(bool_0)
    var_2 = module_0.run(bool_0)