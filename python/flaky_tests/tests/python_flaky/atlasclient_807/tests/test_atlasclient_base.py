# Automatically generated by Pynguin.
import pytest
import atlasclient.base as module_0
import tokenize as module_1
import ast as module_2
import inspect as module_3
import atlasclient.utils as module_4

def test_case_0():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    var_0 = dependent_model_collection_0.__call__()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'atlasclient.base.DependentModelCollection'
    assert len(var_0) == 0
    model_0 = module_0.Model(dependent_model_collection_0)
    assert f'{type(model_0).__module__}.{type(model_0).__qualname__}' == 'atlasclient.base.Model'
    assert model_0.client == []
    assert module_0.Model.min_version == (1, 7, 0)
    assert f'{type(module_0.Model.identifier).__module__}.{type(module_0.Model.identifier).__qualname__}' == 'builtins.property'

def test_case_1():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    model_0 = module_0.Model(dependent_model_collection_0)
    assert f'{type(model_0).__module__}.{type(model_0).__qualname__}' == 'atlasclient.base.Model'
    assert model_0.client == []
    assert module_0.Model.min_version == (1, 7, 0)
    assert f'{type(module_0.Model.identifier).__module__}.{type(module_0.Model.identifier).__qualname__}' == 'builtins.property'
    var_0 = model_0.to_json_dict()
    dependent_model_0 = module_0.DependentModel(model_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.QueryableModel()

@pytest.mark.xfail(strict=True)
def test_case_3():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    dependent_model_collection_0.__next__()

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    model_collection_0 = module_0.ModelCollection(none_type_0, none_type_0)
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    var_0 = model_collection_0.remove(model_collection_0)
    model_collection_0.__iter__()

@pytest.mark.xfail(strict=True)
def test_case_5():
    module_0.QueryableModelCollection()

def test_case_6():
    none_type_0 = None
    model_collection_0 = module_0.ModelCollection(none_type_0, none_type_0)
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    var_0 = model_collection_0.remove(model_collection_0)

def test_case_7():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    var_0 = dependent_model_collection_0.to_dict()

def test_case_8():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    var_0 = dependent_model_collection_0.__call__()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'atlasclient.base.DependentModelCollection'
    assert len(var_0) == 0

@pytest.mark.xfail(strict=True)
def test_case_9():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    var_0 = dependent_model_collection_0.__len__()
    assert var_0 == 0
    model_0 = module_0.Model(dependent_model_collection_0)
    assert f'{type(model_0).__module__}.{type(model_0).__qualname__}' == 'atlasclient.base.Model'
    assert model_0.client == []
    assert module_0.Model.min_version == (1, 7, 0)
    assert f'{type(module_0.Model.identifier).__module__}.{type(module_0.Model.identifier).__qualname__}' == 'builtins.property'
    var_1 = model_0.to_json_dict()
    module_0.DependentModel(var_0, var_1)

def test_case_10():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    var_0 = module_1.any(*dependent_model_collection_0)
    assert var_0 == '()*'

@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = ''
    none_type_0 = None
    dependent_model_collection_0 = module_0.DependentModelCollection(none_type_0, none_type_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    dict_0 = {str_0: str_0}
    var_0 = dependent_model_collection_0.refresh()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'atlasclient.base.DependentModelCollection'
    assert len(var_0) == 0
    module_0.QueryableModel(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    not_in_0 = module_2.NotIn()
    var_0 = dependent_model_collection_0.__len__()
    assert var_0 == 0
    var_1 = dependent_model_collection_0.__call__()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'atlasclient.base.DependentModelCollection'
    assert len(var_1) == 0
    var_2 = var_1.inflate()
    generated_identifier_mixin_0 = module_0.GeneratedIdentifierMixin(*list_0)
    assert f'{type(module_0.GeneratedIdentifierMixin.identifier).__module__}.{type(module_0.GeneratedIdentifierMixin.identifier).__qualname__}' == 'builtins.property'
    model_0 = module_0.Model(var_2)
    assert f'{type(model_0).__module__}.{type(model_0).__qualname__}' == 'atlasclient.base.Model'
    assert model_0.client == []
    assert module_0.Model.min_version == (1, 7, 0)
    assert f'{type(module_0.Model.identifier).__module__}.{type(module_0.Model.identifier).__qualname__}' == 'builtins.property'
    var_3 = dependent_model_collection_0.remove(dependent_model_collection_0)
    var_4 = dependent_model_collection_0.to_dict()
    model_0.to_dict()

@pytest.mark.xfail(strict=True)
def test_case_13():
    var_0 = module_3.currentframe()
    dependent_model_collection_0 = module_0.DependentModelCollection(var_0, var_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    model_0 = module_0.Model(dependent_model_collection_0)
    assert f'{type(model_0).__module__}.{type(model_0).__qualname__}' == 'atlasclient.base.Model'
    assert f'{type(model_0.client).__module__}.{type(model_0.client).__qualname__}' == 'builtins.frame'
    assert module_0.Model.min_version == (1, 7, 0)
    assert f'{type(module_0.Model.identifier).__module__}.{type(module_0.Model.identifier).__qualname__}' == 'builtins.property'
    module_0.QueryableModelCollection(**model_0)

def test_case_14():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    model_0 = module_0.Model(dependent_model_collection_0)
    assert f'{type(model_0).__module__}.{type(model_0).__qualname__}' == 'atlasclient.base.Model'
    assert model_0.client == []
    assert module_0.Model.min_version == (1, 7, 0)
    assert f'{type(module_0.Model.identifier).__module__}.{type(module_0.Model.identifier).__qualname__}' == 'builtins.property'
    var_0 = model_0.to_json_dict()

@pytest.mark.xfail(strict=True)
def test_case_15():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    var_0 = dependent_model_collection_0.to_dict()
    var_1 = module_4.make_table_qualified_name(dependent_model_collection_0, db=list_0)
    var_2 = dependent_model_collection_0.__call__()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'atlasclient.base.DependentModelCollection'
    assert len(var_2) == 0
    var_3 = var_2.inflate()
    generated_identifier_mixin_0 = module_0.GeneratedIdentifierMixin(*list_0)
    assert f'{type(module_0.GeneratedIdentifierMixin.identifier).__module__}.{type(module_0.GeneratedIdentifierMixin.identifier).__qualname__}' == 'builtins.property'
    model_0 = module_0.Model(var_3)
    assert f'{type(model_0).__module__}.{type(model_0).__qualname__}' == 'atlasclient.base.Model'
    assert model_0.client == []
    assert module_0.Model.min_version == (1, 7, 0)
    assert f'{type(module_0.Model.identifier).__module__}.{type(module_0.Model.identifier).__qualname__}' == 'builtins.property'
    var_4 = dependent_model_collection_0.remove(dependent_model_collection_0)
    var_5 = dependent_model_collection_0.to_dict()
    var_6 = var_2.to_dict()
    model_0.refresh()

def test_case_16():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    model_0 = module_0.Model(dependent_model_collection_0)
    assert f'{type(model_0).__module__}.{type(model_0).__qualname__}' == 'atlasclient.base.Model'
    assert model_0.client == []
    assert module_0.Model.min_version == (1, 7, 0)
    assert f'{type(module_0.Model.identifier).__module__}.{type(module_0.Model.identifier).__qualname__}' == 'builtins.property'
    var_0 = model_0.to_json_dict()
    var_1 = dependent_model_collection_0.__call__(*var_0)

def test_case_17():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    model_0 = module_0.Model(dependent_model_collection_0)
    assert f'{type(model_0).__module__}.{type(model_0).__qualname__}' == 'atlasclient.base.Model'
    assert model_0.client == []
    assert module_0.Model.min_version == (1, 7, 0)
    assert f'{type(module_0.Model.identifier).__module__}.{type(module_0.Model.identifier).__qualname__}' == 'builtins.property'
    var_0 = model_0.__dir__()

def test_case_18():
    none_type_0 = None
    model_collection_0 = module_0.ModelCollection(none_type_0, none_type_0)
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    str_0 = 'status'
    str_1 = 's'
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0, str_1: none_type_0}
    with pytest.raises(NotImplementedError):
        model_collection_0.__call__(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    list_0 = []
    dependent_model_collection_0 = module_0.DependentModelCollection(list_0, list_0)
    assert len(dependent_model_collection_0) == 0
    assert module_0.OLDEST_SUPPORTED_VERSION == (1, 7, 0)
    var_0 = dependent_model_collection_0.__len__()
    assert var_0 == 0
    list_1 = [list_0]
    var_1 = dependent_model_collection_0.__call__(*list_1)
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'atlasclient.base.DependentModelCollection'
    assert len(var_1) == 0
    var_0.inflate()