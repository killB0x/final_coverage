# Automatically generated by Pynguin.
import pytest
import appconfigs.user as module_0
import ast as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.UserConfig(none_type_0, none_type_0)

def test_case_1():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, none_type_0, none_type_0, raw_mode=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    user_config_0.get_version()

def test_case_3():
    no_default_0 = module_0.NoDefault()

@pytest.mark.xfail(strict=True)
def test_case_4():
    no_default_0 = module_0.NoDefault()
    module_0.UserConfig(no_default_0, path=no_default_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    module_0.UserConfig(none_type_0, none_type_0, raw_mode=user_config_0)

def test_case_6():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, none_type_0, none_type_0, raw_mode=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(none_type_0, var_0)
    assert len(user_config_0) == 2

@pytest.mark.xfail(strict=True)
def test_case_7():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, none_type_0, none_type_0, raw_mode=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    user_config_0.get_version()

@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    var_2 = var_1.__eq__(var_0)
    var_3 = user_config_0.set_as_defaults()
    var_4 = user_config_0.get_version()
    assert var_4 == '0.0.0'
    user_config_1 = module_0.UserConfig(var_4, load=var_3, path=var_4, raw_mode=var_2)
    var_5 = user_config_1.remove_section(var_2)
    var_5.get_version()

@pytest.mark.xfail(strict=True)
def test_case_9():
    list_0 = []
    no_default_0 = module_0.NoDefault(*list_0)
    var_0 = no_default_0.__repr__()
    assert var_0 == '<default value not set>'
    user_config_0 = module_0.UserConfig(list_0, load=list_0, version=no_default_0, raw_mode=no_default_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    set_0 = set()
    var_1 = user_config_0.set_defaults(set_0)
    var_2 = user_config_0.set_as_defaults()
    module_0.UserConfig(var_0, set_0, path=var_2)

@pytest.mark.xfail(strict=True)
def test_case_10():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.items()
    var_1 = user_config_0.set_as_defaults()
    user_config_0.remove_option(var_0, none_type_0)

def test_case_11():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, none_type_0, none_type_0, raw_mode=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(none_type_0, var_0)
    assert len(user_config_0) == 2
    var_2 = user_config_0.get_default(user_config_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, none_type_0, none_type_0, raw_mode=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_default(var_0, none_type_0, user_config_0)
    user_config_0.get_version()

def test_case_13():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    var_2 = user_config_0.reset_to_defaults(var_1, var_1, var_1)
    var_3 = user_config_0.get_version()
    assert var_3 == '0.0.0'
    var_4 = user_config_0.set_as_defaults()

@pytest.mark.xfail(strict=True)
def test_case_14():
    list_0 = []
    no_default_0 = module_0.NoDefault(*list_0)
    user_config_0 = module_0.UserConfig(list_0, load=list_0, version=no_default_0, raw_mode=no_default_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    set_0 = set()
    var_0 = user_config_0.set_defaults(set_0)
    user_config_0.set_defaults(user_config_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    var_2 = var_1.__eq__(var_0)
    var_3 = user_config_0.set_default(var_1, var_2, var_1)
    var_4 = user_config_0.get_version()
    assert var_4 == '0.0.0'
    user_config_1 = module_0.UserConfig(var_4, load=var_0, backup=var_1, raw_mode=var_4)
    module_0.UserConfig(user_config_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    var_2 = user_config_0.set_as_defaults()
    user_config_0.reset_to_defaults(user_config_0, var_2, var_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.reset_to_defaults(none_type_0, user_config_0)
    user_config_0.get_version(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_18():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    user_config_0.set_version(user_config_0, user_config_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    bytes_0 = b'2\xd2\x8c\xd2\xfa\xaeW\xfb\xca\xcea\x96yg\xf4\xe9*'
    defaults_config_0 = module_0.DefaultsConfig(bytes_0, bytes_0)
    assert f'{type(defaults_config_0).__module__}.{type(defaults_config_0).__qualname__}' == 'appconfigs.user.DefaultsConfig'
    assert len(defaults_config_0) == 1
    defaults_config_0.set_defaults(defaults_config_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(none_type_0, var_0)
    assert len(user_config_0) == 2
    var_2 = user_config_0.set_default(user_config_0, var_0, user_config_0)
    async_function_def_0 = module_1.AsyncFunctionDef()
    var_3 = user_config_0.get_default(user_config_0, none_type_0)
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(var_3) == 2
    var_4 = var_3.set_as_defaults()
    user_config_0.get(none_type_0, var_0)

def test_case_21():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    var_2 = user_config_0.get_version(none_type_0)
    assert var_2 == '0.0.0'

@pytest.mark.xfail(strict=True)
def test_case_22():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, none_type_0, none_type_0, raw_mode=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(none_type_0, var_0)
    assert len(user_config_0) == 2
    var_2 = user_config_0.get_default(var_1, var_1)
    var_1.get_version()

@pytest.mark.xfail(strict=True)
def test_case_23():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, none_type_0, none_type_0, raw_mode=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(none_type_0, var_0)
    assert len(user_config_0) == 2
    var_2 = user_config_0.set_as_defaults()
    var_3 = user_config_0.set_version(save=none_type_0)
    var_1.get_version()

@pytest.mark.xfail(strict=True)
def test_case_24():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    defaults_config_0 = module_0.DefaultsConfig(none_type_0, var_1)
    var_2 = user_config_0.reset_to_defaults(var_1, none_type_0, defaults_config_0)
    var_3 = user_config_0.get_version()
    assert var_3 == '0.0.0'
    var_4 = user_config_0.set_as_defaults()
    module_0.UserConfig(var_0, raw_mode=var_1)

@pytest.mark.xfail(strict=True)
def test_case_25():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_default(user_config_0, var_0, user_config_0)
    var_2 = user_config_0.set_default(none_type_0, var_0, none_type_0)
    var_3 = user_config_0.get_default(user_config_0, none_type_0)
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(var_3) == 1
    var_3.reset_to_defaults(section=user_config_0)

@pytest.mark.xfail(strict=True)
def test_case_26():
    str_0 = '=y^2YC\r'
    none_type_0 = None
    defaults_config_0 = module_0.DefaultsConfig(none_type_0, str_0)
    assert f'{type(defaults_config_0).__module__}.{type(defaults_config_0).__qualname__}' == 'appconfigs.user.DefaultsConfig'
    assert len(defaults_config_0) == 1
    var_0 = defaults_config_0.cleanup()
    var_1 = defaults_config_0.__iter__()
    var_2 = var_1.__repr__()
    defaults_config_0.__getitem__(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_27():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.__len__()
    var_1 = user_config_0.set_as_defaults()
    user_config_0.get_version(var_0)

@pytest.mark.xfail(strict=True)
def test_case_28():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_default(user_config_0, var_0, user_config_0)
    var_2 = user_config_0.__contains__(none_type_0)
    var_3 = user_config_0.get_default(user_config_0, none_type_0)
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(var_3) == 1
    var_3.get_version(var_2)

def test_case_29():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(var_0, none_type_0)
    assert len(user_config_0) == 2
    var_2 = user_config_0.get_version(none_type_0)

def test_case_30():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    var_2 = user_config_0.set_as_defaults()

@pytest.mark.xfail(strict=True)
def test_case_31():
    str_0 = 'NE=Y\nf6v`bzBHsSkf`M'
    module_0.UserConfig(str_0, version=str_0, path=str_0)

@pytest.mark.xfail(strict=True)
def test_case_32():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    var_2 = user_config_0.get_version(none_type_0)
    assert var_2 == '0.0.0'
    var_3 = var_2.__gt__(user_config_0)
    user_config_0.set(var_2, none_type_0, var_2, var_3)

@pytest.mark.xfail(strict=True)
def test_case_33():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.__eq__(user_config_0)
    module_0.UserConfig(var_0, version=var_0, backup=var_0, raw_mode=var_0)

@pytest.mark.xfail(strict=True)
def test_case_34():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    var_2 = var_1.__eq__(var_0)
    var_3 = user_config_0.set_as_defaults()
    var_4 = user_config_0.get_version()
    assert var_4 == '0.0.0'
    user_config_1 = module_0.UserConfig(var_4, load=var_3, path=var_4, raw_mode=var_2)
    var_5 = user_config_1.remove_section(var_2)
    var_5.get_version()

@pytest.mark.xfail(strict=True)
def test_case_35():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    var_2 = var_1.__eq__(var_0)
    var_3 = user_config_0.get_version()
    assert var_3 == '0.0.0'
    module_0.UserConfig(var_3, none_type_0, version=var_3, path=var_3, backup=var_2, raw_mode=var_3)

@pytest.mark.xfail(strict=True)
def test_case_36():
    none_type_0 = None
    user_config_0 = module_0.UserConfig(none_type_0, load=none_type_0, backup=none_type_0)
    assert f'{type(user_config_0).__module__}.{type(user_config_0).__qualname__}' == 'appconfigs.user.UserConfig'
    assert len(user_config_0) == 1
    var_0 = user_config_0.set_as_defaults()
    var_1 = var_0.__repr__()
    var_2 = user_config_0.set_version(save=var_0)
    assert len(user_config_0) == 2
    var_3 = var_2.__eq__(var_0)
    module_0.UserConfig(var_1, none_type_0, version=var_1, path=var_1, backup=var_3, raw_mode=var_1)