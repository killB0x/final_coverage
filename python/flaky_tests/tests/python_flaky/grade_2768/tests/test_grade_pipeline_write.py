# Automatically generated by Pynguin.
import pytest
import grade.pipeline.write as module_0
import genericpath as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    write_stdout_0 = module_0.WriteStdout()
    assert write_stdout_0.filepath == 'temp'
    write_stdout_0.__call__(write_stdout_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "Fgs~.+'8\r\t @AN~rJ"
    write_outputs_0 = module_0.WriteOutputs(str_0)
    write_outputs_0.__call__(write_outputs_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    write_stderr_0 = module_0.WriteStderr()
    assert write_stderr_0.filepath == 'temp'
    write_stderr_0.__call__(write_stderr_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    write_stderr_0 = module_0.WriteStderr()
    assert write_stderr_0.filepath == 'temp'
    write_outputs_0 = module_0.WriteOutputs(write_stderr_0)
    write_stderr_0.__call__(write_outputs_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "Fgs~.+'8\r\t @7A~rJ"
    write_outputs_0 = module_0.WriteOutputs(str_0)
    write_outputs_0.__call__(write_outputs_0)

def test_case_5():
    bool_0 = False
    write_stdout_0 = module_0.WriteStdout(overwrite=bool_0)
    assert write_stdout_0.filepath == 'temp'
    var_0 = module_1.sameopenfile(bool_0, bool_0)
    str_0 = "Fgs~.+'8\r\t @7A~rJ"
    write_outputs_0 = module_0.WriteOutputs(str_0)
    with pytest.raises(FileExistsError):
        write_stdout_0.__call__(var_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "Fgs~.0+'8\r\t @7A~rJ"
    write_stderr_0 = module_0.WriteStderr(str_0)
    write_stderr_0.__call__(str_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    write_stderr_0 = module_0.WriteStderr(overwrite=bool_0)
    assert write_stderr_0.filepath == 'temp'
    str_0 = "Fgs~.+'8\r\t @7A~rJ"
    write_outputs_0 = module_0.WriteOutputs(str_0)
    write_stderr_0.__call__(write_stderr_0)