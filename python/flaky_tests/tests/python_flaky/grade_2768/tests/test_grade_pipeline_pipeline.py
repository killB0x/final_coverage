# Automatically generated by Pynguin.
import pytest
import grade.pipeline.pipeline as module_0

def test_case_0():
    pipeline_0 = module_0.Pipeline()
    completed_process_0 = pipeline_0.__call__()

def test_case_1():
    pipeline_0 = module_0.Pipeline()
    callable_0 = pipeline_0.__iter__()
    pipeline_1 = module_0.Pipeline(*callable_0)
    assert f'{type(pipeline_1).__module__}.{type(pipeline_1).__qualname__}' == 'grade.pipeline.pipeline.Pipeline'
    assert len(pipeline_1) == 0
    callable_1 = pipeline_1.__iter__()
    completed_process_0 = pipeline_0.__call__()

def test_case_2():
    pipeline_0 = module_0.Pipeline()
    int_0 = pipeline_0.__len__()

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    pipeline_0 = module_0.Pipeline()
    pipeline_1 = module_0.Pipeline()
    pipeline_0.__getitem__(bool_0)

def test_case_4():
    pipeline_0 = module_0.Pipeline()
    callable_0 = pipeline_0.__iter__()
    lambda_0 = module_0.Lambda(callable_0)
    assert f'{type(lambda_0.function).__module__}.{type(lambda_0.function).__qualname__}' == 'builtins.generator'
    pipeline_1 = module_0.Pipeline()

@pytest.mark.xfail(strict=True)
def test_case_5():
    pipeline_0 = module_0.Pipeline()
    callable_0 = pipeline_0.__iter__()
    pipeline_1 = module_0.Pipeline(*callable_0)
    assert f'{type(pipeline_1).__module__}.{type(pipeline_1).__qualname__}' == 'grade.pipeline.pipeline.Pipeline'
    assert len(pipeline_1) == 0
    callable_1 = pipeline_1.__iter__()
    lambda_0 = module_0.Lambda(callable_1)
    completed_process_0 = pipeline_0.__call__()
    lambda_0.__call__(completed_process_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    pipeline_0 = module_0.Pipeline()
    list_0 = [pipeline_0]
    pipeline_1 = module_0.Pipeline(*list_0)
    completed_process_0 = pipeline_0.__call__()
    pipeline_1.__call__()

def test_case_7():
    pipeline_0 = module_0.Pipeline()
    callable_0 = pipeline_0.__iter__()
    list_0 = [callable_0]
    pipeline_1 = module_0.Pipeline(*list_0)
    callable_1 = pipeline_1.__iter__()
    pipeline_2 = module_0.Pipeline(*callable_1)
    assert f'{type(pipeline_2).__module__}.{type(pipeline_2).__qualname__}' == 'grade.pipeline.pipeline.Pipeline'
    assert len(pipeline_2) == 1
    callable_2 = pipeline_2.__iter__()