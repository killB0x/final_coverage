# Automatically generated by Pynguin.
import pytest
import pytradfri.command as module_0
import builtins as module_1

def test_case_0():
    str_0 = ''
    dict_0 = {str_0: str_0}
    command_0 = module_0.Command(dict_0, dict_0, dict_0, observe=str_0, observe_duration=dict_0)
    assert f'{type(module_0.Command.method).__module__}.{type(module_0.Command.method).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.path).__module__}.{type(module_0.Command.path).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.data).__module__}.{type(module_0.Command.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.parse_json).__module__}.{type(module_0.Command.parse_json).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.process_result).__module__}.{type(module_0.Command.process_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.err_callback).__module__}.{type(module_0.Command.err_callback).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe).__module__}.{type(module_0.Command.observe).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe_duration).__module__}.{type(module_0.Command.observe_duration).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.raw_result).__module__}.{type(module_0.Command.raw_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.result).__module__}.{type(module_0.Command.result).__qualname__}' == 'builtins.property'
    var_0 = command_0.__add__(command_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'pytradfri.command.Command'
    var_1 = command_0.url(str_0)
    assert var_1 == 'coaps://:5684/'

def test_case_1():
    none_type_0 = None
    str_0 = 'p<QQZJ8~TDJ'
    dict_0 = {none_type_0: str_0}
    command_0 = module_0.Command(dict_0, dict_0, dict_0, observe=str_0, observe_duration=dict_0)
    assert f'{type(module_0.Command.method).__module__}.{type(module_0.Command.method).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.path).__module__}.{type(module_0.Command.path).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.data).__module__}.{type(module_0.Command.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.parse_json).__module__}.{type(module_0.Command.parse_json).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.process_result).__module__}.{type(module_0.Command.process_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.err_callback).__module__}.{type(module_0.Command.err_callback).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe).__module__}.{type(module_0.Command.observe).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe_duration).__module__}.{type(module_0.Command.observe_duration).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.raw_result).__module__}.{type(module_0.Command.raw_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.result).__module__}.{type(module_0.Command.result).__qualname__}' == 'builtins.property'
    var_0 = command_0.combine_data(none_type_0)
    var_1 = command_0.__add__(command_0)
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'pytradfri.command.Command'

def test_case_2():
    str_0 = ''
    dict_0 = {str_0: str_0, str_0: str_0}
    command_0 = module_0.Command(dict_0, dict_0, dict_0, observe=str_0, observe_duration=dict_0)
    assert f'{type(module_0.Command.method).__module__}.{type(module_0.Command.method).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.path).__module__}.{type(module_0.Command.path).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.data).__module__}.{type(module_0.Command.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.parse_json).__module__}.{type(module_0.Command.parse_json).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.process_result).__module__}.{type(module_0.Command.process_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.err_callback).__module__}.{type(module_0.Command.err_callback).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe).__module__}.{type(module_0.Command.observe).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe_duration).__module__}.{type(module_0.Command.observe_duration).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.raw_result).__module__}.{type(module_0.Command.raw_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.result).__module__}.{type(module_0.Command.result).__qualname__}' == 'builtins.property'
    var_0 = command_0.__add__(command_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'pytradfri.command.Command'

def test_case_3():
    str_0 = '56GAw2'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    command_0 = module_0.Command(dict_0, dict_0, dict_0, observe=str_0, observe_duration=dict_0)
    assert f'{type(module_0.Command.method).__module__}.{type(module_0.Command.method).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.path).__module__}.{type(module_0.Command.path).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.data).__module__}.{type(module_0.Command.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.parse_json).__module__}.{type(module_0.Command.parse_json).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.process_result).__module__}.{type(module_0.Command.process_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.err_callback).__module__}.{type(module_0.Command.err_callback).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe).__module__}.{type(module_0.Command.observe).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe_duration).__module__}.{type(module_0.Command.observe_duration).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.raw_result).__module__}.{type(module_0.Command.raw_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.result).__module__}.{type(module_0.Command.result).__qualname__}' == 'builtins.property'
    var_0 = command_0.combine_data(command_0)
    var_1 = command_0.__add__(var_0)
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'pytradfri.command.Command'

def test_case_4():
    object_0 = module_1.object()
    command_0 = module_0.Command(object_0, object_0, object_0, observe=object_0)
    assert f'{type(module_0.Command.method).__module__}.{type(module_0.Command.method).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.path).__module__}.{type(module_0.Command.path).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.data).__module__}.{type(module_0.Command.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.parse_json).__module__}.{type(module_0.Command.parse_json).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.process_result).__module__}.{type(module_0.Command.process_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.err_callback).__module__}.{type(module_0.Command.err_callback).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe).__module__}.{type(module_0.Command.observe).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe_duration).__module__}.{type(module_0.Command.observe_duration).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.raw_result).__module__}.{type(module_0.Command.raw_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.result).__module__}.{type(module_0.Command.result).__qualname__}' == 'builtins.property'

def test_case_5():
    str_0 = 'x5n|R\r78EH*_uDP'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    command_0 = module_0.Command(dict_0, dict_0, dict_0, observe=str_0, observe_duration=dict_0)
    assert f'{type(module_0.Command.method).__module__}.{type(module_0.Command.method).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.path).__module__}.{type(module_0.Command.path).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.data).__module__}.{type(module_0.Command.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.parse_json).__module__}.{type(module_0.Command.parse_json).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.process_result).__module__}.{type(module_0.Command.process_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.err_callback).__module__}.{type(module_0.Command.err_callback).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe).__module__}.{type(module_0.Command.observe).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe_duration).__module__}.{type(module_0.Command.observe_duration).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.raw_result).__module__}.{type(module_0.Command.raw_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.result).__module__}.{type(module_0.Command.result).__qualname__}' == 'builtins.property'
    var_0 = command_0.__add__(command_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'pytradfri.command.Command'
    with pytest.raises(TypeError):
        command_0.__add__(dict_0)

def test_case_6():
    dict_0 = {}
    none_type_0 = None
    str_0 = 'pQQiZJ8~BDJ'
    dict_1 = {none_type_0: dict_0}
    command_0 = module_0.Command(dict_0, dict_0, dict_1, observe=str_0, observe_duration=dict_0)
    assert f'{type(module_0.Command.method).__module__}.{type(module_0.Command.method).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.path).__module__}.{type(module_0.Command.path).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.data).__module__}.{type(module_0.Command.data).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.parse_json).__module__}.{type(module_0.Command.parse_json).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.process_result).__module__}.{type(module_0.Command.process_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.err_callback).__module__}.{type(module_0.Command.err_callback).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe).__module__}.{type(module_0.Command.observe).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.observe_duration).__module__}.{type(module_0.Command.observe_duration).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.raw_result).__module__}.{type(module_0.Command.raw_result).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Command.result).__module__}.{type(module_0.Command.result).__qualname__}' == 'builtins.property'
    var_0 = command_0.__add__(command_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'pytradfri.command.Command'
    command_1 = module_0.Command(command_0, dict_0)
    with pytest.raises(TypeError):
        command_1.__add__(dict_1)