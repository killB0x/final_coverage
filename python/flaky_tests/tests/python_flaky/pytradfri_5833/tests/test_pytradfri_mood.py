# Automatically generated by Pynguin.
import pytest
import pytradfri.mood as module_0

def test_case_0():
    bool_0 = True
    none_type_0 = None
    mood_0 = module_0.Mood(bool_0, none_type_0)
    assert f'{type(mood_0).__module__}.{type(mood_0).__qualname__}' == 'pytradfri.mood.Mood'
    assert mood_0.raw is True
    assert f'{type(module_0.Mood.path).__module__}.{type(module_0.Mood.path).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    mood_0 = module_0.Mood(none_type_0, none_type_0)
    assert f'{type(mood_0).__module__}.{type(mood_0).__qualname__}' == 'pytradfri.mood.Mood'
    assert mood_0.raw is None
    assert f'{type(module_0.Mood.path).__module__}.{type(module_0.Mood.path).__qualname__}' == 'builtins.property'
    mood_0.set_name(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    complex_0 = (-2036.5-2302.8228j)
    set_0 = {bool_0, bool_0, complex_0, bool_0}
    str_0 = 'v,Q^~GgEajb"*eo'
    mood_0 = module_0.Mood(set_0, str_0)
    assert f'{type(mood_0).__module__}.{type(mood_0).__qualname__}' == 'pytradfri.mood.Mood'
    assert mood_0.raw == {False, (-2036.5-2302.8228j)}
    assert f'{type(module_0.Mood.path).__module__}.{type(module_0.Mood.path).__qualname__}' == 'builtins.property'
    mood_0.__repr__()