# Automatically generated by Pynguin.
import pytest
import pytradfri.gateway as module_0

def test_case_0():
    gateway_0 = module_0.Gateway()

@pytest.mark.xfail(strict=True)
def test_case_1():
    gateway_0 = module_0.Gateway()
    var_0 = gateway_0.get_device(gateway_0)
    var_1 = gateway_0.get_group(gateway_0)
    var_2 = gateway_0.get_moods(var_0)
    bool_0 = True
    var_3 = gateway_0.set_commissioning_timeout(bool_0)
    var_4 = gateway_0.get_device(var_3)
    var_5 = gateway_0.generate_psk(bool_0)
    var_6 = gateway_0.generate_psk(var_2)
    var_7 = gateway_0.add_group_member(gateway_0)
    var_1.update()

@pytest.mark.xfail(strict=True)
def test_case_2():
    gateway_0 = module_0.Gateway()
    bytes_0 = b'S\xab9\xa5\xd4\xf8mv\xd1\xb3\x12\xa5\xa3\xa2N>\\\xd0'
    var_0 = gateway_0.add_group_member(bytes_0)
    var_1 = gateway_0.get_endpoints()
    var_2 = gateway_0.get_smart_task(var_0)
    var_2.remove_member(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    gateway_0 = module_0.Gateway()
    var_0 = gateway_0.get_devices()
    var_1 = gateway_0.get_devices()
    var_0.get_smart_task(gateway_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    gateway_0 = module_0.Gateway()
    var_0 = gateway_0.get_endpoints()
    var_1 = gateway_0.get_endpoints()
    var_2 = gateway_0.get_groups()
    var_3 = gateway_0.reboot()
    var_4 = gateway_0.get_devices()
    var_5 = gateway_0.set_commissioning_timeout(gateway_0)
    var_6 = gateway_0.factory_reset()
    var_0.remove_group_member(gateway_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    gateway_0 = module_0.Gateway()
    str_0 = 'Q:&Q#W\x0c\rvl'
    gateway_info_0 = module_0.GatewayInfo(str_0)
    assert f'{type(module_0.GatewayInfo.id).__module__}.{type(module_0.GatewayInfo.id).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.ntp_server).__module__}.{type(module_0.GatewayInfo.ntp_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.firmware_version).__module__}.{type(module_0.GatewayInfo.firmware_version).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.current_time).__module__}.{type(module_0.GatewayInfo.current_time).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.current_time_iso8601).__module__}.{type(module_0.GatewayInfo.current_time_iso8601).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.first_setup).__module__}.{type(module_0.GatewayInfo.first_setup).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.homekit_id).__module__}.{type(module_0.GatewayInfo.homekit_id).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.path).__module__}.{type(module_0.GatewayInfo.path).__qualname__}' == 'builtins.property'
    var_0 = gateway_0.get_group(gateway_info_0)
    str_1 = 'fPx#,?M6(V'
    gateway_info_1 = module_0.GatewayInfo(str_1)
    bool_0 = True
    var_1 = gateway_info_1.__repr__()
    assert var_1 == '<GatewayInfo>'
    var_2 = gateway_info_1.update()
    var_2.get_device(bool_0)

def test_case_6():
    bytes_0 = b'?\xb5\x13d7"\\d\xd9\xf1\xa2If\xb1]\x10\x9ec\xce\x82'
    gateway_0 = module_0.Gateway()
    var_0 = gateway_0.add_group_member(bytes_0)

def test_case_7():
    gateway_0 = module_0.Gateway()
    var_0 = gateway_0.remove_group_member(gateway_0)
    var_1 = gateway_0.get_smart_task(var_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    gateway_0 = module_0.Gateway()
    var_0 = gateway_0.get_gateway_info()
    var_1 = gateway_0.get_mood(gateway_0)
    var_0.get_groups()

@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = True
    gateway_0 = module_0.Gateway()
    var_0 = gateway_0.get_moods(bool_0)
    var_1 = gateway_0.add_group_member(bool_0)
    gateway_1 = module_0.Gateway()
    var_0.members()

def test_case_10():
    gateway_0 = module_0.Gateway()
    var_0 = gateway_0.factory_reset()

def test_case_11():
    str_0 = 'o#a:dk\x0b\x0cL]/m\ts.I\x0bxZ'
    gateway_info_0 = module_0.GatewayInfo(str_0)
    assert f'{type(module_0.GatewayInfo.id).__module__}.{type(module_0.GatewayInfo.id).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.ntp_server).__module__}.{type(module_0.GatewayInfo.ntp_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.firmware_version).__module__}.{type(module_0.GatewayInfo.firmware_version).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.current_time).__module__}.{type(module_0.GatewayInfo.current_time).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.current_time_iso8601).__module__}.{type(module_0.GatewayInfo.current_time_iso8601).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.first_setup).__module__}.{type(module_0.GatewayInfo.first_setup).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.homekit_id).__module__}.{type(module_0.GatewayInfo.homekit_id).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.path).__module__}.{type(module_0.GatewayInfo.path).__qualname__}' == 'builtins.property'
    var_0 = gateway_info_0.set_values(str_0)
    var_1 = gateway_info_0.__repr__()
    assert var_1 == '<GatewayInfo>'

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    gateway_info_0 = module_0.GatewayInfo(none_type_0)
    assert f'{type(module_0.GatewayInfo.id).__module__}.{type(module_0.GatewayInfo.id).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.ntp_server).__module__}.{type(module_0.GatewayInfo.ntp_server).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.firmware_version).__module__}.{type(module_0.GatewayInfo.firmware_version).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.current_time).__module__}.{type(module_0.GatewayInfo.current_time).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.current_time_iso8601).__module__}.{type(module_0.GatewayInfo.current_time_iso8601).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.first_setup).__module__}.{type(module_0.GatewayInfo.first_setup).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.homekit_id).__module__}.{type(module_0.GatewayInfo.homekit_id).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.GatewayInfo.path).__module__}.{type(module_0.GatewayInfo.path).__qualname__}' == 'builtins.property'
    var_0 = gateway_info_0.update()
    var_0.get_groups()

@pytest.mark.xfail(strict=True)
def test_case_13():
    gateway_0 = module_0.Gateway()
    none_type_0 = None
    bool_0 = True
    var_0 = gateway_0.get_smart_tasks()
    var_0.observe(none_type_0, bool_0, bool_0)