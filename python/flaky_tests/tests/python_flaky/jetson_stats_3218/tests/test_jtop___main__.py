# Automatically generated by Pynguin.
import pytest
import jtop.__main__ as module_0
import jtop.jtop as module_1

def test_case_0():
    bcolors_0 = module_0.bcolors()
    assert module_0.REPOSITORY == 'https://github.com/rbonghi/jetson_stats/issues'
    assert module_0.LOOP_SECONDS == 5
    assert module_0.bcolors.HEADER == '\x1b[95m'
    assert module_0.bcolors.OKBLUE == '\x1b[94m'
    assert module_0.bcolors.OKGREEN == '\x1b[92m'
    assert module_0.bcolors.WARNING == '\x1b[93m'
    assert module_0.bcolors.FAIL == '\x1b[91m'
    assert module_0.bcolors.ENDC == '\x1b[0m'
    assert module_0.bcolors.BOLD == '\x1b[1m'
    assert module_0.bcolors.UNDERLINE == '\x1b[4m'

@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = 1309.47422
    module_0.warning_messages(float_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bcolors_0 = module_0.bcolors()
    assert module_0.REPOSITORY == 'https://github.com/rbonghi/jetson_stats/issues'
    assert module_0.LOOP_SECONDS == 5
    assert module_0.bcolors.HEADER == '\x1b[95m'
    assert module_0.bcolors.OKBLUE == '\x1b[94m'
    assert module_0.bcolors.OKGREEN == '\x1b[92m'
    assert module_0.bcolors.WARNING == '\x1b[93m'
    assert module_0.bcolors.FAIL == '\x1b[91m'
    assert module_0.bcolors.ENDC == '\x1b[0m'
    assert module_0.bcolors.BOLD == '\x1b[1m'
    assert module_0.bcolors.UNDERLINE == '\x1b[4m'
    var_0 = bcolors_0.fail()
    assert var_0 == '\x1b[91mERR\x1b[0m'
    jtop_0 = module_1.jtop()
    var_1 = module_0.warning_messages(var_0, bcolors_0)
    var_2 = bcolors_0.ok()
    assert var_2 == '\x1b[92mOK\x1b[0m'
    module_0.warning_messages(jtop_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    jtop_0 = module_1.jtop()
    module_0.warning_messages(jtop_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bcolors_0 = module_0.bcolors()
    assert module_0.REPOSITORY == 'https://github.com/rbonghi/jetson_stats/issues'
    assert module_0.LOOP_SECONDS == 5
    assert module_0.bcolors.HEADER == '\x1b[95m'
    assert module_0.bcolors.OKBLUE == '\x1b[94m'
    assert module_0.bcolors.OKGREEN == '\x1b[92m'
    assert module_0.bcolors.WARNING == '\x1b[93m'
    assert module_0.bcolors.FAIL == '\x1b[91m'
    assert module_0.bcolors.ENDC == '\x1b[0m'
    assert module_0.bcolors.BOLD == '\x1b[1m'
    assert module_0.bcolors.UNDERLINE == '\x1b[4m'
    var_0 = bcolors_0.fail()
    assert var_0 == '\x1b[91mERR\x1b[0m'
    var_1 = bcolors_0.warning()
    assert var_1 == '\x1b[93mWARN\x1b[0m'
    var_2 = bcolors_0.fail()
    assert var_2 == '\x1b[91mERR\x1b[0m'
    module_0.warning_messages(bcolors_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = 1.0
    module_0.exit_signal(float_0, float_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    float_0 = 1309.47422
    var_0 = module_0.warning_messages(float_0, float_0)
    assert module_0.REPOSITORY == 'https://github.com/rbonghi/jetson_stats/issues'
    assert module_0.LOOP_SECONDS == 5
    module_0.warning_messages(float_0)