# Automatically generated by Pynguin.
import pytest
import jtop.core.fan as module_0
import re as module_1
import enum as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.load_table(bool_0)

def test_case_1():
    bytes_0 = b'\x81\xdf\xee\xad'
    fan_service_0 = module_0.FanService(bytes_0, bytes_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path is None
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.FanService(none_type_0, none_type_0)

def test_case_3():
    list_0 = []
    var_0 = module_0.Fan(list_0, list_0)
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.Fan.rpm).__module__}.{type(module_0.Fan.rpm).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.measure).__module__}.{type(module_0.Fan.measure).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.auto).__module__}.{type(module_0.Fan.auto).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.mode).__module__}.{type(module_0.Fan.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.speed).__module__}.{type(module_0.Fan.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.configs).__module__}.{type(module_0.Fan.configs).__qualname__}' == 'builtins.property'

def test_case_4():
    bytes_0 = b'\x81!\xee\x98'
    fan_0 = module_0.Fan(bytes_0, bytes_0)
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.Fan.rpm).__module__}.{type(module_0.Fan.rpm).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.measure).__module__}.{type(module_0.Fan.measure).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.auto).__module__}.{type(module_0.Fan.auto).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.mode).__module__}.{type(module_0.Fan.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.speed).__module__}.{type(module_0.Fan.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.configs).__module__}.{type(module_0.Fan.configs).__qualname__}' == 'builtins.property'
    var_0 = fan_0.__len__()
    fan_service_0 = module_0.FanService(fan_0, bytes_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path is None
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    var_1 = fan_service_0.initialization(fan_service_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b'\x81!\xee\x98'
    fan_0 = module_0.Fan(bytes_0, bytes_0)
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.Fan.rpm).__module__}.{type(module_0.Fan.rpm).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.measure).__module__}.{type(module_0.Fan.measure).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.auto).__module__}.{type(module_0.Fan.auto).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.mode).__module__}.{type(module_0.Fan.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.speed).__module__}.{type(module_0.Fan.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.configs).__module__}.{type(module_0.Fan.configs).__qualname__}' == 'builtins.property'
    fan_service_0 = module_0.FanService(fan_0, bytes_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path is None
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    fan_service_0.set_mode(fan_0, fan_service_0)

def test_case_6():
    none_type_0 = None
    fan_0 = module_0.Fan(none_type_0, none_type_0)
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.Fan.rpm).__module__}.{type(module_0.Fan.rpm).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.measure).__module__}.{type(module_0.Fan.measure).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.auto).__module__}.{type(module_0.Fan.auto).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.mode).__module__}.{type(module_0.Fan.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.speed).__module__}.{type(module_0.Fan.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.configs).__module__}.{type(module_0.Fan.configs).__qualname__}' == 'builtins.property'
    var_0 = fan_0.get(fan_0, fan_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'jtop.core.fan.Fan'
    assert len(var_0) == 0

@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b'\x81\xdf\xee\xad'
    fan_0 = module_0.Fan(bytes_0, bytes_0)
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.Fan.rpm).__module__}.{type(module_0.Fan.rpm).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.measure).__module__}.{type(module_0.Fan.measure).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.auto).__module__}.{type(module_0.Fan.auto).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.mode).__module__}.{type(module_0.Fan.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.speed).__module__}.{type(module_0.Fan.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.configs).__module__}.{type(module_0.Fan.configs).__qualname__}' == 'builtins.property'
    fan_service_0 = module_0.FanService(fan_0, bytes_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path is None
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    regex_flag_0 = module_1.RegexFlag.DOTALL
    var_0 = fan_service_0.set_speed(regex_flag_0)
    list_0 = []
    var_1 = list_0.__len__()
    module_1.Scanner(fan_0, regex_flag_0)

def test_case_8():
    str_0 = 'y2+&H\n,L?.{`Cu*T'
    fan_service_0 = module_0.FanService(str_0, str_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path == '.'
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default', 'system', 'manual']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    var_0 = fan_service_0.get_configs()
    with pytest.raises(ValueError):
        fan_service_0.set_speed(var_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'y2+&H\n,,?.`C\\*T'
    fan_service_0 = module_0.FanService(str_0, str_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path == '.'
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default', 'system', 'manual']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    fan_service_0.set_mode(str_0, fan_service_0)

def test_case_10():
    str_0 = 'y2+&H\n,L?.{`Cu*T'
    fan_service_0 = module_0.FanService(str_0, str_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path == '.'
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default', 'system', 'manual']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    with pytest.raises(ValueError):
        fan_service_0.set_speed(fan_service_0)

def test_case_11():
    str_0 = 'y2+&H\n,L?.{`Cu*T'
    fan_service_0 = module_0.FanService(str_0, str_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path == '.'
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default', 'system', 'manual']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_12():
    bool_0 = False
    module_0.load_table(bool_0)
    none_type_0 = None
    var_0 = module_2.unique(none_type_0)

def test_case_13():
    bytes_0 = b'\x81!\xee\x98'
    fan_0 = module_0.Fan(bytes_0, bytes_0)
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.Fan.rpm).__module__}.{type(module_0.Fan.rpm).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.measure).__module__}.{type(module_0.Fan.measure).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.auto).__module__}.{type(module_0.Fan.auto).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.mode).__module__}.{type(module_0.Fan.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.speed).__module__}.{type(module_0.Fan.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.configs).__module__}.{type(module_0.Fan.configs).__qualname__}' == 'builtins.property'
    var_0 = fan_0.__len__()
    fan_service_0 = module_0.FanService(fan_0, bytes_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path is None
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    var_1 = fan_service_0.set_speed(var_0)

def test_case_14():
    bytes_0 = b'\x81!\xee\x98'
    fan_0 = module_0.Fan(bytes_0, bytes_0)
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.Fan.rpm).__module__}.{type(module_0.Fan.rpm).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.measure).__module__}.{type(module_0.Fan.measure).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.auto).__module__}.{type(module_0.Fan.auto).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.mode).__module__}.{type(module_0.Fan.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.speed).__module__}.{type(module_0.Fan.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.configs).__module__}.{type(module_0.Fan.configs).__qualname__}' == 'builtins.property'
    fan_service_0 = module_0.FanService(fan_0, bytes_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path is None
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    var_0 = fan_service_0.initialization(fan_service_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    enum_dict_0 = module_2._EnumDict()
    str_0 = '<enum.auto object at 0x7fe0d2dd6e00>'
    fan_service_0 = module_0.FanService(enum_dict_0, str_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path == '.'
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default', 'system', 'manual']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    bytes_0 = b'\x9c\xe6\xc1\xd2\x8c\xaf\x81\xd5\xc1\xa4[\x08\x00\x83vG\xc9'
    fan_0 = module_0.Fan(bytes_0, bytes_0)
    assert f'{type(module_0.Fan.rpm).__module__}.{type(module_0.Fan.rpm).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.measure).__module__}.{type(module_0.Fan.measure).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.auto).__module__}.{type(module_0.Fan.auto).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.mode).__module__}.{type(module_0.Fan.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.speed).__module__}.{type(module_0.Fan.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.configs).__module__}.{type(module_0.Fan.configs).__qualname__}' == 'builtins.property'
    var_0 = fan_service_0.update()
    var_1 = fan_0.__len__()
    fan_service_1 = module_0.FanService(fan_0, bytes_0)
    assert f'{type(fan_service_1).__module__}.{type(fan_service_1).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_1.path is None
    assert fan_service_1.is_debug is False
    assert fan_service_1.CONFIGS == ['default']
    assert fan_service_1.isRPM is False
    assert fan_service_1.isCPWM is False
    assert fan_service_1.isTPWM is False
    assert fan_service_1.isCTRL is False
    assert fan_service_1.table == {}
    assert fan_service_1.step == 0
    var_2 = fan_0.get(var_1)
    var_3 = fan_service_1.initialization(var_2)
    var_4 = fan_service_1.initialization(fan_service_1)
    var_5 = var_0.update()
    var_6 = fan_service_1.set_speed(var_1)
    var_7 = var_4.__repr__()
    fan_service_1.set_mode(var_7, var_1)

def test_case_16():
    bytes_0 = b'\x81\xdf\xee\xad'
    fan_0 = module_0.Fan(bytes_0, bytes_0)
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.Fan.rpm).__module__}.{type(module_0.Fan.rpm).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.measure).__module__}.{type(module_0.Fan.measure).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.auto).__module__}.{type(module_0.Fan.auto).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.mode).__module__}.{type(module_0.Fan.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.speed).__module__}.{type(module_0.Fan.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.configs).__module__}.{type(module_0.Fan.configs).__qualname__}' == 'builtins.property'
    fan_service_0 = module_0.FanService(fan_0, bytes_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path is None
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    int_0 = 1067
    with pytest.raises(ValueError):
        fan_service_0.set_speed(int_0)

def test_case_17():
    bytes_0 = b'\x81\xdf\xee\xad'
    fan_0 = module_0.Fan(bytes_0, bytes_0)
    assert module_0.CONFIG_DEFAULT_FAN_SPEED == pytest.approx(0.0, abs=0.01, rel=0.01)
    assert f'{type(module_0.Fan.rpm).__module__}.{type(module_0.Fan.rpm).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.measure).__module__}.{type(module_0.Fan.measure).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.auto).__module__}.{type(module_0.Fan.auto).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.mode).__module__}.{type(module_0.Fan.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.speed).__module__}.{type(module_0.Fan.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.Fan.configs).__module__}.{type(module_0.Fan.configs).__qualname__}' == 'builtins.property'
    fan_service_0 = module_0.FanService(fan_0, bytes_0)
    assert f'{type(fan_service_0).__module__}.{type(fan_service_0).__qualname__}' == 'jtop.core.fan.FanService'
    assert fan_service_0.path is None
    assert fan_service_0.is_debug is False
    assert fan_service_0.CONFIGS == ['default']
    assert fan_service_0.isRPM is False
    assert fan_service_0.isCPWM is False
    assert fan_service_0.isTPWM is False
    assert fan_service_0.isCTRL is False
    assert fan_service_0.table == {}
    assert fan_service_0.step == 0
    assert f'{type(module_0.FanService.mode).__module__}.{type(module_0.FanService.mode).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.is_speed).__module__}.{type(module_0.FanService.is_speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.speed).__module__}.{type(module_0.FanService.speed).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.FanService.auto).__module__}.{type(module_0.FanService.auto).__qualname__}' == 'builtins.property'
    var_0 = fan_service_0.initialization(fan_service_0)
    var_1 = fan_service_0.initialization(fan_service_0)
    var_2 = fan_service_0.get_configs()
    int_0 = -4056
    with pytest.raises(ValueError):
        fan_service_0.set_speed(int_0)