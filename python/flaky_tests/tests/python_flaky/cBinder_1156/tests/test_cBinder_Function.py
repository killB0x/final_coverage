# Automatically generated by Pynguin.
import pytest
import cBinder.Function as module_0

def test_case_0():
    str_0 = '+Wr%'
    function_return_0 = module_0.FunctionReturn(str_0, str_0)
    assert function_return_0.is_void is False
    assert function_return_0.struct == '+Wr%'
    assert function_return_0.enum == '+Wr%'

def test_case_1():
    tuple_0 = ()
    function_return_0 = module_0.FunctionReturn(tuple_0, tuple_0)
    assert function_return_0.is_void is False
    assert function_return_0.struct == ()
    assert function_return_0.enum is None

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    module_0.FunctionDeclaration(bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    dict_0 = {}
    module_0.FunctionDeclaration(dict_0, dict_0)

def test_case_4():
    str_0 = 'signed long long'
    function_return_0 = module_0.FunctionReturn(str_0, str_0)
    assert function_return_0.is_void is False
    assert function_return_0.struct is None
    assert function_return_0.enum == 'signed long long'

def test_case_5():
    str_0 = 'void'
    function_return_0 = module_0.FunctionReturn(str_0, str_0)
    assert function_return_0.is_void is True
    assert function_return_0.struct is None
    assert function_return_0.enum == 'void'

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'doxygen'
    function_return_0 = module_0.FunctionReturn(str_0, str_0)
    assert function_return_0.is_void is False
    assert function_return_0.struct == 'doxygen'
    assert function_return_0.enum == 'doxygen'
    dict_0 = {str_0: function_return_0, function_return_0: str_0, str_0: function_return_0, function_return_0: function_return_0, str_0: str_0, function_return_0: function_return_0, str_0: function_return_0, function_return_0: str_0, function_return_0: str_0, function_return_0: function_return_0, function_return_0: str_0, function_return_0: str_0, function_return_0: function_return_0, function_return_0: str_0, function_return_0: str_0}
    module_0.FunctionDeclaration(dict_0, str_0)