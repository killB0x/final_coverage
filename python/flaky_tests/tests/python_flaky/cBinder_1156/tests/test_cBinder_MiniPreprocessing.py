# Automatically generated by Pynguin.
import pytest
import cBinder.MiniPreprocessing as module_0

def test_case_0():
    str_0 = 'DV^9AB\nG_Q?w'
    var_0 = module_0.preprocess_headers(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'\xce$'
    module_0.get_definitions_tuples(bytes_0)

def test_case_2():
    tuple_0 = ()
    var_0 = module_0.get_definitions_tuples(tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 2
    tuple_0 = (int_0, int_0)
    bool_0 = False
    tuple_1 = (int_0, tuple_0, bool_0, bool_0)
    module_0.preprocess_header(int_0, tuple_1)

def test_case_4():
    str_0 = 'M/*k$+#Mm6kbK'
    var_0 = module_0.get_definitions_tuples(str_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'O9\tSeAZ->\r$SPC8'
    dict_0 = {str_0: str_0}
    var_0 = module_0.get_definitions_tuples(dict_0)
    str_1 = 'rLu^[S<:jwI>Z'
    var_1 = module_0.preprocess_headers(str_1, str_1)
    int_0 = -741
    module_0.preprocess_header(str_1, int_0)