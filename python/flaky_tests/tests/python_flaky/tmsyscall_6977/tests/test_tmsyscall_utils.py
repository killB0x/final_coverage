# Automatically generated by Pynguin.
import pytest
import tmsyscall.utils as module_0
import collections.abc as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0.get_iterable(none_type_0)
    module_0.get_iterable(var_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "q8ip'X'P8q"
    module_0.get_iterable(str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    str_0 = '/n?'
    var_0 = module_0.norm_safe(str_0)
    assert var_0 == '/n?'
    var_1 = module_0.get_iterable(none_type_0)
    var_2 = module_0.parse_mask(var_1, var_1)
    module_0.parse_mask(var_1, str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    set_0 = {tuple_0, tuple_0, tuple_0, tuple_0}
    module_0.parse_mask(set_0, tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    set_0 = set()
    var_0 = module_0.parse_mask(set_0, set_0)
    module_0.mkdir_safe(set_0)

def test_case_5():
    bytes_0 = b'g\xb0+\xba\x87\x12\x15\x0e'
    with pytest.raises(Exception):
        module_0.norm_safe(bytes_0)

def test_case_6():
    str_0 = '/n?'
    var_0 = module_0.mkdir_safe(str_0)
    assert var_0 is False

def test_case_7():
    none_type_0 = None
    str_0 = '/n?'
    var_0 = module_0.norm_safe(str_0)
    assert var_0 == '/n?'
    var_1 = module_0.get_iterable(none_type_0)
    var_2 = module_0.parse_mask(var_1, var_1)
    var_3 = module_0.mkdir_safe(var_0)
    assert var_3 is False

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'PN\r_H/2I '
    keys_view_0 = module_1.KeysView(str_0)
    module_0.parse_mask(keys_view_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    bytes_0 = b''
    var_0 = module_0.parse_mask(bytes_0, bytes_0)
    var_1 = var_0.__eq__(var_0)
    module_0.mkdir_safe(bytes_0, var_1)

@pytest.mark.xfail(strict=True)
def test_case_10():
    none_type_0 = None
    var_0 = module_0.get_iterable(none_type_0)
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0, bool_0}
    var_1 = module_0.parse_mask(bool_0, set_0)
    module_0.get_iterable(set_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    none_type_0 = None
    str_0 = '/proc/self/mountinfo'
    var_0 = module_0.get_iterable(none_type_0)
    var_1 = module_0.parse_mask(var_0, var_0)
    module_0.mkdir_safe(str_0)