# Automatically generated by Pynguin.
import pytest
import blackmamba.system as module_0

def test_case_0():
    i_o_s_0 = module_0.iOS()
    assert f'{type(i_o_s_0).__module__}.{type(i_o_s_0).__qualname__}' == 'blackmamba.system.iOS'
    assert module_0.console is None
    assert module_0.PYTHONISTA is False
    assert module_0.IOS is False

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    module_0.Pythonista(set_0)

def test_case_2():
    str_0 = 'fe-$DX6}e'
    i_o_s_0 = module_0.iOS()
    assert f'{type(i_o_s_0).__module__}.{type(i_o_s_0).__qualname__}' == 'blackmamba.system.iOS'
    assert module_0.console is None
    assert module_0.PYTHONISTA is False
    assert module_0.IOS is False
    var_0 = i_o_s_0.__call__(str_0)
    var_1 = var_0.__call__(var_0)

def test_case_3():
    bytes_0 = b'T\x08\x93'
    str_0 = '\ttnO'
    dict_0 = {str_0: bytes_0}
    pythonista_0 = module_0.Pythonista()
    assert f'{type(pythonista_0).__module__}.{type(pythonista_0).__qualname__}' == 'blackmamba.system.Pythonista'
    assert module_0.console is None
    assert module_0.PYTHONISTA is False
    assert module_0.IOS is False
    var_0 = pythonista_0.__call__(bytes_0, **dict_0)
    var_1 = var_0.__call__(var_0, *dict_0)

def test_case_4():
    available_0 = module_0._Available()
    assert f'{type(available_0).__module__}.{type(available_0).__qualname__}' == 'blackmamba.system._Available'
    assert module_0.console is None
    assert module_0.PYTHONISTA is False
    assert module_0.IOS is False
    var_0 = module_0.catch_exceptions(available_0)
    with pytest.raises(Exception):
        available_0.version()

def test_case_5():
    pythonista_0 = module_0.Pythonista()
    assert f'{type(pythonista_0).__module__}.{type(pythonista_0).__qualname__}' == 'blackmamba.system.Pythonista'
    assert module_0.console is None
    assert module_0.PYTHONISTA is False
    assert module_0.IOS is False

def test_case_6():
    available_0 = module_0._Available()
    assert f'{type(available_0).__module__}.{type(available_0).__qualname__}' == 'blackmamba.system._Available'
    assert module_0.console is None
    assert module_0.PYTHONISTA is False
    assert module_0.IOS is False
    set_0 = {available_0}
    var_0 = module_0.catch_exceptions(set_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b'T\x08\x93'
    str_0 = '\ttnO'
    dict_0 = {str_0: bytes_0}
    var_0 = module_0.catch_exceptions(bytes_0)
    assert module_0.console is None
    assert module_0.PYTHONISTA is False
    assert module_0.IOS is False
    var_1 = var_0.__call__(bytes_0, **dict_0)
    module_0.Pythonista(dict_0, dict_0)

def test_case_8():
    str_0 = 'Y1'
    var_0 = module_0.catch_exceptions(str_0)
    assert module_0.console is None
    assert module_0.PYTHONISTA is False
    assert module_0.IOS is False
    var_1 = var_0.__call__(str_0)