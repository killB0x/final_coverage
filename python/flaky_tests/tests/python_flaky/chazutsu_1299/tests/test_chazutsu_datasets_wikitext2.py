# Automatically generated by Pynguin.
import pytest
import chazutsu.datasets.wikitext2 as module_0

def test_case_0():
    wiki_text2_0 = module_0.WikiText2()
    assert f'{type(wiki_text2_0).__module__}.{type(wiki_text2_0).__qualname__}' == 'chazutsu.datasets.wikitext2.WikiText2'
    assert wiki_text2_0.name == 'WikiText-2'
    assert wiki_text2_0.site_url == 'https://metamind.io/research/the-wikitext-long-term-dependency-language-modeling-dataset/'
    assert wiki_text2_0.download_url == 'https://s3.amazonaws.com/research.metamind.io/wikitext/wikitext-2-v1.zip'
    assert wiki_text2_0.description == 'The dataset for language modeling that is larger than PTB (over 2 times).'
    assert wiki_text2_0.test_mode is False
    assert wiki_text2_0.test_download_url == 'https://s3.amazonaws.com/research.metamind.io/wikitext/wikitext-2-v1.zip'
    assert f'{type(wiki_text2_0.logger).__module__}.{type(wiki_text2_0.logger).__qualname__}' == 'logging.Logger'
    assert f'{type(module_0.WikiText2.extract_targets).__module__}.{type(module_0.WikiText2.extract_targets).__qualname__}' == 'builtins.property'
    bool_0 = True
    tuple_0 = (bool_0, wiki_text2_0)
    bool_1 = False
    with pytest.raises(Exception):
        wiki_text2_0.download(wiki_text2_0, tuple_0, tuple_0, force=bool_1)

@pytest.mark.xfail(strict=True)
def test_case_1():
    wiki_text2_0 = module_0.WikiText2()
    assert f'{type(wiki_text2_0).__module__}.{type(wiki_text2_0).__qualname__}' == 'chazutsu.datasets.wikitext2.WikiText2'
    assert wiki_text2_0.name == 'WikiText-2'
    assert wiki_text2_0.site_url == 'https://metamind.io/research/the-wikitext-long-term-dependency-language-modeling-dataset/'
    assert wiki_text2_0.download_url == 'https://s3.amazonaws.com/research.metamind.io/wikitext/wikitext-2-v1.zip'
    assert wiki_text2_0.description == 'The dataset for language modeling that is larger than PTB (over 2 times).'
    assert wiki_text2_0.test_mode is False
    assert wiki_text2_0.test_download_url == 'https://s3.amazonaws.com/research.metamind.io/wikitext/wikitext-2-v1.zip'
    assert f'{type(wiki_text2_0.logger).__module__}.{type(wiki_text2_0.logger).__qualname__}' == 'logging.Logger'
    assert f'{type(module_0.WikiText2.extract_targets).__module__}.{type(module_0.WikiText2.extract_targets).__qualname__}' == 'builtins.property'
    wiki_text2_1 = module_0.WikiText2()
    assert wiki_text2_1.name == 'WikiText-2'
    assert wiki_text2_1.site_url == 'https://metamind.io/research/the-wikitext-long-term-dependency-language-modeling-dataset/'
    assert wiki_text2_1.download_url == 'https://s3.amazonaws.com/research.metamind.io/wikitext/wikitext-2-v1.zip'
    assert wiki_text2_1.description == 'The dataset for language modeling that is larger than PTB (over 2 times).'
    assert wiki_text2_1.test_mode is False
    assert wiki_text2_1.test_download_url == 'https://s3.amazonaws.com/research.metamind.io/wikitext/wikitext-2-v1.zip'
    assert f'{type(wiki_text2_1.logger).__module__}.{type(wiki_text2_1.logger).__qualname__}' == 'logging.Logger'
    wiki_text2_0.download(shuffle=wiki_text2_0, sample_count=wiki_text2_0, force=wiki_text2_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    wiki_text2_0 = module_0.WikiText2()
    assert f'{type(wiki_text2_0).__module__}.{type(wiki_text2_0).__qualname__}' == 'chazutsu.datasets.wikitext2.WikiText2'
    assert wiki_text2_0.name == 'WikiText-2'
    assert wiki_text2_0.site_url == 'https://metamind.io/research/the-wikitext-long-term-dependency-language-modeling-dataset/'
    assert wiki_text2_0.download_url == 'https://s3.amazonaws.com/research.metamind.io/wikitext/wikitext-2-v1.zip'
    assert wiki_text2_0.description == 'The dataset for language modeling that is larger than PTB (over 2 times).'
    assert wiki_text2_0.test_mode is False
    assert wiki_text2_0.test_download_url == 'https://s3.amazonaws.com/research.metamind.io/wikitext/wikitext-2-v1.zip'
    assert f'{type(wiki_text2_0.logger).__module__}.{type(wiki_text2_0.logger).__qualname__}' == 'logging.Logger'
    assert f'{type(module_0.WikiText2.extract_targets).__module__}.{type(module_0.WikiText2.extract_targets).__qualname__}' == 'builtins.property'
    wiki_text2_0.prepare(wiki_text2_0, wiki_text2_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    wiki_text2_0 = module_0.WikiText2()
    assert f'{type(wiki_text2_0).__module__}.{type(wiki_text2_0).__qualname__}' == 'chazutsu.datasets.wikitext2.WikiText2'
    assert wiki_text2_0.name == 'WikiText-2'
    assert wiki_text2_0.site_url == 'https://metamind.io/research/the-wikitext-long-term-dependency-language-modeling-dataset/'
    assert wiki_text2_0.download_url == 'https://s3.amazonaws.com/research.metamind.io/wikitext/wikitext-2-v1.zip'
    assert wiki_text2_0.description == 'The dataset for language modeling that is larger than PTB (over 2 times).'
    assert wiki_text2_0.test_mode is False
    assert wiki_text2_0.test_download_url == 'https://s3.amazonaws.com/research.metamind.io/wikitext/wikitext-2-v1.zip'
    assert f'{type(wiki_text2_0.logger).__module__}.{type(wiki_text2_0.logger).__qualname__}' == 'logging.Logger'
    assert f'{type(module_0.WikiText2.extract_targets).__module__}.{type(module_0.WikiText2.extract_targets).__qualname__}' == 'builtins.property'
    wiki_text2_0.make_resource(wiki_text2_0)