# Automatically generated by Pynguin.
import pytest
import twitch.chat.irc as module_0
import rx.subject.subject as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '~f!4,2q{'
    i_r_c_0 = module_0.IRC(str_0, str_0, str_0)
    assert f'{type(i_r_c_0).__module__}.{type(i_r_c_0).__qualname__}' == 'twitch.chat.irc.IRC'
    assert f'{type(i_r_c_0.socket).__module__}.{type(i_r_c_0.socket).__qualname__}' == 'socket.socket'
    assert i_r_c_0.address == '~f!4,2q{'
    assert i_r_c_0.port == 6667
    assert i_r_c_0.channels == []
    assert i_r_c_0.nickname == '~f!4,2q{'
    assert i_r_c_0.password == 'oauth:~f!4,2q{'
    assert i_r_c_0.active is True
    assert f'{type(i_r_c_0.incoming).__module__}.{type(i_r_c_0.incoming).__qualname__}' == 'rx.subject.subject.Subject'
    i_r_c_0.join_channel(str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'content_type'
    bool_0 = True
    i_r_c_0 = module_0.IRC(bool_0, str_0)
    assert f'{type(i_r_c_0).__module__}.{type(i_r_c_0).__qualname__}' == 'twitch.chat.irc.IRC'
    assert f'{type(i_r_c_0.socket).__module__}.{type(i_r_c_0.socket).__qualname__}' == 'socket.socket'
    assert i_r_c_0.address == 'irc.chat.twitch.tv'
    assert i_r_c_0.port == 6667
    assert i_r_c_0.channels == []
    assert i_r_c_0.nickname is True
    assert i_r_c_0.password == 'oauth:content_type'
    assert i_r_c_0.active is True
    assert f'{type(i_r_c_0.incoming).__module__}.{type(i_r_c_0.incoming).__qualname__}' == 'rx.subject.subject.Subject'
    var_0 = i_r_c_0.run()
    str_1 = '}E'
    i_r_c_0.send_message(str_1, var_0)

def test_case_2():
    str_0 = 'O<-+4Pl'
    str_1 = '0hXe]CUMR:4%=ua&Gg\\'
    i_r_c_0 = module_0.IRC(str_0, str_1)
    assert f'{type(i_r_c_0).__module__}.{type(i_r_c_0).__qualname__}' == 'twitch.chat.irc.IRC'
    assert f'{type(i_r_c_0.socket).__module__}.{type(i_r_c_0.socket).__qualname__}' == 'socket.socket'
    assert i_r_c_0.address == 'irc.chat.twitch.tv'
    assert i_r_c_0.port == 6667
    assert i_r_c_0.channels == []
    assert i_r_c_0.nickname == 'O<-+4Pl'
    assert i_r_c_0.password == 'oauth:0hXe]CUMR:4%=ua&Gg\\'
    assert i_r_c_0.active is True
    assert f'{type(i_r_c_0.incoming).__module__}.{type(i_r_c_0.incoming).__qualname__}' == 'rx.subject.subject.Subject'
    var_0 = i_r_c_0.run()

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    str_0 = 'pagination'
    i_r_c_0 = module_0.IRC(bool_0, str_0, str_0)
    assert f'{type(i_r_c_0).__module__}.{type(i_r_c_0).__qualname__}' == 'twitch.chat.irc.IRC'
    assert f'{type(i_r_c_0.socket).__module__}.{type(i_r_c_0.socket).__qualname__}' == 'socket.socket'
    assert i_r_c_0.address == 'pagination'
    assert i_r_c_0.port == 6667
    assert i_r_c_0.channels == []
    assert i_r_c_0.nickname is True
    assert i_r_c_0.password == 'oauth:pagination'
    assert i_r_c_0.active is True
    assert f'{type(i_r_c_0.incoming).__module__}.{type(i_r_c_0.incoming).__qualname__}' == 'rx.subject.subject.Subject'
    var_0 = i_r_c_0.start()
    str_1 = "b@'tFrA&pil_2"
    str_2 = 'UTF-8'
    i_r_c_1 = module_0.IRC(str_2, str_2)
    assert i_r_c_1.address == 'irc.chat.twitch.tv'
    i_r_c_1.leave_channel(str_1)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'Fr=YST@d3b'
    str_1 = ''
    str_2 = '\\zrcXYI% 0O.At'
    list_0 = [str_1, str_2]
    i_r_c_0 = module_0.IRC(str_0, str_0)
    assert f'{type(i_r_c_0).__module__}.{type(i_r_c_0).__qualname__}' == 'twitch.chat.irc.IRC'
    assert f'{type(i_r_c_0.socket).__module__}.{type(i_r_c_0.socket).__qualname__}' == 'socket.socket'
    assert i_r_c_0.address == 'irc.chat.twitch.tv'
    assert i_r_c_0.port == 6667
    assert i_r_c_0.channels == []
    assert i_r_c_0.nickname == 'Fr=YST@d3b'
    assert i_r_c_0.password == 'oauth:Fr=YST@d3b'
    assert i_r_c_0.active is True
    assert f'{type(i_r_c_0.incoming).__module__}.{type(i_r_c_0.incoming).__qualname__}' == 'rx.subject.subject.Subject'
    none_type_0 = i_r_c_0.connect()
    subject_0 = module_1.Subject()
    none_type_1 = i_r_c_0.join_channel(str_1)
    i_r_c_0.leave_channels(list_0)

def test_case_5():
    str_0 = 'content_type'
    i_r_c_0 = module_0.IRC(str_0, str_0)
    assert f'{type(i_r_c_0).__module__}.{type(i_r_c_0).__qualname__}' == 'twitch.chat.irc.IRC'
    assert f'{type(i_r_c_0.socket).__module__}.{type(i_r_c_0.socket).__qualname__}' == 'socket.socket'
    assert i_r_c_0.address == 'irc.chat.twitch.tv'
    assert i_r_c_0.port == 6667
    assert i_r_c_0.channels == []
    assert i_r_c_0.nickname == 'content_type'
    assert i_r_c_0.password == 'oauth:content_type'
    assert i_r_c_0.active is True
    assert f'{type(i_r_c_0.incoming).__module__}.{type(i_r_c_0.incoming).__qualname__}' == 'rx.subject.subject.Subject'
    bool_0 = True
    i_r_c_1 = module_0.IRC(bool_0, str_0)
    assert i_r_c_1.address == 'irc.chat.twitch.tv'
    var_0 = i_r_c_0.run()
    dict_0 = {}
    none_type_0 = i_r_c_0.leave_channels(dict_0)

def test_case_6():
    str_0 = 'Ov-+4Bl'
    str_1 = '0hXe]CUMR:4%=ua&Gg\\'
    i_r_c_0 = module_0.IRC(str_0, str_1)
    assert f'{type(i_r_c_0).__module__}.{type(i_r_c_0).__qualname__}' == 'twitch.chat.irc.IRC'
    assert f'{type(i_r_c_0.socket).__module__}.{type(i_r_c_0.socket).__qualname__}' == 'socket.socket'
    assert i_r_c_0.address == 'irc.chat.twitch.tv'
    assert i_r_c_0.port == 6667
    assert i_r_c_0.channels == []
    assert i_r_c_0.nickname == 'Ov-+4Bl'
    assert i_r_c_0.password == 'oauth:0hXe]CUMR:4%=ua&Gg\\'
    assert i_r_c_0.active is True
    assert f'{type(i_r_c_0.incoming).__module__}.{type(i_r_c_0.incoming).__qualname__}' == 'rx.subject.subject.Subject'
    var_0 = i_r_c_0.run()