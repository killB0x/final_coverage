# Automatically generated by Pynguin.
import pytest
import algorithms.arrays.delete_nth as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    set_0 = {bool_0, bool_0}
    list_0 = [set_0, set_0]
    module_0.delete_nth_naive(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    none_type_0 = None
    var_0 = module_0.delete_nth_naive(list_0, none_type_0)
    var_1 = module_0.delete_nth_naive(var_0, var_0)
    var_2 = module_0.delete_nth(var_0, list_0)
    var_2.isdisjoint(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    set_0 = {bool_0, bool_0}
    var_0 = module_0.delete_nth(set_0, bool_0)
    module_0.delete_nth_naive(set_0, set_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    none_type_0 = None
    module_0.delete_nth_naive(bool_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'n%j\x0cw/29+YN:U\t*^ry'
    bool_0 = False
    var_0 = module_0.delete_nth(str_0, bool_0)
    module_0.delete_nth_naive(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'n%j\x0cw/29YN:U\t*^ry'
    bool_0 = False
    var_0 = module_0.delete_nth(str_0, bool_0)
    bytes_0 = b'\xb7\x9d\x82]\xa2\xe2&'
    var_1 = module_0.delete_nth(var_0, str_0)
    bool_1 = True
    var_2 = var_1.__gt__(bool_1)
    var_3 = var_0.__contains__(var_2)
    var_4 = module_0.delete_nth_naive(str_0, bool_0)
    var_5 = module_0.delete_nth(var_0, var_4)
    var_6 = var_5.__le__(bytes_0)
    var_4.__neg__()

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'n%j\x0cw/29YN:U\t*^ry'
    bool_0 = True
    var_0 = module_0.delete_nth(str_0, bool_0)
    bool_1 = True
    bool_2 = True
    var_1 = bool_1.__gt__(bool_2)
    var_2 = var_0.__contains__(var_1)
    var_3 = module_0.delete_nth_naive(str_0, bool_0)
    module_0.delete_nth(var_0, var_3)