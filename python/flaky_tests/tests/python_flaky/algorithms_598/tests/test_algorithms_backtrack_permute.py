# Automatically generated by Pynguin.
import pytest
import algorithms.backtrack.permute as module_0
import builtins as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    set_0 = set()
    var_0 = module_0.permute(set_0)
    var_1 = module_0.permute_iter(set_0)
    module_1.object(*var_1)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '}fQ$\t+'
    var_0 = module_0.permute(str_0)
    bool_0 = True
    module_0.permute_recursive(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b'\xe0\xc9\xb4'
    list_0 = []
    tuple_0 = (bytes_0, bytes_0, list_0)
    var_0 = module_0.permute_recursive(tuple_0)
    set_0 = set()
    var_1 = module_0.permute_iter(set_0)
    module_1.object(*var_1)

@pytest.mark.xfail(strict=True)
def test_case_3():
    object_0 = module_1.object()
    module_0.permute_recursive(object_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    module_0.permute_recursive(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    set_0 = set()
    var_0 = module_0.permute_iter(set_0)
    module_1.object(*var_0)