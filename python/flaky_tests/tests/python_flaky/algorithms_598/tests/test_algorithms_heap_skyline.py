# Automatically generated by Pynguin.
import pytest
import algorithms.heap.skyline as module_0
import heapq as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = 'Q+vw@?+0b@\x0b\x0cSe'
    module_0.get_skyline(str_0)

def test_case_1():
    str_0 = ''
    var_0 = module_0.get_skyline(str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.get_skyline(bool_0)

def test_case_3():
    bytes_0 = b'\x94\xbco\xd3\xdb\xc65\x90pqCB'
    list_0 = [bytes_0, bytes_0]
    var_0 = module_0.get_skyline(list_0)

def test_case_4():
    bytes_0 = b'zG\x86\xe7r(\x05D\x11\x99\xe3;84v\xac(\xc9\x0e\x05'
    list_0 = [bytes_0]
    var_0 = module_0.get_skyline(list_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b'\x96Z\x00\x81A\x0b\x00\xefD\x9c\xe0\xad\x8f\x19R\xc2K\xa6'
    list_0 = [bytes_0, bytes_0]
    bool_0 = True
    tuple_0 = (bool_0, bool_0, bool_0)
    tuple_1 = (tuple_0, tuple_0, tuple_0, bytes_0)
    var_0 = module_0.get_skyline(tuple_1)
    var_1 = module_0.get_skyline(list_0)
    var_2 = module_0.get_skyline(list_0)
    list_1 = []
    var_3 = module_0.get_skyline(list_1)
    module_0.get_skyline(var_0)

def test_case_6():
    bytes_0 = b'\x96Z\x00\x81A\x0b\x00\xde\xefD\x9c\xe0\xad\x8f\x19R\xc2K\xa6'
    list_0 = [bytes_0]
    var_0 = module_0.get_skyline(list_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b'\x96Z\x00\x81A\x0b\x00\xefD\x9c\xe0\xad\x8f\x19R\xc2K\xa6'
    list_0 = [bytes_0, bytes_0]
    bool_0 = True
    bool_1 = True
    tuple_0 = (bool_0, bool_1, bool_0)
    tuple_1 = (tuple_0, tuple_0, tuple_0, bytes_0)
    var_0 = module_0.get_skyline(tuple_1)
    list_1 = []
    var_1 = module_0.get_skyline(list_1)
    list_2 = [bytes_0, tuple_0, list_0]
    module_0.get_skyline(list_2)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b'\x96Z\x00\x81A\x0b\x00\xefD\x9c\xe0\xad\x8f\x19R\xc2K\xa6'
    list_0 = [bytes_0, bytes_0]
    bool_0 = True
    tuple_0 = (bool_0, bool_0, bool_0)
    tuple_1 = (tuple_0, tuple_0, tuple_0, bytes_0)
    var_0 = module_0.get_skyline(tuple_1)
    var_1 = module_0.get_skyline(tuple_1)
    var_2 = module_0.get_skyline(list_0)
    var_3 = module_0.get_skyline(list_0)
    list_1 = [bytes_0, tuple_0]
    var_4 = module_0.get_skyline(list_1)
    module_1.nsmallest(list_0, list_1)