# Automatically generated by Pynguin.
import pytest
import algorithms.backtrack.palindrome_partitioning as module_0
import builtins as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -404
    module_0.palindromic_substrings(int_0)

def test_case_1():
    bool_0 = False
    var_0 = module_0.palindromic_substrings(bool_0)

def test_case_2():
    int_0 = -1106
    var_0 = module_0.palindromic_substrings_iter(int_0)

def test_case_3():
    object_0 = module_1.object()
    set_0 = {object_0, object_0}
    list_0 = [set_0, set_0]
    var_0 = module_0.palindromic_substrings(list_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'ct8'
    var_0 = module_0.palindromic_substrings_iter(str_0)
    var_1 = module_0.palindromic_substrings(str_0)
    module_0.palindromic_substrings(var_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'No'
    var_0 = module_0.palindromic_substrings_iter(str_0)
    module_1.object(*var_0)