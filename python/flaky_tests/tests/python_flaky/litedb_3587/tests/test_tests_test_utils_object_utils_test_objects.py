# Automatically generated by Pynguin.
import pytest
import tests.test_utils.object_utils_test_objects as module_0

def test_case_0():
    object_underscore_vars_0 = module_0.ObjectUnderscoreVars()
    assert f'{type(object_underscore_vars_0).__module__}.{type(object_underscore_vars_0).__qualname__}' == 'tests.test_utils.object_utils_test_objects.ObjectUnderscoreVars'

def test_case_1():
    object_no_class_vars_0 = module_0.ObjectNoClassVars()
    assert f'{type(object_no_class_vars_0).__module__}.{type(object_no_class_vars_0).__qualname__}' == 'tests.test_utils.object_utils_test_objects.ObjectNoClassVars'
    assert object_no_class_vars_0.int == 12
    assert object_no_class_vars_0.bool is False
    assert object_no_class_vars_0.float == pytest.approx(12.34, abs=0.01, rel=0.01)
    assert object_no_class_vars_0.str == 'test'
    assert object_no_class_vars_0.bytes == b'test'
    assert f'{type(object_no_class_vars_0.bytearray).__module__}.{type(object_no_class_vars_0.bytearray).__qualname__}' == 'builtins.bytearray'
    assert len(object_no_class_vars_0.bytearray) == 4
    assert object_no_class_vars_0.complex == (1234+0j)
    assert f'{type(object_no_class_vars_0.decimal).__module__}.{type(object_no_class_vars_0.decimal).__qualname__}' == 'decimal.Decimal'

def test_case_2():
    object_class_vars_0 = module_0.ObjectClassVars()
    assert f'{type(object_class_vars_0).__module__}.{type(object_class_vars_0).__qualname__}' == 'tests.test_utils.object_utils_test_objects.ObjectClassVars'
    assert object_class_vars_0.int == 12
    assert object_class_vars_0.bool is False
    assert object_class_vars_0.float == pytest.approx(12.34, abs=0.01, rel=0.01)
    assert object_class_vars_0.str == 'test'
    assert object_class_vars_0.bytes == b'test'
    assert f'{type(object_class_vars_0.bytearray).__module__}.{type(object_class_vars_0.bytearray).__qualname__}' == 'builtins.bytearray'
    assert len(object_class_vars_0.bytearray) == 4
    assert object_class_vars_0.complex == (1234+0j)
    assert f'{type(object_class_vars_0.decimal).__module__}.{type(object_class_vars_0.decimal).__qualname__}' == 'decimal.Decimal'
    assert module_0.ObjectClassVars.class_var == 'class_var'
    object_underscore_vars_0 = module_0.ObjectUnderscoreVars()
    assert f'{type(object_underscore_vars_0).__module__}.{type(object_underscore_vars_0).__qualname__}' == 'tests.test_utils.object_utils_test_objects.ObjectUnderscoreVars'