# Automatically generated by Pynguin.
import pytest
import tests.test_table.table_test_objects as module_0

def test_case_0():
    int_0 = -2344
    good_object_0 = module_0.GoodObject(int_0)
    var_0 = good_object_0.__eq__(good_object_0)
    assert var_0 is True
    str_0 = '\nsfLwq\x0b1p'
    int_1 = 1237
    bad_object_0 = module_0.BadObject(int_1)
    good_object_1 = module_0.GoodObject(str_0)
    var_1 = good_object_0.__eq__(good_object_0)
    assert var_1 is True
    var_2 = var_0.__hash__()
    assert var_2 == 1
    bool_0 = False
    good_object_2 = module_0.GoodObject(var_1)
    bad_object_1 = module_0.BadObject(bool_0)
    good_index_0 = module_0.GoodIndex(var_1)
    assert good_index_0.x is True
    standard_table_object_0 = module_0.StandardTableObject(var_1, var_0)
    assert standard_table_object_0.x is True
    assert standard_table_object_0.y is True
    with pytest.raises(NotImplementedError):
        good_index_0.__lt__(bool_0)

def test_case_1():
    int_0 = 115
    int_1 = 159
    good_index_0 = module_0.GoodIndex(int_1)
    with pytest.raises(NotImplementedError):
        good_index_0.__eq__(int_0)

def test_case_2():
    bool_0 = True
    good_index_0 = module_0.GoodIndex(bool_0)
    var_0 = good_index_0.__hash__()
    bad_index_0 = module_0.BadIndex(var_0)
    bool_1 = False
    int_0 = 822
    bad_and_good_object_0 = module_0.BadAndGoodObject(bool_1)
    good_object_0 = module_0.GoodObject(bool_1)
    bad_and_good_object_1 = module_0.BadAndGoodObject(int_0)
    good_object_1 = module_0.GoodObject(bool_1)
    int_1 = 1359
    good_index_1 = module_0.GoodIndex(int_0)
    good_index_2 = module_0.GoodIndex(int_1)
    var_1 = good_index_2.__lt__(good_index_1)
    assert var_1 is False
    var_2 = var_1.__gt__(bool_1)
    assert var_2 is False
    with pytest.raises(NotImplementedError):
        good_object_1.__eq__(bool_1)

def test_case_3():
    bool_0 = True
    good_index_0 = module_0.GoodIndex(bool_0)
    int_0 = -122
    standard_table_object_0 = module_0.StandardTableObject(bool_0, int_0)
    good_index_1 = module_0.GoodIndex(bool_0)
    with pytest.raises(NotImplementedError):
        good_index_1.__lt__(bool_0)

def test_case_4():
    int_0 = -2530
    bool_0 = True
    good_index_0 = module_0.GoodIndex(bool_0)
    bool_1 = True
    standard_table_object_0 = module_0.StandardTableObject(bool_1, good_index_0)
    bad_and_good_object_0 = module_0.BadAndGoodObject(int_0)
    good_index_1 = module_0.GoodIndex(int_0)
    bool_2 = True
    bad_object_0 = module_0.BadObject(bool_2)
    var_0 = good_index_1.__lt__(good_index_1)
    assert var_0 is False
    bad_object_1 = module_0.BadObject(var_0)
    var_1 = good_index_1.__hash__()
    var_2 = var_1.__eq__(int_0)
    var_3 = var_2.__hash__()
    var_4 = var_2.__hash__()
    bad_and_good_object_1 = module_0.BadAndGoodObject(int_0)
    var_5 = var_4.__eq__(var_4)
    var_6 = good_index_1.__eq__(good_index_1)
    assert var_6 is True
    var_7 = var_6.__lt__(bad_object_1)
    var_8 = var_1.__eq__(var_4)
    good_index_2 = module_0.GoodIndex(var_2)
    var_9 = good_index_2.__hash__()
    var_10 = var_8.__eq__(var_4)
    standard_table_object_1 = module_0.StandardTableObject(int_0, int_0)
    var_11 = var_1.__hash__()
    var_12 = good_index_1.__gt__(good_index_2)
    assert var_12 is False
    var_13 = var_1.__eq__(var_4)
    bad_index_0 = module_0.BadIndex(var_13)
    var_14 = var_8.__gt__(standard_table_object_1)
    var_15 = var_3.__lt__(var_1)
    var_16 = var_13.__eq__(bad_and_good_object_1)
    var_17 = var_5.__eq__(var_1)
    var_18 = var_16.__eq__(bad_index_0)
    with pytest.raises(NotImplementedError):
        good_index_1.__eq__(var_4)

def test_case_5():
    bool_0 = False
    bool_1 = True
    bad_and_good_object_0 = module_0.BadAndGoodObject(bool_1)
    int_0 = 2077
    good_index_0 = module_0.GoodIndex(int_0)
    with pytest.raises(NotADirectoryError):
        good_index_0.__gt__(bool_0)

def test_case_6():
    int_0 = 2
    good_object_0 = module_0.GoodObject(int_0)
    with pytest.raises(NotImplementedError):
        good_object_0.__eq__(int_0)

def test_case_7():
    bool_0 = True
    bad_object_0 = module_0.BadObject(bool_0)

def test_case_8():
    bool_0 = False
    good_index_0 = module_0.GoodIndex(bool_0)

def test_case_9():
    bool_0 = True
    good_index_0 = module_0.GoodIndex(bool_0)
    var_0 = good_index_0.__hash__()
    with pytest.raises(NotImplementedError):
        good_index_0.__lt__(bool_0)

def test_case_10():
    int_0 = 556
    good_object_0 = module_0.GoodObject(int_0)
    int_1 = 0
    good_index_0 = module_0.GoodIndex(int_1)
    with pytest.raises(NotADirectoryError):
        good_index_0.__gt__(good_object_0)