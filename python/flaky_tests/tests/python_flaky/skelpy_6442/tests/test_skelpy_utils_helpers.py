# Automatically generated by Pynguin.
import pytest
import skelpy.utils.helpers as module_0

def test_case_0():
    var_0 = module_0.get_userName()
    assert var_0 == ''
    var_1 = module_0.is_valid_identifier(var_0)
    assert var_1 is False
    var_2 = module_0.get_python_version()
    assert var_2 == '3.10.6'
    var_3 = module_0.get_python_version(var_2)
    assert var_3 == '3.10'
    var_4 = module_0.get_userName()
    assert var_4 == ''
    var_5 = module_0.add_metaclass(var_2)
    var_6 = module_0.root_path()

def test_case_1():
    var_0 = module_0.root_path()
    var_1 = module_0.has_command(var_0)
    assert var_1 is False

def test_case_2():
    var_0 = module_0.root_path()
    var_1 = module_0.has_module(var_0)
    assert var_1 is False
    var_2 = module_0.has_command(var_0)
    assert var_2 is False

def test_case_3():
    var_0 = module_0.get_gitConfig()

def test_case_4():
    var_0 = module_0.get_userName()
    assert var_0 == ''

def test_case_5():
    bytes_0 = b'\x7f\xe1\x97\xb8\x15z\xb7\xc7o'
    var_0 = module_0.is_rootDir(bytes_0)
    assert var_0 is False
    var_1 = module_0.get_python_version(bytes_0)
    assert var_1 == '3.10'

def test_case_6():
    var_0 = module_0.get_python_version()
    assert var_0 == '3.10.6'

def test_case_7():
    str_0 = 'license_gpl_3.0'
    var_0 = module_0.remove_comment_lines_in_str(str_0)
    assert var_0 == 'license_gpl_3.0\n'

@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = True
    module_0.remove_comment_lines_in_str(bool_0)

def test_case_9():
    bool_0 = False
    var_0 = module_0.get_python_version(bool_0)
    assert var_0 == '3.10.6'
    var_1 = module_0.read_setup_cfg(bool_0)

def test_case_10():
    var_0 = module_0.get_userName()
    assert var_0 == ''
    var_1 = module_0.read_setup_cfg(var_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    var_0 = module_0.get_gitConfig()
    module_0.read_setup_cfg(var_0)

def test_case_12():
    str_0 = 'T@d3bB{%@AkyY'
    var_0 = module_0.is_rootDir(str_0)
    assert var_0 is False
    var_1 = module_0.add_metaclass(var_0)
    var_2 = module_0.has_command(str_0)
    assert var_2 is False

def test_case_13():
    var_0 = module_0.root_path()

@pytest.mark.xfail(strict=True)
def test_case_14():
    bool_0 = True
    var_0 = module_0.read_setup_cfg(bool_0)
    module_0.is_valid_identifier(var_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    var_0 = module_0.get_userName()
    assert var_0 == ''
    str_0 = ''
    var_1 = module_0.is_rootDir(str_0)
    assert var_1 is False
    var_2 = module_0.get_userName()
    assert var_2 == ''
    bool_0 = True
    var_3 = module_0.get_gitConfig()
    var_4 = module_0.get_gitConfig()
    module_0.remove_comment_lines_in_file(str_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    str_0 = 'win32'
    var_0 = module_0.is_valid_identifier(str_0)
    assert var_0 is True
    var_1 = module_0.get_python_version()
    assert var_1 == '3.10.6'
    module_0.get_email()

@pytest.mark.xfail(strict=True)
def test_case_17():
    var_0 = module_0.root_path()
    str_0 = 'win32'
    var_1 = module_0.read_setup_cfg(str_0)
    var_2 = module_0.add_metaclass(var_1)
    var_3 = module_0.is_valid_identifier(var_0)
    assert var_3 is False
    var_4 = module_0.get_python_version()
    assert var_4 == '3.10.6'
    var_5 = module_0.has_module(var_0)
    assert var_5 is False
    str_1 = '\n\x0c9]'
    var_6 = module_0.remove_comment_lines_in_str(str_1)
    assert var_6 == '\n\x0c9]\n'
    var_7 = module_0.get_userName()
    assert var_7 == ''
    bool_0 = False
    var_8 = module_0.get_python_version(bool_0)
    assert var_8 == '3.10.6'
    module_0.has_command(var_3)

@pytest.mark.xfail(strict=True)
def test_case_18():
    str_0 = '#su]R6RFf7S]RN'
    var_0 = module_0.get_userName()
    assert var_0 == ''
    var_1 = module_0.is_valid_identifier(str_0)
    assert var_1 is False
    var_2 = module_0.remove_comment_lines_in_str(str_0)
    assert var_2 == ''
    var_3 = module_0.root_path()
    var_4 = module_0.get_python_version()
    assert var_4 == '3.10.6'
    module_0.remove_comment_lines_in_file(var_3)

def test_case_19():
    str_0 = 'in'
    var_0 = module_0.read_setup_cfg(str_0)
    var_1 = module_0.add_metaclass(var_0)
    var_2 = module_0.is_valid_identifier(str_0)
    assert var_2 is False
    var_3 = module_0.get_python_version()
    assert var_3 == '3.10.6'
    var_4 = module_0.has_module(var_3)
    assert var_4 is False
    var_5 = module_0.remove_comment_lines_in_str(str_0)
    assert var_5 == 'in\n'
    var_6 = module_0.get_userName()
    assert var_6 == ''
    bool_0 = True
    var_7 = module_0.get_userName()
    assert var_7 == ''
    var_8 = module_0.get_userName()
    assert var_8 == ''
    var_9 = module_0.add_metaclass(bool_0)
    bytes_0 = b'\x1c\n;\xf2 \xd8\x11'
    var_10 = module_0.get_python_version(bytes_0)
    assert var_10 == '3.10'
    var_11 = module_0.has_module(var_3)
    assert var_11 is False
    var_12 = module_0.has_command(str_0)
    assert var_12 is False