# Automatically generated by Pynguin.
import pytest
import skelpy.utils.helpers as module_0
import skelpy.makers.setup_cfg as module_1

def test_case_0():
    var_0 = module_0.get_userName()
    setup_cfg_maker_0 = module_1.SetupCfgMaker(var_0, var_0, var_0, var_0, var_0, var_0)
    assert f'{type(setup_cfg_maker_0).__module__}.{type(setup_cfg_maker_0).__qualname__}' == 'skelpy.makers.setup_cfg.SetupCfgMaker'
    assert setup_cfg_maker_0.projectDir == ''
    assert setup_cfg_maker_0.projectName == ''
    assert setup_cfg_maker_0.format == ''
    assert setup_cfg_maker_0.quiet == ''
    assert setup_cfg_maker_0.force == ''
    assert setup_cfg_maker_0.test == ''
    assert module_1.settings == {'package_dir': 'src', 'pytest': '', 'pytest_runner': '', 'pytest_alias': '', 'python_version': '3.10.6', 'python_version_short': '3.10'}

def test_case_1():
    var_0 = module_0.get_userName()
    setup_cfg_maker_0 = module_1.SetupCfgMaker(var_0, var_0, var_0, var_0, var_0, var_0)
    assert f'{type(setup_cfg_maker_0).__module__}.{type(setup_cfg_maker_0).__qualname__}' == 'skelpy.makers.setup_cfg.SetupCfgMaker'
    assert setup_cfg_maker_0.projectDir == ''
    assert setup_cfg_maker_0.projectName == ''
    assert setup_cfg_maker_0.format == ''
    assert setup_cfg_maker_0.quiet == ''
    assert setup_cfg_maker_0.force == ''
    assert setup_cfg_maker_0.test == ''
    assert module_1.settings == {'package_dir': 'src', 'pytest': '', 'pytest_runner': '', 'pytest_alias': '', 'python_version': '3.10.6', 'python_version_short': '3.10'}
    var_1 = setup_cfg_maker_0.generate()

@pytest.mark.xfail(strict=True)
def test_case_2():
    var_0 = module_0.root_path()
    int_0 = 727
    tuple_0 = (var_0,)
    str_0 = 'pytest'
    setup_cfg_maker_0 = module_1.SetupCfgMaker(str_0, tuple_0, int_0, var_0, var_0, var_0)
    assert f'{type(setup_cfg_maker_0).__module__}.{type(setup_cfg_maker_0).__qualname__}' == 'skelpy.makers.setup_cfg.SetupCfgMaker'
    assert setup_cfg_maker_0.projectDir == 'pytest'
    assert setup_cfg_maker_0.projectName == ('/',)
    assert setup_cfg_maker_0.format == 727
    assert setup_cfg_maker_0.quiet == '/'
    assert setup_cfg_maker_0.force == '/'
    assert setup_cfg_maker_0.test == '/'
    assert module_1.settings == {'package_dir': 'src', 'pytest': '', 'pytest_runner': '', 'pytest_alias': '', 'python_version': '3.10.6', 'python_version_short': '3.10'}
    set_0 = {var_0}
    str_1 = ')h}y2~C>W=+t?Y]jx}J\\'
    str_2 = 'cF>;'
    dict_0 = {str_0: int_0, str_1: str_1, str_2: setup_cfg_maker_0}
    setup_cfg_maker_1 = module_1.SetupCfgMaker(var_0, str_0, set_0, var_0, tuple_0, str_0, **dict_0)
    assert module_1.settings == {'package_dir': 'src', 'pytest': 'pytest', 'pytest_runner': 'pytest-runner', 'pytest_alias': 'test = pytest\n', 'python_version': '3.10.6', 'python_version_short': '3.10'}
    var_0.generate()

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'basic'
    dict_0 = {}
    setup_cfg_maker_0 = module_1.SetupCfgMaker(str_0, str_0, str_0, str_0, str_0, str_0, **dict_0)
    assert f'{type(setup_cfg_maker_0).__module__}.{type(setup_cfg_maker_0).__qualname__}' == 'skelpy.makers.setup_cfg.SetupCfgMaker'
    assert setup_cfg_maker_0.projectDir == 'basic'
    assert setup_cfg_maker_0.projectName == 'basic'
    assert setup_cfg_maker_0.format == 'basic'
    assert setup_cfg_maker_0.quiet == 'basic'
    assert setup_cfg_maker_0.force == 'basic'
    assert setup_cfg_maker_0.test == 'basic'
    assert module_1.settings == {'package_dir': '.', 'pytest': '', 'pytest_runner': '', 'pytest_alias': '', 'python_version': '3.10.6', 'python_version_short': '3.10'}
    none_type_0 = None
    module_0.read_setup_cfg(none_type_0)