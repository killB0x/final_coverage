# Automatically generated by Pynguin.
import pytest
import skelpy.makers.license_change as module_0
import skelpy.utils.helpers as module_1

def test_case_0():
    str_0 = '|-_Y]sG0U{X-AB-W'
    license_changer_0 = module_0.LicenseChanger(str_0)
    assert f'{type(license_changer_0).__module__}.{type(license_changer_0).__qualname__}' == 'skelpy.makers.license_change.LicenseChanger'
    assert license_changer_0.list_option == '|-_Y]sG0U{X-AB-W'
    assert license_changer_0.license == 'MIT'
    assert license_changer_0.projectDir == '/pynguin'
    assert license_changer_0.force is True
    assert license_changer_0.quiet is True
    assert module_0.settings == {'today': '2022-10-13', 'year': '2022', 'author': '', 'projectName': 'pynguin'}

@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    license_changer_0 = module_0.LicenseChanger(list_0)
    assert f'{type(license_changer_0).__module__}.{type(license_changer_0).__qualname__}' == 'skelpy.makers.license_change.LicenseChanger'
    assert license_changer_0.list_option == []
    assert license_changer_0.license == 'MIT'
    assert license_changer_0.projectDir == '/pynguin'
    assert license_changer_0.force is True
    assert license_changer_0.quiet is True
    assert module_0.settings == {'today': '2022-10-13', 'year': '2022', 'author': '', 'projectName': 'pynguin'}
    var_0 = license_changer_0.generate()
    assert var_0 is True
    var_1 = module_1.get_userName()
    var_1.generate()

@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b'\xd9\x922\x83(gH'
    license_changer_0 = module_0.LicenseChanger(bytes_0, bytes_0)
    assert f'{type(license_changer_0).__module__}.{type(license_changer_0).__qualname__}' == 'skelpy.makers.license_change.LicenseChanger'
    assert license_changer_0.list_option == b'\xd9\x922\x83(gH'
    assert license_changer_0.license == b'\xd9\x922\x83(GH'
    assert license_changer_0.projectDir == '/pynguin'
    assert license_changer_0.force is True
    assert license_changer_0.quiet is True
    assert module_0.settings == {'today': '2022-10-13', 'year': '2022', 'author': '', 'projectName': 'pynguin'}
    var_0 = module_1.get_userName()
    var_1 = license_changer_0.generate()
    assert var_1 is True
    var_0.generate()

def test_case_3():
    none_type_0 = None
    license_changer_0 = module_0.LicenseChanger(none_type_0)
    assert f'{type(license_changer_0).__module__}.{type(license_changer_0).__qualname__}' == 'skelpy.makers.license_change.LicenseChanger'
    assert license_changer_0.list_option is None
    assert license_changer_0.license == 'MIT'
    assert license_changer_0.projectDir == '/pynguin'
    assert license_changer_0.force is True
    assert license_changer_0.quiet is True
    assert module_0.settings == {'today': '2022-10-13', 'year': '2022', 'author': '', 'projectName': 'pynguin'}
    var_0 = license_changer_0.generate()
    assert var_0 is True

@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'K\xa0\xae$B\xcc/\xb5\x84C'
    dict_0 = module_1.get_userName()
    license_changer_0 = module_0.LicenseChanger(dict_0, bytes_0)
    assert f'{type(license_changer_0).__module__}.{type(license_changer_0).__qualname__}' == 'skelpy.makers.license_change.LicenseChanger'
    assert license_changer_0.list_option == ''
    assert license_changer_0.license == b'K\xa0\xae$B\xcc/\xb5\x84C'
    assert license_changer_0.projectDir == '/pynguin'
    assert license_changer_0.force is True
    assert license_changer_0.quiet is True
    assert module_0.settings == {'today': '2022-10-13', 'year': '2022', 'author': '', 'projectName': 'pynguin'}
    license_changer_1 = module_0.LicenseChanger(license_changer_0, bytes_0)
    var_0 = license_changer_0.generate()
    assert var_0 is False
    none_type_0 = None
    module_1.read_setup_cfg(none_type_0)