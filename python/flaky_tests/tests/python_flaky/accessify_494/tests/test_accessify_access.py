# Automatically generated by Pynguin.
import pytest
import ast as module_0
import accessify.access as module_1
import inspect as module_2

def test_case_0():
    alias_0 = module_0.alias()
    var_0 = module_1.accessify(alias_0)

def test_case_1():
    none_type_0 = None
    var_0 = module_1.protected(none_type_0)

def test_case_2():
    precedence_0 = module_0._Precedence.BXOR
    var_0 = module_1.private(precedence_0)

def test_case_3():
    precedence_0 = module_0._Precedence.EXPR
    var_0 = module_1.accessify(precedence_0)
    assert var_0 == module_0._Precedence.EXPR

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    var_0 = module_1.protected(none_type_0)
    var_0.__call__(var_0, var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    var_0 = module_1.private(none_type_0)
    var_0.__call__(none_type_0, var_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    precedence_0 = module_0._Precedence.NOT
    var_0 = module_1.accessify(precedence_0)
    assert var_0 == module_0._Precedence.NOT
    var_1 = module_1.private(precedence_0)
    class_finder_0 = module_2._ClassFinder(var_1)
    var_2 = module_1.accessify(class_finder_0)
    var_1.__call__(var_1, var_2, var_0, qualname=var_1, type=var_2)