# Automatically generated by Pynguin.
import dftimewolf.lib.errors as module_0

def test_case_0():
    tuple_0 = ()
    bad_configuration_error_0 = module_0.BadConfigurationError(unexpected=tuple_0)
    assert f'{type(bad_configuration_error_0).__module__}.{type(bad_configuration_error_0).__qualname__}' == 'dftimewolf.lib.errors.BadConfigurationError'
    assert bad_configuration_error_0.message == 'An error occurred.'
    assert bad_configuration_error_0.name is None
    assert bad_configuration_error_0.stacktrace is None
    assert bad_configuration_error_0.critical is False
    assert bad_configuration_error_0.unexpected == ()
    recipe_parse_error_0 = module_0.RecipeParseError(name=tuple_0, unexpected=tuple_0)
    assert recipe_parse_error_0.message == 'An error occurred.'
    d_f_timewolf_error_0 = module_0.DFTimewolfError(recipe_parse_error_0, critical=recipe_parse_error_0, unexpected=tuple_0)
    assert f'{type(d_f_timewolf_error_0.message).__module__}.{type(d_f_timewolf_error_0.message).__qualname__}' == 'dftimewolf.lib.errors.RecipeParseError'
    command_line_parse_error_0 = module_0.CommandLineParseError()
    assert command_line_parse_error_0.message == 'An error occurred.'
    d_f_timewolf_error_1 = module_0.DFTimewolfError()
    assert d_f_timewolf_error_1.message == 'An error occurred.'

def test_case_1():
    str_0 = '6x`0T\x0by\\nw'
    bad_configuration_error_0 = module_0.BadConfigurationError(stacktrace=str_0, critical=str_0)
    assert f'{type(bad_configuration_error_0).__module__}.{type(bad_configuration_error_0).__qualname__}' == 'dftimewolf.lib.errors.BadConfigurationError'
    assert bad_configuration_error_0.message == 'An error occurred.'
    assert bad_configuration_error_0.name is None
    assert bad_configuration_error_0.stacktrace == '6x`0T\x0by\\nw'
    assert bad_configuration_error_0.critical == '6x`0T\x0by\\nw'
    assert bad_configuration_error_0.unexpected is False