# Automatically generated by Pynguin.
import pytest
import signalwire.blade.handler as module_0

def test_case_0():
    str_0 = 'T'
    var_0 = module_0.register_once(event=str_0, callback=str_0)
    assert module_0.GLOBAL == 'GLOBAL'

def test_case_1():
    str_0 = 'T'
    var_0 = module_0.unregister(event=str_0)
    assert module_0.GLOBAL == 'GLOBAL'

def test_case_2():
    str_0 = ';j'
    var_0 = module_0.unregister_all(str_0)
    assert module_0.GLOBAL == 'GLOBAL'

def test_case_3():
    str_0 = ';j'
    var_0 = module_0.queue_size(str_0, str_0)
    assert var_0 == 0
    assert module_0.GLOBAL == 'GLOBAL'
    var_1 = module_0.clear()

def test_case_4():
    var_0 = module_0.clear()
    assert module_0.GLOBAL == 'GLOBAL'

@pytest.mark.xfail(strict=True)
def test_case_5():
    float_0 = -1790.0
    module_0.build_event_name(float_0, float_0)

def test_case_6():
    bytes_0 = b'+\xf1'
    var_0 = module_0.trigger(bytes_0)
    assert var_0 is False
    assert module_0.GLOBAL == 'GLOBAL'
    var_1 = module_0.clear()

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = ''
    var_0 = module_0.register_once(event=str_0, callback=str_0)
    assert module_0.GLOBAL == 'GLOBAL'
    module_0.trigger(str_0)

def test_case_8():
    str_0 = 'T'
    var_0 = module_0.unregister(event=str_0)
    assert var_0 is False
    assert module_0.GLOBAL == 'GLOBAL'

def test_case_9():
    str_0 = '\\'
    var_0 = module_0.queue_size(str_0, str_0)
    assert var_0 == 0
    assert module_0.GLOBAL == 'GLOBAL'
    var_1 = module_0.trigger(str_0)
    assert var_1 is False

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = '\\'
    var_0 = module_0.unregister_all(str_0)
    assert module_0.GLOBAL == 'GLOBAL'
    var_1 = module_0.unregister(event=str_0)
    assert var_1 is False
    module_0.queue_size(var_0)

def test_case_11():
    str_0 = ''
    var_0 = module_0.trigger(str_0)
    assert var_0 is False
    assert module_0.GLOBAL == 'GLOBAL'

def test_case_12():
    str_0 = ''
    var_0 = module_0.trigger(str_0)
    assert var_0 is False
    assert module_0.GLOBAL == 'GLOBAL'