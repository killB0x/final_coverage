# Automatically generated by Pynguin.
import pytest
import olutils.conversion.dictionary as module_0

def test_case_0():
    dict_0 = {}
    var_0 = module_0.basedict(dict_0, dict_0)

def test_case_1():
    float_0 = 0.1
    var_0 = module_0.basedict(float_0)
    assert var_0 == pytest.approx(0.1, abs=0.01, rel=0.01)

def test_case_2():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    var_0 = module_0.basedict(dict_0)

def test_case_3():
    str_0 = 'c8"_'
    var_0 = module_0.dict2str(str_0, prefix=str_0)
    assert var_0 == 'c8"_'
    dict_0 = {str_0: var_0, str_0: var_0}
    var_1 = module_0.dict2str(dict_0)
    assert var_1 == '# c8"_: c8"_'

def test_case_4():
    none_type_0 = None
    var_0 = module_0.dict2str(none_type_0, none_type_0, prefix=none_type_0, leafconv=none_type_0)
    assert var_0 == 'None'

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    var_0 = module_0.dict2str(none_type_0, leafconv=none_type_0)
    assert var_0 == 'None'
    str_0 = 'aOxP3\tt>N|'
    var_1 = module_0.basedict(var_0)
    assert var_1 == 'None'
    dict_0 = {str_0: str_0, str_0: none_type_0}
    var_2 = module_0.dict2str(var_0, keyconv=dict_0)
    bytes_0 = b'\xfa\xc2^\xbd'
    tuple_0 = (bytes_0, var_1)
    module_0.dict2str(dict_0, indent=var_1, prefix=tuple_0, keyconv=var_1, leafconv=none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    var_0 = module_0.dict2str(none_type_0, leafconv=none_type_0)
    assert var_0 == 'None'
    var_1 = module_0.dict2str(none_type_0, var_0, var_0, var_0)
    var_2 = module_0.basedict(var_0)
    assert var_2 == 'None'
    dict_0 = {}
    var_3 = module_0.dict2str(var_0, keyconv=dict_0)
    bytes_0 = b'\xfa\xc2@'
    dict_1 = {bytes_0: dict_0, var_0: var_2, var_3: dict_0, var_2: var_0}
    int_0 = -3035
    var_4 = module_0.dict2str(dict_1, indent=var_1)
    assert var_4 == "# b'\\xfa\\xc2@': <empty dict>\n# None        : None"
    module_0.dict2str(dict_1, indent=none_type_0, prefix=int_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0, bool_0: bool_0, bool_0: bool_0}
    module_0.dict2str(dict_0, bool_0, dict_0, dict_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    var_0 = module_0.dict2str(none_type_0, leafconv=none_type_0)
    assert var_0 == 'None'
    var_1 = module_0.dict2str(none_type_0, var_0, var_0, var_0)
    str_0 = 'aOxP3t>N|'
    dict_0 = {str_0: str_0, str_0: none_type_0}
    dict_1 = {var_1: dict_0, var_0: var_1, none_type_0: dict_0, var_1: var_0}
    int_0 = -3035
    var_2 = module_0.dict2str(dict_1, indent=var_1)
    assert var_2 == '# None: None\n# None:\nNone* aOxP3t>N|: None'
    module_0.dict2str(dict_1, indent=none_type_0, prefix=int_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    none_type_0 = None
    var_0 = module_0.dict2str(none_type_0, leafconv=none_type_0)
    assert var_0 == 'None'
    var_1 = module_0.basedict(var_0)
    assert var_1 == 'None'
    dict_0 = {var_1: var_1, var_1: none_type_0}
    var_2 = module_0.dict2str(var_0, keyconv=dict_0)
    bytes_0 = b'\xfa\xc2^\xbd'
    var_3 = module_0.dict2str(dict_0)
    assert var_3 == '# None: None'
    dict_1 = {bytes_0: dict_0, var_0: var_1, var_2: dict_0, var_1: var_0}
    module_0.dict2str(dict_1, indent=none_type_0, prefix=var_0)