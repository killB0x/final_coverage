# Automatically generated by Pynguin.
import pytest
import olutils.collection.deepdefaultdict as module_0

def test_case_0():
    default_dict_0 = module_0.DefaultDict()
    bool_0 = False
    var_0 = module_0.deepdefaultdict(bool_0, bool_0)
    assert var_0 is False

def test_case_1():
    none_type_0 = None
    var_0 = module_0.deepdefaultdict(none_type_0, none_type_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'olutils.collection.deepdefaultdict.DefaultDict'
    assert len(var_0) == 0

def test_case_2():
    default_dict_0 = module_0.DefaultDict()

@pytest.mark.xfail(strict=True)
def test_case_3():
    default_dict_0 = module_0.DefaultDict()
    var_0 = module_0.deepdefaultdict(default_dict_0, default_dict_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'olutils.collection.deepdefaultdict.DefaultDict'
    assert len(var_0) == 0
    var_1 = default_dict_0.pprint()
    var_2 = default_dict_0.to_dict()
    var_1.__contains__(var_0)

def test_case_4():
    str_0 = 'FyCM+WQf$_[,e"\\\x0b'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    default_dict_0 = module_0.DefaultDict(**dict_0)
    default_dict_1 = module_0.DefaultDict()
    var_0 = default_dict_1.pprint()

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    module_0.deepdefaultdict(bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    var_0 = module_0.deepdefaultdict(none_type_0, none_type_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'olutils.collection.deepdefaultdict.DefaultDict'
    assert len(var_0) == 0
    var_1 = var_0.copy()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'olutils.collection.deepdefaultdict.DefaultDict'
    assert len(var_1) == 0
    var_2 = var_0.__len__()
    var_3 = var_2.__gt__(var_1)
    var_0.__getitem__(var_2)