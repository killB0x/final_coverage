# Automatically generated by Pynguin.
import wrktoolbox.logs as module_0
import logging as module_1

def test_case_0():
    var_0 = module_0.get_app_logger()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'logging.Logger'
    assert var_0.filters == []
    assert var_0.name == 'wrktoolbox'
    assert var_0.level == 20
    assert f'{type(var_0.parent).__module__}.{type(var_0.parent).__qualname__}' == 'logging.RootLogger'
    assert var_0.propagate is True
    assert f'{type(var_0.handlers).__module__}.{type(var_0.handlers).__qualname__}' == 'builtins.list'
    assert len(var_0.handlers) == 2
    assert var_0.disabled is False
    assert f'{type(var_0.manager).__module__}.{type(var_0.manager).__qualname__}' == 'logging.Manager'
    assert f'{type(module_0.logger).__module__}.{type(module_0.logger).__qualname__}' == 'logging.Logger'
    assert module_0.logger.filters == []
    assert module_0.logger.name == 'wrktoolbox'
    assert module_0.logger.level == 20
    assert f'{type(module_0.logger.parent).__module__}.{type(module_0.logger.parent).__qualname__}' == 'logging.RootLogger'
    assert module_0.logger.propagate is True
    assert f'{type(module_0.logger.handlers).__module__}.{type(module_0.logger.handlers).__qualname__}' == 'builtins.list'
    assert len(module_0.logger.handlers) == 2
    assert module_0.logger.disabled is False
    assert f'{type(module_0.logger.manager).__module__}.{type(module_0.logger.manager).__qualname__}' == 'logging.Manager'
    assert module_1.Logger.root.level == 30
    assert len(module_1.Logger.root.handlers) == 1
    assert len(module_1.Logger.manager.loggerDict) == 85

def test_case_1():
    var_0 = module_0.get_app_logger()
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'logging.Logger'
    assert var_0.filters == []
    assert var_0.name == 'wrktoolbox'
    assert var_0.level == 20
    assert f'{type(var_0.parent).__module__}.{type(var_0.parent).__qualname__}' == 'logging.RootLogger'
    assert var_0.propagate is True
    assert f'{type(var_0.handlers).__module__}.{type(var_0.handlers).__qualname__}' == 'builtins.list'
    assert len(var_0.handlers) == 2
    assert var_0.disabled is False
    assert f'{type(var_0.manager).__module__}.{type(var_0.manager).__qualname__}' == 'logging.Manager'
    assert f'{type(module_0.logger).__module__}.{type(module_0.logger).__qualname__}' == 'logging.Logger'
    assert module_0.logger.filters == []
    assert module_0.logger.name == 'wrktoolbox'
    assert module_0.logger.level == 20
    assert f'{type(module_0.logger.parent).__module__}.{type(module_0.logger.parent).__qualname__}' == 'logging.RootLogger'
    assert module_0.logger.propagate is True
    assert f'{type(module_0.logger.handlers).__module__}.{type(module_0.logger.handlers).__qualname__}' == 'builtins.list'
    assert len(module_0.logger.handlers) == 2
    assert module_0.logger.disabled is False
    assert f'{type(module_0.logger.manager).__module__}.{type(module_0.logger.manager).__qualname__}' == 'logging.Manager'
    assert module_1.Logger.root.level == 30
    assert len(module_1.Logger.root.handlers) == 1
    assert len(module_1.Logger.manager.loggerDict) == 85
    var_1 = module_0.get_app_logger()
    assert f'{type(var_1).__module__}.{type(var_1).__qualname__}' == 'logging.Logger'
    assert var_1.filters == []
    assert var_1.name == 'wrktoolbox'
    assert var_1.level == 20
    assert f'{type(var_1.parent).__module__}.{type(var_1.parent).__qualname__}' == 'logging.RootLogger'
    assert var_1.propagate is True
    assert f'{type(var_1.handlers).__module__}.{type(var_1.handlers).__qualname__}' == 'builtins.list'
    assert len(var_1.handlers) == 2
    assert var_1.disabled is False
    assert f'{type(var_1.manager).__module__}.{type(var_1.manager).__qualname__}' == 'logging.Manager'
    assert module_1.root.level == 30
    assert len(module_1.root.handlers) == 1
    var_2 = module_0.get_app_logger()
    assert f'{type(var_2).__module__}.{type(var_2).__qualname__}' == 'logging.Logger'
    assert var_2.filters == []
    assert var_2.name == 'wrktoolbox'
    assert var_2.level == 20
    assert f'{type(var_2.parent).__module__}.{type(var_2.parent).__qualname__}' == 'logging.RootLogger'
    assert var_2.propagate is True
    assert f'{type(var_2.handlers).__module__}.{type(var_2.handlers).__qualname__}' == 'builtins.list'
    assert len(var_2.handlers) == 2
    assert var_2.disabled is False
    assert f'{type(var_2.manager).__module__}.{type(var_2.manager).__qualname__}' == 'logging.Manager'
    var_3 = module_0.get_app_logger()
    assert f'{type(var_3).__module__}.{type(var_3).__qualname__}' == 'logging.Logger'
    assert var_3.filters == []
    assert var_3.name == 'wrktoolbox'
    assert var_3.level == 20
    assert f'{type(var_3.parent).__module__}.{type(var_3.parent).__qualname__}' == 'logging.RootLogger'
    assert var_3.propagate is True
    assert f'{type(var_3.handlers).__module__}.{type(var_3.handlers).__qualname__}' == 'builtins.list'
    assert len(var_3.handlers) == 2
    assert var_3.disabled is False
    assert f'{type(var_3.manager).__module__}.{type(var_3.manager).__qualname__}' == 'logging.Manager'
    var_4 = module_0.get_app_logger()
    assert f'{type(var_4).__module__}.{type(var_4).__qualname__}' == 'logging.Logger'
    assert var_4.filters == []
    assert var_4.name == 'wrktoolbox'
    assert var_4.level == 20
    assert f'{type(var_4.parent).__module__}.{type(var_4.parent).__qualname__}' == 'logging.RootLogger'
    assert var_4.propagate is True
    assert f'{type(var_4.handlers).__module__}.{type(var_4.handlers).__qualname__}' == 'builtins.list'
    assert len(var_4.handlers) == 2
    assert var_4.disabled is False
    assert f'{type(var_4.manager).__module__}.{type(var_4.manager).__qualname__}' == 'logging.Manager'
    var_5 = module_0.get_app_logger()
    assert f'{type(var_5).__module__}.{type(var_5).__qualname__}' == 'logging.Logger'
    assert var_5.filters == []
    assert var_5.name == 'wrktoolbox'
    assert var_5.level == 20
    assert f'{type(var_5.parent).__module__}.{type(var_5.parent).__qualname__}' == 'logging.RootLogger'
    assert var_5.propagate is True
    assert f'{type(var_5.handlers).__module__}.{type(var_5.handlers).__qualname__}' == 'builtins.list'
    assert len(var_5.handlers) == 2
    assert var_5.disabled is False
    assert f'{type(var_5.manager).__module__}.{type(var_5.manager).__qualname__}' == 'logging.Manager'
    var_6 = module_0.get_app_logger()
    assert f'{type(var_6).__module__}.{type(var_6).__qualname__}' == 'logging.Logger'
    assert var_6.filters == []
    assert var_6.name == 'wrktoolbox'
    assert var_6.level == 20
    assert f'{type(var_6.parent).__module__}.{type(var_6.parent).__qualname__}' == 'logging.RootLogger'
    assert var_6.propagate is True
    assert f'{type(var_6.handlers).__module__}.{type(var_6.handlers).__qualname__}' == 'builtins.list'
    assert len(var_6.handlers) == 2
    assert var_6.disabled is False
    assert f'{type(var_6.manager).__module__}.{type(var_6.manager).__qualname__}' == 'logging.Manager'
    var_7 = module_0.get_app_logger()
    assert f'{type(var_7).__module__}.{type(var_7).__qualname__}' == 'logging.Logger'
    assert var_7.filters == []
    assert var_7.name == 'wrktoolbox'
    assert var_7.level == 20
    assert f'{type(var_7.parent).__module__}.{type(var_7.parent).__qualname__}' == 'logging.RootLogger'
    assert var_7.propagate is True
    assert f'{type(var_7.handlers).__module__}.{type(var_7.handlers).__qualname__}' == 'builtins.list'
    assert len(var_7.handlers) == 2
    assert var_7.disabled is False
    assert f'{type(var_7.manager).__module__}.{type(var_7.manager).__qualname__}' == 'logging.Manager'
    var_8 = module_0.get_app_logger()
    assert f'{type(var_8).__module__}.{type(var_8).__qualname__}' == 'logging.Logger'
    assert var_8.filters == []
    assert var_8.name == 'wrktoolbox'
    assert var_8.level == 20
    assert f'{type(var_8.parent).__module__}.{type(var_8.parent).__qualname__}' == 'logging.RootLogger'
    assert var_8.propagate is True
    assert f'{type(var_8.handlers).__module__}.{type(var_8.handlers).__qualname__}' == 'builtins.list'
    assert len(var_8.handlers) == 2
    assert var_8.disabled is False
    assert f'{type(var_8.manager).__module__}.{type(var_8.manager).__qualname__}' == 'logging.Manager'
    var_9 = module_0.get_app_logger()
    assert f'{type(var_9).__module__}.{type(var_9).__qualname__}' == 'logging.Logger'
    assert var_9.filters == []
    assert var_9.name == 'wrktoolbox'
    assert var_9.level == 20
    assert f'{type(var_9.parent).__module__}.{type(var_9.parent).__qualname__}' == 'logging.RootLogger'
    assert var_9.propagate is True
    assert f'{type(var_9.handlers).__module__}.{type(var_9.handlers).__qualname__}' == 'builtins.list'
    assert len(var_9.handlers) == 2
    assert var_9.disabled is False
    assert f'{type(var_9.manager).__module__}.{type(var_9.manager).__qualname__}' == 'logging.Manager'
    var_10 = module_0.get_app_logger()
    assert f'{type(var_10).__module__}.{type(var_10).__qualname__}' == 'logging.Logger'
    assert var_10.filters == []
    assert var_10.name == 'wrktoolbox'
    assert var_10.level == 20
    assert f'{type(var_10.parent).__module__}.{type(var_10.parent).__qualname__}' == 'logging.RootLogger'
    assert var_10.propagate is True
    assert f'{type(var_10.handlers).__module__}.{type(var_10.handlers).__qualname__}' == 'builtins.list'
    assert len(var_10.handlers) == 2
    assert var_10.disabled is False
    assert f'{type(var_10.manager).__module__}.{type(var_10.manager).__qualname__}' == 'logging.Manager'
    var_11 = module_0.get_app_logger()
    assert f'{type(var_11).__module__}.{type(var_11).__qualname__}' == 'logging.Logger'
    assert var_11.filters == []
    assert var_11.name == 'wrktoolbox'
    assert var_11.level == 20
    assert f'{type(var_11.parent).__module__}.{type(var_11.parent).__qualname__}' == 'logging.RootLogger'
    assert var_11.propagate is True
    assert f'{type(var_11.handlers).__module__}.{type(var_11.handlers).__qualname__}' == 'builtins.list'
    assert len(var_11.handlers) == 2
    assert var_11.disabled is False
    assert f'{type(var_11.manager).__module__}.{type(var_11.manager).__qualname__}' == 'logging.Manager'
    var_12 = module_0.get_app_logger()
    assert f'{type(var_12).__module__}.{type(var_12).__qualname__}' == 'logging.Logger'
    assert var_12.filters == []
    assert var_12.name == 'wrktoolbox'
    assert var_12.level == 20
    assert f'{type(var_12.parent).__module__}.{type(var_12.parent).__qualname__}' == 'logging.RootLogger'
    assert var_12.propagate is True
    assert f'{type(var_12.handlers).__module__}.{type(var_12.handlers).__qualname__}' == 'builtins.list'
    assert len(var_12.handlers) == 2
    assert var_12.disabled is False
    assert f'{type(var_12.manager).__module__}.{type(var_12.manager).__qualname__}' == 'logging.Manager'
    var_13 = module_0.get_app_logger()
    assert f'{type(var_13).__module__}.{type(var_13).__qualname__}' == 'logging.Logger'
    assert var_13.filters == []
    assert var_13.name == 'wrktoolbox'
    assert var_13.level == 20
    assert f'{type(var_13.parent).__module__}.{type(var_13.parent).__qualname__}' == 'logging.RootLogger'
    assert var_13.propagate is True
    assert f'{type(var_13.handlers).__module__}.{type(var_13.handlers).__qualname__}' == 'builtins.list'
    assert len(var_13.handlers) == 2
    assert var_13.disabled is False
    assert f'{type(var_13.manager).__module__}.{type(var_13.manager).__qualname__}' == 'logging.Manager'
    var_14 = module_0.get_app_logger()
    assert f'{type(var_14).__module__}.{type(var_14).__qualname__}' == 'logging.Logger'
    assert var_14.filters == []
    assert var_14.name == 'wrktoolbox'
    assert var_14.level == 20
    assert f'{type(var_14.parent).__module__}.{type(var_14.parent).__qualname__}' == 'logging.RootLogger'
    assert var_14.propagate is True
    assert f'{type(var_14.handlers).__module__}.{type(var_14.handlers).__qualname__}' == 'builtins.list'
    assert len(var_14.handlers) == 2
    assert var_14.disabled is False
    assert f'{type(var_14.manager).__module__}.{type(var_14.manager).__qualname__}' == 'logging.Manager'
    var_15 = module_0.get_app_logger()
    assert f'{type(var_15).__module__}.{type(var_15).__qualname__}' == 'logging.Logger'
    assert var_15.filters == []
    assert var_15.name == 'wrktoolbox'
    assert var_15.level == 20
    assert f'{type(var_15.parent).__module__}.{type(var_15.parent).__qualname__}' == 'logging.RootLogger'
    assert var_15.propagate is True
    assert f'{type(var_15.handlers).__module__}.{type(var_15.handlers).__qualname__}' == 'builtins.list'
    assert len(var_15.handlers) == 2
    assert var_15.disabled is False
    assert f'{type(var_15.manager).__module__}.{type(var_15.manager).__qualname__}' == 'logging.Manager'
    var_16 = module_0.get_app_logger()
    assert f'{type(var_16).__module__}.{type(var_16).__qualname__}' == 'logging.Logger'
    assert var_16.filters == []
    assert var_16.name == 'wrktoolbox'
    assert var_16.level == 20
    assert f'{type(var_16.parent).__module__}.{type(var_16.parent).__qualname__}' == 'logging.RootLogger'
    assert var_16.propagate is True
    assert f'{type(var_16.handlers).__module__}.{type(var_16.handlers).__qualname__}' == 'builtins.list'
    assert len(var_16.handlers) == 2
    assert var_16.disabled is False
    assert f'{type(var_16.manager).__module__}.{type(var_16.manager).__qualname__}' == 'logging.Manager'
    var_17 = module_0.get_app_logger()
    assert f'{type(var_17).__module__}.{type(var_17).__qualname__}' == 'logging.Logger'
    assert var_17.filters == []
    assert var_17.name == 'wrktoolbox'
    assert var_17.level == 20
    assert f'{type(var_17.parent).__module__}.{type(var_17.parent).__qualname__}' == 'logging.RootLogger'
    assert var_17.propagate is True
    assert f'{type(var_17.handlers).__module__}.{type(var_17.handlers).__qualname__}' == 'builtins.list'
    assert len(var_17.handlers) == 2
    assert var_17.disabled is False
    assert f'{type(var_17.manager).__module__}.{type(var_17.manager).__qualname__}' == 'logging.Manager'
    var_18 = module_0.get_app_logger()
    assert f'{type(var_18).__module__}.{type(var_18).__qualname__}' == 'logging.Logger'
    assert var_18.filters == []
    assert var_18.name == 'wrktoolbox'
    assert var_18.level == 20
    assert f'{type(var_18.parent).__module__}.{type(var_18.parent).__qualname__}' == 'logging.RootLogger'
    assert var_18.propagate is True
    assert f'{type(var_18.handlers).__module__}.{type(var_18.handlers).__qualname__}' == 'builtins.list'
    assert len(var_18.handlers) == 2
    assert var_18.disabled is False
    assert f'{type(var_18.manager).__module__}.{type(var_18.manager).__qualname__}' == 'logging.Manager'
    var_19 = module_0.get_app_logger()
    assert f'{type(var_19).__module__}.{type(var_19).__qualname__}' == 'logging.Logger'
    assert var_19.filters == []
    assert var_19.name == 'wrktoolbox'
    assert var_19.level == 20
    assert f'{type(var_19.parent).__module__}.{type(var_19.parent).__qualname__}' == 'logging.RootLogger'
    assert var_19.propagate is True
    assert f'{type(var_19.handlers).__module__}.{type(var_19.handlers).__qualname__}' == 'builtins.list'
    assert len(var_19.handlers) == 2
    assert var_19.disabled is False
    assert f'{type(var_19.manager).__module__}.{type(var_19.manager).__qualname__}' == 'logging.Manager'
    var_20 = module_0.get_app_logger()
    assert f'{type(var_20).__module__}.{type(var_20).__qualname__}' == 'logging.Logger'
    assert var_20.filters == []
    assert var_20.name == 'wrktoolbox'
    assert var_20.level == 20
    assert f'{type(var_20.parent).__module__}.{type(var_20.parent).__qualname__}' == 'logging.RootLogger'
    assert var_20.propagate is True
    assert f'{type(var_20.handlers).__module__}.{type(var_20.handlers).__qualname__}' == 'builtins.list'
    assert len(var_20.handlers) == 2
    assert var_20.disabled is False
    assert f'{type(var_20.manager).__module__}.{type(var_20.manager).__qualname__}' == 'logging.Manager'
    var_21 = module_0.get_app_logger()
    assert f'{type(var_21).__module__}.{type(var_21).__qualname__}' == 'logging.Logger'
    assert var_21.filters == []
    assert var_21.name == 'wrktoolbox'
    assert var_21.level == 20
    assert f'{type(var_21.parent).__module__}.{type(var_21.parent).__qualname__}' == 'logging.RootLogger'
    assert var_21.propagate is True
    assert f'{type(var_21.handlers).__module__}.{type(var_21.handlers).__qualname__}' == 'builtins.list'
    assert len(var_21.handlers) == 2
    assert var_21.disabled is False
    assert f'{type(var_21.manager).__module__}.{type(var_21.manager).__qualname__}' == 'logging.Manager'
    var_22 = module_0.get_app_logger()
    assert f'{type(var_22).__module__}.{type(var_22).__qualname__}' == 'logging.Logger'
    assert var_22.filters == []
    assert var_22.name == 'wrktoolbox'
    assert var_22.level == 20
    assert f'{type(var_22.parent).__module__}.{type(var_22.parent).__qualname__}' == 'logging.RootLogger'
    assert var_22.propagate is True
    assert f'{type(var_22.handlers).__module__}.{type(var_22.handlers).__qualname__}' == 'builtins.list'
    assert len(var_22.handlers) == 2
    assert var_22.disabled is False
    assert f'{type(var_22.manager).__module__}.{type(var_22.manager).__qualname__}' == 'logging.Manager'
    var_23 = module_0.get_app_logger()
    assert f'{type(var_23).__module__}.{type(var_23).__qualname__}' == 'logging.Logger'
    assert var_23.filters == []
    assert var_23.name == 'wrktoolbox'
    assert var_23.level == 20
    assert f'{type(var_23.parent).__module__}.{type(var_23.parent).__qualname__}' == 'logging.RootLogger'
    assert var_23.propagate is True
    assert f'{type(var_23.handlers).__module__}.{type(var_23.handlers).__qualname__}' == 'builtins.list'
    assert len(var_23.handlers) == 2
    assert var_23.disabled is False
    assert f'{type(var_23.manager).__module__}.{type(var_23.manager).__qualname__}' == 'logging.Manager'
    var_24 = module_0.get_app_logger()
    assert f'{type(var_24).__module__}.{type(var_24).__qualname__}' == 'logging.Logger'
    assert var_24.filters == []
    assert var_24.name == 'wrktoolbox'
    assert var_24.level == 20
    assert f'{type(var_24.parent).__module__}.{type(var_24.parent).__qualname__}' == 'logging.RootLogger'
    assert var_24.propagate is True
    assert f'{type(var_24.handlers).__module__}.{type(var_24.handlers).__qualname__}' == 'builtins.list'
    assert len(var_24.handlers) == 2
    assert var_24.disabled is False
    assert f'{type(var_24.manager).__module__}.{type(var_24.manager).__qualname__}' == 'logging.Manager'
    var_25 = module_0.get_app_logger()
    assert f'{type(var_25).__module__}.{type(var_25).__qualname__}' == 'logging.Logger'
    assert var_25.filters == []
    assert var_25.name == 'wrktoolbox'
    assert var_25.level == 20
    assert f'{type(var_25.parent).__module__}.{type(var_25.parent).__qualname__}' == 'logging.RootLogger'
    assert var_25.propagate is True
    assert f'{type(var_25.handlers).__module__}.{type(var_25.handlers).__qualname__}' == 'builtins.list'
    assert len(var_25.handlers) == 2
    assert var_25.disabled is False
    assert f'{type(var_25.manager).__module__}.{type(var_25.manager).__qualname__}' == 'logging.Manager'
    var_26 = module_0.get_app_logger()
    assert f'{type(var_26).__module__}.{type(var_26).__qualname__}' == 'logging.Logger'
    assert var_26.filters == []
    assert var_26.name == 'wrktoolbox'
    assert var_26.level == 20
    assert f'{type(var_26.parent).__module__}.{type(var_26.parent).__qualname__}' == 'logging.RootLogger'
    assert var_26.propagate is True
    assert f'{type(var_26.handlers).__module__}.{type(var_26.handlers).__qualname__}' == 'builtins.list'
    assert len(var_26.handlers) == 2
    assert var_26.disabled is False
    assert f'{type(var_26.manager).__module__}.{type(var_26.manager).__qualname__}' == 'logging.Manager'
    var_27 = module_0.get_app_logger()
    assert f'{type(var_27).__module__}.{type(var_27).__qualname__}' == 'logging.Logger'
    assert var_27.filters == []
    assert var_27.name == 'wrktoolbox'
    assert var_27.level == 20
    assert f'{type(var_27.parent).__module__}.{type(var_27.parent).__qualname__}' == 'logging.RootLogger'
    assert var_27.propagate is True
    assert f'{type(var_27.handlers).__module__}.{type(var_27.handlers).__qualname__}' == 'builtins.list'
    assert len(var_27.handlers) == 2
    assert var_27.disabled is False
    assert f'{type(var_27.manager).__module__}.{type(var_27.manager).__qualname__}' == 'logging.Manager'
    var_28 = module_0.get_app_logger()
    assert f'{type(var_28).__module__}.{type(var_28).__qualname__}' == 'logging.Logger'
    assert var_28.filters == []
    assert var_28.name == 'wrktoolbox'
    assert var_28.level == 20
    assert f'{type(var_28.parent).__module__}.{type(var_28.parent).__qualname__}' == 'logging.RootLogger'
    assert var_28.propagate is True
    assert f'{type(var_28.handlers).__module__}.{type(var_28.handlers).__qualname__}' == 'builtins.list'
    assert len(var_28.handlers) == 2
    assert var_28.disabled is False
    assert f'{type(var_28.manager).__module__}.{type(var_28.manager).__qualname__}' == 'logging.Manager'
    var_29 = module_0.get_app_logger()
    assert f'{type(var_29).__module__}.{type(var_29).__qualname__}' == 'logging.Logger'
    assert var_29.filters == []
    assert var_29.name == 'wrktoolbox'
    assert var_29.level == 20
    assert f'{type(var_29.parent).__module__}.{type(var_29.parent).__qualname__}' == 'logging.RootLogger'
    assert var_29.propagate is True
    assert f'{type(var_29.handlers).__module__}.{type(var_29.handlers).__qualname__}' == 'builtins.list'
    assert len(var_29.handlers) == 2
    assert var_29.disabled is False
    assert f'{type(var_29.manager).__module__}.{type(var_29.manager).__qualname__}' == 'logging.Manager'
    var_30 = module_0.get_app_logger()
    assert f'{type(var_30).__module__}.{type(var_30).__qualname__}' == 'logging.Logger'
    assert var_30.filters == []
    assert var_30.name == 'wrktoolbox'
    assert var_30.level == 20
    assert f'{type(var_30.parent).__module__}.{type(var_30.parent).__qualname__}' == 'logging.RootLogger'
    assert var_30.propagate is True
    assert f'{type(var_30.handlers).__module__}.{type(var_30.handlers).__qualname__}' == 'builtins.list'
    assert len(var_30.handlers) == 2
    assert var_30.disabled is False
    assert f'{type(var_30.manager).__module__}.{type(var_30.manager).__qualname__}' == 'logging.Manager'
    var_31 = module_0.get_app_logger()
    assert f'{type(var_31).__module__}.{type(var_31).__qualname__}' == 'logging.Logger'
    assert var_31.filters == []
    assert var_31.name == 'wrktoolbox'
    assert var_31.level == 20
    assert f'{type(var_31.parent).__module__}.{type(var_31.parent).__qualname__}' == 'logging.RootLogger'
    assert var_31.propagate is True
    assert f'{type(var_31.handlers).__module__}.{type(var_31.handlers).__qualname__}' == 'builtins.list'
    assert len(var_31.handlers) == 2
    assert var_31.disabled is False
    assert f'{type(var_31.manager).__module__}.{type(var_31.manager).__qualname__}' == 'logging.Manager'
    var_32 = module_0.get_app_logger()
    assert f'{type(var_32).__module__}.{type(var_32).__qualname__}' == 'logging.Logger'
    assert var_32.filters == []
    assert var_32.name == 'wrktoolbox'
    assert var_32.level == 20
    assert f'{type(var_32.parent).__module__}.{type(var_32.parent).__qualname__}' == 'logging.RootLogger'
    assert var_32.propagate is True
    assert f'{type(var_32.handlers).__module__}.{type(var_32.handlers).__qualname__}' == 'builtins.list'
    assert len(var_32.handlers) == 2
    assert var_32.disabled is False
    assert f'{type(var_32.manager).__module__}.{type(var_32.manager).__qualname__}' == 'logging.Manager'
    var_33 = module_0.get_app_logger()
    assert f'{type(var_33).__module__}.{type(var_33).__qualname__}' == 'logging.Logger'
    assert var_33.filters == []
    assert var_33.name == 'wrktoolbox'
    assert var_33.level == 20
    assert f'{type(var_33.parent).__module__}.{type(var_33.parent).__qualname__}' == 'logging.RootLogger'
    assert var_33.propagate is True
    assert f'{type(var_33.handlers).__module__}.{type(var_33.handlers).__qualname__}' == 'builtins.list'
    assert len(var_33.handlers) == 2
    assert var_33.disabled is False
    assert f'{type(var_33.manager).__module__}.{type(var_33.manager).__qualname__}' == 'logging.Manager'