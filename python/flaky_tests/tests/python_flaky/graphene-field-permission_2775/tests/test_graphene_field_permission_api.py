# Automatically generated by Pynguin.
import pytest
import graphene_field_permission.api as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = -1048.0
    module_0.permissions_filter(float_0, float_0)

def test_case_1():
    str_0 = '):\n,\n,K.Lo>\\$eqX'
    with pytest.raises(Exception):
        module_0.get_filter_data(str_0, str_0)

def test_case_2():
    list_0 = []
    var_0 = module_0.restructure_permissions(list_0)

def test_case_3():
    float_0 = -1046.1837146393011
    var_0 = module_0.restructure_permissions(float_0)

def test_case_4():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.restructure_permissions(list_0)

def test_case_5():
    list_0 = []
    with pytest.raises(AttributeError):
        module_0.check_field_access(filter_field=list_0, info_context=list_0)

def test_case_6():
    float_0 = -1046.1837146393011
    with pytest.raises(AttributeError):
        module_0.check_field_access(info_context=float_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 0
    module_0.fetch_permissions(int_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b'\x9e8y\x8d\x8cz\xa8,\xb4\x1d\xfc\xaaO\xc5\xa5\xa72\xec\xe9\x13'
    module_0.check_field_access(filter_field=bytes_0, filter_data=bytes_0, info_context=bytes_0)

def test_case_9():
    str_0 = 'kD+\x0c%@[q7'
    tuple_0 = ()
    dict_0 = {tuple_0: str_0}
    with pytest.raises(ValueError):
        module_0.permissions_filter(dict_0, str_0)

def test_case_10():
    dict_0 = {}
    var_0 = module_0.restructure_permissions(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = 'x{JT\x0cGQbz{R&:|%'
    dict_0 = {str_0: str_0}
    var_0 = module_0.restructure_permissions(dict_0)
    module_0.check_field_access(filter_field=str_0, filter_data=str_0, info_context=str_0)