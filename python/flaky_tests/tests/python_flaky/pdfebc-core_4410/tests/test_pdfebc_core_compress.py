# Automatically generated by Pynguin.
import pytest
import pdfebc_core.compress as module_0
import tokenize as module_1
import codecs as module_2
import json.decoder as module_3

def test_case_0():
    str_0 = 'w0^'
    with pytest.raises(ValueError):
        module_0.compress_pdf(str_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '.pdf'
    var_0 = module_0.compress_multiple_pdfs(str_0, str_0, str_0)
    assert module_0.BYTES_PER_MEGABYTE == 1048576
    assert module_0.FILE_SIZE_LOWER_LIMIT == 1048576
    assert module_0.PDF_EXTENSION == '.pdf'
    assert module_0.COMPRESSING_MULTIPLE == "Source directory: '{}'\nOutput directory: '{}'\nFound '{}' PDF files. Starting compression ..."
    assert module_0.ALL_FILES_DONE == "All files done!\nResults saved to '{}'"
    assert module_0.COMPRESSING == "Compressing '{}' ..."
    assert module_0.FILE_DONE == "File done! Result saved to '{}'"
    assert module_0.NOT_COMPRESSING == "Not compressing '{}'\nReason: Actual file size is {} bytes,\nlower limit for compression is {} bytes"
    assert module_0.GS_NOT_INSTALLED == "Ghostscript not installed or not aliased to '{}'.\nExiting ..."
    module_1.untokenize(var_0)

def test_case_2():
    str_0 = '.pdf'
    with pytest.raises(FileNotFoundError):
        module_0.compress_pdf(str_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '.pdf'
    var_0 = module_2.StreamWriter(str_0)
    module_0.compress_pdf(var_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = '.'
    var_0 = module_0.compress_multiple_pdfs(str_0, str_0, str_0)
    assert module_0.BYTES_PER_MEGABYTE == 1048576
    assert module_0.FILE_SIZE_LOWER_LIMIT == 1048576
    assert module_0.PDF_EXTENSION == '.pdf'
    assert module_0.COMPRESSING_MULTIPLE == "Source directory: '{}'\nOutput directory: '{}'\nFound '{}' PDF files. Starting compression ..."
    assert module_0.ALL_FILES_DONE == "All files done!\nResults saved to '{}'"
    assert module_0.COMPRESSING == "Compressing '{}' ..."
    assert module_0.FILE_DONE == "File done! Result saved to '{}'"
    assert module_0.NOT_COMPRESSING == "Not compressing '{}'\nReason: Actual file size is {} bytes,\nlower limit for compression is {} bytes"
    assert module_0.GS_NOT_INSTALLED == "Ghostscript not installed or not aliased to '{}'.\nExiting ..."
    module_1.untokenize(var_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '.'
    var_0 = module_0.compress_multiple_pdfs(str_0, str_0, str_0)
    assert module_0.BYTES_PER_MEGABYTE == 1048576
    assert module_0.FILE_SIZE_LOWER_LIMIT == 1048576
    assert module_0.PDF_EXTENSION == '.pdf'
    assert module_0.COMPRESSING_MULTIPLE == "Source directory: '{}'\nOutput directory: '{}'\nFound '{}' PDF files. Starting compression ..."
    assert module_0.ALL_FILES_DONE == "All files done!\nResults saved to '{}'"
    assert module_0.COMPRESSING == "Compressing '{}' ..."
    assert module_0.FILE_DONE == "File done! Result saved to '{}'"
    assert module_0.NOT_COMPRESSING == "Not compressing '{}'\nReason: Actual file size is {} bytes,\nlower limit for compression is {} bytes"
    assert module_0.GS_NOT_INSTALLED == "Ghostscript not installed or not aliased to '{}'.\nExiting ..."
    module_3.JSONArray(var_0, str_0)