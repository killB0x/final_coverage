# Automatically generated by Pynguin.
import pytest
import pyeventdispatcher.event_dispatcher as module_0

def test_case_0():
    memory_registry_0 = module_0.register_event_subscribers()

@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    module_0.register_global_listener(list_0, list_0)

def test_case_2():
    memory_registry_0 = module_0.MemoryRegistry()

def test_case_3():
    var_0 = module_0.register_event_subscribers()
    set_0 = {var_0, var_0, var_0}
    event_0 = module_0.Event(set_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    event_dispatcher_0 = module_0.EventDispatcher()
    memory_registry_0 = module_0.MemoryRegistry()
    none_type_0 = None
    event_0 = module_0.Event(none_type_0)
    var_0 = event_dispatcher_0.dispatch(event_0, event_dispatcher_0)
    var_1 = module_0.dispatch_global_event(event_0)
    var_2 = module_0.listen()
    var_3 = module_0.register_event_subscribers()
    var_4 = module_0.listen()
    var_5 = memory_registry_0.register(none_type_0, none_type_0, var_2)
    module_0.register_global_listener(var_3, var_4, var_0)

def test_case_5():
    none_type_0 = None
    event_0 = module_0.Event(none_type_0)
    var_0 = module_0.dispatch_global_event(event_0)

def test_case_6():
    event_dispatcher_0 = module_0.EventDispatcher()

@pytest.mark.xfail(strict=True)
def test_case_7():
    var_0 = module_0.EventDispatcher()
    var_0.register(var_0, var_0)

def test_case_8():
    var_0 = module_0.listen()

@pytest.mark.xfail(strict=True)
def test_case_9():
    var_0 = module_0.listen()
    module_0.register_global_listener(var_0, var_0, var_0)

def test_case_10():
    event_dispatcher_0 = module_0.EventDispatcher()
    none_type_0 = None
    event_0 = module_0.Event(none_type_0)
    var_0 = event_dispatcher_0.dispatch(event_0, event_dispatcher_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    event_dispatcher_0 = module_0.EventDispatcher()
    none_type_0 = None
    event_0 = module_0.Event(none_type_0)
    none_type_1 = None
    var_0 = event_dispatcher_0.dispatch(event_0, none_type_1)
    var_1 = module_0.dispatch_global_event(event_0)
    event_dispatcher_exception_0 = module_0.EventDispatcherException()
    var_2 = module_0.listen()
    var_3 = module_0.register_global_listener(var_2, var_2)
    var_4 = module_0.listen()
    event_subscriber_0 = module_0.EventSubscriber()
    event_subscriber_0.register(var_3, var_3, var_3)