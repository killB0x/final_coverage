# Automatically generated by Pynguin.
import pytest
import recipe_scrapers.thevintagemixer as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.TheVintageMixer(none_type_0, none_type_0, test=none_type_0)

def test_case_1():
    str_0 = 'https://www.finedininglovers.com'
    the_vintage_mixer_0 = module_0.TheVintageMixer(str_0, str_0)
    assert f'{type(the_vintage_mixer_0).__module__}.{type(the_vintage_mixer_0).__qualname__}' == 'recipe_scrapers.thevintagemixer.TheVintageMixer'
    assert the_vintage_mixer_0.exception_handling == 'https://www.finedininglovers.com'
    assert the_vintage_mixer_0.meta_http_equiv is False
    assert f'{type(the_vintage_mixer_0.schema).__module__}.{type(the_vintage_mixer_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert the_vintage_mixer_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.TheVintageMixer.host).__module__}.{type(module_0.TheVintageMixer.host).__qualname__}' == 'builtins.method'

def test_case_2():
    str_0 = 'https://www.finedininglovers.com'
    the_vintage_mixer_0 = module_0.TheVintageMixer(str_0)
    assert f'{type(the_vintage_mixer_0).__module__}.{type(the_vintage_mixer_0).__qualname__}' == 'recipe_scrapers.thevintagemixer.TheVintageMixer'
    assert the_vintage_mixer_0.exception_handling is True
    assert the_vintage_mixer_0.meta_http_equiv is False
    assert f'{type(the_vintage_mixer_0.schema).__module__}.{type(the_vintage_mixer_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert the_vintage_mixer_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.TheVintageMixer.host).__module__}.{type(module_0.TheVintageMixer.host).__qualname__}' == 'builtins.method'
    var_0 = the_vintage_mixer_0.ingredients()

def test_case_3():
    str_0 = 'https://www.finedininglovers.com'
    the_vintage_mixer_0 = module_0.TheVintageMixer(str_0)
    assert f'{type(the_vintage_mixer_0).__module__}.{type(the_vintage_mixer_0).__qualname__}' == 'recipe_scrapers.thevintagemixer.TheVintageMixer'
    assert the_vintage_mixer_0.exception_handling is True
    assert the_vintage_mixer_0.meta_http_equiv is False
    assert f'{type(the_vintage_mixer_0.schema).__module__}.{type(the_vintage_mixer_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert the_vintage_mixer_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.TheVintageMixer.host).__module__}.{type(module_0.TheVintageMixer.host).__qualname__}' == 'builtins.method'
    var_0 = the_vintage_mixer_0.instructions()
    assert var_0 == ''

def test_case_4():
    str_0 = 'https://www.finedininglovers.com'
    the_vintage_mixer_0 = module_0.TheVintageMixer(str_0)
    assert f'{type(the_vintage_mixer_0).__module__}.{type(the_vintage_mixer_0).__qualname__}' == 'recipe_scrapers.thevintagemixer.TheVintageMixer'
    assert the_vintage_mixer_0.exception_handling is True
    assert the_vintage_mixer_0.meta_http_equiv is False
    assert f'{type(the_vintage_mixer_0.schema).__module__}.{type(the_vintage_mixer_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert the_vintage_mixer_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.TheVintageMixer.host).__module__}.{type(module_0.TheVintageMixer.host).__qualname__}' == 'builtins.method'
    var_0 = the_vintage_mixer_0.ingredients()
    var_1 = the_vintage_mixer_0.total_time()

def test_case_5():
    str_0 = 'https://www.finedininglovers.com'
    the_vintage_mixer_0 = module_0.TheVintageMixer(str_0)
    assert f'{type(the_vintage_mixer_0).__module__}.{type(the_vintage_mixer_0).__qualname__}' == 'recipe_scrapers.thevintagemixer.TheVintageMixer'
    assert the_vintage_mixer_0.exception_handling is True
    assert the_vintage_mixer_0.meta_http_equiv is False
    assert f'{type(the_vintage_mixer_0.schema).__module__}.{type(the_vintage_mixer_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert the_vintage_mixer_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.TheVintageMixer.host).__module__}.{type(module_0.TheVintageMixer.host).__qualname__}' == 'builtins.method'
    var_0 = the_vintage_mixer_0.image()

@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b'\xb8\x1d\x0b(\x92~\x7f\xf1\x1f\xea\x16\x99\x8b\x92X'
    str_0 = 'https://www.finedininglovers.com'
    the_vintage_mixer_0 = module_0.TheVintageMixer(str_0, meta_http_equiv=bytes_0)
    assert f'{type(the_vintage_mixer_0).__module__}.{type(the_vintage_mixer_0).__qualname__}' == 'recipe_scrapers.thevintagemixer.TheVintageMixer'
    assert the_vintage_mixer_0.exception_handling is True
    assert the_vintage_mixer_0.meta_http_equiv == b'\xb8\x1d\x0b(\x92~\x7f\xf1\x1f\xea\x16\x99\x8b\x92X'
    assert f'{type(the_vintage_mixer_0.schema).__module__}.{type(the_vintage_mixer_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert the_vintage_mixer_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.TheVintageMixer.host).__module__}.{type(module_0.TheVintageMixer.host).__qualname__}' == 'builtins.method'
    var_0 = the_vintage_mixer_0.title()
    assert var_0 == ''
    var_0.image()