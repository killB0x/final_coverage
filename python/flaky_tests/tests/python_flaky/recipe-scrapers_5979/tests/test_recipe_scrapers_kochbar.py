# Automatically generated by Pynguin.
import pytest
import recipe_scrapers.kochbar as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    module_0.Kochbar(bool_0)

def test_case_1():
    str_0 = 'https://www.finedininglovers.com'
    kochbar_0 = module_0.Kochbar(str_0, meta_http_equiv=str_0)
    assert f'{type(kochbar_0).__module__}.{type(kochbar_0).__qualname__}' == 'recipe_scrapers.kochbar.Kochbar'
    assert kochbar_0.exception_handling is True
    assert kochbar_0.meta_http_equiv == 'https://www.finedininglovers.com'
    assert f'{type(kochbar_0.schema).__module__}.{type(kochbar_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert kochbar_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.Kochbar.host).__module__}.{type(module_0.Kochbar.host).__qualname__}' == 'builtins.method'
    var_0 = kochbar_0.image()
    kochbar_1 = module_0.Kochbar(str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'https://www.finedininglovers.com'
    bool_0 = True
    none_type_0 = None
    kochbar_0 = module_0.Kochbar(str_0, str_0, bool_0, none_type_0)
    assert f'{type(kochbar_0).__module__}.{type(kochbar_0).__qualname__}' == 'recipe_scrapers.kochbar.Kochbar'
    assert kochbar_0.exception_handling == 'https://www.finedininglovers.com'
    assert kochbar_0.meta_http_equiv is True
    assert f'{type(kochbar_0.schema).__module__}.{type(kochbar_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert kochbar_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.Kochbar.host).__module__}.{type(module_0.Kochbar.host).__qualname__}' == 'builtins.method'
    var_0 = kochbar_0.instructions()
    var_1 = kochbar_0.title()
    var_0.image()

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'https://www.finedininglovers.com'
    kochbar_0 = module_0.Kochbar(str_0, meta_http_equiv=str_0)
    assert f'{type(kochbar_0).__module__}.{type(kochbar_0).__qualname__}' == 'recipe_scrapers.kochbar.Kochbar'
    assert kochbar_0.exception_handling is True
    assert kochbar_0.meta_http_equiv == 'https://www.finedininglovers.com'
    assert f'{type(kochbar_0.schema).__module__}.{type(kochbar_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert kochbar_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.Kochbar.host).__module__}.{type(module_0.Kochbar.host).__qualname__}' == 'builtins.method'
    var_0 = kochbar_0.ingredients()
    var_1 = kochbar_0.yields()
    assert var_1 == 'None'
    module_0.Kochbar(var_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'https://www.finedininglovers.com'
    bool_0 = True
    none_type_0 = None
    kochbar_0 = module_0.Kochbar(str_0, str_0, bool_0, none_type_0)
    assert f'{type(kochbar_0).__module__}.{type(kochbar_0).__qualname__}' == 'recipe_scrapers.kochbar.Kochbar'
    assert kochbar_0.exception_handling == 'https://www.finedininglovers.com'
    assert kochbar_0.meta_http_equiv is True
    assert f'{type(kochbar_0.schema).__module__}.{type(kochbar_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert kochbar_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.Kochbar.host).__module__}.{type(module_0.Kochbar.host).__qualname__}' == 'builtins.method'
    var_0 = kochbar_0.total_time()
    var_1 = kochbar_0.ingredients()
    var_2 = kochbar_0.title()
    var_1.image()