# Automatically generated by Pynguin.
import pytest
import recipe_scrapers.foodrepublic as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -760
    module_0.FoodRepublic(int_0, int_0)

def test_case_1():
    str_0 = 'https://www.finedininglovers.com'
    food_republic_0 = module_0.FoodRepublic(str_0)
    assert f'{type(food_republic_0).__module__}.{type(food_republic_0).__qualname__}' == 'recipe_scrapers.foodrepublic.FoodRepublic'
    assert food_republic_0.exception_handling is True
    assert food_republic_0.meta_http_equiv is False
    assert f'{type(food_republic_0.schema).__module__}.{type(food_republic_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert food_republic_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.FoodRepublic.host).__module__}.{type(module_0.FoodRepublic.host).__qualname__}' == 'builtins.method'

def test_case_2():
    str_0 = 'https://www.finedininglovers.com'
    food_republic_0 = module_0.FoodRepublic(str_0, meta_http_equiv=str_0)
    assert f'{type(food_republic_0).__module__}.{type(food_republic_0).__qualname__}' == 'recipe_scrapers.foodrepublic.FoodRepublic'
    assert food_republic_0.exception_handling is True
    assert food_republic_0.meta_http_equiv == 'https://www.finedininglovers.com'
    assert f'{type(food_republic_0.schema).__module__}.{type(food_republic_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert food_republic_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.FoodRepublic.host).__module__}.{type(module_0.FoodRepublic.host).__qualname__}' == 'builtins.method'
    var_0 = food_republic_0.ingredients()
    var_1 = food_republic_0.instructions()

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'https://www.finedininglovers.com'
    food_republic_0 = module_0.FoodRepublic(str_0, meta_http_equiv=str_0)
    assert f'{type(food_republic_0).__module__}.{type(food_republic_0).__qualname__}' == 'recipe_scrapers.foodrepublic.FoodRepublic'
    assert food_republic_0.exception_handling is True
    assert food_republic_0.meta_http_equiv == 'https://www.finedininglovers.com'
    assert f'{type(food_republic_0.schema).__module__}.{type(food_republic_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert food_republic_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.FoodRepublic.host).__module__}.{type(module_0.FoodRepublic.host).__qualname__}' == 'builtins.method'
    var_0 = food_republic_0.total_time()
    var_1 = food_republic_0.instructions()
    var_2 = var_1.title()
    module_0.FoodRepublic(food_republic_0, test=str_0)

def test_case_4():
    str_0 = 'https://www.finedininglovers.com'
    food_republic_0 = module_0.FoodRepublic(str_0, meta_http_equiv=str_0)
    assert f'{type(food_republic_0).__module__}.{type(food_republic_0).__qualname__}' == 'recipe_scrapers.foodrepublic.FoodRepublic'
    assert food_republic_0.exception_handling is True
    assert food_republic_0.meta_http_equiv == 'https://www.finedininglovers.com'
    assert f'{type(food_republic_0.schema).__module__}.{type(food_republic_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert food_republic_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.FoodRepublic.host).__module__}.{type(module_0.FoodRepublic.host).__qualname__}' == 'builtins.method'
    var_0 = food_republic_0.ingredients()
    var_1 = food_republic_0.yields()
    assert var_1 == ''

def test_case_5():
    str_0 = 'https://www.finedininglovers.com'
    food_republic_0 = module_0.FoodRepublic(str_0, meta_http_equiv=str_0)
    assert f'{type(food_republic_0).__module__}.{type(food_republic_0).__qualname__}' == 'recipe_scrapers.foodrepublic.FoodRepublic'
    assert food_republic_0.exception_handling is True
    assert food_republic_0.meta_http_equiv == 'https://www.finedininglovers.com'
    assert f'{type(food_republic_0.schema).__module__}.{type(food_republic_0.schema).__qualname__}' == 'recipe_scrapers._schemaorg.SchemaOrg'
    assert food_republic_0.url == 'https://www.finedininglovers.com'
    assert f'{type(module_0.FoodRepublic.host).__module__}.{type(module_0.FoodRepublic.host).__qualname__}' == 'builtins.method'
    var_0 = food_republic_0.ingredients()
    var_1 = food_republic_0.title()
    assert var_1 == ''