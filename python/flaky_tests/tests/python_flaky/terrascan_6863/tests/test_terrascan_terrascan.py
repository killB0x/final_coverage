# Automatically generated by Pynguin.
import terrascan.terrascan as module_0

def test_case_0():
    rules_0 = module_0.Rules()
    assert module_0.jsonOutput == {'dateTimeStamp': '', 'terrascan-version': '', 'failures': [], 'errors': [], 'files': [], 'rules': []}
    assert module_0.Rules.rules == ['aws_emr_cluster_logging', 'aws_s3_bucket_logging', 'aws_sqs_queue_kms', 'aws_instance_public', 'aws_kinesis_firehose_delivery_stream_redshift_conf_logging', 'aws_elb_logging', 'aws_sqs_queue_kms', 'aws_security_group_rule_ingress_open', 'aws_dms_endpoint_kms', 'aws_instance_public', 'aws_dms_endpoint_kms', 'aws_dms_endpoint_kms', 'aws_redshift_cluster_public', 'aws_efs_file_system_encryption', 'aws_s3_bucket_logging', 'aws_s3_bucket_logging', 'aws_ssm_parameter_kms', 'aws_redshift_cluster_public', 'aws_cloudtrail_kms', 'aws_ebs_volume_kms', 'aws_cloudfront_distribution_logging', 'aws_db_instance_encrypted', 'aws_dms_endpoint_kms', 'aws_ebs_volume_kms', 'aws_dms_endpoint_kms', 'aws_dms_endpoint_kms', 'aws_sqs_queue_kms', 'aws_dms_endpoint_kms', 'aws_dms_endpoint_kms', 'aws_cloudfront_distribution_origin_protocol_policy', 'aws_dms_endpoint_kms', 'aws_ebs_volume_kms', 'aws_dms_endpoint_kms', 'aws_sqs_queue_kms', 'aws_s3_bucket_logging', 'aws_sqs_queue_kms', 'aws_kinesis_firehose_delivery_stream__es_config_logging', 'aws_s3_bucket_logging', 'aws_dms_endpoint_kms', 'aws_sqs_queue_kms', 'aws_instance_public', 'aws_instance_public', 'aws_dms_endpoint_kms', 'aws_dms_endpoint_kms', 'aws_instance_public', 'aws_elb_listener_port_23', 'aws_dynamodb_table_encryption', 'aws_dms_endpoint_kms', 'aws_s3_bucket_logging', 'aws_security_group_ingress_open', 'aws_s3_bucket_object_kms', 'aws_dms_endpoint_kms', 'aws_db_instance_public', 'aws_dms_endpoint_kms', 'aws_opsworks_application_encryption', 'aws_elb_logging', 'aws_db_instance_public', 'aws_elb_listener_port_80', 'aws_s3_bucket_logging', 'aws_dms_endpoint_ssl_mode', 'aws_dms_endpoint_kms', 'aws_opsworks_application_encryption', 'aws_dms_replication_instance_public', 'aws_emr_cluster_logging', 'aws_cloudtrail_kms', 'aws_codepipeline_kms', 'aws_elb_logging', 'aws_cloudtrail_logging', 'aws_kinesis_firehose_delivery_stream__es_config_logging', 'aws_s3_bucket_logging', 'aws_dms_endpoint_kms', 'aws_cloudfront_distribution_origin_protocol_policy', 'aws_db_instance_public', 'aws_alb_listener_ssl_policy', 'aws_emr_cluster_logging', 'aws_db_instance_public', 'aws_s3_bucket_object_kms', 'aws_dms_replication_instance_kms', 'aws_s3_bucket_logging', 'aws_db_instance_encrypted']

def test_case_1():
    var_0 = module_0.get_version()
    assert var_0 == '?'
    assert module_0.jsonOutput == {'dateTimeStamp': '', 'terrascan-version': '', 'failures': [], 'errors': [], 'files': [], 'rules': []}

def test_case_2():
    rules_0 = module_0.create_parser()
    assert f'{type(rules_0).__module__}.{type(rules_0).__qualname__}' == 'argparse.ArgumentParser'
    assert rules_0.description == 'A collection of security and best practice tests for static code analysis of terraform templates using terraform_validate.'
    assert rules_0.argument_default is None
    assert rules_0.prefix_chars == '-'
    assert rules_0.conflict_handler == 'error'
    assert rules_0.prog == 'pynguin'
    assert rules_0.usage is None
    assert rules_0.epilog is None
    assert rules_0.fromfile_prefix_chars is None
    assert rules_0.add_help is True
    assert rules_0.allow_abbrev is True
    assert rules_0.exit_on_error is True
    assert module_0.jsonOutput == {'dateTimeStamp': '', 'terrascan-version': '', 'failures': [], 'errors': [], 'files': [], 'rules': []}