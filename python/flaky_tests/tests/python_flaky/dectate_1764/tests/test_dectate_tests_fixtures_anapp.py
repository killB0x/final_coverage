# Automatically generated by Pynguin.
import pytest
import dectate.tests.fixtures.anapp as module_0
import inspect as module_1

def test_case_0():
    var_0 = module_0.other()

@pytest.mark.xfail(strict=True)
def test_case_1():
    an_app_0 = module_0.AnApp()
    assert module_0.AnApp.known == 'definitely not a directive'
    var_0 = module_0.other()
    other_class_0 = module_0.OtherClass()
    bool_0 = True
    foo_action_0 = module_0.FooAction(var_0)
    assert f'{type(foo_action_0).__module__}.{type(foo_action_0).__qualname__}' == 'dectate.tests.fixtures.anapp.FooAction'
    assert foo_action_0.name is None
    an_app_1 = module_0.AnApp()
    var_1 = module_0.other()
    var_2 = module_1.ismodule(bool_0)
    var_2.apply_defaults()

@pytest.mark.xfail(strict=True)
def test_case_2():
    other_class_0 = module_0.OtherClass()
    foo_action_0 = module_0.FooAction(other_class_0)
    assert f'{type(foo_action_0).__module__}.{type(foo_action_0).__qualname__}' == 'dectate.tests.fixtures.anapp.FooAction'
    assert f'{type(foo_action_0.name).__module__}.{type(foo_action_0.name).__qualname__}' == 'dectate.tests.fixtures.anapp.OtherClass'
    var_0 = foo_action_0.identifier()
    var_1 = foo_action_0.perform(other_class_0)
    foo_action_1 = module_0.FooAction(other_class_0)
    module_0.OtherClass(*other_class_0)