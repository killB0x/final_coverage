# Automatically generated by Pynguin.
import pytest
import domain2idna.converter as module_0
import builtins as module_1
import urllib.parse as module_2

def test_case_0():
    str_0 = 'b#U\t;*f:q'
    converter_0 = module_0.Converter(str_0)
    assert converter_0.encoding == 'utf-8'
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    var_0 = converter_0.get_converted()
    assert var_0 == 'b #U\t;*f:q'

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    converter_0 = module_0.Converter(bool_0)
    assert converter_0.encoding == 'utf-8'
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    converter_0.get_converted()

def test_case_2():
    list_0 = []
    none_type_0 = None
    converter_0 = module_0.Converter(none_type_0, list_0)
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    var_0 = converter_0.get_converted()
    none_type_1 = None
    converter_1 = module_0.Converter(list_0)
    assert converter_1.encoding == 'utf-8'
    converter_2 = module_0.Converter(none_type_1, none_type_1)

@pytest.mark.xfail(strict=True)
def test_case_3():
    complex_0 = (-285.22+849.251071j)
    list_0 = [complex_0]
    converter_0 = module_0.Converter(list_0, complex_0)
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    converter_0.get_converted()

@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    none_type_0 = None
    converter_0 = module_0.Converter(list_0, none_type_0)
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    var_0 = converter_0.get_converted()
    var_0.convert_to_idna(list_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'b#U\t;*f:q'
    converter_0 = module_0.Converter(str_0)
    assert converter_0.encoding == 'utf-8'
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    converter_0.convert_to_idna(str_0, str_0)

def test_case_6():
    str_0 = 'bB6PU$+;>f:rq'
    converter_0 = module_0.Converter(str_0)
    assert converter_0.encoding == 'utf-8'
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    var_0 = converter_0.get_converted()
    assert var_0 == 'bB6PU$+;>f:rq'
    dict_0 = {str_0: converter_0, converter_0: converter_0, converter_0: str_0, converter_0: str_0}
    dict_1 = {converter_0: converter_0, str_0: converter_0, converter_0: dict_0, converter_0: converter_0}
    var_1 = converter_0.get_converted()
    assert var_1 == 'bB6PU$+;>f:rq'
    converter_1 = module_0.Converter(dict_1)

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = '#Ur\tfq'
    converter_0 = module_0.Converter(str_0)
    assert converter_0.encoding == 'utf-8'
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    var_0 = converter_0.get_converted()
    assert var_0 == '#Ur\tfq'
    var_0.get_converted()

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'allhosts'
    converter_0 = module_0.Converter(str_0)
    assert converter_0.encoding == 'utf-8'
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    var_0 = converter_0.convert_to_idna(str_0)
    var_1 = converter_0.get_converted()
    assert var_1 == 'allhosts'
    converter_1 = module_0.Converter(str_0)
    assert converter_1.encoding == 'utf-8'
    dict_0 = {converter_0: converter_0, str_0: converter_0, converter_0: converter_1, converter_0: converter_0}
    converter_2 = module_0.Converter(str_0)
    assert converter_2.encoding == 'utf-8'
    converter_3 = module_0.Converter(dict_0)
    assert converter_3.encoding == 'utf-8'
    object_0 = module_1.object()
    object_1 = module_1.object()
    converter_4 = module_0.Converter(var_0)
    assert converter_4.encoding == 'utf-8'
    converter_3.get_converted()

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = '\ndomain2idna - The tool to convert a domain or a file with a list\nof domain to the famous IDNA format.\n\nThis submodule contains all helpers that are used by other submodules.\n\nAuthor:\n    Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom\n\nContributors:\n    Let\'s contribute to domains2idna!!\n\nProject link:\n    https://github.com/PyFunceble/domain2idna\n\nProject documentation:\n    http://domain2idna.readthedocs.io\n\nLicense:\n    MIT License\n\n    Copyright (c) 2018-2019 Nissar Chababy\n    Copyright (c) 2019 PyFunceble\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the "Software"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n'
    converter_0 = module_0.Converter(str_0)
    assert converter_0.encoding == 'utf-8'
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    var_0 = converter_0.get_converted()
    assert var_0 == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule contains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    var_1 = module_1.object()
    bool_0 = True
    var_2 = converter_0.get_converted()
    assert var_2 == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule contains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    converter_1 = module_0.Converter(var_2, var_0)
    assert converter_1.subject == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule contains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    assert converter_1.encoding == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule contains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    var_1.convert_to_idna(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = '\ndomain2idna - The tool to convert a domain or a file with a list\nof domain to the famous IDNA format.\n\nThis submodule cotains all helpers that are used by other submodules.\n\nAuthor:\n    Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom\n\nContributors:\n    Let\'s contribute to domains2idna!!\n\nProject link:\n    https://github.com/PyFunceble/domain2idna\n\nProject documentation:\n    http://domain2idna.readthedocs.io\n\nLicense:\n    MIT License\n\n    Copyright (c) 2018-2019 Nissar Chababy\n    Copyright (c) 2019 PyFunceble\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the "Software"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR THERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n'
    converter_0 = module_0.Converter(str_0, str_0)
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    converter_1 = module_0.Converter(str_0)
    assert converter_1.encoding == 'utf-8'
    var_0 = converter_1.get_converted()
    assert var_0 == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule cotains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR THERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    var_1 = converter_1.get_converted()
    assert var_1 == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule cotains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR THERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    converter_2 = module_0.Converter(var_0)
    assert converter_2.subject == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule cotains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR THERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    var_2 = converter_0.convert_to_idna(var_1)
    assert var_2 == '://domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule cotains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR THERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    var_3 = converter_1.convert_to_idna(var_2, var_0)
    assert var_3 == '://domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule cotains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR THERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    var_4 = converter_1.get_converted()
    assert var_4 == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule cotains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR THERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    none_type_0 = None
    var_5 = converter_2.get_converted()
    assert var_5 == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule cotains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR THERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    var_6 = converter_0.convert_to_idna(var_1)
    assert var_6 == '://domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule cotains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR THERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    converter_3 = module_0.Converter(var_5)
    assert converter_3.subject == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule cotains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/domain2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR THERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    converter_4 = module_0.Converter(none_type_0)
    module_2.urlparse(converter_4)

@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = '\ndomain2idna - The tool to convert a domain or a file with a list\nof domain to the famous IDNA format.\n\nThis submodule contains all helpers that are used by other submodules.\n\nAuthor:\n    Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom\n\nContributors:\n    Let\'s contribute to domains2idna!!\n\nProject link:\n    https://github.com/PyFunceble/doma`n2idna\n\nProject documentation:\n    http://domain2idna.readthedocs.io\n\nLicense:\n    MIT License\n\n    Copyright (c) 2018-2019 Nissar Chababy\n    Copyright (c) 2019 PyFunceble\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the "Software"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF#CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n'
    converter_0 = module_0.Converter(str_0)
    assert converter_0.encoding == 'utf-8'
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    var_0 = converter_0.convert_to_idna(str_0, converter_0)
    assert var_0 == '://domain2idna - The tool to convert a domain or a file with a listof domain to the famous IDNA format.This submodule contains all helpers that are used by other submodules.Author:    Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcomContributors:    Let\'s contribute to domains2idna!!Project link:    https://github.com/PyFunceble/doma`n2idnaProject documentation:    http://domain2idna.readthedocs.ioLicense:    MIT License    Copyright (c) 2018-2019 Nissar Chababy    Copyright (c) 2019 PyFunceble    Permission is hereby granted, free of charge, to any person obtaining a copy    of this software and associated documentation files (the "Software"), to deal    in the Software without restriction, including without limitation the rights    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell    copies of the Software, and to permit persons to whom the Software is    furnished to do so, subject to the following conditions:    The above copyright notice and this permission notice shall be included in all    copies or substantial portions of the Software.    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER    LIABILITY, WHETHER IN AN ACTION OF#CONTRACT, TORT OR OTHERWISE, ARISING FROM,    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE    SOFTWARE.'
    var_1 = converter_0.get_converted()
    assert var_1 == 'domain2idna - The tool to convert a domain or a file with a list of domain to the famous IDNA format. This submodule contains all helpers that are used by other submodules. Author: Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom Contributors: Let\'s contribute to domains2idna!! Project link: https://github.com/PyFunceble/doma`n2idna Project documentation: http://domain2idna.readthedocs.io License: MIT License Copyright (c) 2018-2019 Nissar Chababy Copyright (c) 2019 PyFunceble Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF#CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'
    str_0.get_converted()

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = '\ndomain2idna - The tool to convert a domain or a file with a list\nof domain to the famous IDNA format.\n\nThis submodule contains all helpers that are used by other submodules.\n\nAuthor:\n    Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcom\n\nContributors:\n    Let\'s contribute to domains2idna!!\n\nProject link:\n    https://github.com/PyFunceble/doma`n2idna\n\nProject documentation:\n    http://domain2idna.readthedocs.io\n\nLicense:\n    MIT License\n\n    Copyright (c) 2018-2019 Nissar Chababy\n    Copyright (c) 2019 PyFunceble\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the "Software"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF#CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n'
    converter_0 = module_0.Converter(str_0)
    assert converter_0.encoding == 'utf-8'
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    var_0 = converter_0.convert_to_idna(str_0, converter_0)
    assert var_0 == '://domain2idna - The tool to convert a domain or a file with a listof domain to the famous IDNA format.This submodule contains all helpers that are used by other submodules.Author:    Nissar Chababy, @funilrys, contactTATAfunilrysTODTODcomContributors:    Let\'s contribute to domains2idna!!Project link:    https://github.com/PyFunceble/doma`n2idnaProject documentation:    http://domain2idna.readthedocs.ioLicense:    MIT License    Copyright (c) 2018-2019 Nissar Chababy    Copyright (c) 2019 PyFunceble    Permission is hereby granted, free of charge, to any person obtaining a copy    of this software and associated documentation files (the "Software"), to deal    in the Software without restriction, including without limitation the rights    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell    copies of the Software, and to permit persons to whom the Software is    furnished to do so, subject to the following conditions:    The above copyright notice and this permission notice shall be included in all    copies or substantial portions of the Software.    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER    LIABILITY, WHETHER IN AN ACTION OF#CONTRACT, TORT OR OTHERWISE, ARISING FROM,    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE    SOFTWARE.'
    str_0.get_converted()

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = '\n'
    converter_0 = module_0.Converter(str_0, str_0)
    assert module_0.Converter.to_ignore == ['0.0.0.0', 'localhost', '127.0.0.1', 'localdomain', 'local', 'broadcasthost', 'allhosts', 'allnodes', 'allrouters', 'localnet', 'loopback', 'mcastprefix']
    converter_1 = module_0.Converter(str_0)
    assert converter_1.encoding == 'utf-8'
    var_0 = converter_1.get_converted()
    assert var_0 == '\n'
    var_1 = converter_0.get_converted()
    assert var_1 == '\n'
    converter_2 = module_0.Converter(var_0)
    assert converter_2.subject == '\n'
    assert converter_2.encoding == 'utf-8'
    var_2 = converter_0.convert_to_idna(var_1)
    assert var_2 == '\n'
    list_0 = []
    var_3 = module_2.urlparse(list_0, list_0, var_0)
    var_4 = converter_1.get_converted()
    assert var_4 == '\n'
    var_5 = converter_2.get_converted()
    assert var_5 == '\n'
    var_2.convert_to_idna(str_0)