# Automatically generated by Pynguin.
import pytest
import enpyronments.utils as module_0

def test_case_0():
    bytes_0 = b'LE/\xda\x1f'
    bool_0 = True
    sensitive_0 = module_0.Sensitive(bytes_0, bool_0)
    assert f'{type(sensitive_0).__module__}.{type(sensitive_0).__qualname__}' == 'enpyronments.utils.Sensitive'
    assert sensitive_0.obj == b'LE/\xda\x1f'
    assert sensitive_0.stars is True
    none_type_0 = None
    bool_1 = False
    with pytest.raises(AttributeError):
        module_0.Sensitive(none_type_0, bool_1)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'\x9fd)x\xb1\x9c\xab\xdd\x18w2\x13\xb5\xb6\xccH\x947\xc1M'
    sensitive_0 = module_0.Sensitive(bytes_0)
    assert f'{type(sensitive_0).__module__}.{type(sensitive_0).__qualname__}' == 'enpyronments.utils.Sensitive'
    assert sensitive_0.obj == b'\x9fd)x\xb1\x9c\xab\xdd\x18w2\x13\xb5\xb6\xccH\x947\xc1M'
    assert sensitive_0.stars == 10
    var_0 = sensitive_0.mask()
    assert var_0 == '**********'
    var_1 = sensitive_0.__str__()
    var_1.__exit__()

def test_case_2():
    int_0 = -5105
    use_path_0 = module_0.UsePath(int_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -572.0
    use_path_0 = module_0.UsePath(float_0)
    var_0 = use_path_0.__enter__()
    var_0.mask()

@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1
    use_path_0 = module_0.UsePath(int_0)
    var_0 = use_path_0.__exit__()
    var_0.mask()

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    sensitive_0 = module_0.Sensitive(bool_0)
    assert f'{type(sensitive_0).__module__}.{type(sensitive_0).__qualname__}' == 'enpyronments.utils.Sensitive'
    assert sensitive_0.obj is False
    assert sensitive_0.stars == 10
    var_0 = sensitive_0.__repr__()
    assert var_0 == 'Sensitive (False)'
    var_0.__exit__()