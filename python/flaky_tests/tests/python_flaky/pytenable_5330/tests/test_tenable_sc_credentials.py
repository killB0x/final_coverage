# Automatically generated by Pynguin.
import pytest
import tenable.sc.credentials as module_0
import tenable.base as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    dict_0 = {}
    credential_a_p_i_0 = module_0.CredentialAPI(dict_0)
    credential_a_p_i_0.edit(credential_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    credential_a_p_i_0.create(none_type_0, credential_a_p_i_0, credential_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b'\x90m\x04!\xd7\n\n\xb6\xe0g?\x11KAP\xabK\x1c\xb2'
    credential_a_p_i_0 = module_0.CredentialAPI(bytes_0)
    int_0 = 839
    tuple_0 = (int_0,)
    set_0 = {tuple_0, tuple_0, int_0}
    str_0 = '-\\</6xY39zGYje93,v'
    credential_a_p_i_1 = module_0.CredentialAPI(str_0)
    credential_a_p_i_1.details(set_0, tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    bool_1 = False
    credential_a_p_i_0 = module_0.CredentialAPI(bool_1)
    credential_a_p_i_0.details(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 64
    credential_a_p_i_0 = module_0.CredentialAPI(int_0)
    bool_0 = False
    credential_a_p_i_1 = module_0.CredentialAPI(bool_0)
    credential_a_p_i_1.list()

def test_case_5():
    int_0 = 32
    credential_a_p_i_0 = module_0.CredentialAPI(int_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"Yx\xf3'\xbe@xw\x1d"
    bool_0 = False
    credential_a_p_i_0 = module_0.CredentialAPI(bool_0)
    credential_a_p_i_0.delete(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    complex_0 = (1168.7209-195.43408j)
    a_p_i_endpoint_0 = module_1.APIEndpoint(complex_0)
    a_p_i_endpoint_1 = module_1.APIEndpoint(complex_0)
    dict_0 = {a_p_i_endpoint_0: a_p_i_endpoint_1, a_p_i_endpoint_0: a_p_i_endpoint_1}
    credential_a_p_i_0 = module_0.CredentialAPI(dict_0)
    credential_a_p_i_0.tags()

@pytest.mark.xfail(strict=True)
def test_case_8():
    list_0 = []
    credential_a_p_i_0 = module_0.CredentialAPI(list_0)
    credential_a_p_i_0.share(list_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    none_type_0 = None
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    credential_a_p_i_0.create(none_type_0, none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    none_type_0 = None
    str_0 = 'm^4d8YD0"`ta%R!teF^'
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    credential_a_p_i_0.list(str_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    none_type_0 = None
    none_type_1 = None
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_1)
    str_0 = 'cr>'
    credential_a_p_i_0.details(none_type_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    str_0 = 'beyondtrust'
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    credential_a_p_i_0.create(none_type_0, none_type_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = 'thycotic'
    credential_a_p_i_0 = module_0.CredentialAPI(str_0)
    credential_a_p_i_0.create(credential_a_p_i_0, credential_a_p_i_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    none_type_0 = None
    str_0 = 'thycotic'
    credential_a_p_i_0 = module_0.CredentialAPI(str_0)
    credential_a_p_i_0.create(none_type_0, none_type_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    none_type_0 = None
    str_0 = 'kerberos'
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    credential_a_p_i_0.create(str_0, credential_a_p_i_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    none_type_0 = None
    str_0 = 'ssh'
    credential_a_p_i_0 = module_0.CredentialAPI(str_0)
    credential_a_p_i_0.create(none_type_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    str_0 = 'lieberman'
    credential_a_p_i_0 = module_0.CredentialAPI(str_0)
    credential_a_p_i_0.create(credential_a_p_i_0, credential_a_p_i_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_18():
    none_type_0 = None
    str_0 = 'lieberman'
    dict_0 = {str_0: none_type_0, str_0: str_0, str_0: none_type_0, str_0: str_0}
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    credential_a_p_i_0.create(none_type_0, none_type_0, str_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    none_type_0 = None
    str_0 = 'fDs'
    credential_a_p_i_0 = module_0.CredentialAPI(str_0)
    str_1 = 'lieberman'
    str_2 = 'can_agent_scan'
    str_3 = 'public_key'
    str_4 = '2,>0R7h(}\t_G7j'
    dict_0 = {str_1: str_0, str_2: none_type_0, str_3: none_type_0, str_4: str_2}
    credential_a_p_i_0.edit(credential_a_p_i_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    none_type_0 = None
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    str_0 = 'cyberark'
    credential_a_p_i_0.create(none_type_0, none_type_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_21():
    none_type_0 = None
    str_0 = 'escalation_password'
    dict_0 = {str_0: str_0, str_0: none_type_0, str_0: none_type_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: none_type_0, str_0: str_0, str_0: str_0, str_0: str_0}
    credential_a_p_i_0 = module_0.CredentialAPI(str_0)
    credential_a_p_i_0.create(none_type_0, none_type_0, none_type_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_22():
    none_type_0 = None
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    str_0 = 'kerberos'
    credential_a_p_i_0.create(str_0, none_type_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_23():
    none_type_0 = None
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    str_0 = 'thycotic_domain'
    dict_0 = {str_0: none_type_0}
    credential_a_p_i_0.create(none_type_0, none_type_0, none_type_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_24():
    none_type_0 = None
    str_0 = 'beyondtrust'
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    str_1 = 'login'
    dict_0 = {str_1: none_type_0}
    credential_a_p_i_0.edit(str_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_25():
    none_type_0 = None
    credential_a_p_i_0 = module_0.CredentialAPI(none_type_0)
    str_0 = 'Sm'
    str_1 = '8Rkx5 +&4j'
    str_2 = "DVjgOt?h'q"
    str_3 = 'beyondtrust_api_key'
    dict_0 = {str_1: none_type_0, str_2: none_type_0, str_3: none_type_0}
    credential_a_p_i_0.edit(str_0, **dict_0)