# Automatically generated by Pynguin.
import pytest
import tenable.io.filters as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    filters_a_p_i_0 = module_0.FiltersAPI(bool_0)
    filters_a_p_i_0.credentials_filters()

def test_case_1():
    str_0 = '?$4v]B686Bo]^'
    filters_a_p_i_0 = module_0.FiltersAPI(str_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = '?$4v]B686Bo]^'
    filters_a_p_i_0 = module_0.FiltersAPI(str_0)
    filters_a_p_i_0.access_group_asset_rules_filters()

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    filters_a_p_i_0 = module_0.FiltersAPI(bool_0)
    filters_a_p_i_0.access_group_filters()

@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 2.5
    filters_a_p_i_0 = module_0.FiltersAPI(float_0)
    filters_a_p_i_0.agents_filters()

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    filters_a_p_i_0 = module_0.FiltersAPI(bool_0)
    filters_a_p_i_0.workbench_vuln_filters()

@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    filters_a_p_i_0 = module_0.FiltersAPI(bool_0)
    filters_a_p_i_0.workbench_asset_filters(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    filters_a_p_i_0 = module_0.FiltersAPI(bool_0)
    filters_a_p_i_0.scan_filters()

def test_case_8():
    bool_0 = False
    filters_a_p_i_0 = module_0.FiltersAPI(bool_0)
    var_0 = filters_a_p_i_0.networks_filters()