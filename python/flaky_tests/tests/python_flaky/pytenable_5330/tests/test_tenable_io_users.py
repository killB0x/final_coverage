# Automatically generated by Pynguin.
import pytest
import tenable.io.users as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    users_a_p_i_0 = module_0.UsersAPI(bool_0)
    users_a_p_i_0.edit(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'\x0bn\x1aa\xb0'
    users_a_p_i_0 = module_0.UsersAPI(bytes_0)
    users_a_p_i_0.edit(bytes_0, bytes_0, bytes_0, enabled=bytes_0)

def test_case_2():
    bool_0 = False
    users_a_p_i_0 = module_0.UsersAPI(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    bool_1 = False
    users_a_p_i_0 = module_0.UsersAPI(bool_1)
    users_a_p_i_0.delete(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = -1716.91
    users_a_p_i_0 = module_0.UsersAPI(float_0)
    users_a_p_i_0.enabled(float_0, float_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    users_a_p_i_0 = module_0.UsersAPI(none_type_0)
    users_a_p_i_0.enable_two_factor(users_a_p_i_0, users_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    list_0 = [none_type_0, none_type_0, none_type_0, none_type_0]
    users_a_p_i_0 = module_0.UsersAPI(list_0)
    users_a_p_i_0.verify_two_factor(none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    none_type_0 = None
    users_a_p_i_0 = module_0.UsersAPI(none_type_0)
    users_a_p_i_0.impersonate(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'H3%\t8R-/[3'
    none_type_0 = None
    str_1 = 'M'
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    users_a_p_i_0 = module_0.UsersAPI(dict_0)
    users_a_p_i_0.list()

@pytest.mark.xfail(strict=True)
def test_case_9():
    int_0 = -151
    users_a_p_i_0 = module_0.UsersAPI(int_0)
    users_a_p_i_0.change_password(users_a_p_i_0, int_0, users_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    none_type_0 = None
    users_a_p_i_0 = module_0.UsersAPI(none_type_0)
    users_a_p_i_0.gen_api_keys(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    bool_0 = False
    users_a_p_i_0 = module_0.UsersAPI(bool_0)
    users_a_p_i_0.edit(users_a_p_i_0, name=users_a_p_i_0, email=bool_0, enabled=bool_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    bool_0 = False
    users_a_p_i_0 = module_0.UsersAPI(bool_0)
    users_a_p_i_0.edit(bool_0, name=users_a_p_i_0, email=users_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    bool_0 = False
    users_a_p_i_0 = module_0.UsersAPI(bool_0)
    users_a_p_i_0.two_factor(users_a_p_i_0, bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    bool_0 = False
    users_a_p_i_0 = module_0.UsersAPI(bool_0)
    users_a_p_i_0.two_factor(bool_0, bool_0, bool_0, users_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    none_type_0 = None
    bool_0 = True
    users_a_p_i_0 = module_0.UsersAPI(none_type_0)
    users_a_p_i_0.create(none_type_0, none_type_0, bool_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    none_type_0 = None
    users_a_p_i_0 = module_0.UsersAPI(none_type_0)
    users_a_p_i_0.create(none_type_0, none_type_0, none_type_0, email=users_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    none_type_0 = None
    users_a_p_i_0 = module_0.UsersAPI(none_type_0)
    none_type_1 = None
    users_a_p_i_0.create(none_type_1, none_type_0, none_type_1, users_a_p_i_0)