# Automatically generated by Pynguin.
import pytest
import tenable.io.exports as module_0
import tenable.io.base as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '=f\n&OMr1^A*flJ#KL?P'
    exports_iterator_0 = module_0.ExportsIterator(str_0)
    assert exports_iterator_0.type is None
    assert exports_iterator_0.uuid is None
    assert exports_iterator_0.chunk_id is None
    assert exports_iterator_0.timeout is None
    assert exports_iterator_0.chunks == []
    assert exports_iterator_0.processed == []
    exports_iterator_0.next()

@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    exports_a_p_i_0 = module_0.ExportsAPI(none_type_0)
    exports_a_p_i_0.vulns()

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'Q{A<L!L\t76'
    exports_a_p_i_0 = module_0.ExportsAPI(str_0)
    exports_a_p_i_0.assets()

def test_case_3():
    str_0 = '=f\n&OMr1^A*flJ#KL?P'
    exports_iterator_0 = module_0.ExportsIterator(str_0)
    assert exports_iterator_0.type is None
    assert exports_iterator_0.uuid is None
    assert exports_iterator_0.chunk_id is None
    assert exports_iterator_0.timeout is None
    assert exports_iterator_0.chunks == []
    assert exports_iterator_0.processed == []

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    t_i_o_endpoint_0 = module_1.TIOEndpoint(none_type_0)
    exports_iterator_0 = module_0.ExportsIterator(t_i_o_endpoint_0)
    assert exports_iterator_0.type is None
    assert exports_iterator_0.uuid is None
    assert exports_iterator_0.chunk_id is None
    assert exports_iterator_0.timeout is None
    assert exports_iterator_0.chunks == []
    assert exports_iterator_0.processed == []
    exports_iterator_0.cancel()

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    exports_a_p_i_0 = module_0.ExportsAPI(none_type_0)
    str_0 = 'vpr'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    exports_a_p_i_0.vulns(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    str_0 = 'vpr'
    exports_a_p_i_0 = module_0.ExportsAPI(none_type_0)
    dict_0 = {str_0: str_0, str_0: str_0, str_0: none_type_0, str_0: none_type_0}
    exports_a_p_i_0.vulns(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    none_type_0 = None
    str_0 = 'vpr'
    exports_a_p_i_0 = module_0.ExportsAPI(none_type_0)
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: str_0, str_0: str_0, str_0: none_type_0, str_0: none_type_0}
    str_1 = '\n        Retrieves the image report by the image digest.\n\n        Args:\n            digest (str): The image digest.\n\n        Returns:\n            dict: The report resource record.\n        '
    dict_1 = {str_0: dict_0, str_1: exports_a_p_i_0}
    exports_a_p_i_0.vulns(**dict_1)

@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    exports_a_p_i_0 = module_0.ExportsAPI(none_type_0)
    str_0 = 'has_plugin_results'
    dict_0 = {str_0: str_0}
    exports_a_p_i_0.assets(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'last_fixed'
    exports_a_p_i_0 = module_0.ExportsAPI(str_0)
    dict_0 = {str_0: exports_a_p_i_0, str_0: str_0, str_0: exports_a_p_i_0, str_0: str_0}
    exports_a_p_i_0.vulns(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    none_type_0 = None
    str_0 = 'sources'
    exports_a_p_i_0 = module_0.ExportsAPI(str_0)
    dict_0 = {str_0: none_type_0}
    exports_a_p_i_0.assets(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    none_type_0 = None
    str_0 = '_ags'
    exports_a_p_i_0 = module_0.ExportsAPI(none_type_0)
    str_1 = 'chunk_size'
    dict_0 = {str_0: none_type_0, str_0: none_type_0, str_0: none_type_0, str_1: none_type_0}
    exports_a_p_i_0.assets(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    str_0 = 'tags'
    exports_a_p_i_0 = module_0.ExportsAPI(none_type_0)
    dict_0 = {str_0: none_type_0}
    exports_a_p_i_0.vulns(**dict_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    none_type_0 = None
    str_0 = 'tags'
    exports_a_p_i_0 = module_0.ExportsAPI(none_type_0)
    dict_0 = {str_0: exports_a_p_i_0, str_0: none_type_0, str_0: none_type_0}
    exports_a_p_i_0.assets(**dict_0)