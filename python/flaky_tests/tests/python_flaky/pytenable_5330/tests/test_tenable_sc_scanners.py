# Automatically generated by Pynguin.
import pytest
import tenable.sc.scanners as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '"X:Z0w=+3rY8'
    scanner_a_p_i_0 = module_0.ScannerAPI(str_0)
    scanner_a_p_i_0.create(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    scanner_a_p_i_0 = module_0.ScannerAPI(bool_0)
    str_0 = 'pe.intion'
    tuple_0 = ()
    dict_0 = {str_0: bool_0, str_0: bool_0, str_0: bool_0, str_0: bool_0}
    scanner_a_p_i_0.edit(tuple_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    scanner_a_p_i_0 = module_0.ScannerAPI(none_type_0)
    str_0 = 'can_scan'
    str_1 = '-s)@j\\'
    dict_0 = {str_0: none_type_0, str_0: str_0, str_1: none_type_0}
    str_2 = 'editor/{id}/families/{fam}'
    scanner_a_p_i_0.details(dict_0, str_2)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    complex_0 = (-2339-600.005999j)
    scanner_a_p_i_0 = module_0.ScannerAPI(complex_0)
    scanner_a_p_i_0.details(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -1002
    scanner_a_p_i_0 = module_0.ScannerAPI(int_0)
    scanner_a_p_i_0.list()

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    none_type_0 = None
    none_type_1 = None
    scanner_a_p_i_0 = module_0.ScannerAPI(none_type_1)
    scanner_a_p_i_0.agent_scans(bool_0, none_type_0)

def test_case_6():
    none_type_0 = None
    scanner_a_p_i_0 = module_0.ScannerAPI(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = ',Yc0=[}.4nnJ'
    dict_0 = {str_0: str_0}
    none_type_0 = None
    scanner_a_p_i_0 = module_0.ScannerAPI(dict_0)
    scanner_a_p_i_0.delete(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = '9FJH?GWD.TvHZ`>"xaL'
    scanner_a_p_i_0 = module_0.ScannerAPI(str_0)
    scanner_a_p_i_0.update_status()

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'listdata'
    scanner_a_p_i_0 = module_0.ScannerAPI(str_0)
    scanner_a_p_i_0.list(str_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    none_type_0 = None
    bool_0 = True
    bytes_0 = b'!\x0b\x1f\x9f$\xe9~\x97x\x93\xe2PHr#\xa2W\x19(\x00'
    list_0 = [bool_0, bytes_0, bool_0, none_type_0]
    scanner_a_p_i_0 = module_0.ScannerAPI(none_type_0)
    scanner_a_p_i_0.agent_scans(bool_0, none_type_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    none_type_0 = None
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, none_type_0]
    scanner_a_p_i_0 = module_0.ScannerAPI(none_type_0)
    scanner_a_p_i_0.agent_scans(bool_0, none_type_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    str_0 = 'ugndescription'
    str_1 = 'oups'
    str_2 = 'username'
    dict_0 = {str_1: none_type_0, str_1: str_2, str_0: none_type_0, str_2: str_2, str_2: str_1}
    scanner_a_p_i_0 = module_0.ScannerAPI(none_type_0)
    scanner_a_p_i_0.create(none_type_0, str_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    none_type_0 = None
    str_0 = "_\x0c%:!gc'u4(e"
    str_1 = 'password'
    str_2 = 'zone:id'
    dict_0 = {str_1: none_type_0, str_1: str_2, str_0: none_type_0, str_2: str_2, str_2: str_1}
    scanner_a_p_i_0 = module_0.ScannerAPI(none_type_0)
    scanner_a_p_i_0.create(none_type_0, str_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    none_type_0 = None
    str_0 = 'description'
    str_1 = 'oups'
    scanner_a_p_i_0 = module_0.ScannerAPI(str_1)
    str_2 = 'zoF4neid'
    dict_0 = {str_1: none_type_0, str_1: str_2, str_0: none_type_0, str_2: str_2, str_2: str_1}
    scanner_a_p_i_1 = module_0.ScannerAPI(none_type_0)
    scanner_a_p_i_1.create(none_type_0, str_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    none_type_0 = None
    str_0 = 'Zdesc5ription'
    str_1 = 'cert'
    bytes_0 = b'\x0e\xa4{\xf2\xfcH\xca\xebA'
    dict_0 = {str_0: str_0, str_0: str_0, str_1: bytes_0}
    scanner_a_p_i_0 = module_0.ScannerAPI(str_0)
    scanner_a_p_i_0.edit(none_type_0, **dict_0)