# Automatically generated by Pynguin.
import pytest
import tenable.io.assets as module_0
import tenable.io.base as module_1

def test_case_0():
    none_type_0 = None
    assets_a_p_i_0 = module_0.AssetsAPI(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = '{V{\tN/q@'
    assets_a_p_i_0 = module_0.AssetsAPI(str_0)
    assets_a_p_i_0.list()

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    assets_a_p_i_0 = module_0.AssetsAPI(none_type_0)
    assets_a_p_i_0.delete(assets_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    assets_a_p_i_0 = module_0.AssetsAPI(none_type_0)
    bool_0 = False
    t_i_o_endpoint_0 = module_1.TIOEndpoint(bool_0)
    str_0 = '&EN^\x0bp'
    tuple_0 = (str_0, bool_0, t_i_o_endpoint_0)
    tuple_1 = (t_i_o_endpoint_0, tuple_0, t_i_o_endpoint_0, t_i_o_endpoint_0)
    list_0 = []
    assets_a_p_i_1 = module_0.AssetsAPI(list_0)
    assets_a_p_i_1.details(tuple_1)

@pytest.mark.xfail(strict=True)
def test_case_4():
    tuple_0 = ()
    assets_a_p_i_0 = module_0.AssetsAPI(tuple_0)
    assets_a_p_i_0.assign_tags(tuple_0, tuple_0, tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'Vu+gX'
    list_0 = [str_0]
    t_i_o_endpoint_0 = module_1.TIOEndpoint(list_0)
    tuple_0 = (t_i_o_endpoint_0, t_i_o_endpoint_0)
    dict_0 = {}
    assets_a_p_i_0 = module_0.AssetsAPI(dict_0)
    assets_a_p_i_0.tags(tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    t_i_o_endpoint_0 = module_1.TIOEndpoint(bool_0)
    int_0 = -603
    int_1 = -1837
    assets_a_p_i_0 = module_0.AssetsAPI(int_1)
    assets_a_p_i_0.asset_import(int_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b'\t\xf9\xc3\xb1\xdd'
    assets_a_p_i_0 = module_0.AssetsAPI(bytes_0)
    assets_a_p_i_0.list_import_jobs()

@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = -213
    assets_a_p_i_0 = module_0.AssetsAPI(int_0)
    assets_a_p_i_0.import_job_details(int_0)