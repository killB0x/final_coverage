# Automatically generated by Pynguin.
import pytest
import tenable.sc.users as module_0
import tenable.sc.base as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    user_a_p_i_0.create(none_type_0, none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'responsbe'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    user_a_p_i_0 = module_0.UserAPI(dict_0)
    user_a_p_i_0.edit(dict_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'QV\nN]t'
    none_type_0 = None
    dict_0 = {str_0: none_type_0, str_0: none_type_0}
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    user_a_p_i_0.details(none_type_0, dict_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    user_a_p_i_0 = module_0.UserAPI(bool_0)
    user_a_p_i_0.details(bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'\xc4\xa9\xb4\x01\x90\xa7\xcb\xd7/\xf1\x18\xf4\\\xcc:B\x88\xb1\xec'
    tuple_0 = (bytes_0,)
    user_a_p_i_0 = module_0.UserAPI(tuple_0)
    user_a_p_i_0.list(user_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'privilege_escalation'
    s_c_endpoint_0 = module_1.SCEndpoint(str_0)
    user_a_p_i_0 = module_0.UserAPI(s_c_endpoint_0)
    user_a_p_i_0.list()

@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b'\xa1\x9e\x92Yl$m'
    none_type_0 = None
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    user_a_p_i_0.list(bytes_0)

def test_case_7():
    int_0 = 2759
    user_a_p_i_0 = module_0.UserAPI(int_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = False
    tuple_0 = (bool_0,)
    bytes_0 = b'\xa4'
    user_a_p_i_0 = module_0.UserAPI(bytes_0)
    user_a_p_i_0.delete(tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    none_type_0 = None
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    str_0 = 'cVh^AGZc71Y[>'
    user_a_p_i_0.list(str_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    none_type_0 = None
    none_type_1 = None
    user_a_p_i_0 = module_0.UserAPI(none_type_1)
    str_0 = 'json'
    str_1 = 'group'
    dict_0 = {str_0: str_0, str_0: none_type_0, str_1: str_1, str_0: user_a_p_i_0, str_1: user_a_p_i_0, str_1: none_type_0, str_1: user_a_p_i_0}
    bool_0 = False
    user_a_p_i_0.create(str_1, none_type_0, bool_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    none_type_0 = None
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    str_0 = 'managed_userobjs'
    dict_0 = {str_0: str_0, str_0: none_type_0, str_0: str_0, str_0: user_a_p_i_0, str_0: user_a_p_i_0, str_0: none_type_0, str_0: user_a_p_i_0}
    bool_0 = False
    user_a_p_i_0.create(str_0, none_type_0, bool_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    str_0 = 'update_password'
    str_1 = 'linked'
    dict_0 = {str_0: none_type_0, str_1: none_type_0}
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    user_a_p_i_0.edit(none_type_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    none_type_0 = None
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    str_0 = 'ldap_id'
    dict_0 = {str_0: user_a_p_i_0, str_0: str_0, str_0: str_0, str_0: none_type_0}
    user_a_p_i_0.create(none_type_0, str_0, none_type_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    none_type_0 = None
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    str_0 = 'org'
    dict_0 = {str_0: user_a_p_i_0, str_0: none_type_0, str_0: none_type_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: none_type_0, str_0: none_type_0}
    user_a_p_i_0.create(str_0, dict_0, none_type_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    none_type_0 = None
    str_0 = 'ioked'
    none_type_1 = None
    user_a_p_i_0 = module_0.UserAPI(none_type_1)
    str_1 = "5%'g~q//"
    str_2 = 'WKwG9j'
    str_3 = 'default_reports'
    dict_0 = {str_1: none_type_0, str_1: none_type_1, str_2: none_type_1, str_3: none_type_1}
    user_a_p_i_0.create(none_type_0, str_0, none_type_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    none_type_0 = None
    str_0 = 'responsbe'
    str_1 = 'email_notice'
    str_2 = 'nameContains'
    dict_0 = {str_0: str_0, str_1: str_1, str_2: str_1, str_0: none_type_0, str_2: str_0}
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    a_p_i_endpoint_0 = module_0.UserAPI(str_2)
    user_a_p_i_0.create(str_2, dict_0, none_type_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    none_type_0 = None
    str_0 = 'responsibility'
    user_a_p_i_0 = module_0.UserAPI(str_0)
    str_1 = 'trend'
    str_2 = 'default_9reports'
    dict_0 = {str_1: none_type_0, str_1: none_type_0, str_0: none_type_0, str_2: none_type_0}
    user_a_p_i_0.create(none_type_0, str_0, none_type_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_18():
    none_type_0 = None
    str_0 = '0Cn'
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    str_1 = 'default_reportcards'
    str_2 = 'default_9rse2ports'
    dict_0 = {str_1: none_type_0, str_1: none_type_0, str_0: none_type_0, str_2: none_type_0}
    user_a_p_i_0.create(none_type_0, str_0, none_type_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    none_type_0 = None
    str_0 = "+z'"
    user_a_p_i_0 = module_0.UserAPI(none_type_0)
    str_1 = 'is_locked'
    str_2 = 'default_9rseports'
    dict_0 = {str_1: none_type_0, str_1: none_type_0, str_0: none_type_0, str_2: none_type_0}
    user_a_p_i_0.create(none_type_0, str_0, none_type_0, **dict_0)