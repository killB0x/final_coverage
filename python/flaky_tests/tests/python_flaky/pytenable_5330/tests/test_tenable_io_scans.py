# Automatically generated by Pynguin.
import pytest
import tenable.io.scans as module_0
import tenable.utils as module_1
import tenable.errors as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 400
    scans_a_p_i_0 = module_0.ScansAPI(int_0)
    scans_a_p_i_0.create()

@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    scans_a_p_i_0 = module_0.ScansAPI(none_type_0)
    scans_a_p_i_0.copy(scans_a_p_i_0, name=none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    var_0 = scans_a_p_i_0.history(bool_0, pages=bool_0)
    scans_a_p_i_0.create()

@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 400
    scans_a_p_i_0 = module_0.ScansAPI(int_0)
    scans_a_p_i_0.host_details(scans_a_p_i_0, scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = -1512
    scans_a_p_i_0 = module_0.ScansAPI(int_0)
    scans_a_p_i_0.import_scan(scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = '_Ji\x0cF0'
    scans_a_p_i_0 = module_0.ScansAPI(str_0)
    scans_a_p_i_0.launch(scans_a_p_i_0)

def test_case_6():
    none_type_0 = None
    scans_a_p_i_0 = module_0.ScansAPI(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    str_0 = '0=8DEG:Z"q^Nu ZR'
    str_1 = '/6:r'
    dict_0 = {str_0: str_0, str_1: scans_a_p_i_0}
    scans_a_p_i_0.configure(bool_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    set_0 = set()
    bool_0 = True
    scans_a_p_i_0 = module_0.ScansAPI(set_0)
    none_type_0 = None
    str_0 = '\n        Shares the specified asset list to another user group.\n\n        :sc-api:`asset-lists: share <Asset.html#AssetRESTReference-/asset/{id}/share>`\n\n        Args:\n            id (int): The numeric id for the credential.\n            *groups (int): The numeric id of the group(s) to share to.\n\n        Returns:\n            :obj:`dict`:\n                The updated asset-list resource.\n\n        Examples:\n            >>> sc.asset_lists.share(1, group_1, group_2)\n        '
    dict_0 = {str_0: set_0}
    scan_history_iterator_0 = module_0.ScanHistoryIterator(none_type_0, **dict_0)
    var_0 = module_1.dict_merge(bool_0, set_0)
    scans_a_p_i_0.delete_history(str_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    int_0 = 400
    scans_a_p_i_0 = module_0.ScansAPI(int_0)
    scans_a_p_i_0.copy(int_0, name=scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    bool_0 = True
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    scans_a_p_i_0.results(scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    bool_0 = True
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    scans_a_p_i_0.schedule(bool_0, scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    scans_a_p_i_0 = module_0.ScansAPI(none_type_0)
    scans_a_p_i_0.plugin_output(scans_a_p_i_0, none_type_0, scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    bool_0 = False
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    scan_history_iterator_0 = scans_a_p_i_0.history(scans_a_p_i_0, offset=scans_a_p_i_0)
    scans_a_p_i_0.set_read_status(scan_history_iterator_0, scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    dict_0 = {}
    var_0 = module_1.dict_merge(dict_0, dict_0)
    str_0 = '\n        Removes a scanner from a scanner group.\n\n        :devportal:`scanner-groups: delete-scanner <scanner-groups-delete-scanner>`\n\n        Args:\n            group_id (int):\n                The unique identifier of the scanner group.\n            scanner_id (int):\n                The unique identifier of the scanner to remove from the\n                requested scanner group.\n\n        Returns:\n            :obj:`None`:\n                The scanner was successfully removed from the scanner group.\n\n        Examples:\n            >>> tio.scanner_groups.delete_scanner(1, 1)\n        '
    scans_a_p_i_0 = module_0.ScansAPI(str_0)
    scans_a_p_i_0.info(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    bool_0 = True
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    scan_history_iterator_0 = module_0.ScanHistoryIterator(bool_0)
    scans_a_p_i_0.resume(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    bool_0 = True
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    scan_history_iterator_0 = module_0.ScanHistoryIterator(bool_0)
    var_0 = scans_a_p_i_0.history(scans_a_p_i_0, scans_a_p_i_0)
    var_0.configure(bool_0, **var_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    bool_0 = False
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    var_0 = module_2.UnexpectedValueError(scans_a_p_i_0)
    scans_a_p_i_0.timezones()

@pytest.mark.xfail(strict=True)
def test_case_18():
    bool_0 = True
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    scans_a_p_i_0.status(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    none_type_0 = None
    scans_a_p_i_0 = module_0.ScansAPI(none_type_0)
    scans_a_p_i_0.list(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    int_0 = 432
    scans_a_p_i_0 = module_0.ScansAPI(int_0)
    scans_a_p_i_0.import_scan(int_0, aggregate=scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_21():
    bool_0 = False
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    scans_a_p_i_1 = module_0.ScansAPI(bool_0)
    scan_history_iterator_0 = module_0.ScanHistoryIterator(scans_a_p_i_1)
    scans_a_p_i_1.delete(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_22():
    bool_0 = False
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    scans_a_p_i_0.results(scans_a_p_i_0, history_uuid=scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_23():
    int_0 = 400
    scans_a_p_i_0 = module_0.ScansAPI(int_0)
    var_0 = scans_a_p_i_0.history(scans_a_p_i_0, pages=int_0)
    scans_a_p_i_0.attachment(int_0, var_0, scans_a_p_i_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_24():
    int_0 = -1292
    list_0 = [int_0]
    str_0 = '2Co)-[*'
    set_0 = {str_0, str_0, str_0}
    scans_a_p_i_0 = module_0.ScansAPI(set_0)
    scans_a_p_i_0.attachment(list_0, int_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_25():
    int_0 = 400
    scans_a_p_i_0 = module_0.ScansAPI(int_0)
    scans_a_p_i_0.results(scans_a_p_i_0, scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_26():
    float_0 = 795.320144
    scans_a_p_i_0 = module_0.ScansAPI(float_0)
    scans_a_p_i_0.import_scan(float_0, password=float_0)

@pytest.mark.xfail(strict=True)
def test_case_27():
    int_0 = 400
    scans_a_p_i_0 = module_0.ScansAPI(int_0)
    scans_a_p_i_0.import_scan(int_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_28():
    none_type_0 = None
    scans_a_p_i_0 = module_0.ScansAPI(none_type_0)
    scans_a_p_i_0.launch(none_type_0, scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_29():
    none_type_0 = None
    scans_a_p_i_0 = module_0.ScansAPI(none_type_0)
    str_0 = '0L\rN\x0bptF)DA%bT2BS%'
    scans_a_p_i_0.list(none_type_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_30():
    int_0 = 390
    scans_a_p_i_0 = module_0.ScansAPI(int_0)
    scans_a_p_i_0.list(int_0)

@pytest.mark.xfail(strict=True)
def test_case_31():
    none_type_0 = None
    scans_a_p_i_0 = module_0.ScansAPI(none_type_0)
    str_0 = '0L\rN\x0bptF)DA%bT2BS%'
    str_1 = 'permCreateDAPAsets'
    dict_0 = {str_0: str_0, str_0: scans_a_p_i_0, str_1: str_1}
    scans_a_p_i_0.copy(dict_0, dict_0, str_1)

@pytest.mark.xfail(strict=True)
def test_case_32():
    none_type_0 = None
    scans_a_p_i_0 = module_0.ScansAPI(none_type_0)
    str_0 = '0L\rN\x0bptF)DA%bT2BS%'
    var_0 = scans_a_p_i_0.history(none_type_0)
    scans_a_p_i_0.host_details(str_0, scans_a_p_i_0, history_uuid=var_0)

@pytest.mark.xfail(strict=True)
def test_case_33():
    bytes_0 = b'\xc1\xa7\xdc'
    int_0 = 2346
    none_type_0 = None
    scans_a_p_i_0 = module_0.ScansAPI(none_type_0)
    scans_a_p_i_0.host_details(bytes_0, int_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_34():
    none_type_0 = None
    scans_a_p_i_0 = module_0.ScansAPI(none_type_0)
    scans_a_p_i_0.plugin_output(scans_a_p_i_0, scans_a_p_i_0, none_type_0, history_uuid=scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_35():
    bool_0 = False
    scans_a_p_i_0 = module_0.ScansAPI(bool_0)
    scans_a_p_i_0.plugin_output(bool_0, bool_0, scans_a_p_i_0, scans_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_36():
    str_0 = 'tem\x0cae'
    scans_a_p_i_0 = module_0.ScansAPI(str_0)
    str_1 = 'template'
    dict_0 = {str_1: str_1}
    scans_a_p_i_0.create(**dict_0)