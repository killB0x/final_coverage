# Automatically generated by Pynguin.
import pytest
import tenable.sc.groups as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = 'epK@B8+|t:(j`9'
    complex_0 = (2676.28745-1021.040644j)
    group_a_p_i_0 = module_0.GroupAPI(complex_0)
    group_a_p_i_0.edit(str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'filterName'
    none_type_0 = None
    group_a_p_i_0 = module_0.GroupAPI(str_0)
    group_a_p_i_0.create(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    int_0 = 1036
    group_a_p_i_0 = module_0.GroupAPI(bool_0)
    group_a_p_i_0.details(bool_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 3
    float_0 = 2675.513746
    set_0 = {float_0}
    group_a_p_i_0 = module_0.GroupAPI(set_0)
    group_a_p_i_0.details(int_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'S\n.}*X`}38#hVvyR%'
    group_a_p_i_0 = module_0.GroupAPI(str_0)
    group_a_p_i_0.details(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    list_1 = [list_0]
    group_a_p_i_0 = module_0.GroupAPI(bool_0)
    group_a_p_i_0.list(list_1)

@pytest.mark.xfail(strict=True)
def test_case_6():
    float_0 = -257.97511
    group_a_p_i_0 = module_0.GroupAPI(float_0)
    group_a_p_i_0.list()

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = 'filterName'
    group_a_p_i_0 = module_0.GroupAPI(str_0)
    group_a_p_i_0.list(str_0)

def test_case_8():
    complex_0 = (2676.28745-1021.040644j)
    group_a_p_i_0 = module_0.GroupAPI(complex_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = True
    list_0 = [bool_0]
    group_a_p_i_0 = module_0.GroupAPI(list_0)
    group_a_p_i_0.delete(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    int_0 = 412
    none_type_0 = None
    str_0 = 'asset_lists'
    str_1 = '-\x0c"\\\r(m&ZUe@o"9%H'
    dict_0 = {str_0: none_type_0, str_1: str_0}
    group_a_p_i_0 = module_0.GroupAPI(int_0)
    group_a_p_i_0.edit(none_type_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    bool_0 = True
    str_0 = 'description'
    dict_0 = {str_0: str_0}
    bool_1 = True
    group_a_p_i_0 = module_0.GroupAPI(bool_1)
    group_a_p_i_1 = module_0.GroupAPI(group_a_p_i_0)
    group_a_p_i_1.edit(bool_0, **dict_0)