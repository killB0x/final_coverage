# Automatically generated by Pynguin.
import pytest
import tenable.io.plugins as module_0

def test_case_0():
    bool_0 = True
    plugins_a_p_i_0 = module_0.PluginsAPI(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 37
    str_0 = 'page'
    dict_0 = {str_0: str_0}
    plugin_iterator_0 = module_0.PluginIterator(int_0, **dict_0)
    plugins_a_p_i_0 = module_0.PluginsAPI(int_0)
    var_0 = plugin_iterator_0.next()
    assert var_0 == 'p'
    plugins_a_p_i_1 = module_0.PluginsAPI(dict_0)
    plugins_a_p_i_0.families()

@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 37
    str_0 = 'page'
    plugins_a_p_i_0 = module_0.PluginsAPI(str_0)
    dict_0 = {str_0: str_0}
    plugin_iterator_0 = module_0.PluginIterator(int_0, **dict_0)
    var_0 = plugin_iterator_0.next()
    assert var_0 == 'p'
    plugins_a_p_i_0.family_details(plugin_iterator_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    str_0 = ' 0'
    plugins_a_p_i_0 = module_0.PluginsAPI(bool_0)
    plugins_a_p_i_0.plugin_details(str_0)

def test_case_4():
    int_0 = 37
    str_0 = 'page'
    dict_0 = {str_0: str_0}
    plugin_iterator_0 = module_0.PluginIterator(int_0, **dict_0)
    plugins_a_p_i_0 = module_0.PluginsAPI(int_0)
    var_0 = plugins_a_p_i_0.list()
    var_1 = plugin_iterator_0.__iter__()
    var_2 = var_1.next()
    assert var_2 == 'p'

def test_case_5():
    str_0 = 'page'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    plugin_iterator_0 = module_0.PluginIterator(str_0, **dict_0)
    var_0 = plugin_iterator_0.next()
    assert var_0 == 'p'