# Automatically generated by Pynguin.
import pytest
import tenable.sc.queries as module_0
import tenable.base as module_1
import tenable.sc.base as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    query_a_p_i_0 = module_0.QueryAPI(none_type_0)
    query_a_p_i_0.create(none_type_0, none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    query_a_p_i_0 = module_0.QueryAPI(set_0)
    query_a_p_i_0.edit(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    query_a_p_i_0 = module_0.QueryAPI(set_0)
    query_a_p_i_0.details(set_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = 'viewable'
    complex_0 = (-3244.52-2618.60048j)
    query_a_p_i_0 = module_0.QueryAPI(complex_0)
    query_a_p_i_0.list(str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    a_p_i_endpoint_0 = module_1.APIEndpoint(none_type_0)
    list_0 = []
    tuple_0 = (list_0,)
    tuple_1 = (a_p_i_endpoint_0, tuple_0)
    query_a_p_i_0 = module_0.QueryAPI(tuple_1)
    query_a_p_i_1 = module_0.QueryAPI(query_a_p_i_0)
    query_a_p_i_1.list()

def test_case_5():
    int_0 = -1149
    query_a_p_i_0 = module_0.QueryAPI(int_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    complex_0 = (-3160.992-1524j)
    query_a_p_i_0 = module_0.QueryAPI(complex_0)
    query_a_p_i_0.delete(complex_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    bool_1 = True
    query_a_p_i_0 = module_0.QueryAPI(bool_1)
    query_a_p_i_1 = module_0.QueryAPI(query_a_p_i_0)
    query_a_p_i_1.share(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = False
    query_a_p_i_0 = module_0.QueryAPI(bool_0)
    float_0 = 2916.19758
    query_a_p_i_1 = module_0.QueryAPI(float_0)
    query_a_p_i_1.tags()

@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = False
    s_c_endpoint_0 = module_2.SCEndpoint(bool_0)
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    query_a_p_i_0 = module_0.QueryAPI(s_c_endpoint_0)
    bytes_0 = b'\x11\x1a\xa5\xc6'
    query_a_p_i_0.details(bytes_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    int_0 = 2284
    list_0 = [int_0]
    str_0 = 'owner_id'
    dict_0 = {str_0: list_0, str_0: list_0, str_0: int_0}
    int_1 = -3177
    query_a_p_i_0 = module_0.QueryAPI(int_1)
    query_a_p_i_0.edit(int_0, *list_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    bool_0 = False
    query_a_p_i_0 = module_0.QueryAPI(bool_0)
    str_0 = 'tags'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0, str_0: query_a_p_i_0, str_0: bool_0, str_0: str_0, str_0: bool_0, str_0: bool_0, str_0: query_a_p_i_0, str_0: bool_0, str_0: query_a_p_i_0, str_0: str_0}
    query_a_p_i_0.create(str_0, bool_0, bool_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    bool_0 = False
    none_type_0 = None
    query_a_p_i_0 = module_0.QueryAPI(none_type_0)
    str_0 = 'des-rietil'
    dict_0 = {query_a_p_i_0: str_0, str_0: str_0, none_type_0: none_type_0, bool_0: query_a_p_i_0, str_0: bool_0}
    str_1 = 'browse_cols'
    dict_1 = {str_0: dict_0, str_0: str_0, str_1: str_1}
    query_a_p_i_0.create(none_type_0, none_type_0, bool_0, **dict_1)

@pytest.mark.xfail(strict=True)
def test_case_13():
    bool_0 = True
    str_0 = 'context'
    str_1 = 'or_ie'
    list_0 = []
    dict_0 = {str_0: bool_0, str_0: str_0, str_1: bool_0, str_1: list_0, str_0: list_0}
    none_type_0 = None
    query_a_p_i_0 = module_0.QueryAPI(none_type_0)
    query_a_p_i_0.create(str_1, bool_0, bool_0, *list_0, **dict_0)