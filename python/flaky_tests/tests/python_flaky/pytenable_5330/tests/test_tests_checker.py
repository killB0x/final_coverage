# Automatically generated by Pynguin.
import pytest
import tests.checker as module_0
import re as module_1
import builtins as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b'C\x1bzh\xd1)#\xd6\xab\xf9\xd0\xf0\xe4\x7f\x94\x95\xcb'
    module_0.check(bytes_0, bytes_0, bytes_0)

def test_case_1():
    str_0 = ' #eSyS,a>\tF][Xm88*u'
    str_1 = 'Ria4/j'
    var_0 = module_1.compile(str_1)
    with pytest.raises(AssertionError):
        module_0.check(str_0, str_1, var_0, str_1)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    module_0.single(bool_0, bool_0)

def test_case_3():
    var_0 = module_1.purge()
    tuple_0 = (var_0, var_0, var_0)
    var_1 = module_0.single(var_0, tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'datetim'
    dict_0 = {str_0: str_0}
    module_0.check(dict_0, str_0, str_0, str_0)

def test_case_5():
    tuple_0 = ()
    with pytest.raises(AssertionError):
        module_0.single(tuple_0, tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = 'datetime'
    module_0.single(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = 'datetim'
    dict_0 = {str_0: str_0}
    module_0.check(dict_0, str_0, str_0)

def test_case_8():
    var_0 = module_1.purge()
    dict_0 = {var_0: var_0}
    with pytest.raises(AssertionError):
        module_0.check(dict_0, var_0, var_0)

def test_case_9():
    str_0 = 'scanner-uuid'
    with pytest.raises(AssertionError):
        module_0.single(str_0, str_0)

def test_case_10():
    str_0 = 'uuid'
    with pytest.raises(AssertionError):
        module_0.single(str_0, str_0)

def test_case_11():
    tuple_0 = ()
    list_0 = [tuple_0]
    type_0 = module_2.type(*list_0)
    var_0 = module_0.single(tuple_0, type_0)
    with pytest.raises(AssertionError):
        module_0.single(tuple_0, tuple_0)