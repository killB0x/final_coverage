# Automatically generated by Pynguin.
import pytest
import tenable.sc.scan_instances as module_0
import tenable.sc.base as module_1
import _io as module_2
import builtins as module_3
import tenable.base as module_4

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    none_type_0 = None
    list_0 = [none_type_0, bool_0]
    bytes_0 = b'reY\x1f\xdf\x96\x85\x12O\xbe\x7f\xb4\xd0\x1e[\xa7\xb6\xf6'
    scan_result_a_p_i_0 = module_0.ScanResultAPI(bytes_0)
    scan_result_a_p_i_0.copy(none_type_0, *list_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    scan_result_a_p_i_0 = module_0.ScanResultAPI(set_0)
    scan_result_a_p_i_0.details(set_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    s_c_endpoint_0 = module_1.SCEndpoint(bool_0)
    bool_1 = True
    dict_0 = {}
    scan_result_a_p_i_0 = module_0.ScanResultAPI(bool_1)
    scan_result_a_p_i_0.list(end_time=dict_0, optimize=bool_0)

def test_case_3():
    str_0 = "RO= ']/"
    scan_result_a_p_i_0 = module_0.ScanResultAPI(str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    str_0 = 'e.C\x0b7A`'
    scan_result_a_p_i_0 = module_0.ScanResultAPI(none_type_0)
    scan_result_a_p_i_0.delete(str_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    buffered_i_o_base_0 = module_2._BufferedIOBase(*list_0)
    scan_result_a_p_i_0 = module_0.ScanResultAPI(buffered_i_o_base_0)
    none_type_0 = None
    int_0 = 32
    scan_result_a_p_i_1 = module_0.ScanResultAPI(int_0)
    scan_result_a_p_i_1.import_scan(none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    dict_0 = {}
    object_0 = module_3.object(**dict_0)
    list_0 = []
    bool_0 = False
    a_p_i_endpoint_0 = module_4.APIEndpoint(bool_0)
    scan_result_a_p_i_0 = module_0.ScanResultAPI(a_p_i_endpoint_0)
    scan_result_a_p_i_0.reimport_scan(list_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    none_type_0 = None
    scan_result_a_p_i_0 = module_0.ScanResultAPI(bool_0)
    scan_result_a_p_i_0.pause(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 2708
    s_c_endpoint_0 = module_1.SCEndpoint(int_0)
    bool_0 = True
    bytes_0 = b'?\xb58\x7f\xc3'
    scan_result_a_p_i_0 = module_0.ScanResultAPI(bytes_0)
    scan_result_a_p_i_0.stop(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    none_type_0 = None
    scan_result_a_p_i_0 = module_0.ScanResultAPI(none_type_0)
    scan_result_a_p_i_0.resume(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    set_0 = set()
    scan_result_a_p_i_0 = module_0.ScanResultAPI(set_0)
    scan_result_a_p_i_0.copy(set_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    bool_0 = True
    none_type_0 = None
    scan_result_a_p_i_0 = module_0.ScanResultAPI(bool_0)
    scan_result_a_p_i_0.email(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    bool_0 = True
    none_type_0 = None
    list_0 = [none_type_0, bool_0]
    scan_result_a_p_i_0 = module_0.ScanResultAPI(list_0)
    scan_result_a_p_i_0.details(none_type_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    bool_0 = False
    s_c_endpoint_0 = module_1.SCEndpoint(bool_0)
    bool_1 = True
    dict_0 = {bool_0: s_c_endpoint_0}
    scan_result_a_p_i_0 = module_0.ScanResultAPI(bool_1)
    scan_result_a_p_i_0.list(end_time=dict_0, optimize=bool_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    bool_0 = False
    s_c_endpoint_0 = module_1.SCEndpoint(bool_0)
    bytes_0 = b'?\xb58\x7f\xc3'
    none_type_0 = None
    scan_result_a_p_i_0 = module_0.ScanResultAPI(none_type_0)
    scan_result_a_p_i_0.list(start_time=bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    int_0 = 2808
    int_1 = 400
    scan_result_a_p_i_0 = module_0.ScanResultAPI(int_1)
    scan_result_a_p_i_0.list(int_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    bytes_i_o_0 = module_2.BytesIO()
    list_0 = []
    buffered_i_o_base_0 = module_2._BufferedIOBase()
    str_0 = 'Ic9:]zup'
    none_type_0 = None
    scan_result_a_p_i_0 = module_0.ScanResultAPI(str_0)
    scan_result_a_p_i_0.list(str_0, list_0, optimize=none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    none_type_0 = None
    list_0 = [none_type_0]
    scan_result_a_p_i_0 = module_0.ScanResultAPI(list_0)
    scan_result_a_p_i_0.details(none_type_0, list_0)