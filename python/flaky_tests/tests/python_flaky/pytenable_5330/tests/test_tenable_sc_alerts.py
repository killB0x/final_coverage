# Automatically generated by Pynguin.
import pytest
import tenable.sc.alerts as module_0
import tenable.sc.base as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    alert_a_p_i_0 = module_0.AlertAPI(none_type_0)
    alert_a_p_i_0.create()

@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    alert_a_p_i_0 = module_0.AlertAPI(none_type_0)
    alert_a_p_i_0.list()

@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    bool_1 = True
    dict_0 = {bool_1: bool_1, bool_1: bool_1, bool_1: bool_1, bool_1: bool_1}
    s_c_endpoint_0 = module_1.SCEndpoint(dict_0)
    alert_a_p_i_0 = module_0.AlertAPI(s_c_endpoint_0)
    alert_a_p_i_0.details(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '++u;c`oWX6=j<-7pb:G'
    str_0.execute(str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'_\xaeY\xd9\xe8\x8b\xa1\xb0-\xdf\xe7\xd1E\xee$\xe8'
    alert_a_p_i_0 = module_0.AlertAPI(bytes_0)
    list_0 = [bytes_0, alert_a_p_i_0]
    str_0 = 'dataFormat'
    dict_0 = {str_0: list_0, str_0: alert_a_p_i_0}
    alert_a_p_i_0.edit(bytes_0, *list_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b'\x19'
    int_0 = 3080
    s_c_endpoint_0 = module_1.SCEndpoint(int_0)
    tuple_0 = (s_c_endpoint_0, s_c_endpoint_0)
    alert_a_p_i_0 = module_0.AlertAPI(tuple_0)
    alert_a_p_i_0.delete(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    bool_0 = False
    alert_a_p_i_0 = module_0.AlertAPI(bool_0)
    alert_a_p_i_0.execute(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    set_0 = {bool_0, bool_0, bool_0}
    alert_a_p_i_0 = module_0.AlertAPI(bool_0)
    alert_a_p_i_0.list(set_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = False
    alert_a_p_i_0 = module_0.AlertAPI(bool_0)
    alert_a_p_i_0.details(bool_0, alert_a_p_i_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'I]7'
    str_1 = ''
    alert_a_p_i_0 = module_0.AlertAPI(str_1)
    alert_a_p_i_0.details(str_1, str_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = 'I]7'
    str_1 = ''
    alert_a_p_i_0 = module_0.AlertAPI(str_1)
    alert_a_p_i_0.list(str_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    bytes_0 = b'_\xaeY\xd9\xe8\x8b\xa1\xb0-\xdf\xe7\xd1E\xee$\xe8'
    alert_a_p_i_0 = module_0.AlertAPI(bytes_0)
    list_0 = [bytes_0, alert_a_p_i_0]
    str_0 = 'dataFormat'
    dict_0 = {str_0: list_0, str_0: alert_a_p_i_0}
    none_type_0 = None
    alert_a_p_i_0.edit(none_type_0, *dict_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    bool_0 = False
    none_type_0 = None
    str_0 = 'data_type'
    dict_0 = {str_0: bool_0}
    dict_1 = {bool_0: none_type_0, none_type_0: bool_0}
    alert_a_p_i_0 = module_0.AlertAPI(dict_1)
    list_0 = [bool_0, bool_0, none_type_0, dict_0]
    alert_a_p_i_1 = module_0.AlertAPI(none_type_0)
    alert_a_p_i_1.edit(none_type_0, *list_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = 'schedule'
    str_1 = 'querid'
    bytes_0 = b''
    str_2 = 'trig6on'
    alert_a_p_i_0 = module_0.AlertAPI(bytes_0)
    bool_0 = False
    dict_0 = {str_2: bool_0, str_1: bool_0, str_0: bool_0}
    alert_a_p_i_0.edit(bool_0, **dict_0)