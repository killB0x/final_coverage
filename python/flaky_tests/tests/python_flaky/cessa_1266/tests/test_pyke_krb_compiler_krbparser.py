# Automatically generated by Pynguin.
import pytest
import pyke.krb_compiler.krbparser as module_0
import pyke.krb_compiler.ply.yacc as module_1
import re as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '<g(`I>05_:'
    module_0.p_anonymous_var(str_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.p_data_string(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'gNTZH'
    module_0.p_quoted_last(str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    dict_0 = {}
    module_0.p_pattern_tuple3(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = 'compiler.as_plan: got unexpected plan from when clause 2'
    module_0.p_pattern_tuple4(str_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    module_0.p_tuple(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 2373
    module_0.p_error(int_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    l_r_table_0 = module_1.LRTable()
    module_0.init(l_r_table_0, debug=l_r_table_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    none_type_0 = None
    module_0.p_code(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = '|ZFM"LyC'
    module_0.p_goal(str_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = 'D:\t*Zb'
    module_0.p_file(str_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    bytes_0 = b'v2T\xad\x07\x04\xd0\xb6n\xa3i\x91%y\x1f'
    module_0.p_file_bc(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    module_0.p_fourth(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    none_type_0 = None
    module_0.p_fifth(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    l_r_table_0 = module_1.LRTable()
    module_0.p_none(l_r_table_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    none_type_0 = None
    module_0.p_colon_deprication(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    str_0 = 'V;W3|5I0ZG40ych<UU'
    module_0.p_fc_rule(str_0)

@pytest.mark.xfail(strict=True)
def test_case_17():
    str_0 = "9&';/I|\x0c&8y5-"
    module_0.p_fc_first_n(str_0)

@pytest.mark.xfail(strict=True)
def test_case_18():
    str_0 = 'd=(5J9+[tu'
    module_0.p_fc_notany(str_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    str_0 = 'without_names -> without_names , IDENTIFIER_TOK'
    module_0.p_fc_require_opt(str_0)

@pytest.mark.xfail(strict=True)
def test_case_20():
    l_r_table_0 = module_1.LRTable()
    module_0.p_python_in(l_r_table_0)

@pytest.mark.xfail(strict=True)
def test_case_21():
    bool_0 = False
    module_0.p_python_assertion_1(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_22():
    none_type_0 = None
    module_0.p_check_nl(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_23():
    str_0 = '$BW!BO(bJ0L[yH'
    module_0.p_bc_rule(str_0)

@pytest.mark.xfail(strict=True)
def test_case_24():
    str_0 = ';W3|5I0ZG4ych<UU'
    module_0.p_goal_taking(str_0)

@pytest.mark.xfail(strict=True)
def test_case_25():
    str_0 = "nr)_'Any'X7}/4+"
    module_0.p_name_sym(str_0)

@pytest.mark.xfail(strict=True)
def test_case_26():
    str_0 = ''
    module_0.p_name_pat_var(str_0)

@pytest.mark.xfail(strict=True)
def test_case_27():
    none_type_0 = None
    module_0.p_bc_premise3(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_28():
    none_type_0 = None
    module_0.p_bc_first_1f(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_29():
    str_0 = 'PB,=~>=)(/k%Zr&?&'
    module_0.p_bc_first_nt(str_0)

@pytest.mark.xfail(strict=True)
def test_case_30():
    none_type_0 = None
    module_0.p_bc_notany(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_31():
    str_0 = '^O|ZF0L`yH'
    module_0.p_bc_forall(str_0)

@pytest.mark.xfail(strict=True)
def test_case_32():
    str_0 = 'gNTZH'
    module_0.p_start_python_assertion(str_0)

@pytest.mark.xfail(strict=True)
def test_case_33():
    str_0 = 'l=lC'
    module_0.p_python_rule_code(str_0)

@pytest.mark.xfail(strict=True)
def test_case_34():
    bytes_0 = b'\x8a\x85'
    module_0.p_taking2(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_35():
    bool_0 = False
    module_0.p_false(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_36():
    none_type_0 = None
    module_0.p_error(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_37():
    none_type_0 = None
    module_0.p_second(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_38():
    str_0 = 'worN|<\t}whg'
    module_0.p_inc_plan_vars(str_0)

@pytest.mark.xfail(strict=True)
def test_case_39():
    str_0 = '$`BO(bJ0\x0cL`yH'
    module_0.p_python_block_1(str_0)

@pytest.mark.xfail(strict=True)
def test_case_40():
    bool_0 = False
    module_0.p_bc_premise1(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_41():
    str_0 = ')) \\'
    module_0.p_bc_first_1t(str_0)

@pytest.mark.xfail(strict=True)
def test_case_42():
    complex_0 = (192.256-1954.6j)
    module_0.p_step_code(complex_0)

@pytest.mark.xfail(strict=True)
def test_case_43():
    str_0 = '<gI05_'
    module_0.p_first(str_0)

@pytest.mark.xfail(strict=True)
def test_case_44():
    none_type_0 = None
    module_0.p_last(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_45():
    bool_0 = True
    module_0.p_taking(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_46():
    str_0 = ' BuxobtJ&[yH'
    module_0.p_append_list(str_0)

@pytest.mark.xfail(strict=True)
def test_case_47():
    var_0 = module_1.LRTable()
    module_0.p_foreach(var_0)

@pytest.mark.xfail(strict=True)
def test_case_48():
    none_type_0 = None
    module_0.p_python_check(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_49():
    bool_0 = True
    module_0.p_assertion(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_50():
    str_0 = '$a&=R4)G,:'
    module_0.p_empty_bc_rules_opt(str_0)

@pytest.mark.xfail(strict=True)
def test_case_51():
    str_0 = 'MO|ZF0L`y~'
    module_0.p_start_list(str_0)

@pytest.mark.xfail(strict=True)
def test_case_52():
    l_r_table_0 = module_1.LRTable()
    module_0.p_python_eq(l_r_table_0)

@pytest.mark.xfail(strict=True)
def test_case_53():
    complex_0 = (3668.5412+1057.5j)
    module_0.p_python_assertion_n(complex_0)

@pytest.mark.xfail(strict=True)
def test_case_54():
    none_type_0 = None
    module_0.p_bc_premise4(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_55():
    str_0 = '=KnnND'
    module_0.p_start_python_code(str_0)

@pytest.mark.xfail(strict=True)
def test_case_56():
    str_0 = 'Bc-5\rPe[.RMa<q:x\r}OS'
    module_0.p_start_python_statements(str_0)

@pytest.mark.xfail(strict=True)
def test_case_57():
    str_0 = 'f_e`MinesjE'
    module_0.run(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_58():
    none_type_0 = None
    module_0.p_goal_no_taking(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_59():
    str_0 = '|ZFM"LyC'
    module_0.p_start_python_plan_call(str_0)

@pytest.mark.xfail(strict=True)
def test_case_60():
    var_0 = module_2.purge()
    module_0.p_python_plan_code(var_0)

@pytest.mark.xfail(strict=True)
def test_case_61():
    none_type_0 = None
    module_0.p_parent(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_62():
    str_0 = 'pyke_version = %r\n'
    module_0.p_pattern_tuple1(str_0)

@pytest.mark.xfail(strict=True)
def test_case_63():
    str_0 = 'gNTH'
    module_0.p_pattern(str_0)

@pytest.mark.xfail(strict=True)
def test_case_64():
    dict_0 = {}
    module_0.p_file_fc_extras(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_65():
    str_0 = '^|ZF"LRyH'
    module_0.p_reset_plan_vars(str_0)

@pytest.mark.xfail(strict=True)
def test_case_66():
    none_type_0 = None
    module_0.p_fc_forall(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_67():
    str_0 = 'C)CeZ2 vqvAxCt,vqS0'
    module_0.p_python_block_n(str_0)

@pytest.mark.xfail(strict=True)
def test_case_68():
    bool_0 = True
    module_0.p_empty_tuple(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_69():
    str_0 = 'C)CeZ2 vqvAxCt,vqS0'
    module_0.p_bc_rules_section(str_0)

@pytest.mark.xfail(strict=True)
def test_case_70():
    none_type_0 = None
    module_0.p_bc_premise2(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_71():
    bool_0 = True
    module_0.p_bc_require_opt(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_72():
    str_0 = 'E=8\x0b@U@f1_{"Wva'
    module_0.p_true(str_0)

@pytest.mark.xfail(strict=True)
def test_case_73():
    l_r_table_0 = module_1.LRTable()
    module_0.p_pattern_tuple2(l_r_table_0)

@pytest.mark.xfail(strict=True)
def test_case_74():
    str_0 = 'gNTH'
    module_0.p_pattern_tuple2(str_0)

@pytest.mark.xfail(strict=True)
def test_case_75():
    none_type_0 = None
    module_0.p_fc_premise(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_76():
    str_0 = '\\+MNs#$\'C6"L1'
    module_0.p_double_empty_tuple(str_0)

@pytest.mark.xfail(strict=True)
def test_case_77():
    str_0 = '$B!BO(bJ0L[yH'
    module_0.p_fc_first_1(str_0)

@pytest.mark.xfail(strict=True)
def test_case_78():
    str_0 = 'Bc-5\rPe[.RMa<q:j\r}OS'
    module_0.p_as(str_0)

@pytest.mark.xfail(strict=True)
def test_case_79():
    bool_0 = True
    module_0.p_start_extra_statements(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_80():
    str_0 = 'EntMr Integb\x0cer %s'
    module_0.p_top(str_0)

@pytest.mark.xfail(strict=True)
def test_case_81():
    l_r_table_0 = module_1.LRTable()
    module_0.p_bc_first_nf(l_r_table_0)

@pytest.mark.xfail(strict=True)
def test_case_82():
    str_0 = 'a^ip'
    module_0.p_python_extras_code(str_0)

@pytest.mark.xfail(strict=True)
def test_case_83():
    bool_0 = False
    module_0.parse_goal(bool_0, bool_0, debug=bool_0)

@pytest.mark.xfail(strict=True)
def test_case_84():
    str_0 = '|ZFM"LyC'
    module_0.p_pattern_var(str_0)

@pytest.mark.xfail(strict=True)
def test_case_85():
    str_0 = 'gNTZH'
    module_0.p_tuple(str_0)

@pytest.mark.xfail(strict=True)
def test_case_86():
    str_0 = '<5g(`I>05_+'
    module_0.p_pattern_tuple3(str_0)