# Automatically generated by Pynguin.
import pytest
import pyke.target_pkg as module_0
import re as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.import_(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'\x8d&tD\xa4'
    module_0.target_pkg(bytes_0, pyke_version=bytes_0)

def test_case_2():
    str_0 = 'OT5Kq)TE6DI;+1\n.'
    with pytest.raises(AssertionError):
        module_0.target_pkg(str_0, str_0, loader=str_0, compiler_version=str_0)

def test_case_3():
    str_0 = 'V\x0b-*8E0ntZqd\x0cI:'
    with pytest.raises(AssertionError):
        module_0.target_pkg(str_0, compiler_version=str_0)

def test_case_4():
    str_0 = 'i\x0b2:@nc6VK'
    target_pkg_0 = module_0.target_pkg(str_0, str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'i\x0b2:@nc6VK'
    assert target_pkg_0.filename == 'i\x0b2:@nc6VK/compiled_pyke_files.py'
    assert target_pkg_0.directory == 'i\x0b2:@nc6VK'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = ''
    module_0.target_pkg(str_0, str_0, compiler_version=str_0)

def test_case_6():
    str_0 = 'V\x0b-8L0ntZqd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, sources=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZqd\x0cI:'
    assert target_pkg_0.filename == 'V\x0b-8L0ntZqd\x0cI'
    assert target_pkg_0.directory == ''
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}

def test_case_7():
    str_0 = 'V\x0b-8L0ntZqd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZqd\x0cI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'rule.rule_base.num_bc_rule_successes += 1'
    module_0.target_pkg(str_0, str_0, loader=str_0, compiler_version=str_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'V\x0b-8L0ntZqd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, sources=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZqd\x0cI:'
    assert target_pkg_0.filename == 'V\x0b-8L0ntZqd\x0cI'
    assert target_pkg_0.directory == ''
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.pickle_it(target_pkg_0, target_pkg_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = "r:!C0\x0c\n@h(LQKd1;'FQ"
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == "r:!C0\x0c\n@h(LQKd1;'FQ"
    assert target_pkg_0.filename == "/pynguin/r:!C0\x0c\n@h(LQKd1;'FQ/compiled_pyke_files.py"
    assert target_pkg_0.directory == "/pynguin/r:!C0\x0c\n@h(LQKd1;'FQ"
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    var_0 = target_pkg_0.reset(str_0)
    var_1 = target_pkg_0.compile(var_0)
    target_pkg_0.do_by_ext(var_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = 'i\x0b2:@nc6VK'
    target_pkg_0 = module_0.target_pkg(str_0, str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'i\x0b2:@nc6VK'
    assert target_pkg_0.filename == 'i\x0b2:@nc6VK/compiled_pyke_files.py'
    assert target_pkg_0.directory == 'i\x0b2:@nc6VK'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.load_fbc(target_pkg_0, target_pkg_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = 'V\x0b-|L0ntZq*\x0bI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-|L0ntZq*\x0bI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.add_source_package(target_pkg_0, str_0, target_pkg_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = '#G'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == '#G'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.load_module(str_0, str_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_14():
    str_0 = 'V\x0b-|L0ntZq*\x0bI:'
    target_pkg_0 = module_0.target_pkg(str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-|L0ntZq*\x0bI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.load_pickle(target_pkg_0, target_pkg_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    str_0 = 'V\x0b-8L0ntZqd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, sources=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZqd\x0cI:'
    assert target_pkg_0.filename == 'V\x0b-8L0ntZqd\x0cI'
    assert target_pkg_0.directory == ''
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.compile(str_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    str_0 = 'V\x0b-|L0ntZq*\x0bI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-|L0ntZq*\x0bI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.load_py(target_pkg_0, target_pkg_0, str_0)

def test_case_17():
    str_0 = '\x0b-*;E0ntZqd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, sources=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == '\x0b-*;E0ntZqd\x0cI:'
    assert target_pkg_0.filename == '\x0b-*;E0ntZqd\x0cI'
    assert target_pkg_0.directory == ''
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    none_type_0 = None
    var_0 = target_pkg_0.load_module(str_0, str_0, none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_18():
    str_0 = "$r:!C0\x0c\n@h(LQKd1;'FQ"
    target_pkg_0 = module_0.target_pkg(str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == "$r:!C0\x0c\n@h(LQKd1;'FQ"
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.load_pickle(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    str_0 = 'V\x0b-|L0ntZq*\x0bI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-|L0ntZq*\x0bI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.load_qbc(str_0, str_0, target_pkg_0)

def test_case_20():
    str_0 = "r:!C0\x0c\n@h(LQKd1;'FQ"
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == "r:!C0\x0c\n@h(LQKd1;'FQ"
    assert target_pkg_0.filename == "/pynguin/r:!C0\x0c\n@h(LQKd1;'FQ/compiled_pyke_files.py"
    assert target_pkg_0.directory == "/pynguin/r:!C0\x0c\n@h(LQKd1;'FQ"
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    with pytest.raises(ValueError):
        target_pkg_0.add_source(str_0, target_pkg_0, str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_21():
    str_0 = 'Q^~\nc*F\x0c{gelfm-'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'Q^~\nc*F\x0c{gelfm-'
    assert target_pkg_0.filename == 'Q^~\nc*F\x0c{gelfm-/compiled_pyke_files.py'
    assert target_pkg_0.directory == 'Q^~\nc*F\x0c{gelfm-'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.compile_kqb(str_0)

def test_case_22():
    str_0 = 'V\x0b-8L0ntZmqwJd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, sources=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZmqwJd\x0cI:'
    assert target_pkg_0.filename == 'V\x0b-8L0ntZmqwJd\x0cI'
    assert target_pkg_0.directory == ''
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    var_0 = target_pkg_0.load(target_pkg_0)

def test_case_23():
    str_0 = 'V\x0b-|L0ntZq*\x0bI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-|L0ntZq*\x0bI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    var_0 = target_pkg_0.reset(str_0)

@pytest.mark.xfail(strict=True)
def test_case_24():
    str_0 = '1\x0b-|L0nt0q*\x0bI-'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == '1\x0b-|L0nt0q*\x0bI-'
    assert target_pkg_0.filename == '1\x0b-|L0nt0q*\x0bI-/compiled_pyke_files.py'
    assert target_pkg_0.directory == '1\x0b-|L0nt0q*\x0bI-'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.write()

def test_case_25():
    str_0 = 'V\x0b-8L0nt}ZqwJd\x0cI:_g'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0nt}ZqwJd\x0cI:_g'
    assert target_pkg_0.filename == '/pynguin/V\x0b-8L0nt}ZqwJd\x0cI:_g/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin/V\x0b-8L0nt}ZqwJd\x0cI:_g'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    with pytest.raises(AssertionError):
        target_pkg_0.load_py(str_0, str_0, target_pkg_0)

@pytest.mark.xfail(strict=True)
def test_case_26():
    str_0 = 'Q^~T\nIc*<F\x0c{g6lfm-'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'Q^~T\nIc*<F\x0c{g6lfm-'
    assert target_pkg_0.filename == 'Q^~T\nIc*<F\x0c{g6lfm-/compiled_pyke_files.py'
    assert target_pkg_0.directory == 'Q^~T\nIc*<F\x0c{g6lfm-'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    var_0 = target_pkg_0.reset()
    target_pkg_0.add_source_package(str_0, str_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_27():
    str_0 = 'V\x0b-8L0ntZqwJd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZqwJd\x0cI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.compile_kfb(str_0)

@pytest.mark.xfail(strict=True)
def test_case_28():
    str_0 = 'V\x0b-8L0ntZqd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, sources=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZqd\x0cI:'
    assert target_pkg_0.filename == 'V\x0b-8L0ntZqd\x0cI'
    assert target_pkg_0.directory == ''
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.compile_krb(str_0)

@pytest.mark.xfail(strict=True)
def test_case_29():
    str_0 = 'V\x0b-8L0ntZqwJd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZqwJd\x0cI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.load_module(str_0, str_0, target_pkg_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_30():
    str_0 = 'V\x0b-8L0ntZqwJd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZqwJd\x0cI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    var_0 = target_pkg_0.reset()
    target_pkg_0.load_module(str_0, str_0, target_pkg_0, str_0)

def test_case_31():
    str_0 = 'V\x0b-|L0ntZq*\x0bI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-|L0ntZq*\x0bI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    var_0 = target_pkg_0.reset(str_0)
    var_1 = target_pkg_0.write()

@pytest.mark.xfail(strict=True)
def test_case_32():
    str_0 = '        compiler_version)\n\n'
    target_pkg_0 = module_0.target_pkg(str_0, str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == '        compiler_version)\n\n'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    var_0 = target_pkg_0.reset()
    target_pkg_0.add_source_package(var_0, str_0, str_0)

def test_case_33():
    str_0 = 'V\x0b-8L0ntZqwJd\x0cI:'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZqwJd\x0cI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    var_0 = target_pkg_0.reset()
    var_1 = target_pkg_0.compile(var_0)

def test_case_34():
    str_0 = 'Q^~T\nIc:iFN{g8n6lm'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, compiler_version=str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'Q^~T\nIc:iFN{g8n6lm'
    assert target_pkg_0.filename == 'Q^~T\nIc:iFN{g8n6lm/compiled_pyke_files.py'
    assert target_pkg_0.directory == 'Q^~T\nIc:iFN{g8n6lm'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    list_0 = []
    var_0 = target_pkg_0.reset(list_0)
    var_1 = target_pkg_0.compile(var_0)

def test_case_35():
    str_0 = 'V\x0b-8L0ntZqwJd\x0cI:'
    var_0 = str_0.__contains__(str_0)
    target_pkg_0 = module_0.target_pkg(str_0, loader=var_0, compiler_version=var_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'V\x0b-8L0ntZqwJd\x0cI:'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is True
    assert target_pkg_0.sources == {}

@pytest.mark.xfail(strict=True)
def test_case_36():
    str_0 = 'lextab'
    target_pkg_0 = module_0.target_pkg(str_0, str_0, str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'lextab'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    target_pkg_0.add_source(target_pkg_0, str_0, str_0, str_0)

def test_case_37():
    str_0 = 'p_inc_plan_vars'
    var_0 = module_1.template(str_0)
    var_1 = var_0.__repr__()
    with pytest.raises(AssertionError):
        module_0.target_pkg(var_1, loader=var_1)

@pytest.mark.xfail(strict=True)
def test_case_38():
    str_0 = 'r'
    var_0 = module_1.template(str_0)
    var_1 = var_0.__repr__()
    module_0.target_pkg(var_1, var_0)

@pytest.mark.xfail(strict=True)
def test_case_39():
    str_0 = 'lextab'
    target_pkg_0 = module_0.target_pkg(str_0)
    assert f'{type(target_pkg_0).__module__}.{type(target_pkg_0).__qualname__}' == 'pyke.target_pkg.target_pkg'
    assert target_pkg_0.package_name == 'lextab'
    assert target_pkg_0.filename == '/pynguin/compiled_pyke_files.py'
    assert target_pkg_0.directory == '/pynguin'
    assert target_pkg_0.loader is None
    assert target_pkg_0.sources == {}
    var_0 = target_pkg_0.reset()
    target_pkg_0.add_source(str_0, var_0, str_0, var_0)