# Automatically generated by Pynguin.
import pytest
import sysconfig as module_0
import cppimport.checksum as module_1
import enum as module_2
import cppimport.config as module_3
import cppimport.importer as module_4

def test_case_0():
    enum_dict_0 = module_0.get_default_scheme()
    var_0 = module_1.calc_cur_checksum(enum_dict_0, enum_dict_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_1.is_checksum_current(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 2643
    module_1.checksum_save(int_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -387
    set_0 = {int_0, int_0}
    module_1.calc_cur_checksum(set_0, set_0)

def test_case_4():
    enum_dict_0 = module_2._EnumDict()
    var_0 = module_1.calc_cur_checksum(enum_dict_0, enum_dict_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = module_0.get_makefile_filename()
    var_0 = module_1.calc_cur_checksum(list_0, list_0)
    int_0 = 3
    set_0 = {int_0, int_0, int_0}
    var_1 = module_1.calc_cur_checksum(set_0, set_0)
    var_2 = module_3.force_rebuild()
    module_1.is_checksum_current(var_2)

@pytest.mark.xfail(strict=True)
def test_case_6():
    var_0 = module_0.get_makefile_filename()
    var_1 = module_4.setup_module_data(var_0, var_0)
    var_2 = module_3.force_rebuild()
    var_3 = module_1.is_checksum_current(var_1)
    assert var_3 is False
    module_1.calc_cur_checksum(var_3, var_1)

@pytest.mark.xfail(strict=True)
def test_case_7():
    var_0 = module_0.get_python_version()
    var_1 = module_4.setup_module_data(var_0, var_0)
    module_1.is_checksum_current(var_1)

@pytest.mark.xfail(strict=True)
def test_case_8():
    var_0 = module_0.get_python_version()
    var_1 = module_4.setup_module_data(var_0, var_0)
    module_1.is_checksum_current(var_1)