# Automatically generated by Pynguin.
import wolk_gateway_module.model.device as module_0
import dataclasses as module_1
import wolk_gateway_module.model.device_template as module_2

def test_case_0():
    str_0 = 'u<.keaNOE<W'
    device_0 = module_0.Device(str_0, str_0)
    list_0 = device_0.get_actuator_references()

def test_case_1():
    bytes_0 = b'\xd2\xb9%\xee\x0eC6'
    dict_0 = {bytes_0: bytes_0, bytes_0: bytes_0}
    list_0 = [bytes_0, bytes_0, bytes_0, dict_0]
    bool_0 = True
    int_0 = 5
    tuple_0 = (list_0, list_0, bool_0, int_0)
    list_1 = [bytes_0, bytes_0, bytes_0, tuple_0]
    device_0 = module_0.Device(list_1, tuple_0)
    bool_1 = device_0.has_configurations()
    none_type_0 = None
    var_0 = module_1.dataclass(eq=none_type_0, order=none_type_0, frozen=none_type_0, match_args=none_type_0)
    var_1 = var_0.__repr__()
    bytes_1 = b'\x13e}\xb6\xcb\xbb\x8a\xd3\xaf'
    bool_2 = False
    var_2 = module_1.dataclass(unsafe_hash=bool_2, match_args=bool_2)
    var_3 = var_2.__repr__()
    var_4 = var_3.__repr__()
    set_0 = {var_4, var_3}
    var_5 = module_1.field(kw_only=set_0)
    var_6 = var_5.__eq__(bytes_1)
    var_7 = var_6.__eq__(none_type_0)
    var_8 = var_7.__repr__()

def test_case_2():
    str_0 = 'u<.keaNOE<W'
    device_0 = module_0.Device(str_0, str_0)
    bool_0 = device_0.supports_firmware_update()
    list_0 = device_0.get_actuator_references()

def test_case_3():
    str_0 = 'dl1'
    str_1 = 'hp'
    device_template_0 = module_2.DeviceTemplate(str_1, configurations=str_1)
    device_0 = module_0.Device(str_0, str_1, device_template_0)
    device_0.get_actuator_references()