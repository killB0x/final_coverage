# Automatically generated by Pynguin.
import pytest
import FileTransforms.header_utils as module_0
import json as module_1

def test_case_0():
    bool_0 = False
    var_0 = module_0.load_headers(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = 'read data from: {}'
    var_0 = module_0.load_headers(str_0)
    module_0.generate_header_lookup_dict(str_0)

def test_case_2():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0}
    var_0 = module_0.generate_header_lookup_dict(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b'\xa3\x8c5H#=\x12?\x81\x96a\xc315<\xdc'
    var_0 = module_1.detect_encoding(bytes_0)
    module_0.generate_header_lookup_dict(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'\xbd\x8c\xfd1\xd7\xe8\xdc\x91\xfb\x92FV\x9bC!\x8b'
    bytes_1 = b'\xac\xa6\xaa\x0e/\x97\xda\x1a\xc2<g\x13j\xa2'
    var_0 = module_0.enumerate_headers(bytes_0, bytes_1)
    assert var_0 == b'\xbd\x8c\xfd1\xd7\xe8\xdc\x91\xfb\x92FV\x9bC!\x8b'
    var_1 = module_0.load_headers(bytes_0)
    module_0.generate_header_lookup_dict(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b'\x190\xb8F\xec\x074\xcb\x06\xf4\xdc%@\xc6'
    module_0.enumerate_headers(bytes_0, bytes_0)