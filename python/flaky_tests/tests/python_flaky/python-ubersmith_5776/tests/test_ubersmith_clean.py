# Automatically generated by Pynguin.
import pytest
import ubersmith.clean as module_0
import codecs as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    set_0 = set()
    module_0.php(set_0)

def test_case_1():
    none_type_0 = None
    var_0 = module_0.decimal(none_type_0)

def test_case_2():
    bool_0 = False
    var_0 = module_0.decimal(bool_0)
    assert f'{type(var_0).__module__}.{type(var_0).__qualname__}' == 'decimal.Decimal'

def test_case_3():
    none_type_0 = None
    var_0 = module_0.int(none_type_0)

def test_case_4():
    bool_0 = True
    var_0 = module_0.int(bool_0)
    assert var_0 == 1

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'z7T~\x0c\x0czt'
    module_0.clean(str_0)

def test_case_6():
    bool_0 = True
    var_0 = module_0.timestamp(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 465
    module_0.date(int_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = 'z7T~\x0c\x0czt'
    module_0.int(str_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'B`u=K>3s#9]yKo\x0c;k'
    module_0.decimal(str_0)

def test_case_10():
    str_0 = ''
    var_0 = module_0.int(str_0)

def test_case_11():
    str_0 = ''
    var_0 = module_0.decimal(str_0)

def test_case_12():
    str_0 = 'date'
    clean_0 = module_0.clean(str_0, str_0)
    assert f'{type(clean_0).__module__}.{type(clean_0).__qualname__}' == 'ubersmith.clean.clean'
    assert f'{type(clean_0.cleaner).__module__}.{type(clean_0.cleaner).__qualname__}' == 'phpserialize.phpobject'
    assert f'{type(clean_0.keys).__module__}.{type(clean_0.keys).__qualname__}' == 'phpserialize.phpobject'
    assert clean_0.values is None
    assert clean_0.raises is False

def test_case_13():
    str_0 = 'date'
    clean_0 = module_0.clean(str_0, values=str_0)
    assert f'{type(clean_0).__module__}.{type(clean_0).__qualname__}' == 'ubersmith.clean.clean'
    assert f'{type(clean_0.cleaner).__module__}.{type(clean_0.cleaner).__qualname__}' == 'phpserialize.phpobject'
    assert clean_0.keys is None
    assert f'{type(clean_0.values).__module__}.{type(clean_0.values).__qualname__}' == 'phpserialize.phpobject'
    assert clean_0.raises is False

def test_case_14():
    str_0 = 'date'
    clean_0 = module_0.clean(str_0, str_0)
    assert f'{type(clean_0).__module__}.{type(clean_0).__qualname__}' == 'ubersmith.clean.clean'
    assert f'{type(clean_0.cleaner).__module__}.{type(clean_0.cleaner).__qualname__}' == 'phpserialize.phpobject'
    assert f'{type(clean_0.keys).__module__}.{type(clean_0.keys).__qualname__}' == 'phpserialize.phpobject'
    assert clean_0.values is None
    assert clean_0.raises is False
    clean_1 = module_0.clean(clean_0, clean_0, str_0)
    assert f'{type(clean_1).__module__}.{type(clean_1).__qualname__}' == 'ubersmith.clean.clean'
    assert f'{type(clean_1.values).__module__}.{type(clean_1.values).__qualname__}' == 'phpserialize.phpobject'
    assert clean_1.raises is False

def test_case_15():
    str_0 = 'date'
    clean_0 = module_0.clean(str_0, str_0)
    assert f'{type(clean_0).__module__}.{type(clean_0).__qualname__}' == 'ubersmith.clean.clean'
    assert f'{type(clean_0.cleaner).__module__}.{type(clean_0.cleaner).__qualname__}' == 'phpserialize.phpobject'
    assert f'{type(clean_0.keys).__module__}.{type(clean_0.keys).__qualname__}' == 'phpserialize.phpobject'
    assert clean_0.values is None
    assert clean_0.raises is False
    clean_1 = module_0.clean(clean_0, values=clean_0, raises=clean_0)
    assert f'{type(clean_1).__module__}.{type(clean_1).__qualname__}' == 'ubersmith.clean.clean'
    assert clean_1.keys is None

@pytest.mark.xfail(strict=True)
def test_case_16():
    str_0 = 'date'
    clean_0 = module_1.make_identity_dict(str_0)
    module_0.clean(str_0, clean_0)

def test_case_17():
    str_0 = 'date'
    dict_0 = {}
    clean_0 = module_0.clean(str_0, dict_0, dict_0)
    assert f'{type(clean_0).__module__}.{type(clean_0).__qualname__}' == 'ubersmith.clean.clean'
    assert f'{type(clean_0.cleaner).__module__}.{type(clean_0.cleaner).__qualname__}' == 'phpserialize.phpobject'
    assert clean_0.keys == {}
    assert clean_0.values == {}
    assert clean_0.raises is False

def test_case_18():
    str_0 = 'date'
    dict_0 = {}
    none_type_0 = None
    clean_0 = module_0.clean(str_0, values=dict_0, raises=none_type_0)
    assert f'{type(clean_0).__module__}.{type(clean_0).__qualname__}' == 'ubersmith.clean.clean'
    assert f'{type(clean_0.cleaner).__module__}.{type(clean_0.cleaner).__qualname__}' == 'phpserialize.phpobject'
    assert clean_0.keys is None
    assert clean_0.values == {}
    assert clean_0.raises is None

def test_case_19():
    str_0 = 'date'
    dict_0 = {str_0: str_0, str_0: str_0}
    none_type_0 = None
    clean_0 = module_0.clean(str_0, values=dict_0, raises=none_type_0)
    assert f'{type(clean_0).__module__}.{type(clean_0).__qualname__}' == 'ubersmith.clean.clean'
    assert f'{type(clean_0.cleaner).__module__}.{type(clean_0.cleaner).__qualname__}' == 'phpserialize.phpobject'
    assert clean_0.keys is None
    assert f'{type(clean_0.values).__module__}.{type(clean_0.values).__qualname__}' == 'builtins.dict'
    assert len(clean_0.values) == 1
    assert clean_0.raises is None
    clean_1 = module_0.clean(clean_0)
    assert f'{type(clean_1).__module__}.{type(clean_1).__qualname__}' == 'ubersmith.clean.clean'
    assert clean_1.keys is None
    assert clean_1.values is None
    assert clean_1.raises is False

@pytest.mark.xfail(strict=True)
def test_case_20():
    str_0 = 'date'
    dict_0 = {str_0: str_0, str_0: str_0}
    clean_0 = module_0.clean(str_0, dict_0, dict_0, dict_0)
    module_0.int(clean_0)

@pytest.mark.xfail(strict=True)
def test_case_21():
    str_0 = 'date'
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0}
    clean_0 = module_0.clean(str_0, str_0, dict_0, str_0)
    assert f'{type(clean_0).__module__}.{type(clean_0).__qualname__}' == 'ubersmith.clean.clean'
    assert f'{type(clean_0.cleaner).__module__}.{type(clean_0.cleaner).__qualname__}' == 'phpserialize.phpobject'
    assert f'{type(clean_0.keys).__module__}.{type(clean_0.keys).__qualname__}' == 'phpserialize.phpobject'
    assert f'{type(clean_0.values).__module__}.{type(clean_0.values).__qualname__}' == 'builtins.dict'
    assert len(clean_0.values) == 1
    assert clean_0.raises == 'date'
    clean_1 = module_0.clean(clean_0, values=str_0, raises=dict_0)
    assert f'{type(clean_1).__module__}.{type(clean_1).__qualname__}' == 'ubersmith.clean.clean'
    assert clean_1.keys is None
    assert f'{type(clean_1.values).__module__}.{type(clean_1.values).__qualname__}' == 'phpserialize.phpobject'
    assert f'{type(clean_1.raises).__module__}.{type(clean_1.raises).__qualname__}' == 'builtins.dict'
    assert len(clean_1.raises) == 1
    clean_2 = module_0.clean(str_0, dict_0, dict_0, dict_0)
    none_type_0 = None
    var_0 = module_1.BufferedIncrementalEncoder()
    module_0.clean(none_type_0, raises=dict_0)