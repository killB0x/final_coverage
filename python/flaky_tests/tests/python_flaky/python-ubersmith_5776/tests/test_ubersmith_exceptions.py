# Automatically generated by Pynguin.
import pytest
import ubersmith.exceptions as module_0

def test_case_0():
    int_0 = 3681
    maintenance_response_0 = module_0.MaintenanceResponse(int_0)
    assert f'{type(maintenance_response_0).__module__}.{type(maintenance_response_0).__qualname__}' == 'ubersmith.exceptions.MaintenanceResponse'
    assert maintenance_response_0.msg == 3681
    assert module_0.MaintenanceResponse.msg == 'Ubersmith is currently undergoing maintenance.'
    maintenance_response_1 = module_0.MaintenanceResponse()

def test_case_1():
    request_error_0 = module_0.RequestError()
    assert module_0.RequestError.msg == 'An error occured with the request to the Ubersmith API.'
    var_0 = request_error_0.__str__()
    assert var_0 == 'An error occured with the request to the Ubersmith API.'
    validation_error_0 = module_0.ValidationError()
    assert module_0.ValidationError.msg == 'The request data was invalid for the Ubersmith request.'

@pytest.mark.xfail(strict=True)
def test_case_2():
    request_error_0 = module_0.RequestError()
    assert module_0.RequestError.msg == 'An error occured with the request to the Ubersmith API.'
    var_0 = request_error_0.__str__()
    assert var_0 == 'An error occured with the request to the Ubersmith API.'
    maintenance_response_0 = module_0.MaintenanceResponse()
    assert f'{type(maintenance_response_0).__module__}.{type(maintenance_response_0).__qualname__}' == 'ubersmith.exceptions.MaintenanceResponse'
    assert module_0.MaintenanceResponse.msg == 'Ubersmith is currently undergoing maintenance.'
    var_1 = maintenance_response_0.__str__()
    assert var_1 == 'Ubersmith is currently undergoing maintenance.'
    var_2 = maintenance_response_0.__str__()
    assert var_2 == 'Ubersmith is currently undergoing maintenance.'
    module_0.MaintenanceResponse(response=var_1)