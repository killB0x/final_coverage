# Automatically generated by Pynguin.
import pytest
import growler.responder as module_0

def test_case_0():
    responder_handler_0 = module_0.ResponderHandler()
    assert f'{type(module_0.ResponderHandler.socket).__module__}.{type(module_0.ResponderHandler.socket).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ResponderHandler.peername).__module__}.{type(module_0.ResponderHandler.peername).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ResponderHandler.cipher).__module__}.{type(module_0.ResponderHandler.cipher).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ResponderHandler.remote_hostname).__module__}.{type(module_0.ResponderHandler.remote_hostname).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ResponderHandler.remote_port).__module__}.{type(module_0.ResponderHandler.remote_port).__qualname__}' == 'builtins.property'
    assert f'{type(module_0.ResponderHandler.transport).__module__}.{type(module_0.ResponderHandler.transport).__qualname__}' == 'builtins.member_descriptor'

def test_case_1():
    bytes_0 = b'\x93"\xef\xfb\xab\xf0\xee\xcb\x05h\x90\xa8\x8cny!F8\xd8'
    coroutine_responder_0 = module_0.CoroutineResponder(bytes_0)
    assert f'{type(coroutine_responder_0).__module__}.{type(coroutine_responder_0).__qualname__}' == 'growler.responder.CoroutineResponder'

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    int_0 = 1713
    coroutine_responder_0 = module_0.CoroutineResponder(int_0)
    assert f'{type(coroutine_responder_0).__module__}.{type(coroutine_responder_0).__qualname__}' == 'growler.responder.CoroutineResponder'
    coroutine_responder_0.on_data(none_type_0)