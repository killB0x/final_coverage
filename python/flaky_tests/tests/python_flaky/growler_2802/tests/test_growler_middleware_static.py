# Automatically generated by Pynguin.
import pytest
import growler.middleware.static as module_0
import enum as module_1
import collections as module_2

def test_case_0():
    none_type_0 = None
    with pytest.raises(TypeError):
        module_0.Static(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    static_0 = module_0.Static(set_0)
    assert f'{type(static_0).__module__}.{type(static_0).__qualname__}' == 'growler.middleware.static.Static'
    assert f'{type(static_0.log).__module__}.{type(static_0.log).__qualname__}' == 'logging.Logger'
    assert f'{type(static_0.path).__module__}.{type(static_0.path).__qualname__}' == 'pathlib.PosixPath'
    static_1 = module_0.Static(set_0)
    static_2 = module_0.Static(set_0)
    static_0.calculate_etag(static_2)

def test_case_2():
    str_0 = 'd*-"@M)=z*J7w~9y\'('
    with pytest.raises(NotADirectoryError):
        module_0.Static(str_0)

def test_case_3():
    var_0 = module_1._EnumDict()
    static_0 = module_0.Static(var_0)
    assert f'{type(static_0).__module__}.{type(static_0).__qualname__}' == 'growler.middleware.static.Static'
    assert f'{type(static_0.log).__module__}.{type(static_0.log).__qualname__}' == 'logging.Logger'
    assert f'{type(static_0.path).__module__}.{type(static_0.path).__qualname__}' == 'pathlib.PosixPath'

@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b'\xf4\xc5L\x87\xda\xb3\r\x06\x14/IZ="\xff\xb0\xcc'
    ordered_dict_items_view_0 = module_2._OrderedDictItemsView(bytes_0)
    module_0.Static(ordered_dict_items_view_0)