# Automatically generated by Pynguin.
import pytest
import mcpartools.scheduler.base as module_0

def test_case_0():
    none_type_0 = None
    job_scheduler_0 = module_0.JobScheduler(none_type_0)
    assert f'{type(job_scheduler_0).__module__}.{type(job_scheduler_0).__qualname__}' == 'mcpartools.scheduler.base.JobScheduler'
    assert job_scheduler_0.options_header == '# no user options provided'
    assert job_scheduler_0.options_args == ''
    assert module_0.JobScheduler.submit_script == 'submit.sh'
    assert module_0.JobScheduler.main_run_script == 'main_run.sh'

def test_case_1():
    bool_0 = False
    module_0.JobScheduler(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    job_scheduler_0 = module_0.JobScheduler(none_type_0)
    assert f'{type(job_scheduler_0).__module__}.{type(job_scheduler_0).__qualname__}' == 'mcpartools.scheduler.base.JobScheduler'
    assert job_scheduler_0.options_header == '# no user options provided'
    assert job_scheduler_0.options_args == ''
    assert module_0.JobScheduler.submit_script == 'submit.sh'
    assert module_0.JobScheduler.main_run_script == 'main_run.sh'
    job_scheduler_0.main_run_script_body(job_scheduler_0, job_scheduler_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    list_0 = []
    dict_0 = {}
    job_scheduler_0 = module_0.JobScheduler(none_type_0)
    assert f'{type(job_scheduler_0).__module__}.{type(job_scheduler_0).__qualname__}' == 'mcpartools.scheduler.base.JobScheduler'
    assert job_scheduler_0.options_header == '# no user options provided'
    assert job_scheduler_0.options_args == ''
    assert module_0.JobScheduler.submit_script == 'submit.sh'
    assert module_0.JobScheduler.main_run_script == 'main_run.sh'
    job_scheduler_0.write_submit_script(none_type_0, none_type_0, dict_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    module_0.JobScheduler(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b'\x0e\x0e'
    str_0 = "' R>0oc!"
    job_scheduler_0 = module_0.JobScheduler(str_0)
    assert f'{type(job_scheduler_0).__module__}.{type(job_scheduler_0).__qualname__}' == 'mcpartools.scheduler.base.JobScheduler'
    assert job_scheduler_0.options_header == '# no user options provided'
    assert job_scheduler_0.options_args == ' R>0oc'
    assert module_0.JobScheduler.submit_script == 'submit.sh'
    assert module_0.JobScheduler.main_run_script == 'main_run.sh'
    job_scheduler_0.write_main_run_script(bytes_0, str_0)