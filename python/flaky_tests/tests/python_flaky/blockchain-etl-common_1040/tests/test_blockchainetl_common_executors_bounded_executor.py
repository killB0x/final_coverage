# Automatically generated by Pynguin.
import pytest
import blockchainetl_common.executors.bounded_executor as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    list_0 = []
    module_0.BoundedExecutor(list_0, list_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 2804
    int_1 = 10
    bounded_executor_0 = module_0.BoundedExecutor(int_1, int_0)
    assert f'{type(bounded_executor_0).__module__}.{type(bounded_executor_0).__qualname__}' == 'blockchainetl_common.executors.bounded_executor.BoundedExecutor'
    list_0 = [int_1]
    var_0 = bounded_executor_0.submit(int_1, *list_0)
    var_1 = bounded_executor_0.shutdown()
    var_1.shutdown()

@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 2804
    int_1 = 10
    bounded_executor_0 = module_0.BoundedExecutor(int_1, int_0)
    assert f'{type(bounded_executor_0).__module__}.{type(bounded_executor_0).__qualname__}' == 'blockchainetl_common.executors.bounded_executor.BoundedExecutor'
    var_0 = bounded_executor_0.shutdown()
    var_0.shutdown()