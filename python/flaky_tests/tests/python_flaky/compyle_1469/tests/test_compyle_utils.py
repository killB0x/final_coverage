# Automatically generated by Pynguin.
import pytest
import compyle.utils as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b'\xc4\x9d'
    module_0.getsourcelines(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_0.getsource(bool_0)

def test_case_2():
    argument_parser_0 = module_0.ArgumentParser()
    assert f'{type(argument_parser_0).__module__}.{type(argument_parser_0).__qualname__}' == 'compyle.utils.ArgumentParser'
    assert argument_parser_0.description is None
    assert argument_parser_0.argument_default is None
    assert argument_parser_0.prefix_chars == '-'
    assert argument_parser_0.conflict_handler == 'error'
    assert argument_parser_0.prog == 'pynguin'
    assert argument_parser_0.usage is None
    assert argument_parser_0.epilog is None
    assert argument_parser_0.fromfile_prefix_chars is None
    assert argument_parser_0.add_help is True
    assert argument_parser_0.allow_abbrev is True
    assert argument_parser_0.exit_on_error is True
    var_0 = argument_parser_0.parse_known_args()

@pytest.mark.xfail(strict=True)
def test_case_3():
    argument_parser_0 = module_0.ArgumentParser()
    assert f'{type(argument_parser_0).__module__}.{type(argument_parser_0).__qualname__}' == 'compyle.utils.ArgumentParser'
    assert argument_parser_0.description is None
    assert argument_parser_0.argument_default is None
    assert argument_parser_0.prefix_chars == '-'
    assert argument_parser_0.conflict_handler == 'error'
    assert argument_parser_0.prog == 'pynguin'
    assert argument_parser_0.usage is None
    assert argument_parser_0.epilog is None
    assert argument_parser_0.fromfile_prefix_chars is None
    assert argument_parser_0.add_help is True
    assert argument_parser_0.allow_abbrev is True
    assert argument_parser_0.exit_on_error is True
    module_0.getsourcelines(argument_parser_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    argument_parser_0 = module_0.ArgumentParser()
    assert f'{type(argument_parser_0).__module__}.{type(argument_parser_0).__qualname__}' == 'compyle.utils.ArgumentParser'
    assert argument_parser_0.description is None
    assert argument_parser_0.argument_default is None
    assert argument_parser_0.prefix_chars == '-'
    assert argument_parser_0.conflict_handler == 'error'
    assert argument_parser_0.prog == 'pynguin'
    assert argument_parser_0.usage is None
    assert argument_parser_0.epilog is None
    assert argument_parser_0.fromfile_prefix_chars is None
    assert argument_parser_0.add_help is True
    assert argument_parser_0.allow_abbrev is True
    assert argument_parser_0.exit_on_error is True
    argument_parser_0.parse_args()