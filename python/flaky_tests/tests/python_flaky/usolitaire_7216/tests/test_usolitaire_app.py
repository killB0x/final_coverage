# Automatically generated by Pynguin.
import pytest
import usolitaire.app as module_0
import urwid.split_repr as module_1

def test_case_0():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'

def test_case_1():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    var_0 = game_app_0.stock_clicked(game_app_0)

def test_case_2():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    var_0 = game_app_0.redeal_stock(game_app_0)

def test_case_3():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    var_0 = game_app_0.clear_selection()

@pytest.mark.xfail(strict=True)
def test_case_4():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    game_app_0.pile_card_clicked(game_app_0)

def test_case_5():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    var_0 = game_app_0.waste_card_double_clicked(game_app_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    game_app_0.pile_card_double_clicked(game_app_0, game_app_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    game_app_0.pile_card_double_clicked(game_app_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    none_type_0 = None
    var_0 = game_app_0.redeal_stock(none_type_0)
    var_1 = module_1.normalize_repr(none_type_0)
    var_2 = module_0.exit_on_q(var_1)
    var_3 = game_app_0.update_status(append=var_1)
    var_4 = game_app_0.waste_card_double_clicked(none_type_0)
    game_app_0.pile_card_clicked(none_type_0)

def test_case_9():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    var_0 = module_0.exit_on_q(game_app_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    game_app_0.pile_card_clicked(game_app_0, game_app_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    game_app_0 = module_0.GameApp()
    assert f'{type(game_app_0).__module__}.{type(game_app_0).__qualname__}' == 'usolitaire.app.GameApp'
    assert f'{type(game_app_0.game).__module__}.{type(game_app_0.game).__qualname__}' == 'usolitaire.game.Game'
    assert f'{type(game_app_0.current_selection).__module__}.{type(game_app_0.current_selection).__qualname__}' == 'usolitaire.app.Selection'
    assert len(game_app_0.current_selection) == 2
    assert f'{type(game_app_0.main_layout).__module__}.{type(game_app_0.main_layout).__qualname__}' == 'urwid.container.Pile'
    var_0 = game_app_0.stock_clicked(game_app_0)
    var_1 = game_app_0.waste_card_double_clicked(game_app_0, game_app_0)
    var_2 = game_app_0.update_status()
    var_3 = game_app_0.clear_selection()
    var_4 = game_app_0.update_status()
    game_app_0.pile_card_clicked(var_4, var_3)