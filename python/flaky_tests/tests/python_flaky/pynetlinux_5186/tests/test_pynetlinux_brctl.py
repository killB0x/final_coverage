# Automatically generated by Pynguin.
import pytest
import pynetlinux.brctl as module_0
import re as module_1
import pynetlinux.ifconfig as module_2

def test_case_0():
    var_0 = module_0.shutdown()
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8

def test_case_1():
    var_0 = module_0.list_bridges()
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8

def test_case_2():
    var_0 = module_1.purge()
    var_1 = module_0.findif(var_0)
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8

def test_case_3():
    bool_0 = False
    var_0 = module_0.findbridge(bool_0)
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    var_0 = module_0.iterbridges()
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8
    module_0.addbr(none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    bridge_0 = module_0.Bridge(bool_0)
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8
    bridge_0.addif(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    var_0 = module_2.init()
    bridge_0 = module_0.Bridge(var_0)
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8
    var_1 = module_0.findif(var_0)
    bridge_0.listif()

@pytest.mark.xfail(strict=True)
def test_case_7():
    var_0 = module_0.list_bridges()
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8
    bridge_0 = module_0.Bridge(var_0)
    assert bridge_0.name == []
    bridge_0.delif(bridge_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bytes_0 = b'\xe3f\xc5E\n/\xed\x13\xd4\x1f\xa1\x1f\x94\xb2\xd1'
    bridge_0 = module_0.Bridge(bytes_0)
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8
    bridge_0.delete()

@pytest.mark.xfail(strict=True)
def test_case_9():
    dict_0 = {}
    bridge_0 = module_0.Bridge(dict_0)
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8
    bridge_0.set_forward_delay(dict_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    var_0 = module_2.init()
    bridge_0 = module_0.Bridge(var_0)
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8
    var_1 = bridge_0.get_ip()
    assert var_1 == '0.0.0.0'
    bridge_0.set_netmask(bridge_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    none_type_0 = None
    var_0 = module_0.findbridge(none_type_0)
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8
    var_1 = module_2.Interface(var_0)
    var_2 = module_0.findbridge(none_type_0)
    var_3 = module_0.findif(none_type_0)
    bridge_0 = module_0.Bridge(var_3)
    bridge_0.addif(var_1)

@pytest.mark.xfail(strict=True)
def test_case_12():
    none_type_0 = None
    var_0 = module_0.findbridge(none_type_0)
    assert module_0.SIOCBRADDBR == 35232
    assert module_0.SIOCBRDELBR == 35233
    assert module_0.SIOCBRADDIF == 35234
    assert module_0.SIOCBRDELIF == 35235
    assert module_0.SIOCDEVPRIVATE == 35312
    assert module_0.BRCTL_SET_BRIDGE_FORWARD_DELAY == 8
    var_1 = module_0.findif(none_type_0)
    var_2 = module_2.Interface(var_1)
    bridge_0 = module_0.Bridge(var_1)
    bridge_0.delif(var_2)