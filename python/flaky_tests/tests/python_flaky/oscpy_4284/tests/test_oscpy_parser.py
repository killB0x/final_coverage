# Automatically generated by Pynguin.
import pytest
import oscpy.parser as module_0

def test_case_0():
    var_0 = module_0.parse_false()
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800

@pytest.mark.xfail(strict=True)
def test_case_1():
    bytes_0 = b'\xbd'
    module_0.read_message(bytes_0, encoding=bytes_0, encoding_errors=bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b'T'
    var_0 = module_0.format_midi(bytes_0)
    assert var_0 == 1409286144
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    int_0 = -1646
    module_0.read_packet(int_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.format_midi(tuple_0)
    assert var_0 == 0
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    module_0.padded(tuple_0, tuple_0)

def test_case_4():
    float_0 = -184.98742630244357
    with pytest.raises(ValueError):
        module_0.parse(float_0, float_0, encoding=float_0)

def test_case_5():
    bytes_0 = b'\xbd"\x1d\x9f\xca'
    var_0 = module_0.format_message(bytes_0, bytes_0, encoding_errors=bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800

@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b'W\xea\xfcHy\xba\x10y9}\x9fPO\x92Y\x01rZ\t'
    module_0.format_bundle(bytes_0)

def test_case_7():
    bytes_0 = b'/U\x00}r\xbbE\x8aW\x0b2'
    bool_0 = True
    var_0 = module_0.time_to_timetag(bool_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    var_1 = module_0.format_message(bytes_0, bytes_0)
    var_2 = bytes_0.__add__(bytes_0)
    with pytest.raises(ValueError):
        module_0.read_packet(var_2, var_2)

@pytest.mark.xfail(strict=True)
def test_case_8():
    tuple_0 = ()
    module_0.timetag_to_time(tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    none_type_0 = None
    var_0 = module_0.format_nil(none_type_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    module_0.parse_int(var_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    int_0 = 885
    module_0.parse_float(int_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    float_0 = -3497.581
    str_0 = "vG-1'"
    dict_0 = {str_0: float_0}
    module_0.parse_blob(float_0, float_0, **dict_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    bytes_0 = b'#bundle'
    var_0 = module_0.parse_midi(bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    var_1 = module_0.format_message(bytes_0, bytes_0, bytes_0, bytes_0)
    module_0.read_packet(bytes_0, encoding=bytes_0, encoding_errors=bytes_0)

def test_case_13():
    var_0 = module_0.parse_true()
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800

def test_case_14():
    bytes_0 = b'\xfb/_oscpy/ersion'
    var_0 = module_0.format_true(bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    with pytest.raises(ValueError):
        module_0.read_packet(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_15():
    bytes_0 = b'#bundle'
    var_0 = module_0.format_message(bytes_0, bytes_0, bytes_0, bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    var_1 = module_0.format_false(var_0)
    module_0.read_packet(bytes_0, encoding=bytes_0, encoding_errors=bytes_0)

def test_case_16():
    var_0 = module_0.parse_nil()
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800

def test_case_17():
    var_0 = module_0.parse_infinitum()
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800

@pytest.mark.xfail(strict=True)
def test_case_18():
    bytes_0 = b'#bundle'
    var_0 = module_0.format_infinitum(bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    module_0.read_packet(bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_19():
    bytes_0 = b'=$YK\x83\xcf\xc0\x01N\xd2\xa3Q'
    var_0 = module_0.format_message(bytes_0, bytes_0, bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    var_1 = module_0.format_infinitum(bytes_0)
    var_2 = module_0.format_bundle(var_1)
    module_0.read_message(bytes_0)

def test_case_20():
    bytes_0 = b'\xc9\xe6\xfa\xb4\x1f\xd8^6De'
    with pytest.raises(ValueError):
        module_0.read_bundle(bytes_0)

def test_case_21():
    bytes_0 = b'=$YK\x83\xcf\xc0\x01N\xd2\xa3Q'
    var_0 = module_0.format_message(bytes_0, bytes_0, bytes_0, bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800

def test_case_22():
    bytes_0 = b'\xbd"\x1d\x9f\xca'
    with pytest.raises(ValueError):
        module_0.read_packet(bytes_0)

def test_case_23():
    bytes_0 = b'\xbd"\x1d\x9f\xca'
    var_0 = module_0.format_message(bytes_0, bytes_0, bytes_0, bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    with pytest.raises(TypeError):
        module_0.format_message(var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_24():
    str_0 = 'q.q#a='
    module_0.format_message(str_0, str_0, str_0, str_0)

def test_case_25():
    bytes_0 = b'\xbd"\x1d\x9f\xca'
    str_0 = 'c{2gMwM:e[]s"nsr'
    with pytest.raises(TypeError):
        module_0.format_message(bytes_0, str_0)

def test_case_26():
    bytes_0 = b'\xbd\x00\xe5"\x1d\x9f\xca'
    with pytest.raises(ValueError):
        module_0.read_message(bytes_0, encoding_errors=bytes_0)

def test_case_27():
    bytes_0 = b'\xbd"\x1d\x9f\xca'
    str_0 = 'z.1\x0cOR:m{$MP\x0bGTfV'
    with pytest.raises(TypeError):
        module_0.format_message(str_0, bytes_0, bytes_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_28():
    bytes_0 = b'/_oscpy/version'
    var_0 = module_0.format_message(bytes_0, bytes_0, bytes_0, bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    module_0.read_packet(bytes_0)

def test_case_29():
    bytes_0 = b'\xbd"\x1d\x9f\xca'
    var_0 = module_0.format_message(bytes_0, bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    var_1 = module_0.parse_nil()
    with pytest.raises(AssertionError):
        module_0.format_message(var_0, var_1, var_0)

@pytest.mark.xfail(strict=True)
def test_case_30():
    bytes_0 = b'}\xc8\xd0\xc8oU9\x8d\xc0'
    var_0 = module_0.format_message(bytes_0, bytes_0, bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    bytes_1 = b's'
    module_0.parse(bytes_1, var_0, bytes_1, bytes_1)

@pytest.mark.xfail(strict=True)
def test_case_31():
    none_type_0 = None
    var_0 = module_0.time_to_timetag(none_type_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    var_1 = module_0.timetag_to_time(var_0)
    assert var_1 == pytest.approx(1665626263.2326252, abs=0.01, rel=0.01)
    module_0.read_packet(none_type_0, none_type_0)

@pytest.mark.xfail(strict=True)
def test_case_32():
    bytes_0 = b'/U\x00}r\xbbE\x8aW\x0b2'
    module_0.read_packet(bytes_0, bytes_0, encoding_errors=bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_33():
    bytes_0 = b'/U\x00}r\xbbE\x8aW\x0b2'
    module_0.parse_string(bytes_0, encoding=bytes_0, encoding_errors=bytes_0)

def test_case_34():
    bytes_0 = b'#bundle\x00'
    var_0 = module_0.format_message(bytes_0, bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    var_1 = bytes_0.__add__(bytes_0)
    var_2 = module_0.read_packet(var_1)
    var_3 = module_0.format_false(var_2)

@pytest.mark.xfail(strict=True)
def test_case_35():
    bytes_0 = b'/U\x00}r\xbbE\x8aW\x0b2'
    str_0 = '!hXv!9+b#P]nyXv'
    dict_0 = {str_0: bytes_0, str_0: bytes_0, str_0: bytes_0}
    var_0 = module_0.parse_midi(bytes_0, **dict_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    var_1 = module_0.format_message(bytes_0, var_0, str_0)
    var_2 = module_0.parse_true(*var_0)
    var_3 = module_0.timetag_to_time(var_2)
    assert var_3 == pytest.approx(-2208988799.0, abs=0.01, rel=0.01)
    module_0.read_packet(var_0, encoding=bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_36():
    bytes_0 = b'#bundle'
    module_0.read_packet(bytes_0, encoding=bytes_0, encoding_errors=bytes_0)

def test_case_37():
    bytes_0 = b'/U\x00}r\xbbE\x8aW\x0b2'
    var_0 = bytes_0.__add__(bytes_0)
    with pytest.raises(ValueError):
        module_0.read_packet(var_0)

def test_case_38():
    bytes_0 = b'#bundle\xce'
    var_0 = bytes_0.__add__(bytes_0)
    var_1 = module_0.read_packet(var_0, bytes_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800

@pytest.mark.xfail(strict=True)
def test_case_39():
    bytes_0 = b'#bundle\xce'
    var_0 = bytes_0.__add__(bytes_0)
    var_1 = var_0.__add__(bytes_0)
    var_2 = module_0.read_packet(var_0, var_0)
    assert module_0.TP_PACKET_FORMAT == '!12I'
    assert module_0.NTP_DELTA == 2208988800
    module_0.read_packet(var_1, bytes_0)