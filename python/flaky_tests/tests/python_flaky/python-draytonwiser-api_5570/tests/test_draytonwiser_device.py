# Automatically generated by Pynguin.
import draytonwiser.device as module_0

def test_case_0():
    room_stat_0 = module_0.RoomStat()
    assert room_stat_0.parent_node_id is None
    assert room_stat_0.hardware_version is None
    assert room_stat_0.serial_number is None
    assert room_stat_0.product_model is None
    assert room_stat_0.reception_of_device == {'Rssi': None, 'Lqi': None}
    assert room_stat_0.ota_image_query_count == 0
    assert room_stat_0.last_ota_image_query_count == 0
    assert room_stat_0.ota_last_image_sent_bytes is None
    assert room_stat_0.id is None
    assert room_stat_0.node_id == 0
    assert room_stat_0.product_type is None
    assert room_stat_0.product_identifier is None
    assert room_stat_0.active_firmware_version is None
    assert room_stat_0.model_identifier is None
    assert room_stat_0.battery_voltage is None
    assert room_stat_0.battery_level is None
    assert room_stat_0.device_lock_enabled is None
    assert room_stat_0.displayed_signal_strength is None
    assert room_stat_0.reception_of_controller == {'Rssi': None, 'Lqi': None}
    assert f'{type(room_stat_0.measurement).__module__}.{type(room_stat_0.measurement).__qualname__}' == 'draytonwiser.device_measurement.DeviceMeasurement'
    assert room_stat_0.measurement_object_name == 'RoomStat'
    assert room_stat_0.room_id is None
    assert room_stat_0.api_secret == ''
    assert room_stat_0.wiser_hub_ip == ''
    assert room_stat_0.use_cache is True
    assert room_stat_0.refresh_interval == 5
    assert module_0.FULL_BATTERY_CAPACITY == 32
    var_0 = room_stat_0.has_measurement()
    assert var_0 is True
    var_1 = room_stat_0.get_battery_percentage()

def test_case_1():
    device_0 = module_0.Device()
    assert device_0.id is None
    assert device_0.node_id == 0
    assert device_0.product_type is None
    assert device_0.product_identifier is None
    assert device_0.active_firmware_version is None
    assert device_0.model_identifier is None
    assert device_0.battery_voltage is None
    assert device_0.battery_level is None
    assert device_0.device_lock_enabled is None
    assert device_0.displayed_signal_strength is None
    assert device_0.reception_of_controller == {'Rssi': None, 'Lqi': None}
    assert f'{type(device_0.measurement).__module__}.{type(device_0.measurement).__qualname__}' == 'draytonwiser.device_measurement.DeviceMeasurement'
    assert device_0.measurement_object_name is None
    assert device_0.room_id is None
    assert device_0.api_secret == ''
    assert device_0.wiser_hub_ip == ''
    assert device_0.use_cache is True
    assert device_0.refresh_interval == 5
    assert module_0.FULL_BATTERY_CAPACITY == 32
    assert f'{type(module_0.Device.create).__module__}.{type(module_0.Device.create).__qualname__}' == 'builtins.method'
    var_0 = device_0.has_measurement()
    assert var_0 is False
    i_t_r_v_0 = module_0.iTRV()
    assert i_t_r_v_0.parent_node_id is None
    assert i_t_r_v_0.hardware_version is None
    assert i_t_r_v_0.serial_number is None
    assert i_t_r_v_0.product_model is None
    assert i_t_r_v_0.reception_of_device == {'Rssi': None, 'Lqi': None}
    assert i_t_r_v_0.ota_image_query_count == 0
    assert i_t_r_v_0.last_ota_image_query_count == 0
    assert i_t_r_v_0.ota_last_image_sent_bytes is None
    assert i_t_r_v_0.pending_zigbee_message_mask is None
    assert i_t_r_v_0.id is None
    assert i_t_r_v_0.node_id == 0
    assert i_t_r_v_0.product_type is None
    assert i_t_r_v_0.product_identifier is None
    assert i_t_r_v_0.active_firmware_version is None
    assert i_t_r_v_0.model_identifier is None
    assert i_t_r_v_0.battery_voltage is None
    assert i_t_r_v_0.battery_level is None
    assert i_t_r_v_0.device_lock_enabled is None
    assert i_t_r_v_0.displayed_signal_strength is None
    assert i_t_r_v_0.reception_of_controller == {'Rssi': None, 'Lqi': None}
    assert f'{type(i_t_r_v_0.measurement).__module__}.{type(i_t_r_v_0.measurement).__qualname__}' == 'draytonwiser.device_measurement.DeviceMeasurement'
    assert i_t_r_v_0.measurement_object_name == 'SmartValve'
    assert i_t_r_v_0.room_id is None
    assert i_t_r_v_0.api_secret == ''
    assert i_t_r_v_0.wiser_hub_ip == ''
    assert i_t_r_v_0.use_cache is True
    assert i_t_r_v_0.refresh_interval == 5

def test_case_2():
    room_stat_0 = module_0.RoomStat()
    assert room_stat_0.parent_node_id is None
    assert room_stat_0.hardware_version is None
    assert room_stat_0.serial_number is None
    assert room_stat_0.product_model is None
    assert room_stat_0.reception_of_device == {'Rssi': None, 'Lqi': None}
    assert room_stat_0.ota_image_query_count == 0
    assert room_stat_0.last_ota_image_query_count == 0
    assert room_stat_0.ota_last_image_sent_bytes is None
    assert room_stat_0.id is None
    assert room_stat_0.node_id == 0
    assert room_stat_0.product_type is None
    assert room_stat_0.product_identifier is None
    assert room_stat_0.active_firmware_version is None
    assert room_stat_0.model_identifier is None
    assert room_stat_0.battery_voltage is None
    assert room_stat_0.battery_level is None
    assert room_stat_0.device_lock_enabled is None
    assert room_stat_0.displayed_signal_strength is None
    assert room_stat_0.reception_of_controller == {'Rssi': None, 'Lqi': None}
    assert f'{type(room_stat_0.measurement).__module__}.{type(room_stat_0.measurement).__qualname__}' == 'draytonwiser.device_measurement.DeviceMeasurement'
    assert room_stat_0.measurement_object_name == 'RoomStat'
    assert room_stat_0.room_id is None
    assert room_stat_0.api_secret == ''
    assert room_stat_0.wiser_hub_ip == ''
    assert room_stat_0.use_cache is True
    assert room_stat_0.refresh_interval == 5
    assert module_0.FULL_BATTERY_CAPACITY == 32
    var_0 = room_stat_0.get_battery_percentage()

def test_case_3():
    device_0 = module_0.Device()
    assert device_0.id is None
    assert device_0.node_id == 0
    assert device_0.product_type is None
    assert device_0.product_identifier is None
    assert device_0.active_firmware_version is None
    assert device_0.model_identifier is None
    assert device_0.battery_voltage is None
    assert device_0.battery_level is None
    assert device_0.device_lock_enabled is None
    assert device_0.displayed_signal_strength is None
    assert device_0.reception_of_controller == {'Rssi': None, 'Lqi': None}
    assert f'{type(device_0.measurement).__module__}.{type(device_0.measurement).__qualname__}' == 'draytonwiser.device_measurement.DeviceMeasurement'
    assert device_0.measurement_object_name is None
    assert device_0.room_id is None
    assert device_0.api_secret == ''
    assert device_0.wiser_hub_ip == ''
    assert device_0.use_cache is True
    assert device_0.refresh_interval == 5
    assert module_0.FULL_BATTERY_CAPACITY == 32
    assert f'{type(module_0.Device.create).__module__}.{type(module_0.Device.create).__qualname__}' == 'builtins.method'

def test_case_4():
    room_stat_0 = module_0.RoomStat()
    assert room_stat_0.parent_node_id is None
    assert room_stat_0.hardware_version is None
    assert room_stat_0.serial_number is None
    assert room_stat_0.product_model is None
    assert room_stat_0.reception_of_device == {'Rssi': None, 'Lqi': None}
    assert room_stat_0.ota_image_query_count == 0
    assert room_stat_0.last_ota_image_query_count == 0
    assert room_stat_0.ota_last_image_sent_bytes is None
    assert room_stat_0.id is None
    assert room_stat_0.node_id == 0
    assert room_stat_0.product_type is None
    assert room_stat_0.product_identifier is None
    assert room_stat_0.active_firmware_version is None
    assert room_stat_0.model_identifier is None
    assert room_stat_0.battery_voltage is None
    assert room_stat_0.battery_level is None
    assert room_stat_0.device_lock_enabled is None
    assert room_stat_0.displayed_signal_strength is None
    assert room_stat_0.reception_of_controller == {'Rssi': None, 'Lqi': None}
    assert f'{type(room_stat_0.measurement).__module__}.{type(room_stat_0.measurement).__qualname__}' == 'draytonwiser.device_measurement.DeviceMeasurement'
    assert room_stat_0.measurement_object_name == 'RoomStat'
    assert room_stat_0.room_id is None
    assert room_stat_0.api_secret == ''
    assert room_stat_0.wiser_hub_ip == ''
    assert room_stat_0.use_cache is True
    assert room_stat_0.refresh_interval == 5
    assert module_0.FULL_BATTERY_CAPACITY == 32
    var_0 = room_stat_0.get_room_id()
    var_1 = room_stat_0.get_battery_percentage()

def test_case_5():
    controller_0 = module_0.Controller()
    assert controller_0.id is None
    assert controller_0.node_id == 0
    assert controller_0.product_type is None
    assert controller_0.product_identifier is None
    assert controller_0.active_firmware_version is None
    assert controller_0.model_identifier is None
    assert controller_0.battery_voltage is None
    assert controller_0.battery_level is None
    assert controller_0.device_lock_enabled is None
    assert controller_0.displayed_signal_strength is None
    assert controller_0.reception_of_controller == {'Rssi': None, 'Lqi': None}
    assert f'{type(controller_0.measurement).__module__}.{type(controller_0.measurement).__qualname__}' == 'draytonwiser.device_measurement.DeviceMeasurement'
    assert controller_0.measurement_object_name is None
    assert controller_0.room_id is None
    assert controller_0.api_secret == ''
    assert controller_0.wiser_hub_ip == ''
    assert controller_0.use_cache is True
    assert controller_0.refresh_interval == 5
    assert module_0.FULL_BATTERY_CAPACITY == 32

def test_case_6():
    room_stat_0 = module_0.RoomStat()
    assert room_stat_0.parent_node_id is None
    assert room_stat_0.hardware_version is None
    assert room_stat_0.serial_number is None
    assert room_stat_0.product_model is None
    assert room_stat_0.reception_of_device == {'Rssi': None, 'Lqi': None}
    assert room_stat_0.ota_image_query_count == 0
    assert room_stat_0.last_ota_image_query_count == 0
    assert room_stat_0.ota_last_image_sent_bytes is None
    assert room_stat_0.id is None
    assert room_stat_0.node_id == 0
    assert room_stat_0.product_type is None
    assert room_stat_0.product_identifier is None
    assert room_stat_0.active_firmware_version is None
    assert room_stat_0.model_identifier is None
    assert room_stat_0.battery_voltage is None
    assert room_stat_0.battery_level is None
    assert room_stat_0.device_lock_enabled is None
    assert room_stat_0.displayed_signal_strength is None
    assert room_stat_0.reception_of_controller == {'Rssi': None, 'Lqi': None}
    assert f'{type(room_stat_0.measurement).__module__}.{type(room_stat_0.measurement).__qualname__}' == 'draytonwiser.device_measurement.DeviceMeasurement'
    assert room_stat_0.measurement_object_name == 'RoomStat'
    assert room_stat_0.room_id is None
    assert room_stat_0.api_secret == ''
    assert room_stat_0.wiser_hub_ip == ''
    assert room_stat_0.use_cache is True
    assert room_stat_0.refresh_interval == 5
    assert module_0.FULL_BATTERY_CAPACITY == 32

def test_case_7():
    i_t_r_v_0 = module_0.iTRV()
    assert i_t_r_v_0.parent_node_id is None
    assert i_t_r_v_0.hardware_version is None
    assert i_t_r_v_0.serial_number is None
    assert i_t_r_v_0.product_model is None
    assert i_t_r_v_0.reception_of_device == {'Rssi': None, 'Lqi': None}
    assert i_t_r_v_0.ota_image_query_count == 0
    assert i_t_r_v_0.last_ota_image_query_count == 0
    assert i_t_r_v_0.ota_last_image_sent_bytes is None
    assert i_t_r_v_0.pending_zigbee_message_mask is None
    assert i_t_r_v_0.id is None
    assert i_t_r_v_0.node_id == 0
    assert i_t_r_v_0.product_type is None
    assert i_t_r_v_0.product_identifier is None
    assert i_t_r_v_0.active_firmware_version is None
    assert i_t_r_v_0.model_identifier is None
    assert i_t_r_v_0.battery_voltage is None
    assert i_t_r_v_0.battery_level is None
    assert i_t_r_v_0.device_lock_enabled is None
    assert i_t_r_v_0.displayed_signal_strength is None
    assert i_t_r_v_0.reception_of_controller == {'Rssi': None, 'Lqi': None}
    assert f'{type(i_t_r_v_0.measurement).__module__}.{type(i_t_r_v_0.measurement).__qualname__}' == 'draytonwiser.device_measurement.DeviceMeasurement'
    assert i_t_r_v_0.measurement_object_name == 'SmartValve'
    assert i_t_r_v_0.room_id is None
    assert i_t_r_v_0.api_secret == ''
    assert i_t_r_v_0.wiser_hub_ip == ''
    assert i_t_r_v_0.use_cache is True
    assert i_t_r_v_0.refresh_interval == 5
    assert module_0.FULL_BATTERY_CAPACITY == 32