# Automatically generated by Pynguin.
import pytest
import gittask.GitTask as module_0
import platform as module_1
import encodings.utf_8 as module_2

@pytest.mark.xfail(strict=True)
def test_case_0():
    module_0.GitTask()

@pytest.mark.xfail(strict=True)
def test_case_1():
    module_0.GitTask()
    var_0 = git_task_0.add(git_task_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    module_0.GitTask()
    var_0 = git_task_0.rm(git_task_0)
    var_1 = git_task_0.ls()

@pytest.mark.xfail(strict=True)
def test_case_3():
    module_0.GitTask()
    var_0 = git_task_0.rm(git_task_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    module_0.GitTask()
    var_0 = git_task_0.q(git_task_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    module_0.GitTask()
    var_0 = git_task_0.reformat()

@pytest.mark.xfail(strict=True)
def test_case_6():
    module_0.GitTask()
    var_0 = git_task_0.ls()
    var_1 = git_task_0.rm(git_task_0)
    var_2 = git_task_0.install_git_alias()

@pytest.mark.xfail(strict=True)
def test_case_7():
    module_0.GitTask()
    var_0 = git_task_0.rm(git_task_0)
    var_1 = git_task_0.uninstall_git_alias()

def test_case_8():
    var_0 = module_1.processor()
    task_item_0 = module_0.TaskItem(var_0)
    assert f'{type(task_item_0).__module__}.{type(task_item_0).__qualname__}' == 'gittask.GitTask.TaskItem'

@pytest.mark.xfail(strict=True)
def test_case_9():
    module_0.GitTask()
    var_0 = git_task_0.ls()
    var_1 = git_task_0.rm(git_task_0)
    var_2 = git_task_0.reformat()
    var_3 = git_task_0.add(var_0, deadline=git_task_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    module_0.GitTask()

@pytest.mark.xfail(strict=True)
def test_case_11():
    module_0.GitTask()
    var_0 = git_task_0.rm(git_task_0)
    var_1 = var_0.__str__()
    var_2 = git_task_0.add(var_1)
    var_3 = git_task_0.rm(git_task_0)
    var_4 = git_task_0.ls()
    var_5 = git_task_0.reformat()
    var_6 = git_task_0.q(git_task_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    var_0 = module_2.getregentry()
    var_1 = var_0.__hash__()
    var_2 = var_1.__repr__()
    task_item_0 = module_0.TaskItem(var_2)
    assert f'{type(task_item_0).__module__}.{type(task_item_0).__qualname__}' == 'gittask.GitTask.TaskItem'
    var_3 = task_item_0.get_item()
    module_0.GitTask()

@pytest.mark.xfail(strict=True)
def test_case_13():
    var_0 = module_2.getregentry()
    var_1 = var_0.__repr__()
    task_item_0 = module_0.TaskItem(var_1)
    assert f'{type(task_item_0).__module__}.{type(task_item_0).__qualname__}' == 'gittask.GitTask.TaskItem'
    var_2 = task_item_0.get_details()
    var_3 = task_item_0.get_item()
    module_0.GitTask()