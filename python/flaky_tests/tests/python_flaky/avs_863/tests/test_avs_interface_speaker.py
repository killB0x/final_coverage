# Automatically generated by Pynguin.
import pytest
import avs.interface.speaker as module_0

def test_case_0():
    none_type_0 = None
    speaker_0 = module_0.Speaker(none_type_0)
    assert speaker_0.volume == 50
    assert f'{type(module_0.Speaker.context).__module__}.{type(module_0.Speaker.context).__qualname__}' == 'builtins.property'

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    speaker_0 = module_0.Speaker(bool_0)
    assert speaker_0.volume == 50
    assert f'{type(module_0.Speaker.context).__module__}.{type(module_0.Speaker.context).__qualname__}' == 'builtins.property'
    speaker_1 = module_0.Speaker(bool_0)
    assert speaker_1.volume == 50
    list_0 = [bool_0]
    bool_1 = False
    bytes_0 = b''
    speaker_2 = module_0.Speaker(bytes_0)
    assert speaker_2.volume == 50
    var_0 = speaker_2.CallbackSetVolume(bool_1)
    var_0.CallbackGetVolume(list_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = '\x0cwInUjB/j'
    bool_0 = False
    bool_1 = False
    speaker_0 = module_0.Speaker(bool_1)
    assert speaker_0.volume == 50
    assert f'{type(module_0.Speaker.context).__module__}.{type(module_0.Speaker.context).__qualname__}' == 'builtins.property'
    var_0 = speaker_0.CallbackGetVolume(bool_0)
    var_0.SetVolume(str_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    complex_0 = (4449.2+1327.240214j)
    speaker_0 = module_0.Speaker(complex_0)
    assert speaker_0.volume == 50
    assert f'{type(module_0.Speaker.context).__module__}.{type(module_0.Speaker.context).__qualname__}' == 'builtins.property'
    none_type_0 = None
    speaker_1 = module_0.Speaker(none_type_0)
    assert speaker_1.volume == 50
    speaker_1.VolumeChanged()

def test_case_4():
    bool_0 = False
    speaker_0 = module_0.Speaker(bool_0)
    assert speaker_0.volume == 50
    assert f'{type(module_0.Speaker.context).__module__}.{type(module_0.Speaker.context).__qualname__}' == 'builtins.property'
    var_0 = speaker_0.CallbackSetMute(speaker_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = -1998
    speaker_0 = module_0.Speaker(int_0)
    assert speaker_0.volume == 50
    assert f'{type(module_0.Speaker.context).__module__}.{type(module_0.Speaker.context).__qualname__}' == 'builtins.property'
    dict_0 = {}
    speaker_1 = module_0.Speaker(dict_0)
    assert speaker_1.volume == 50
    speaker_1.MuteChanged()