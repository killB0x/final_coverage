# Automatically generated by Pynguin.
import pytest
import runium.util as module_0
import builtins as module_1

def test_case_0():
    str_0 = "\n    Returns seconds which is time * scale.\n    If interval is a number or None then it will be returned as is.\n\n    Parameters\n    ----------\n    interval\n        Can be a number or a string in the following format: 'time scale'.\n        ie: '10 minutes'.\n    "
    with pytest.raises(ValueError):
        module_0.get_seconds(str_0)

def test_case_1():
    int_0 = -1106
    var_0 = module_0.get_seconds(int_0)
    assert var_0 == -1106

def test_case_2():
    object_0 = module_1.object()
    with pytest.raises(TypeError):
        module_0.get_seconds(object_0)

def test_case_3():
    none_type_0 = None
    var_0 = module_0.get_seconds(none_type_0)
    bool_0 = False
    var_1 = module_0.get_seconds(bool_0)
    var_2 = module_0.get_seconds(var_1)
    str_0 = '\r\n'
    with pytest.raises(ValueError):
        module_0.get_seconds(str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    var_0 = module_0.get_seconds(none_type_0)
    bool_0 = False
    var_1 = module_0.get_seconds(bool_0)
    var_2 = module_0.get_seconds(var_1)
    str_0 = '1\r'
    object_0 = module_1.object()
    module_0.get_seconds(str_0)

def test_case_5():
    str_0 = '\n3       Creates a nw Task, ad adds it to the tasks list.\n        Returns a Task objet.\n        '
    with pytest.raises(ValueError):
        module_0.get_seconds(str_0)