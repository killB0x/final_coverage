# Automatically generated by Pynguin.
import pytest
import osctiny.extensions.comments as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = 'us'
    comment_0 = module_0.Comment(str_0)
    assert module_0.Comment.base_path == '/comments/'
    assert module_0.Comment.allowed_object_types == {'project': 1, 'package': 2, 'request': 1}
    comment_0.get(str_0, comment_0)

def test_case_1():
    dict_0 = {}
    comment_0 = module_0.Comment(dict_0)
    assert module_0.Comment.base_path == '/comments/'
    assert module_0.Comment.allowed_object_types == {'project': 1, 'package': 2, 'request': 1}

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = 'request'
    comment_0 = module_0.Comment(str_0)
    assert module_0.Comment.base_path == '/comments/'
    assert module_0.Comment.allowed_object_types == {'project': 1, 'package': 2, 'request': 1}
    comment_0.add(str_0, str_0, comment_0, comment_0)

@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    str_0 = 'request'
    comment_0 = module_0.Comment(bool_0)
    assert module_0.Comment.base_path == '/comments/'
    assert module_0.Comment.allowed_object_types == {'project': 1, 'package': 2, 'request': 1}
    str_1 = '{\\"!ZO\\Vd@2'
    comment_1 = module_0.Comment(str_1)
    bool_1 = True
    list_0 = [bool_1]
    comment_0.add(str_0, list_0, bool_1, comment_1)