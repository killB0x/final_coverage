# Automatically generated by Pynguin.
import typed_ast._ast3 as module_0
import py_backwards.transformers.functions_annotations as module_1


def test_case_0():
    str_0 = "_7\rm#Jwy,Sx"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    u_sub_0 = module_0.USub(**dict_0)
    functions_annotations_transformer_0 = module_1.FunctionsAnnotationsTransformer(
        u_sub_0
    )


def test_case_1():
    arg_0 = module_0.arg()
    starred_0 = module_0.Starred()
    functions_annotations_transformer_0 = module_1.FunctionsAnnotationsTransformer(
        arg_0
    )
    list_0 = [starred_0, starred_0, starred_0]
    arguments_0 = module_0.arguments(*list_0)
    functions_annotations_transformer_1 = module_1.FunctionsAnnotationsTransformer(
        arguments_0
    )
    arg_1 = functions_annotations_transformer_1.visit_arg(arg_0)


def test_case_2():
    str_0 = "OR\x0c._q"
    dict_0 = {str_0: str_0}
    function_def_0 = module_0.FunctionDef(**dict_0)
    return_0 = module_0.Return()
    functions_annotations_transformer_0 = module_1.FunctionsAnnotationsTransformer(
        return_0
    )
    function_def_1 = functions_annotations_transformer_0.visit_FunctionDef(
        function_def_0
    )
