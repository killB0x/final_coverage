# Automatically generated by Pynguin.
import pymonet.lazy as module_0


def test_case_0():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    bool_1 = lazy_0.__eq__(bool_0)


def test_case_1():
    str_0 = "3\nB\x0bUz|y%%\ta.T9.fiN"
    lazy_0 = module_0.Lazy(str_0)
    lazy_0.to_box()


def test_case_2():
    str_0 = "\x0b5Qbxp}Fmen`K3t51M"
    lazy_0 = module_0.Lazy(str_0)


def test_case_3():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    lazy_1 = lazy_0.ap(bool_0)
    str_0 = lazy_1.__str__()


def test_case_4():
    list_0 = []
    tuple_0 = (list_0,)
    str_0 = "\x0b5Qbxp}Fmen`K3t51M"
    lazy_0 = module_0.Lazy(str_0)
    lazy_1 = lazy_0.map(tuple_0)


def test_case_5():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    lazy_1 = lazy_0.ap(bool_0)


def test_case_6():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    lazy_1 = lazy_0.ap(bool_0)
    lazy_2 = module_0.Lazy(lazy_1)
    lazy_3 = lazy_1.bind(lazy_1)
    str_0 = lazy_1.__str__()
    try_0 = lazy_1.to_try()


def test_case_7():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    lazy_1 = lazy_0.ap(bool_0)
    lazy_2 = module_0.Lazy(lazy_1)
    lazy_3 = lazy_2.bind(lazy_1)
    str_0 = lazy_1.__str__()
    lazy_2.to_either()


def test_case_8():
    bool_0 = False
    lazy_0 = module_0.Lazy(bool_0)
    lazy_0.to_either()


def test_case_9():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    list_0 = [bool_0, lazy_0]
    lazy_1 = module_0.Lazy(none_type_0)
    lazy_1.to_maybe(*list_0)


def test_case_10():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    lazy_1 = lazy_0.ap(bool_0)
    str_0 = lazy_1.__str__()
    lazy_0.to_validation()


def test_case_11():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)


def test_case_12():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    bool_1 = lazy_0.__eq__(bool_0)
    str_0 = "loV+"
    none_type_1 = None
    tuple_0 = (str_0, none_type_1)
    lazy_1 = lazy_0.bind(tuple_0)
    lazy_2 = lazy_0.ap(lazy_1)
    str_1 = lazy_2.__str__()
    lazy_2.to_either()


def test_case_13():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    bool_1 = lazy_0.__eq__(bool_0)
    str_0 = "loV+"
    none_type_1 = None
    tuple_0 = (str_0, none_type_1)
    lazy_1 = lazy_0.bind(tuple_0)
    lazy_2 = lazy_0.ap(lazy_1)
    try_0 = lazy_2.to_try()
    lazy_2.to_either()


def test_case_14():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    lazy_1 = module_0.Lazy(none_type_0)
    lazy_2 = lazy_0.map(lazy_1)
    lazy_3 = module_0.Lazy(bool_0)
    str_0 = lazy_3.__str__()
    lazy_2.to_either()


def test_case_15():
    none_type_0 = None
    lazy_0 = module_0.Lazy(none_type_0)
    bool_0 = lazy_0.__eq__(lazy_0)
    bool_1 = lazy_0.__eq__(bool_0)
    str_0 = "loV+"
    none_type_1 = None
    tuple_0 = (str_0, none_type_1)
    lazy_1 = lazy_0.bind(tuple_0)
    lazy_2 = lazy_0.ap(lazy_1)
    try_0 = lazy_2.to_try()
    bool_2 = lazy_0.__eq__(lazy_2)
    str_1 = lazy_2.__str__()
    lazy_2.to_either()
