# Automatically generated by Pynguin.
import dataclasses_json.undefined as module_0
import locale as module_1
import ast as module_2


def test_case_0():
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()


def test_case_1():
    none_type_0 = None
    dict_0 = {none_type_0: none_type_0, none_type_0: none_type_0}
    raise_undefined_parameters_0 = module_0._RaiseUndefinedParameters()
    dict_1 = raise_undefined_parameters_0.handle_to_dict(none_type_0, dict_0)
    list_0 = [raise_undefined_parameters_0, dict_0, raise_undefined_parameters_0]
    module_0._CatchAllUndefinedParameters(*list_0)


def test_case_2():
    raise_undefined_parameters_0 = module_0._RaiseUndefinedParameters()
    list_0 = [raise_undefined_parameters_0, raise_undefined_parameters_0]
    error_0 = module_1.Error(*list_0)
    dict_0 = raise_undefined_parameters_0.handle_dump(raise_undefined_parameters_0)
    keyword_0 = module_2.keyword()


def test_case_3():
    str_0 = "&d_t,D"
    str_1 = "-ge?.Mfa~\nhoq+m6<01"
    dict_0 = {str_0: str_0, str_1: str_1}
    raise_undefined_parameters_0 = module_0._RaiseUndefinedParameters()
    method - wrapper_0 = raise_undefined_parameters_0.create_init(dict_0)
    global_0 = module_2.Global()
    dict_1 = {}
    raise_undefined_parameters_0.handle_from_dict(str_1, dict_1)


def test_case_4():
    raise_0 = module_2.Raise()
    catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
    dict_0 = {raise_0: raise_0, raise_0: raise_0}
    catch_all_undefined_parameters_0.handle_from_dict(raise_0, dict_0)


def test_case_5():
    starred_0 = module_2.Starred()
    list_0 = [starred_0, starred_0]
    dict_0 = {}
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
    ignore_undefined_parameters_0.handle_from_dict(list_0, dict_0)


def test_case_6():
    if_exp_0 = module_2.IfExp()
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters()
    function_0 = ignore_undefined_parameters_0.create_init(if_exp_0)
    catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters()
    catch_all_undefined_parameters_0.handle_dump(if_exp_0)


def test_case_7():
    str_0 = "<0,O[P@UH>\x0cBKH"
    dict_0 = {}
    catch_all_undefined_parameters_0 = module_0._CatchAllUndefinedParameters(**dict_0)
    function_0 = catch_all_undefined_parameters_0.create_init(str_0)
    ignore_undefined_parameters_0 = module_0._IgnoreUndefinedParameters(**dict_0)
    undefined_0 = module_0.Undefined.RAISE
    list_0 = [str_0, undefined_0, undefined_0]
    module_0._CatchAllUndefinedParameters(*list_0)
