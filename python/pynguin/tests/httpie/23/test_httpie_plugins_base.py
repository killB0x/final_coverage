# Automatically generated by Pynguin.
import httpie.plugins.base as module_0


def test_case_0():
    transport_plugin_0 = module_0.TransportPlugin()


def test_case_1():
    transport_plugin_0 = module_0.TransportPlugin()
    auth_plugin_0 = module_0.AuthPlugin()
    auth_plugin_0.get_auth()


def test_case_2():
    transport_plugin_0 = module_0.TransportPlugin()
    transport_plugin_0.get_adapter()


def test_case_3():
    transport_plugin_0 = module_0.TransportPlugin()
    converter_plugin_0 = module_0.ConverterPlugin(transport_plugin_0)


def test_case_4():
    str_0 = "P6svy4"
    none_type_0 = None
    converter_plugin_0 = module_0.ConverterPlugin(none_type_0)
    converter_plugin_1 = module_0.ConverterPlugin(str_0)
    converter_plugin_1.convert(converter_plugin_0)


def test_case_5():
    module_0.FormatterPlugin()


def test_case_6():
    none_type_0 = None
    str_0 = "P6svy4"
    none_type_1 = None
    str_1 = "x6|5~\rF%1 eT1n-"
    str_2 = "GET"
    str_3 = "5\rNCq<W"
    str_4 = "format_options"
    set_0 = {str_3, str_3}
    dict_0 = {str_2: str_2, str_3: str_2, str_4: set_0}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    none_type_2 = formatter_plugin_0.format_body(none_type_0, str_1)
    converter_plugin_0 = module_0.ConverterPlugin(none_type_1)
    converter_plugin_1 = module_0.ConverterPlugin(str_0)
    converter_plugin_1.convert(converter_plugin_0)


def test_case_7():
    none_type_0 = None
    str_0 = "P6svy4"
    none_type_1 = None
    str_1 = "x6|5~\rF%1 eT1n-"
    str_2 = "GET"
    str_3 = "5\rNCq<W"
    str_4 = "format_options"
    set_0 = {str_3, str_3}
    transport_plugin_0 = module_0.TransportPlugin()
    dict_0 = {str_2: str_2, str_3: str_2, str_4: set_0}
    formatter_plugin_0 = module_0.FormatterPlugin(**dict_0)
    none_type_2 = formatter_plugin_0.format_body(none_type_0, str_1)
    converter_plugin_0 = module_0.ConverterPlugin(none_type_1)
    str_5 = ")yY~d"
    str_6 = formatter_plugin_0.format_headers(str_5)
    converter_plugin_1 = module_0.ConverterPlugin(str_0)
    converter_plugin_1.convert(converter_plugin_0)
