# Automatically generated by Pynguin.
import httpie.models as module_0
import httpie.output.streams as module_1
import httpie.output.processing as module_2


def test_case_0():
    float_0 = 0.1
    str_0 = "data"
    h_t_t_p_message_0 = module_0.HTTPMessage(str_0)
    base_stream_0 = module_1.BaseStream(h_t_t_p_message_0, float_0, h_t_t_p_message_0)
    generator_0 = base_stream_0.__iter__()
    conversion_0 = module_2.Conversion()


def test_case_1():
    binary_suppressed_error_0 = module_1.BinarySuppressedError()


def test_case_2():
    module_1.RawStream()


def test_case_3():
    conversion_0 = module_2.Conversion()
    list_0 = []
    str_0 = "_yl>I]x"
    dict_0 = {str_0: list_0}
    formatting_0 = module_2.Formatting(list_0, list_0, **dict_0)
    module_1.BufferedPrettyStream(conversion_0, formatting_0, **dict_0)


def test_case_4():
    str_0 = "Inn"
    dict_0 = {str_0: str_0}
    h_t_t_p_message_0 = module_0.HTTPMessage(dict_0)
    base_stream_0 = module_1.BaseStream(h_t_t_p_message_0, with_body=str_0)
    conversion_0 = module_2.Conversion()
    base_stream_0.iter_body()


def test_case_5():
    float_0 = 0.1
    str_0 = "N\r5+\r,R5>hi1J?-*R"
    h_t_t_p_message_0 = module_0.HTTPMessage(str_0)
    base_stream_0 = module_1.BaseStream(h_t_t_p_message_0, float_0, h_t_t_p_message_0)
    base_stream_0.get_headers()


def test_case_6():
    str_0 = "N\r\x0c+\r,]T>2hi4J?-$*R"
    h_t_t_p_message_0 = module_0.HTTPMessage(str_0)
    none_type_0 = None
    none_type_1 = None
    base_stream_0 = module_1.BaseStream(none_type_0, none_type_1, h_t_t_p_message_0)
    base_stream_0.iter_body()


def test_case_7():
    float_0 = 0.0
    str_0 = "N\r5+\r,R5>hi1J?-*h"
    h_t_t_p_message_0 = module_0.HTTPMessage(str_0)
    module_1.BaseStream(h_t_t_p_message_0, float_0, float_0)
