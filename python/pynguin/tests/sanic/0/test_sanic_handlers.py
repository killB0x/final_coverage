# Automatically generated by Pynguin.
import sanic.handlers as module_0
import sanic.exceptions as module_1


def test_case_0():
    error_handler_0 = module_0.ErrorHandler()
    error_handler_0.response(error_handler_0, error_handler_0)


def test_case_1():
    none_type_0 = None
    error_handler_0 = module_0.ErrorHandler()
    none_type_1 = error_handler_0.lookup(none_type_0)
    h_t_t_p_response_0 = error_handler_0.response(none_type_0, none_type_0)
    bool_0 = False
    list_0 = [bool_0]
    module_1.ContentRangeError(bool_0, list_0)


def test_case_2():
    error_handler_0 = module_0.ErrorHandler()
    error_handler_0.default(error_handler_0, error_handler_0)


def test_case_3():
    error_handler_0 = module_0.ErrorHandler()


def test_case_4():
    error_handler_0 = module_0.ErrorHandler()
    error_handler_1 = module_0.ErrorHandler()
    none_type_0 = error_handler_1.add(error_handler_0, error_handler_0)


def test_case_5():
    error_handler_0 = module_0.ErrorHandler()
    invalid_usage_0 = module_1.InvalidUsage(error_handler_0, quiet=error_handler_0)
    header_not_found_0 = module_1.HeaderNotFound(error_handler_0, quiet=invalid_usage_0)
    error_handler_1 = module_0.ErrorHandler()
    error_handler_1.default(header_not_found_0, invalid_usage_0)


def test_case_6():
    tuple_0 = ()
    error_handler_0 = module_0.ErrorHandler()
    none_type_0 = error_handler_0.add(tuple_0, error_handler_0)
    h_t_t_p_response_0 = error_handler_0.response(none_type_0, none_type_0)
