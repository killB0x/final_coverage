# Automatically generated by Pynguin.
import sanic.mixins.routes as module_0
import sanic.exceptions as module_1
import sanic.views as module_2


def test_case_0():
    str_0 = ""
    route_mixin_0 = module_0.RouteMixin()
    function_0 = route_mixin_0.options(str_0)


def test_case_1():
    str_0 = "=Yb/SogdV{>#O.q}"
    route_mixin_0 = module_0.RouteMixin()
    route_mixin_0.add_route(str_0, str_0, stream=str_0)


def test_case_2():
    int_0 = 1131
    str_0 = "@*@"
    route_mixin_0 = module_0.RouteMixin()
    route_mixin_0.add_websocket_route(int_0, str_0, version=int_0)


def test_case_3():
    str_0 = ".bE?Nf$F696"
    file_not_found_0 = module_1.FileNotFound(str_0, str_0, str_0)
    int_0 = 3341
    route_mixin_0 = module_0.RouteMixin()
    route_mixin_0.add_route(
        file_not_found_0, str_0, host=str_0, version=int_0, name=str_0
    )


def test_case_4():
    bool_0 = False
    str_0 = "u11PzpIY"
    file_not_found_0 = module_1.FileNotFound(bool_0, bool_0, str_0)
    none_type_0 = None
    dict_0 = {str_0: bool_0}
    route_mixin_0 = module_0.RouteMixin(**dict_0)
    function_0 = route_mixin_0.route(
        str_0,
        file_not_found_0,
        str_0,
        bool_0,
        bool_0,
        ignore_body=bool_0,
        apply=bool_0,
        subprotocols=none_type_0,
        static=bool_0,
    )
    route_mixin_0.add_route(
        function_0, str_0, host=function_0, strict_slashes=function_0
    )


def test_case_5():
    str_0 = ":Z4OgHK9~g"
    route_mixin_0 = module_0.RouteMixin()
    route_mixin_0.static(str_0, str_0, use_content_range=str_0)


def test_case_6():
    str_0 = "x-scheme"
    dict_0 = {}
    bool_0 = False
    str_1 = "\t!/%WzN[@"
    bool_1 = False
    route_mixin_0 = module_0.RouteMixin(**dict_0)
    function_0 = route_mixin_0.delete(str_0, version=bool_1)
    function_1 = route_mixin_0.route(str_1, unquote=bool_0, static=bool_1)
    none_type_0 = None
    bytes_0 = b""
    none_type_1 = route_mixin_0.static(route_mixin_0, str_1, none_type_0, apply=bytes_0)
    bytes_1 = b"\xc1\xd4"
    list_0 = [bytes_1, bytes_1, bytes_1, bytes_1]
    route_mixin_1 = module_0.RouteMixin(*list_0)
    function_2 = route_mixin_1.route(
        str_0, dict_0, stream=bool_0, version=bool_0, apply=none_type_0
    )
    int_0 = 20
    str_2 = "u11PzpXY"
    file_not_found_0 = module_1.FileNotFound(int_0, int_0, str_2)
    none_type_2 = None
    dict_1 = {str_2: int_0}
    route_mixin_2 = module_0.RouteMixin(**dict_1)
    composition_view_0 = module_2.CompositionView()
    route_mixin_3 = module_0.RouteMixin()
    none_type_3 = route_mixin_3.static(
        bool_1,
        str_0,
        bool_1,
        stream_large_files=bytes_1,
        strict_slashes=route_mixin_0,
        apply=bool_1,
    )
    str_3 = ""
    function_3 = route_mixin_2.websocket(
        str_3, subprotocols=none_type_2, version=composition_view_0
    )
    route_mixin_4 = module_0.RouteMixin()
    str_4 = "Ub.AJ"
    bool_2 = True
    route_mixin_4.add_route(composition_view_0, str_4, stream=bool_2)


def test_case_7():
    route_mixin_0 = module_0.RouteMixin()
    bytes_0 = b"\x90\xed\xaf\x9c\xceS\xe2\xe8\xd9B\xcb\x0b"
    route_mixin_0.static(route_mixin_0, bytes_0, name=bytes_0)


def test_case_8():
    route_mixin_0 = module_0.RouteMixin()


def test_case_9():
    str_0 = ""
    bytes_0 = b"\xf0sf\x03\x1a"
    route_mixin_0 = module_0.RouteMixin()
    function_0 = route_mixin_0.put(str_0, str_0, bytes_0)
    str_1 = ","
    function_1 = route_mixin_0.get(str_1, strict_slashes=function_0)
    str_2 = function_0.__str__()


def test_case_10():
    str_0 = ""
    bool_0 = True
    route_mixin_0 = module_0.RouteMixin()
    function_0 = route_mixin_0.post(str_0, str_0, bool_0, name=str_0)


def test_case_11():
    str_0 = "z0h!Gsq9SI'"
    list_0 = []
    str_1 = "Unable to load configuration file (e.strerror)"
    bool_0 = True
    dict_0 = {}
    route_mixin_0 = module_0.RouteMixin(*list_0, **dict_0)
    function_0 = route_mixin_0.options(str_1, str_0, bool_0)
    route_mixin_1 = module_0.RouteMixin(*list_0)
    function_1 = route_mixin_1.head(str_0)
    str_2 = "X#dUpI"
    function_2 = route_mixin_1.websocket(str_2, function_1, function_1, function_1)


def test_case_12():
    str_0 = "xITEi;;Rl6)e'\"J_"
    route_mixin_0 = module_0.RouteMixin()
    function_0 = route_mixin_0.patch(str_0)
    str_1 = ""
    bytes_0 = b"\xf0sf\x03\x1a"
    route_mixin_1 = module_0.RouteMixin()
    function_1 = route_mixin_1.put(str_1, str_1, bytes_0)
    str_2 = ","
    function_2 = route_mixin_1.get(str_2, strict_slashes=function_1)
    str_3 = function_1.__str__()


def test_case_13():
    str_0 = "=Yb/SogdV{>#O.q}"
    route_mixin_0 = module_0.RouteMixin()
    function_0 = route_mixin_0.delete(str_0, str_0, name=str_0)
    route_mixin_0.add_route(function_0, str_0, stream=function_0)


def test_case_14():
    bytes_0 = b"s\xed1\x93\x1f\xf5 \xc4\x86\xc5f5\xca\x14\xcc\xaea"
    str_0 = "^dopL!<d}BW,+\t"
    none_type_0 = None
    route_mixin_0 = module_0.RouteMixin()
    route_mixin_0.add_route(bytes_0, str_0, none_type_0, name=str_0)


def test_case_15():
    str_0 = "Response was bigger than content-length"
    int_0 = 4393
    route_mixin_0 = module_0.RouteMixin()
    route_mixin_0.add_websocket_route(str_0, str_0, version=int_0)


def test_case_16():
    none_type_0 = None
    str_0 = "5?;&tr$P!s,"
    none_type_1 = None
    list_0 = [none_type_0, none_type_0, none_type_0]
    route_mixin_0 = module_0.RouteMixin(*list_0)
    function_0 = route_mixin_0.options(str_0, str_0, none_type_1)
    str_1 = 'J/v]4R"$=6pHW~n+'
    bool_0 = True
    list_1 = [none_type_0]
    route_mixin_1 = module_0.RouteMixin(*list_1)
    function_1 = route_mixin_1.options(str_1, name=str_1, ignore_body=bool_0)
    str_2 = "]+"
    list_2 = []
    str_3 = "The chunked argument has been deprecated and will be removed in v21.6"
    bool_1 = False
    route_mixin_2 = module_0.RouteMixin()
    function_2 = route_mixin_2.options(str_3, ignore_body=bool_1)
    bool_2 = True
    route_mixin_3 = module_0.RouteMixin()
    str_4 = "listeners"
    bool_3 = False
    function_3 = route_mixin_3.put(str_4, stream=bool_3, name=str_4)
    function_4 = route_mixin_3.delete(str_2, strict_slashes=bool_2, version=bool_2)
    route_mixin_4 = module_0.RouteMixin(*list_2)
    none_type_2 = route_mixin_4.static(none_type_0, str_2, apply=none_type_0)


def test_case_17():
    str_0 = "Qjy23*Q`=rm)z<"
    str_1 = "yB."
    bool_0 = False
    list_0 = [bool_0]
    str_2 = "u11PzpIY"
    bool_1 = False
    dict_0 = {str_0: bool_1}
    route_mixin_0 = module_0.RouteMixin(**dict_0)
    list_1 = []
    function_0 = route_mixin_0.route(str_1, name=str_2, subprotocols=list_1)
    route_mixin_1 = module_0.RouteMixin(*list_0, **dict_0)
    str_3 = "/uYl"
    bool_2 = True
    route_mixin_0.add_route(
        route_mixin_0, str_3, host=str_1, name=function_0, stream=bool_2
    )


def test_case_18():
    composition_view_0 = module_2.CompositionView()
    str_0 = "1&.Ur@BniSn+}Z#"
    list_0 = [str_0, composition_view_0, composition_view_0, composition_view_0]
    int_0 = 3
    route_mixin_0 = module_0.RouteMixin()
    route_mixin_0.add_route(
        composition_view_0, str_0, list_0, version=int_0, name=str_0
    )


def test_case_19():
    composition_view_0 = module_2.CompositionView()
    str_0 = "|n;N5WG#0>K1J.fxE"
    int_0 = -3777
    route_mixin_0 = module_0.RouteMixin()
    route_mixin_0.add_websocket_route(composition_view_0, str_0, version=int_0)


def test_case_20():
    route_mixin_0 = module_0.RouteMixin()
    file_not_found_0 = module_1.FileNotFound(
        route_mixin_0, route_mixin_0, route_mixin_0
    )
    route_mixin_0.static(
        route_mixin_0,
        file_not_found_0,
        stream_large_files=file_not_found_0,
        content_type=file_not_found_0,
    )


def test_case_21():
    tuple_0 = ()
    str_0 = "\n    Returns response object with body in html format.\n\n    :param body: str or bytes-ish, or an object with __html__ or _repr_html_.\n    :param status: Response code.\n    :param headers: Custom Headers.\n    "
    route_mixin_0 = module_0.RouteMixin()
    route_mixin_0.add_websocket_route(tuple_0, str_0, name=str_0)


def test_case_22():
    int_0 = 5
    str_0 = "u11PzpXY"
    route_mixin_0 = module_0.RouteMixin()
    function_0 = route_mixin_0.post(str_0, version=int_0)
    route_mixin_1 = module_0.RouteMixin()
    dict_0 = {}
    route_mixin_2 = module_0.RouteMixin(**dict_0)
    composition_view_0 = module_2.CompositionView()
    str_1 = "L@x`:.rX\nCc["
    str_2 = "x`[gr{j2h\x0c>?}8tuCm_N"
    route_mixin_0.add_websocket_route(function_0, str_1, str_2)


def test_case_23():
    str_0 = "pSJ.;tT:C*4@/7>D?"
    bool_0 = False
    list_0 = [str_0, str_0]
    bool_1 = False
    str_1 = "+jza3{x%;Tw_&"
    invalid_usage_0 = module_1.InvalidUsage(list_0, quiet=bool_1)
    bool_2 = False
    list_1 = [bool_0, bool_0]
    route_mixin_0 = module_0.RouteMixin(*list_1)
    function_0 = route_mixin_0.route(
        str_1, invalid_usage_0, apply=bool_2, websocket=bool_0
    )
    route_mixin_1 = module_0.RouteMixin()
    function_1 = route_mixin_1.route(
        str_0,
        host=str_0,
        stream=bool_0,
        version=bool_0,
        name=str_0,
        apply=bool_0,
        subprotocols=list_0,
        unquote=bool_1,
    )
    str_2 = "Enable or disable the support for websocket.\n\n        Websocket is enabled automatically if websocket routes are\n        added to the application.\n        "
    function_2 = route_mixin_1.post(str_2, str_0, function_1)
    float_0 = 15.0
    str_3 = "Fs-\\#8^6"
    route_mixin_0.add_websocket_route(
        float_0, str_3, subprotocols=list_0, name=function_0
    )
