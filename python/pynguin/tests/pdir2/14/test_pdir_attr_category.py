# Automatically generated by Pynguin.
import pdir.attr_category as module_0
import ast as module_1
import collections as module_2
import _io as module_3
import re as module_4


def test_case_0():
    attr_category_0 = module_0.AttrCategory.PROPERTY
    bool_0 = module_0.category_match(attr_category_0, attr_category_0)
    attr_category_1 = module_0.AttrCategory.CLASS_CUSTOMIZATION
    bool_1 = module_0.category_match(attr_category_1, attr_category_1)


def test_case_1():
    str_0 = "__name__"
    tuple_0 = module_0.get_attr_category(str_0, str_0, str_0)
    attr_category_0 = module_0.AttrCategory.COPY
    bool_0 = module_0.category_match(tuple_0, attr_category_0)


def test_case_2():
    str_0 = "<+\tk)[Fk\n_Eb#q1"
    tuple_0 = module_0.get_attr_category(str_0, str_0, str_0)


def test_case_3():
    str_0 = "__rmatmul__"
    tuple_0 = module_0.get_attr_category(str_0, str_0, str_0)


def test_case_4():
    call_0 = module_1.Call()
    module_0.get_attr_category(call_0, call_0, call_0)


def test_case_5():
    pass


def test_case_6():
    attr_category_0 = module_0.AttrCategory.DESCRIPTOR
    bool_0 = module_0.category_match(attr_category_0, attr_category_0)
    attr_category_1 = module_0.AttrCategory.RICH_COMPARISON
    attr_category_2 = module_0.AttrCategory.STATIC_METHOD
    attr_category_3 = module_0.AttrCategory.MODULE_ATTRIBUTE
    bool_1 = module_0.category_match(attr_category_3, attr_category_1)
    bool_2 = module_0.category_match(attr_category_2, attr_category_2)


def test_case_7():
    call_0 = module_1.Call()
    function_0 = module_0.attr_category_postprocess(call_0)
    function_1 = module_0.attr_category_postprocess(function_0)
    module_0.get_attr_category(function_1, function_1, function_1)


def test_case_8():
    str_0 = "__name__"
    tuple_0 = module_0.get_attr_category(str_0, str_0, str_0)


def test_case_9():
    str_0 = "__name__"
    str_1 = "__invert__"
    tuple_0 = module_0.get_attr_category(str_1, str_0, str_1)
    tuple_1 = module_0.get_attr_category(str_0, str_0, str_0)
    attr_category_0 = module_0.AttrCategory.DESCRIPTOR
    user_string_0 = module_2.UserString(attr_category_0)
    user_string_1 = user_string_0.removesuffix(str_0)
    tuple_2 = module_0.get_attr_category(str_0, str_0, str_1)
    function_0 = module_0.attr_category_postprocess(tuple_1)
    function_0.__getitem__(function_0)


def test_case_10():
    str_0 = "<+\tk)[Fk\n_Eb#q1"
    str_1 = "__iter__"
    tuple_0 = module_0.get_attr_category(str_1, str_1, str_0)


def test_case_11():
    str_0 = "__name__"
    tuple_0 = module_0.get_attr_category(str_0, str_0, str_0)
    attr_category_0 = module_0.AttrCategory.STATIC_METHOD
    bool_0 = module_0.category_match(tuple_0, attr_category_0)
    str_1 = "__reversed__"
    tuple_1 = module_0.get_attr_category(str_1, attr_category_0, bool_0)
    function_0 = module_0.attr_category_postprocess(tuple_1)


def test_case_12():
    str_0 = "_ctj"
    str_1 = "__name__"
    tuple_0 = module_0.get_attr_category(str_1, str_1, str_1)
    str_2 = "<+\tk)[Fk\n_Eb#q1"
    attr_category_0 = module_0.AttrCategory.STATIC_METHOD
    bool_0 = module_0.category_match(tuple_0, attr_category_0)
    tuple_1 = module_0.get_attr_category(str_0, str_1, attr_category_0)
    str_3 = "__iter__"
    tuple_2 = module_0.get_attr_category(str_3, tuple_1, str_2)
    str_4 = "_ctj"
    tuple_3 = module_0.get_attr_category(str_0, tuple_0, attr_category_0)
    bin_op_0 = module_1.BinOp()
    list_0 = [tuple_0, tuple_0]
    text_i_o_base_0 = module_3._TextIOBase(*list_0)
    tuple_4 = module_0.get_attr_category(str_3, bin_op_0, text_i_o_base_0)
    function_0 = module_0.attr_category_postprocess(str_4)
    tuple_5 = module_0.get_attr_category(str_4, tuple_1, tuple_4)
    module_4.Pattern()
